// src/lib/plugins/wrapIIFEPlugin.ts

import type { Plugin } from 'rollup';

import fs from 'fs';
// @ts-expect-error No types for this pkg
import ipfsOnlyHash from 'ipfs-only-hash';
import path from 'path';

import { ensureDir } from '../utils';
import { getCompiledHandlerCode } from './utils';

export function writeBundledIIFECode(outputDir: string): Plugin {
  return {
    async generateBundle(_, bundle) {
      const { chunk, fileName } = getCompiledHandlerCode(this, bundle);

      const ipfsCid = await ipfsOnlyHash.of(chunk.code);
      const wrapped = `/**
 * DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
 * @type {string}
 */
const code = ${JSON.stringify(chunk.code)};
module.exports = {
  code: code,
  ipfsCid: "${ipfsCid}"
};`;

      const outPath = path.join(outputDir, fileName.replace(/\.js$/, '.bundled.js'));
      ensureDir(outPath);
      fs.writeFileSync(outPath, wrapped);
    },
    name: 'wrap-iife-in-string',
  };
}
