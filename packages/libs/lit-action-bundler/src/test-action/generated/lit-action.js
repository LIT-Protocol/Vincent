/**
* DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
* @type {string}
*/
const code = "\"use strict\";\n(() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n    get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n  }) : x)(function(x) {\n    if (typeof require !== \"undefined\") return require.apply(this, arguments);\n    throw Error('Dynamic require of \"' + x + '\" is not supported');\n  });\n  var __esm = (fn, res) => function __init() {\n    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n  };\n  var __export = (target, all) => {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n    mod\n  ));\n\n  // ../lib/shims/timers.js\n  var timers_exports = {};\n  __export(timers_exports, {\n    default: () => timers_default\n  });\n  var timers_default;\n  var init_timers = __esm({\n    \"../lib/shims/timers.js\"() {\n      \"use strict\";\n      init_timers();\n      init_timers();\n      timers_default = timers_exports;\n    }\n  });\n\n  // ../lib/litActionHandler/abortError.ts\n  var AbortError = class extends Error {\n    name = \"AbortError\";\n  };\n\n  // ../lib/litActionHandler/litActionHandler.ts\n  async function litActionHandler(actionFunc) {\n    try {\n      const litActionResult = await actionFunc();\n      const response = typeof litActionResult === \"string\" ? litActionResult : JSON.stringify(litActionResult);\n      Lit.Actions.setResponse({ response });\n    } catch (err) {\n      if (err instanceof AbortError) {\n        return;\n      }\n      Lit.Actions.setResponse({\n        response: `Error: ${err instanceof Error ? err.message : String(err)}`\n      });\n    }\n  }\n\n  // ../lib/prelude.ts\n  async function installNodeGlobals() {\n    const { Buffer: Buffer2 } = await import(\"node:buffer\");\n    const { process } = await import(\"node:process\");\n    const timers = await Promise.resolve().then(() => (init_timers(), timers_exports));\n    const { setTimeout, clearTimeout, setInterval, clearInterval, setImmediate, clearImmediate } = timers;\n    Object.assign(globalThis, {\n      Buffer: Buffer2,\n      process,\n      setTimeout,\n      clearTimeout,\n      setInterval,\n      clearInterval,\n      setImmediate,\n      clearImmediate\n    });\n  }\n\n  // ../lib/shims/crypto.js\n  var crypto_exports = {};\n  __export(crypto_exports, {\n    default: () => crypto_default\n  });\n  var crypto = { ...crypto_exports };\n  if (!(\"webcrypto\" in crypto) && typeof globalThis.crypto === \"object\") {\n    crypto.webcrypto = globalThis.crypto;\n  }\n  var crypto_default = crypto;\n\n  // ../lib/shims/os.js\n  var os_exports = {};\n  __export(os_exports, {\n    default: () => os_default\n  });\n  var os_default = os_exports;\n\n  // lit-action/myLitAction.ts\n  async function myLitAction({ wat: wat2 }) {\n    console.log(\"Hello world\");\n    console.log(\"wat?\", wat2);\n    console.log(\"Global Buffer\", typeof Buffer);\n    console.log(\"Node os import\", typeof os_default);\n    console.log(\"Node crypto import\", typeof crypto_default);\n    console.log(\"Node webcrypto\", typeof crypto_default.webcrypto);\n    const yellowstoneUrl = await Lit.Actions.getRpcUrl({ chain: \"yellowstone\" });\n    console.log(\"Yellowstone RPC URL\", yellowstoneUrl);\n    return { great: \"success, yo\" };\n  }\n\n  // lit-action/lit-action.ts\n  (async () => {\n    await installNodeGlobals();\n    return await litActionHandler(() => myLitAction({ wat }));\n  })();\n})();\n";
module.exports = {
  "code": code,
  "ipfsCid": "QmVjhQXUHz9apnDHzjM68AffxSMW3HFZuxrcTVLxGYrVcx",
};
