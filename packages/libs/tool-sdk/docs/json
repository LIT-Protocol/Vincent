{
	"id": 0,
	"name": "vincent-tool-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 164,
			"name": "PolicyContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Interfaces"
							}
						]
					}
				],
				"modifierTags": [
					"@expand"
				]
			},
			"children": [
				{
					"id": 165,
					"name": "allow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "policyCore/policyDef/context/types.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L44"
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 190,
							"name": "AllowSchema",
							"package": "@lit-protocol/vincent-tool-sdk",
							"qualifiedName": "PolicyContext.AllowSchema",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
								"qualifiedName": "ZodUndefined"
							},
							"name": "ZodUndefined",
							"package": "zod"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 166,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "policyCore/policyDef/context/types.ts",
										"line": 45,
										"character": 6,
										"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L45"
									}
								],
								"signatures": [
									{
										"id": 167,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "policyCore/policyDef/context/types.ts",
												"line": 45,
												"character": 6,
												"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L45"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
												"qualifiedName": "ContextAllowResponseNoResult"
											},
											"name": "ContextAllowResponseNoResult",
											"package": "@lit-protocol/vincent-tool-sdk"
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 168,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "policyCore/policyDef/context/types.ts",
										"line": 46,
										"character": 6,
										"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L46"
									}
								],
								"signatures": [
									{
										"id": 169,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "policyCore/policyDef/context/types.ts",
												"line": 46,
												"character": 6,
												"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L46"
											}
										],
										"parameters": [
											{
												"id": 170,
												"name": "result",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
														"qualifiedName": "TypeOf"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 190,
															"name": "AllowSchema",
															"package": "@lit-protocol/vincent-tool-sdk",
															"qualifiedName": "PolicyContext.AllowSchema",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOf",
													"package": "zod"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
												"qualifiedName": "ContextAllowResponse"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
														"qualifiedName": "TypeOf"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 190,
															"name": "AllowSchema",
															"package": "@lit-protocol/vincent-tool-sdk",
															"qualifiedName": "PolicyContext.AllowSchema",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOf",
													"package": "zod"
												}
											],
											"name": "ContextAllowResponse",
											"package": "@lit-protocol/vincent-tool-sdk"
										}
									}
								]
							}
						}
					}
				},
				{
					"id": 171,
					"name": "deny",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "policyCore/policyDef/context/types.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L48"
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 191,
							"name": "DenySchema",
							"package": "@lit-protocol/vincent-tool-sdk",
							"qualifiedName": "PolicyContext.DenySchema",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
								"qualifiedName": "ZodUndefined"
							},
							"name": "ZodUndefined",
							"package": "zod"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 172,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "policyCore/policyDef/context/types.ts",
										"line": 49,
										"character": 6,
										"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L49"
									}
								],
								"signatures": [
									{
										"id": 173,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "policyCore/policyDef/context/types.ts",
												"line": 49,
												"character": 6,
												"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L49"
											}
										],
										"parameters": [
											{
												"id": 174,
												"name": "error",
												"variant": "param",
												"kind": 32768,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
												"qualifiedName": "ContextDenyResponseNoResult"
											},
											"name": "ContextDenyResponseNoResult",
											"package": "@lit-protocol/vincent-tool-sdk"
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 175,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "policyCore/policyDef/context/types.ts",
										"line": 50,
										"character": 6,
										"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L50"
									}
								],
								"signatures": [
									{
										"id": 176,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "policyCore/policyDef/context/types.ts",
												"line": 50,
												"character": 6,
												"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L50"
											}
										],
										"parameters": [
											{
												"id": 177,
												"name": "result",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
														"qualifiedName": "TypeOf"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 191,
															"name": "DenySchema",
															"package": "@lit-protocol/vincent-tool-sdk",
															"qualifiedName": "PolicyContext.DenySchema",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOf",
													"package": "zod"
												}
											},
											{
												"id": 178,
												"name": "error",
												"variant": "param",
												"kind": 32768,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
												"qualifiedName": "ContextDenyResponse"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
														"qualifiedName": "TypeOf"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 191,
															"name": "DenySchema",
															"package": "@lit-protocol/vincent-tool-sdk",
															"qualifiedName": "PolicyContext.DenySchema",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOf",
													"package": "zod"
												}
											],
											"name": "ContextDenyResponse",
											"package": "@lit-protocol/vincent-tool-sdk"
										}
									}
								]
							}
						}
					}
				},
				{
					"id": 179,
					"name": "toolIpfsCid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 413,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L413"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.toolIpfsCid"
					}
				},
				{
					"id": 180,
					"name": "appId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 414,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L414"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appId"
					}
				},
				{
					"id": 181,
					"name": "appVersion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 415,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L415"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appVersion"
					}
				},
				{
					"id": 182,
					"name": "delegation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 416,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L416"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 183,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 184,
									"name": "delegateeAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 417,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L417"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 185,
									"name": "delegatorPkpInfo",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 418,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L418"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 186,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 187,
													"name": "tokenId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 419,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L419"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 188,
													"name": "ethAddress",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 420,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L420"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 189,
													"name": "publicKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 421,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L421"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														187,
														188,
														189
													]
												}
											],
											"sources": [
												{
													"fileName": "types.ts",
													"line": 418,
													"character": 22,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L418"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										184,
										185
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 416,
									"character": 14,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L416"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.delegation"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						165,
						171,
						179,
						180,
						181,
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "policyCore/policyDef/context/types.ts",
					"line": 40,
					"character": 17,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/context/types.ts#L40"
				}
			],
			"typeParameters": [
				{
					"id": 190,
					"name": "AllowSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				},
				{
					"id": 191,
					"name": "DenySchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": -1,
					"name": "BaseContext",
					"package": "@lit-protocol/vincent-tool-sdk"
				}
			]
		},
		{
			"id": 144,
			"name": "PolicyDefLifecycleFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`evaluate()`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`precheck()`"
					},
					{
						"kind": "text",
						"text": " functions that you define when using "
					},
					{
						"kind": "code",
						"text": "`createVincentPolicy()`"
					},
					{
						"kind": "text",
						"text": " will match this function signature.\nNote that the arguments and return types are inferred based on the ZOD schemas that you pass to "
					},
					{
						"kind": "code",
						"text": "`createVincentPolicy`"
					}
				],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Interfaces"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "policyCore/policyDef/types.ts",
					"line": 16,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 152,
					"name": "ToolParams",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					}
				},
				{
					"id": 153,
					"name": "UserParams",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				},
				{
					"id": 154,
					"name": "AllowResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				},
				{
					"id": 155,
					"name": "DenyResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 145,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "policyCore/policyDef/types.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 147,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 148,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 149,
													"name": "toolParams",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/policyDef/types.ts",
															"line": 23,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
															"qualifiedName": "TypeOf"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 152,
																"name": "ToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "z.infer",
														"package": "zod",
														"qualifiedName": "TypeOf"
													}
												},
												{
													"id": 150,
													"name": "userParams",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/policyDef/types.ts",
															"line": 24,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L24"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
															"qualifiedName": "TypeOf"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 153,
																"name": "UserParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "z.infer",
														"package": "zod",
														"qualifiedName": "TypeOf"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														149,
														150
													]
												}
											],
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 22,
													"character": 8,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L22"
												}
											]
										}
									}
								},
								{
									"id": 151,
									"name": "ctx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 164,
										"typeArguments": [
											{
												"type": "reference",
												"target": 154,
												"name": "AllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 155,
												"name": "DenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyContext",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
											"qualifiedName": "EnforcePolicyResponse"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 154,
															"name": "AllowResult",
															"package": "@lit-protocol/vincent-tool-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																"qualifiedName": "ZodUndefined"
															},
															"name": "z.ZodUndefined",
															"package": "zod",
															"qualifiedName": "ZodUndefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextAllowResponseNoResult"
															},
															"name": "ContextAllowResponseNoResult",
															"package": "@lit-protocol/vincent-tool-sdk"
														},
														"falseType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextAllowResponse"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																		"qualifiedName": "TypeOf"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 154,
																			"name": "AllowResult",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "z.infer",
																	"package": "zod",
																	"qualifiedName": "TypeOf"
																}
															],
															"name": "ContextAllowResponse",
															"package": "@lit-protocol/vincent-tool-sdk"
														}
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 155,
															"name": "DenyResult",
															"package": "@lit-protocol/vincent-tool-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																"qualifiedName": "ZodUndefined"
															},
															"name": "z.ZodUndefined",
															"package": "zod",
															"qualifiedName": "ZodUndefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextDenyResponseNoResult"
															},
															"name": "ContextDenyResponseNoResult",
															"package": "@lit-protocol/vincent-tool-sdk"
														},
														"falseType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextDenyResponse"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																		"qualifiedName": "TypeOf"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 155,
																			"name": "DenyResult",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "z.infer",
																	"package": "zod",
																	"qualifiedName": "TypeOf"
																}
															],
															"name": "ContextDenyResponse",
															"package": "@lit-protocol/vincent-tool-sdk"
														}
													}
												]
											}
										],
										"name": "EnforcePolicyResponse",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 156,
			"name": "PolicyDefCommitFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Unlike "
					},
					{
						"kind": "code",
						"text": "`evaluate()`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`precheck()`"
					},
					{
						"kind": "text",
						"text": ", commit receives specific arguments provided by the tool during its "
					},
					{
						"kind": "code",
						"text": "`execute()`"
					},
					{
						"kind": "text",
						"text": " phase\ninstead of than "
					},
					{
						"kind": "code",
						"text": "`toolParams`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`userParams`"
					},
					{
						"kind": "text",
						"text": " that the tool was called with."
					}
				],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Interfaces"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "policyCore/policyDef/types.ts",
					"line": 43,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L43"
				}
			],
			"typeParameters": [
				{
					"id": 161,
					"name": "CommitParams",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				},
				{
					"id": 162,
					"name": "CommitAllowResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				},
				{
					"id": 163,
					"name": "CommitDenyResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodUndefined"
						},
						"name": "z.ZodUndefined",
						"package": "zod",
						"qualifiedName": "ZodUndefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 157,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "policyCore/policyDef/types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 159,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 161,
											"name": "CommitParams",
											"package": "@lit-protocol/vincent-tool-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "ZodType"
											},
											"name": "z.ZodType",
											"package": "zod",
											"qualifiedName": "ZodType"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 161,
													"name": "CommitParams",
													"package": "@lit-protocol/vincent-tool-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "undefined"
										}
									}
								},
								{
									"id": 160,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 164,
										"typeArguments": [
											{
												"type": "reference",
												"target": 162,
												"name": "CommitAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 163,
												"name": "CommitDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyContext",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
											"qualifiedName": "EnforcePolicyResponse"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 162,
															"name": "CommitAllowResult",
															"package": "@lit-protocol/vincent-tool-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																"qualifiedName": "ZodUndefined"
															},
															"name": "z.ZodUndefined",
															"package": "zod",
															"qualifiedName": "ZodUndefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextAllowResponseNoResult"
															},
															"name": "ContextAllowResponseNoResult",
															"package": "@lit-protocol/vincent-tool-sdk"
														},
														"falseType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextAllowResponse"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																		"qualifiedName": "TypeOf"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 162,
																			"name": "CommitAllowResult",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "z.infer",
																	"package": "zod",
																	"qualifiedName": "TypeOf"
																}
															],
															"name": "ContextAllowResponse",
															"package": "@lit-protocol/vincent-tool-sdk"
														}
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 163,
															"name": "CommitDenyResult",
															"package": "@lit-protocol/vincent-tool-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																"qualifiedName": "ZodUndefined"
															},
															"name": "z.ZodUndefined",
															"package": "zod",
															"qualifiedName": "ZodUndefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextDenyResponseNoResult"
															},
															"name": "ContextDenyResponseNoResult",
															"package": "@lit-protocol/vincent-tool-sdk"
														},
														"falseType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
																"qualifiedName": "ContextDenyResponse"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																		"qualifiedName": "TypeOf"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 163,
																			"name": "CommitDenyResult",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "z.infer",
																	"package": "zod",
																	"qualifiedName": "TypeOf"
																}
															],
															"name": "ContextDenyResponse",
															"package": "@lit-protocol/vincent-tool-sdk"
														}
													}
												]
											}
										],
										"name": "EnforcePolicyResponse",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "createVincentPolicy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "policyCore/vincentPolicy.ts",
					"line": 36,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L36"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "createVincentPolicy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`createVincentPolicy()`"
							},
							{
								"kind": "text",
								"text": " method is used to define a policy's lifecycle methods and ensure that arguments provided to the tool's\nlifecycle methods, as well as their return values, are validated and fully type-safe by defining ZOD schemas for them."
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API Methods"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "policyCore/vincentPolicy.ts",
							"line": 36,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L36"
						}
					],
					"typeParameters": [
						{
							"id": 3,
							"name": "PackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "PolicyToolParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 5,
							"name": "UserParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 6,
							"name": "PrecheckAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 7,
							"name": "PrecheckDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 8,
							"name": "EvalAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 9,
							"name": "EvalDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 10,
							"name": "CommitParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 11,
							"name": "CommitAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 12,
							"name": "CommitDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 13,
							"name": "policyDef",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15,
											"name": "packageName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 89,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L89"
												}
											],
											"type": {
												"type": "reference",
												"target": 3,
												"name": "PackageName",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 16,
											"name": "toolParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 90,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L90"
												}
											],
											"type": {
												"type": "reference",
												"target": 4,
												"name": "PolicyToolParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 17,
											"name": "userParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 91,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L91"
												}
											],
											"type": {
												"type": "reference",
												"target": 5,
												"name": "UserParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 18,
											"name": "evalAllowResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 92,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L92"
												}
											],
											"type": {
												"type": "reference",
												"target": 8,
												"name": "EvalAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 19,
											"name": "evalDenyResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 93,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L93"
												}
											],
											"type": {
												"type": "reference",
												"target": 9,
												"name": "EvalDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 20,
											"name": "precheckAllowResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 94,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L94"
												}
											],
											"type": {
												"type": "reference",
												"target": 6,
												"name": "PrecheckAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 21,
											"name": "precheckDenyResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 95,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L95"
												}
											],
											"type": {
												"type": "reference",
												"target": 7,
												"name": "PrecheckDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 22,
											"name": "commitParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 96,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L96"
												}
											],
											"type": {
												"type": "reference",
												"target": 10,
												"name": "CommitParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 23,
											"name": "commitAllowResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 97,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L97"
												}
											],
											"type": {
												"type": "reference",
												"target": 11,
												"name": "CommitAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 24,
											"name": "commitDenyResultSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 98,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L98"
												}
											],
											"type": {
												"type": "reference",
												"target": 12,
												"name": "CommitDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 25,
											"name": "evaluate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 101,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L101"
												}
											],
											"type": {
												"type": "reference",
												"target": 144,
												"name": "PolicyDefLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 26,
											"name": "precheck",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 102,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L102"
												}
											],
											"type": {
												"type": "reference",
												"target": 144,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 5,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 6,
														"name": "PrecheckAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 7,
														"name": "PrecheckDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyDefLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 27,
											"name": "commit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "policyCore/policyDef/types.ts",
													"line": 103,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L103"
												}
											],
											"type": {
												"type": "reference",
												"target": 156,
												"typeArguments": [
													{
														"type": "reference",
														"target": 10,
														"name": "CommitParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 11,
														"name": "CommitAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 12,
														"name": "CommitDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyDefCommitFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15,
												16,
												17,
												18,
												19,
												20,
												21,
												22,
												23,
												24,
												25,
												26,
												27
											]
										}
									],
									"sources": [
										{
											"fileName": "policyCore/policyDef/types.ts",
											"line": 88,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/policyDef/types.ts#L88"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/types.ts",
							"qualifiedName": "VincentPolicy"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 3,
								"name": "PackageName",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 4,
								"name": "PolicyToolParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 5,
								"name": "UserParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 6,
								"name": "PrecheckAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 7,
								"name": "PrecheckDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 8,
								"name": "EvalAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9,
								"name": "EvalDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 10,
								"name": "CommitParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 11,
								"name": "CommitAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 12,
								"name": "CommitDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "PolicyLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4,
										"name": "PolicyToolParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5,
										"name": "UserParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 8,
										"name": "EvalAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 9,
										"name": "EvalDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "PolicyLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "PolicyLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4,
										"name": "PolicyToolParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5,
										"name": "UserParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 6,
										"name": "PrecheckAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 7,
										"name": "PrecheckDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "PolicyLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "CommitLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10,
										"name": "CommitParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 11,
										"name": "CommitAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 12,
										"name": "CommitDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CommitLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						],
						"name": "VincentPolicy",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 28,
			"name": "createVincentToolPolicy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "policyCore/vincentPolicy.ts",
					"line": 325,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L325"
				}
			],
			"signatures": [
				{
					"id": 29,
					"name": "createVincentToolPolicy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`createVincentToolPolicy()`"
							},
							{
								"kind": "text",
								"text": " is used to bind a policy to a specific tool. You must provide a "
							},
							{
								"kind": "code",
								"text": "`toolParameterMappings`"
							},
							{
								"kind": "text",
								"text": " argument\nwhich instructs the tool which of its toolParams should be passed to the Vincent Policy during evaluation, and\ndefines what the argument passed to the tool should be.\n\nFor example, a Tool might receive an argument called "
							},
							{
								"kind": "code",
								"text": "`tokenInAmount`"
							},
							{
								"kind": "text",
								"text": ", but it may need to pass that as "
							},
							{
								"kind": "code",
								"text": "`buyAmount`"
							},
							{
								"kind": "text",
								"text": " to a\npolicy that uses the "
							},
							{
								"kind": "code",
								"text": "`tokenInAmount`"
							},
							{
								"kind": "text",
								"text": " for its own purposes.\n\n"
							},
							{
								"kind": "code",
								"text": "```typescript\nimport { bundledVincentPolicy } from '@lit-protocol/vincent-policy-spending-limit';\n\nconst SpendingLimitPolicy = createVincentToolPolicy({\n  toolParamsSchema,\n  bundledVincentPolicy,\n  toolParameterMappings: {\n    rpcUrlForUniswap: 'rpcUrlForUniswap',\n    chainIdForUniswap: 'chainIdForUniswap',\n    ethRpcUrl: 'ethRpcUrl',\n    tokenInAddress: 'tokenAddress',\n    tokenInDecimals: 'tokenDecimals',\n    tokenInAmount: 'buyAmount',\n  },\n});\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API Methods"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "policyCore/vincentPolicy.ts",
							"line": 325,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L325"
						}
					],
					"typeParameters": [
						{
							"id": 30,
							"name": "PackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31,
							"name": "IpfsCid",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "ToolParamsSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 33,
							"name": "PolicyToolParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 34,
							"name": "UserParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 35,
							"name": "PrecheckAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 36,
							"name": "PrecheckDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 37,
							"name": "EvalAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 38,
							"name": "EvalDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 39,
							"name": "CommitParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 40,
							"name": "CommitAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 41,
							"name": "CommitDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 42,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 44,
											"name": "toolParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 339,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L339"
												}
											],
											"type": {
												"type": "reference",
												"target": 32,
												"name": "ToolParamsSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 45,
											"name": "bundledVincentPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 340,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L340"
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/lib/types.ts",
															"qualifiedName": "VincentPolicy"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 30,
																"name": "PackageName",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 33,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 34,
																"name": "UserParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 35,
																"name": "PrecheckAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 36,
																"name": "PrecheckDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 37,
																"name": "EvalAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 38,
																"name": "EvalDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 39,
																"name": "CommitParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 40,
																"name": "CommitAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 41,
																"name": "CommitDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 33,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 34,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 37,
																		"name": "EvalAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 38,
																		"name": "EvalDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 33,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 34,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 35,
																		"name": "PrecheckAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 36,
																		"name": "PrecheckDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "CommitLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 39,
																		"name": "CommitParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 40,
																		"name": "CommitAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 41,
																		"name": "CommitDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "CommitLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														],
														"name": "VincentPolicy",
														"package": "@lit-protocol/vincent-tool-sdk"
													},
													{
														"type": "reference",
														"target": 31,
														"name": "IpfsCid",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "BundledVincentPolicy",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 46,
											"name": "toolParameterMappings",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 363,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L363"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "mapped",
														"parameter": "K",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																	"qualifiedName": "TypeOf"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 33,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TypeOf",
																"package": "zod"
															}
														}
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												44,
												45,
												46
											]
										}
									],
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 338,
											"character": 10,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L338"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 47,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 48,
									"name": "vincentPolicy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 394,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L394"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/types.ts",
											"qualifiedName": "VincentPolicy"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30,
												"name": "PackageName",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 33,
												"name": "PolicyToolParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 34,
												"name": "UserParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 35,
												"name": "PrecheckAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 36,
												"name": "PrecheckDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 37,
												"name": "EvalAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 38,
												"name": "EvalDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 39,
												"name": "CommitParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 40,
												"name": "CommitAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 41,
												"name": "CommitDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "PolicyLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 33,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 34,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 37,
														"name": "EvalAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 38,
														"name": "EvalDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "PolicyLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 33,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 34,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 35,
														"name": "PrecheckAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 36,
														"name": "PrecheckDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "CommitLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 39,
														"name": "CommitParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 40,
														"name": "CommitAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 41,
														"name": "CommitDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CommitLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										],
										"name": "VincentPolicy",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								},
								{
									"id": 49,
									"name": "ipfsCid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 395,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L395"
										}
									],
									"type": {
										"type": "reference",
										"target": 31,
										"name": "IpfsCid",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 50,
									"name": "toolParameterMappings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 396,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L396"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
															"qualifiedName": "TypeOf"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 33,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "TypeOf",
														"package": "zod"
													}
												}
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 51,
									"name": "__schemaTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 398,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L398"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 52,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 53,
													"name": "evalAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 399,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L399"
														}
													],
													"type": {
														"type": "reference",
														"target": 37,
														"name": "EvalAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 54,
													"name": "evalDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 400,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L400"
														}
													],
													"type": {
														"type": "reference",
														"target": 38,
														"name": "EvalDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 55,
													"name": "precheckAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 401,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L401"
														}
													],
													"type": {
														"type": "reference",
														"target": 35,
														"name": "PrecheckAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 56,
													"name": "precheckDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 402,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L402"
														}
													],
													"type": {
														"type": "reference",
														"target": 36,
														"name": "PrecheckDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 57,
													"name": "commitParamsSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 403,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L403"
														}
													],
													"type": {
														"type": "reference",
														"target": 39,
														"name": "CommitParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 58,
													"name": "commitAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 404,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L404"
														}
													],
													"type": {
														"type": "reference",
														"target": 40,
														"name": "CommitAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 59,
													"name": "commitDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 405,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L405"
														}
													],
													"type": {
														"type": "reference",
														"target": 41,
														"name": "CommitDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 60,
													"name": "evaluate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 407,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L407"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/lib/types.ts",
															"qualifiedName": "PolicyLifecycleFunction"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 33,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 34,
																"name": "UserParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 37,
																"name": "EvalAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 38,
																"name": "EvalDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "PolicyLifecycleFunction",
														"package": "@lit-protocol/vincent-tool-sdk"
													}
												},
												{
													"id": 61,
													"name": "precheck",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 408,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L408"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 33,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 34,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 35,
																		"name": "PrecheckAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 36,
																		"name": "PrecheckDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														]
													}
												},
												{
													"id": 62,
													"name": "commit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 409,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L409"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "CommitLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 39,
																		"name": "CommitParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 40,
																		"name": "CommitAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 41,
																		"name": "CommitDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "CommitLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														53,
														54,
														55,
														56,
														57,
														58,
														59,
														60,
														61,
														62
													]
												}
											],
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 398,
													"character": 19,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L398"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										48,
										49,
										50,
										51
									]
								}
							],
							"sources": [
								{
									"fileName": "policyCore/vincentPolicy.ts",
									"line": 393,
									"character": 19,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L393"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 121,
			"name": "supportedPoliciesForTool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 122,
					"name": "supportedPoliciesForTool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`supportedPoliciesForTool()`"
							},
							{
								"kind": "text",
								"text": " takes an array of bundled Vincent Policies, and provides strong type inference for those policies\ninside of your VincentTool's lifecycle functions and return values.\n\n"
							},
							{
								"kind": "code",
								"text": "```typescript\nimport { bundledVincentPolicy } from '@lit-protocol/vincent-policy-spending-limit';\n\nconst SpendingLimitPolicy = createVincentToolPolicy({\n  toolParamsSchema,\n  bundledVincentPolicy,\n  toolParameterMappings: {\n    rpcUrlForUniswap: 'rpcUrlForUniswap',\n    chainIdForUniswap: 'chainIdForUniswap',\n    ethRpcUrl: 'ethRpcUrl',\n    tokenInAddress: 'tokenAddress',\n    tokenInDecimals: 'tokenDecimals',\n    tokenInAmount: 'buyAmount',\n  },\n});\n\n\nexport const vincentTool = createVincentTool({\n  packageName: '@lit-protocol/vincent-tool-uniswap-swap' as const,\n\n  toolParamsSchema,\n  supportedPolicies: supportedPoliciesForTool([SpendingLimitPolicy]),\n\n  ...\n\n  });\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API Methods"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
							"line": 50,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L50"
						}
					],
					"typeParameters": [
						{
							"id": 123,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 124,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 125,
													"name": "vincentPolicy",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
															"line": 52,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L52"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/lib/types.ts",
															"qualifiedName": "VincentPolicy"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "VincentPolicy",
														"package": "@lit-protocol/vincent-tool-sdk"
													}
												},
												{
													"id": 126,
													"name": "ipfsCid",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
															"line": 53,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L53"
														}
													],
													"type": {
														"type": "reference",
														"target": 127,
														"name": "IpfsCid",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														125,
														126
													]
												}
											],
											"sources": [
												{
													"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
													"line": 51,
													"character": 34,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L51"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 127,
							"name": "IpfsCid",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "PkgNames",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "packageName"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "vincentPolicy"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "intrinsic",
											"name": "number"
										},
										"objectType": {
											"type": "reference",
											"target": 123,
											"name": "Policies",
											"package": "@lit-protocol/vincent-tool-sdk",
											"refersToTypeParameter": true
										}
									}
								}
							}
						}
					],
					"parameters": [
						{
							"id": 129,
							"name": "policies",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 123,
								"name": "Policies",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
							"qualifiedName": "ToolPolicyMap"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 123,
								"name": "Policies",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 128,
								"name": "PkgNames",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ToolPolicyMap",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 294,
			"name": "BaseToolContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "BaseToolContext is returned with tool execution results, and contains information about the app, delegation, and\npolicy evaluation results for any policies that the user had enabled for the tool."
					}
				],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Interfaces"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 295,
					"name": "policiesContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "toolCore/toolDef/context/types.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/context/types.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 307,
						"name": "Policies",
						"package": "@lit-protocol/vincent-tool-sdk",
						"qualifiedName": "BaseToolContext.Policies",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 296,
					"name": "toolIpfsCid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 413,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L413"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.toolIpfsCid"
					}
				},
				{
					"id": 297,
					"name": "appId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 414,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L414"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appId"
					}
				},
				{
					"id": 298,
					"name": "appVersion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 415,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L415"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appVersion"
					}
				},
				{
					"id": 299,
					"name": "delegation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 416,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L416"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 300,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 301,
									"name": "delegateeAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 417,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L417"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 302,
									"name": "delegatorPkpInfo",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 418,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L418"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 303,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 304,
													"name": "tokenId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 419,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L419"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 305,
													"name": "ethAddress",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 420,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L420"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 306,
													"name": "publicKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 421,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L421"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														304,
														305,
														306
													]
												}
											],
											"sources": [
												{
													"fileName": "types.ts",
													"line": 418,
													"character": 22,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L418"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										301,
										302
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 416,
									"character": 14,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/types.ts#L416"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.delegation"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						295,
						296,
						297,
						298,
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "toolCore/toolDef/context/types.ts",
					"line": 17,
					"character": 17,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/context/types.ts#L17"
				}
			],
			"typeParameters": [
				{
					"id": 307,
					"name": "Policies",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": -1,
					"name": "BaseContext",
					"package": "@lit-protocol/vincent-tool-sdk"
				}
			]
		},
		{
			"id": 63,
			"name": "createVincentTool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "toolCore/vincentTool.ts",
					"line": 61,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/vincentTool.ts#L61"
				}
			],
			"signatures": [
				{
					"id": 64,
					"name": "createVincentTool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`createVincentTool()`"
							},
							{
								"kind": "text",
								"text": " method is used to define a tool's lifecycle methods and ensure that arguments provided to the tool's\nlifecycle methods, as well as their return values, are validated and fully type-safe by defining ZOD schemas for them.\n\n"
							},
							{
								"kind": "code",
								"text": "```typescript\nconst exampleSimpleTool = createVincentTool({\n    packageName: '@lit-protocol/yestool@1.0.0',\n    toolParamsSchema: testSchema,\n    supportedPolicies: supportedPoliciesForTool([testPolicy]),\n\n    precheck: async (params, { succeed, fail }) => {\n      // Should allow succeed() with no arguments\n      succeed();\n\n      // Should allow fail() with string error\n      fail('Error message');\n\n      // @ts-expect-error - Should not allow succeed() with arguments when no schema\n      succeed({ message: 'test' });\n\n      // @ts-expect-error - Should not allow fail() with object when no schema\n      fail({ error: 'test' });\n\n      return succeed();\n    },\n\n    execute: async (params, { succeed }) => {\n      // Should allow succeed() with no arguments\n      succeed();\n\n      // @ts-expect-error - Should not allow succeed() with arguments when no schema\n      return succeed({ data: 'test' });\n    },\n  });\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API Methods"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "toolCore/vincentTool.ts",
							"line": 61,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/vincentTool.ts#L61"
						}
					],
					"typeParameters": [
						{
							"id": 65,
							"name": "ToolParamsSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 66,
							"name": "PkgNames",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 67,
							"name": "PolicyMap",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
									"qualifiedName": "ToolPolicyMap"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": 66,
										"name": "PkgNames",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ToolPolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						},
						{
							"id": 68,
							"name": "PolicyMapByPackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 69,
							"name": "PrecheckSuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 70,
							"name": "PrecheckFailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 71,
							"name": "ExecuteSuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 72,
							"name": "ExecuteFailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 73,
							"name": "toolDef",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 74,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 75,
											"name": "packageName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 47,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L47"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 76,
											"name": "toolParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 48,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L48"
												}
											],
											"type": {
												"type": "reference",
												"target": 65,
												"name": "ToolParamsSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 77,
											"name": "supportedPolicies",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 49,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L49"
												}
											],
											"type": {
												"type": "reference",
												"target": 67,
												"name": "PolicyMap",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 78,
											"name": "precheckSuccessSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 51,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L51"
												}
											],
											"type": {
												"type": "reference",
												"target": 69,
												"name": "PrecheckSuccessSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 79,
											"name": "precheckFailSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 52,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L52"
												}
											],
											"type": {
												"type": "reference",
												"target": 70,
												"name": "PrecheckFailSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 80,
											"name": "executeSuccessSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 53,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L53"
												}
											],
											"type": {
												"type": "reference",
												"target": 71,
												"name": "ExecuteSuccessSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 81,
											"name": "executeFailSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 54,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L54"
												}
											],
											"type": {
												"type": "reference",
												"target": 72,
												"name": "ExecuteFailSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 82,
											"name": "precheck",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 56,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L56"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
													"qualifiedName": "ToolDefLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 65,
														"name": "ToolParamsSchema",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"typeArguments": [
															{
																"type": "reference",
																"target": 68,
																"name": "PolicyMapByPackageName",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "PolicyEvaluationResultContext",
														"package": "@lit-protocol/vincent-tool-sdk"
													},
													{
														"type": "reference",
														"target": 69,
														"name": "PrecheckSuccessSchema",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 70,
														"name": "PrecheckFailSchema",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ToolDefLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 83,
											"name": "execute",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "toolCore/toolDef/types.ts",
													"line": 57,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L57"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
													"qualifiedName": "ToolDefLifecycleFunction"
												},
												"name": "ToolDefLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												75,
												76,
												77,
												78,
												79,
												80,
												81,
												82,
												83
											]
										}
									],
									"sources": [
										{
											"fileName": "toolCore/toolDef/types.ts",
											"line": 46,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/46a7999ef358981de990d808b7484f24731b23f9/packages/libs/tool-sdk/src/lib/toolCore/toolDef/types.ts#L46"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"typeArguments": [
							{
								"type": "reference",
								"target": 65,
								"name": "ToolParamsSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 66,
								"name": "PkgNames",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 67,
								"name": "PolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 68,
								"name": "PolicyMapByPackageName",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 71,
								"name": "ExecuteSuccessSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 72,
								"name": "ExecuteFailSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 69,
								"name": "PrecheckSuccessSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 70,
								"name": "PrecheckFailSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "VincentTool",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				164,
				294
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				144,
				156
			]
		},
		{
			"title": "Functions",
			"children": [
				1,
				28,
				121,
				63
			]
		}
	],
	"categories": [
		{
			"title": "API Methods",
			"children": [
				1,
				28,
				121,
				63
			]
		},
		{
			"title": "Interfaces",
			"children": [
				164,
				144,
				156,
				294
			]
		}
	],
	"packageName": "@lit-protocol/vincent-tool-sdk",
	"packageVersion": "1.0.0",
	"readme": [
		{
			"kind": "text",
			"text": "# tool-sdk\n\nThis library was generated with [Nx](https://nx.dev).\n\n## Building\n\nRun "
		},
		{
			"kind": "code",
			"text": "`nx build tool-sdk`"
		},
		{
			"kind": "text",
			"text": " to build the library.\n\n## Usage\n\n# Vincent Policy & Tool SDK\n\nThis library provides a type-safe lifecycle system for defining and composing **policies** and **tools**, with strong TypeScript inference support throughout.\n\n## 🧩 Core Concepts\n\n- **Policies** encapsulate decision logic (precheck, evaluate, commit) and define their input/output schemas.\n- **Tools** orchestrate multiple policies and expose "
		},
		{
			"kind": "code",
			"text": "`precheck`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`execute`"
		},
		{
			"kind": "text",
			"text": " lifecycle methods.\n- **Context injection** provides "
		},
		{
			"kind": "code",
			"text": "`allow()`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`deny()`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`succeed()`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`fail()`"
		},
		{
			"kind": "text",
			"text": " methods, with schema-safe return typing.\n- All inference is preserved automatically using "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`createVincentToolPolicy`"
		},
		{
			"kind": "text",
			"text": ", and "
		},
		{
			"kind": "code",
			"text": "`createVincentTool`"
		},
		{
			"kind": "text",
			"text": ".\n\n---\n\n### 🔁 Calling "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " on a Policy from within a Tool\n\nPolicies can define a "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " lifecycle method to finalize changes once a tool executes successfully. These "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " functions are injected automatically into the "
		},
		{
			"kind": "code",
			"text": "`allowedPolicies`"
		},
		{
			"kind": "text",
			"text": " object of the "
		},
		{
			"kind": "code",
			"text": "`ToolContext`"
		},
		{
			"kind": "text",
			"text": ".\n\n### Example Policy (max daily spend)\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { z } from 'zod';\nimport { createVincentPolicy } from '@lit-protocol/vincent-tool-sdk';\n\nimport { getAmountSpentToday, adjustDailySpendAmount } from '@my-org/spending-limit-client';\n\nexport const dailySpendPolicy = createVincentPolicy({\n  ipfsCid: 'policy-committable',\n  packageName: '@lit-protocol/max-spend-policy',\n\n  toolParamsSchema: z.object({\n    buySomething: z.boolean(),\n    buyAmount: z.number(),\n  }),\n  userParamsSchema: z.object({\n    perBuyLimit: z.number(),\n    maxAmountPerDay: z.number(),\n  }),\n\n  evalAllowResultSchema: z.object({\n    ok: z.boolean(),\n    amountRemaining: z.number(),\n    amountToSpend: z.number(),\n  }),\n  evalDenyResultSchema: z.union([\n    z.object({\n      reason: z.literal('Buy amount request exceeds per-buy limit'),\n      buyAmount: z.number(),\n    }),\n    z.object({\n      reason: z.enum(['Buy amount request exceeds max amount per day']),\n      buyAmount: z.number(),\n      amountSpentToday: z.number(),\n      amountRemaining: z.number(),\n    }),\n  ]),\n\n  commitParamsSchema: z.object({ amountSpent: z.number() }),\n  commitAllowResultSchema: z.object({\n    transactionId: z.string(),\n    timestamp: z.number(),\n  }),\n  commitDenyResultSchema: z.object({\n    errorCode: z.number().optional(),\n    message: z.string(),\n  }),\n\n  evaluate: async ({ toolParams, userParams }, context) => {\n    const { maxAmountPerDay, perBuyLimit } = userParams;\n    const { buyAmount } = toolParams;\n\n    if (buyAmount > perBuyLimit) {\n      return context.deny({\n        reason: 'Buy amount request exceeds per-buy limit',\n        buyAmount,\n      });\n    }\n\n    const amountSpentToday = await getAmountSpentToday(context.delegation.delegator);\n    const amountRemaining = maxAmountPerDay - amountSpentToday;\n\n    if (buyAmount > amountRemaining) {\n      return context.deny({\n        reason: 'Buy amount request exceeds max amount per day',\n        amountSpentToday,\n        buyAmount,\n        amountRemaining,\n      });\n    }\n\n    return context.allow({\n      ok: true,\n      amountRemaining,\n      amountToSpend: buyAmount,\n    });\n  },\n\n  commit: async ({ amountSpent }, context) => {\n    try {\n      const spendCommitResult: { transactionId: string; timestamp: number } =\n        await adjustDailySpendAmount(context.delegation.delegator, amountSpent);\n\n      return context.allow(spendCommitResult);\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        if ('errorCode' in e) {\n          return context.deny({\n            errorCode: e.errorCode as number,\n            message: e.message,\n          });\n        } else {\n          return context.deny({ message: e.message });\n        }\n      }\n\n      return context.deny({ message: String(e) });\n    }\n  },\n});\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n### Example Tool - Uniswap\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { z } from 'zod';\n\nimport { createVincentToolPolicy, createVincentTool } from '@lit-protocol/vincent-tool-sdk';\n\nimport { dailySpendPolicy } from '@lit-protocol/max-spend-policy';\n\nimport uniswapV3Client from '@uniswap/v3-sdk';\n\nconst toolParamsSchema = z.object({\n  buy: z.boolean(),\n  buyAmount: z.number(),\n});\n\nexport const myTokenSwapTool = createVincentTool({\n  toolParamsSchema,\n\n  supportedPolicies: [\n    createVincentToolPolicy({\n      toolParamsSchema,\n      policyDef: dailySpendPolicy,\n      toolParameterMappings: { buy: 'buyAmount' },\n    }),\n  ],\n  executeSuccessSchema: z.object({\n    message: z.string(),\n    amountSpent: z.number().optional(),\n    spendCommitResult: z\n      .object({\n        transactionId: z.string(),\n        timestamp: z.number(),\n      })\n      .optional(),\n  }),\n\n  executeFailSchema: z.object({ error: z.string(), message: z.string() }),\n\n  async execute(toolParams, { succeed, fail, policiesContext }) {\n    const spendPolicyContext = policiesContext.allowedPolicies['@lit-protocol/max-spend-policy'];\n\n    const amountSpent: number = await uniswapV3Client.performSwap({});\n\n    if (spendPolicyContext) {\n      const spendCommitResult = await spendPolicyContext.commit({\n        amountSpent,\n      });\n\n      if (!spendCommitResult.allow) {\n        return fail({\n          error: `Policy commit denied with code ${spendCommitResult.result.errorCode}`,\n          message: 'Tool executed but policy commit denied',\n        });\n      }\n\n      if (spendCommitResult.allow) {\n        return succeed({\n          amountSpent,\n          spendCommitResult: spendCommitResult.result,\n          message: 'Tool executed and spending limit policy commit completed',\n        });\n      }\n    }\n\n    return succeed({\n      message: 'Tool executed for user without enabled spending limit',\n    });\n  },\n});\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n## 👨‍💻 Consumer Usage (with Inference!)\n\n### Note: These are low-level interfaces that are not typically used by app, tool or policy developers directly. Consumers at this level are our LIT action wrappers and the LitToolClient -- see @lit-protocol/vincent-app-sdk for the LitToolClient.\n\nTool and policy authors export their tool and policies like this:\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nexport const myTool = createVincentTool(...);\nexport const limitPolicy = createVincentPolicy(...);\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThen, consumers can use:\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { myTool } from 'awesome-tool-package';\n\nconst typedTool = createVincentTool(myTool.__vincentToolDef);\n\ntypedTool.execute(\n  { amount: 50, action: 'transfer' },\n  {\n    delegation: { delegatee: 'a', delegator: 'b' },\n    policiesContext: {\n      evaluatedPolicies: ['limit-check', 'type-check'],\n      allowedPolicies: {\n        'limit-check': { result: { approved: true } },\n        'type-check': { result: { allowed: true } },\n      },\n    },\n  },\n); // ✅ fully typed and schema validated\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n## 🔧 Summary of Create Functions\n\n| Function                                           | Purpose                                                                           |\n| -------------------------------------------------- | --------------------------------------------------------------------------------- |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy(def)`"
		},
		{
			"kind": "text",
			"text": "                         | Defines a reusable, type-safe policy with lifecycle methods                       |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentToolPolicy({ policyDef, mappings })`"
		},
		{
			"kind": "text",
			"text": " | Adapts a policy to a tool’s parameter schema                                      |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentTool(def)`"
		},
		{
			"kind": "text",
			"text": "                           | Composes policies and schemas into a type-safe tool with "
		},
		{
			"kind": "code",
			"text": "`execute`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`precheck`"
		},
		{
			"kind": "text",
			"text": " |\n\n---\n\n## 🧠 Tip\n\nTool and policy authors should export the result of "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`createVincentTool()`"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentPolicy"
		},
		"2": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentPolicy"
		},
		"3": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PackageName"
		},
		"4": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PolicyToolParams"
		},
		"5": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "UserParams"
		},
		"6": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckAllowResult"
		},
		"7": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckDenyResult"
		},
		"8": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalAllowResult"
		},
		"9": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalDenyResult"
		},
		"10": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitParams"
		},
		"11": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitAllowResult"
		},
		"12": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitDenyResult"
		},
		"13": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "policyDef"
		},
		"14": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"15": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.packageName"
		},
		"16": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.toolParamsSchema"
		},
		"17": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.userParamsSchema"
		},
		"18": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.evalAllowResultSchema"
		},
		"19": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.evalDenyResultSchema"
		},
		"20": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.precheckAllowResultSchema"
		},
		"21": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.precheckDenyResultSchema"
		},
		"22": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.commitParamsSchema"
		},
		"23": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.commitAllowResultSchema"
		},
		"24": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.commitDenyResultSchema"
		},
		"25": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.evaluate"
		},
		"26": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.precheck"
		},
		"27": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.commit"
		},
		"28": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentToolPolicy"
		},
		"29": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentToolPolicy"
		},
		"30": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PackageName"
		},
		"31": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "IpfsCid"
		},
		"32": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"33": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PolicyToolParams"
		},
		"34": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "UserParams"
		},
		"35": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckAllowResult"
		},
		"36": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckDenyResult"
		},
		"37": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalAllowResult"
		},
		"38": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalDenyResult"
		},
		"39": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitParams"
		},
		"40": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitAllowResult"
		},
		"41": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitDenyResult"
		},
		"42": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "config"
		},
		"43": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"44": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParamsSchema"
		},
		"45": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.bundledVincentPolicy"
		},
		"46": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParameterMappings"
		},
		"47": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"48": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"49": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"50": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParameterMappings"
		},
		"51": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.__schemaTypes"
		},
		"52": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"53": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evalAllowResultSchema"
		},
		"54": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evalDenyResultSchema"
		},
		"55": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheckAllowResultSchema"
		},
		"56": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheckDenyResultSchema"
		},
		"57": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitParamsSchema"
		},
		"58": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitAllowResultSchema"
		},
		"59": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitDenyResultSchema"
		},
		"60": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evaluate"
		},
		"61": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheck"
		},
		"62": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commit"
		},
		"63": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "createVincentTool"
		},
		"64": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "createVincentTool"
		},
		"65": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"66": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PkgNames"
		},
		"67": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PolicyMap"
		},
		"68": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PolicyMapByPackageName"
		},
		"69": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PrecheckSuccessSchema"
		},
		"70": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PrecheckFailSchema"
		},
		"71": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ExecuteSuccessSchema"
		},
		"72": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ExecuteFailSchema"
		},
		"73": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "toolDef"
		},
		"74": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type"
		},
		"75": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.packageName"
		},
		"76": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.toolParamsSchema"
		},
		"77": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.supportedPolicies"
		},
		"78": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.precheckSuccessSchema"
		},
		"79": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.precheckFailSchema"
		},
		"80": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.executeSuccessSchema"
		},
		"81": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.executeFailSchema"
		},
		"82": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.precheck"
		},
		"83": {
			"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
			"qualifiedName": "__type.execute"
		},
		"121": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "supportedPoliciesForTool"
		},
		"122": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "supportedPoliciesForTool"
		},
		"123": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "Policies"
		},
		"124": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type"
		},
		"125": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"126": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"127": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "IpfsCid"
		},
		"128": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "PkgNames"
		},
		"129": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "policies"
		},
		"144": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "PolicyDefLifecycleFunction"
		},
		"145": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"146": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"147": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "args"
		},
		"148": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"149": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.toolParams"
		},
		"150": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type.userParams"
		},
		"151": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "ctx"
		},
		"152": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "ToolParams"
		},
		"153": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "UserParams"
		},
		"154": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "AllowResult"
		},
		"155": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "DenyResult"
		},
		"156": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "PolicyDefCommitFunction"
		},
		"157": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "__type"
		},
		"159": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "args"
		},
		"160": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "context"
		},
		"161": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "CommitParams"
		},
		"162": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "CommitAllowResult"
		},
		"163": {
			"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
			"qualifiedName": "CommitDenyResult"
		},
		"164": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "PolicyContext"
		},
		"165": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "PolicyContext.allow"
		},
		"166": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"167": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"169": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"170": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "result"
		},
		"171": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "PolicyContext.deny"
		},
		"172": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"173": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "error"
		},
		"175": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"176": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "__type"
		},
		"177": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "result"
		},
		"178": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "error"
		},
		"179": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.toolIpfsCid"
		},
		"180": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appId"
		},
		"181": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appVersion"
		},
		"182": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.delegation"
		},
		"183": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"184": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegateeAddress"
		},
		"185": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegatorPkpInfo"
		},
		"186": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"188": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.ethAddress"
		},
		"189": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.publicKey"
		},
		"190": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "PolicyContext.AllowSchema"
		},
		"191": {
			"sourceFileName": "src/lib/policyCore/policyDef/context/types.ts",
			"qualifiedName": "PolicyContext.DenySchema"
		},
		"294": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext"
		},
		"295": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext.policiesContext"
		},
		"296": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.toolIpfsCid"
		},
		"297": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appId"
		},
		"298": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appVersion"
		},
		"299": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.delegation"
		},
		"300": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegateeAddress"
		},
		"302": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegatorPkpInfo"
		},
		"303": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"305": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.ethAddress"
		},
		"306": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.publicKey"
		},
		"307": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext.Policies"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
