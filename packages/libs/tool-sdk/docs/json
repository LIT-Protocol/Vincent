{
	"id": 0,
	"name": "vincent-tool-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 223,
			"name": "BaseToolContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 226,
					"name": "appId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 411,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L411"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appId"
					}
				},
				{
					"id": 227,
					"name": "appVersion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 412,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L412"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.appVersion"
					}
				},
				{
					"id": 228,
					"name": "delegation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 413,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L413"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 229,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 230,
									"name": "delegateeAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 414,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L414"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 231,
									"name": "delegatorPkpInfo",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 415,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L415"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 232,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 234,
													"name": "ethAddress",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 417,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L417"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 235,
													"name": "publicKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 418,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L418"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 233,
													"name": "tokenId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 416,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L416"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														234,
														235,
														233
													]
												}
											],
											"sources": [
												{
													"fileName": "types.ts",
													"line": 415,
													"character": 22,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L415"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										230,
										231
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 413,
									"character": 14,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L413"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.delegation"
					}
				},
				{
					"id": 224,
					"name": "policiesContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "toolCore/toolDef/context/types.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/toolDef/context/types.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": 236,
						"name": "Policies",
						"package": "@lit-protocol/vincent-tool-sdk",
						"qualifiedName": "BaseToolContext.Policies",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 225,
					"name": "toolIpfsCid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 410,
							"character": 2,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L410"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseContext.toolIpfsCid"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						226,
						227,
						228,
						224,
						225
					]
				}
			],
			"sources": [
				{
					"fileName": "toolCore/toolDef/context/types.ts",
					"line": 12,
					"character": 17,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/toolDef/context/types.ts#L12"
				}
			],
			"typeParameters": [
				{
					"id": 236,
					"name": "Policies",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": -1,
					"name": "BaseContext",
					"package": "@lit-protocol/vincent-tool-sdk"
				}
			]
		},
		{
			"id": 107,
			"name": "BundledVincentPolicy",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A VincentPolicy bundled with an IPFS CID and uniquely branded.\nThis ensures only correctly constructed objects are assignable."
					}
				]
			},
			"sources": [
				{
					"fileName": "policyCore/bundledPolicy/types.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/types.ts#L14"
				}
			],
			"typeParameters": [
				{
					"id": 112,
					"name": "VP",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/types.ts",
							"qualifiedName": "VincentPolicy"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "VincentPolicy",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				},
				{
					"id": 113,
					"name": "IpfsCid",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 108,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 109,
							"name": "ipfsCid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "policyCore/bundledPolicy/types.ts",
									"line": 18,
									"character": 11,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/types.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": 113,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 110,
							"name": "vincentPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "policyCore/bundledPolicy/types.ts",
									"line": 19,
									"character": 11,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/types.ts#L19"
								}
							],
							"type": {
								"type": "reference",
								"target": 112,
								"name": "VP",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								109,
								110
							]
						}
					],
					"sources": [
						{
							"fileName": "policyCore/bundledPolicy/types.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/types.ts#L17"
						}
					]
				}
			}
		},
		{
			"id": 114,
			"name": "BundledVincentTool",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A VincentTool bundled with an IPFS CID and uniquely branded.\nThis ensures only correctly constructed objects are assignable."
					}
				]
			},
			"sources": [
				{
					"fileName": "toolCore/bundledTool/types.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/types.ts#L14"
				}
			],
			"typeParameters": [
				{
					"id": 119,
					"name": "VT",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 195,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "VincentTool",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				},
				{
					"id": 120,
					"name": "IpfsCid",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 115,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 116,
							"name": "ipfsCid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "toolCore/bundledTool/types.ts",
									"line": 18,
									"character": 11,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/types.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": 120,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 117,
							"name": "vincentTool",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "toolCore/bundledTool/types.ts",
									"line": 19,
									"character": 11,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/types.ts#L19"
								}
							],
							"type": {
								"type": "reference",
								"target": 119,
								"name": "VT",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								116,
								117
							]
						}
					],
					"sources": [
						{
							"fileName": "toolCore/bundledTool/types.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/types.ts#L17"
						}
					]
				}
			}
		},
		{
			"id": 156,
			"name": "PolicyEvaluationResultContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 158,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L158"
				}
			],
			"typeParameters": [
				{
					"id": 182,
					"name": "Policies",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 183,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 184,
											"name": "vincentPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 162,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L162"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "VincentPolicy"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "VincentPolicy",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												184
											]
										}
									],
									"sources": [
										{
											"fileName": "types.ts",
											"line": 161,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L161"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 157,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 158,
									"name": "evaluatedPolicies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 177,
											"character": 2,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L177"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 182,
												"name": "Policies",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										158
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 176,
									"character": 4,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L176"
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 159,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 160,
											"name": "allow",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 180,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L180"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 161,
											"name": "allowedPolicies",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 181,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L181"
												}
											],
											"type": {
												"type": "mapped",
												"parameter": "PolicyKey",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 182,
														"name": "Policies",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "reflection",
													"declaration": {
														"id": 162,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 163,
																"name": "result",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "types.ts",
																		"line": 183,
																		"character": 10,
																		"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L183"
																	}
																],
																"type": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "__schemaTypes"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "src/lib/types.ts",
																					"qualifiedName": "PolicyKey"
																				},
																				"name": "PolicyKey",
																				"package": "@lit-protocol/vincent-tool-sdk",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 182,
																				"name": "Policies",
																				"package": "@lit-protocol/vincent-tool-sdk",
																				"refersToTypeParameter": true
																			}
																		}
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 164,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 165,
																					"name": "evalAllowResultSchema",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "types.ts",
																							"line": 184,
																							"character": 12,
																							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L184"
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "Schema"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						165
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "types.ts",
																					"line": 183,
																					"character": 63,
																					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L183"
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "src/lib/types.ts",
																				"qualifiedName": "Schema"
																			},
																			"name": "Schema",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																				"qualifiedName": "ZodType"
																			},
																			"name": "z.ZodType",
																			"package": "zod",
																			"qualifiedName": "ZodType"
																		},
																		"trueType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																				"qualifiedName": "TypeOf"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "src/lib/types.ts",
																						"qualifiedName": "Schema"
																					},
																					"name": "Schema",
																					"package": "@lit-protocol/vincent-tool-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "z.infer",
																			"package": "zod",
																			"qualifiedName": "TypeOf"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	163
																]
															}
														],
														"sources": [
															{
																"fileName": "types.ts",
																"line": 182,
																"character": 40,
																"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L182"
															}
														]
													}
												},
												"optionalModifier": "+"
											}
										},
										{
											"id": 166,
											"name": "deniedPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 192,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L192"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "never"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												160,
												161,
												166
											]
										}
									],
									"sources": [
										{
											"fileName": "types.ts",
											"line": 179,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L179"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 167,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 168,
											"name": "allow",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 195,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L195"
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 177,
											"name": "allowedPolicies",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 208,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L208"
												}
											],
											"type": {
												"type": "mapped",
												"parameter": "PolicyKey",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 182,
														"name": "Policies",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "reflection",
													"declaration": {
														"id": 178,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 179,
																"name": "result",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "types.ts",
																		"line": 210,
																		"character": 10,
																		"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L210"
																	}
																],
																"type": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "__schemaTypes"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "src/lib/types.ts",
																					"qualifiedName": "PolicyKey"
																				},
																				"name": "PolicyKey",
																				"package": "@lit-protocol/vincent-tool-sdk",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 182,
																				"name": "Policies",
																				"package": "@lit-protocol/vincent-tool-sdk",
																				"refersToTypeParameter": true
																			}
																		}
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 180,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 181,
																					"name": "evalAllowResultSchema",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "types.ts",
																							"line": 211,
																							"character": 12,
																							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L211"
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "Schema"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						181
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "types.ts",
																					"line": 210,
																					"character": 63,
																					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L210"
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "src/lib/types.ts",
																				"qualifiedName": "Schema"
																			},
																			"name": "Schema",
																			"package": "@lit-protocol/vincent-tool-sdk",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																				"qualifiedName": "ZodType"
																			},
																			"name": "z.ZodType",
																			"package": "zod",
																			"qualifiedName": "ZodType"
																		},
																		"trueType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																				"qualifiedName": "TypeOf"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "src/lib/types.ts",
																						"qualifiedName": "Schema"
																					},
																					"name": "Schema",
																					"package": "@lit-protocol/vincent-tool-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "z.infer",
																			"package": "zod",
																			"qualifiedName": "TypeOf"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	179
																]
															}
														],
														"sources": [
															{
																"fileName": "types.ts",
																"line": 209,
																"character": 40,
																"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L209"
															}
														]
													}
												},
												"optionalModifier": "+"
											}
										},
										{
											"id": 169,
											"name": "deniedPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types.ts",
													"line": 196,
													"character": 6,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L196"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 170,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 171,
															"name": "packageName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "types.ts",
																	"line": 197,
																	"character": 8,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L197"
																}
															],
															"type": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 182,
																	"name": "Policies",
																	"package": "@lit-protocol/vincent-tool-sdk",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 172,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "types.ts",
																	"line": 198,
																	"character": 8,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L198"
																}
															],
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 173,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 174,
																					"name": "error",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "types.ts",
																							"line": 199,
																							"character": 10,
																							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L199"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						174
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "types.ts",
																					"line": 198,
																					"character": 16,
																					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L198"
																				}
																			]
																		}
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "__schemaTypes"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Extract"
																					},
																					"typeArguments": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					],
																					"name": "Extract",
																					"package": "typescript"
																				},
																				"objectType": {
																					"type": "reference",
																					"target": 182,
																					"name": "Policies",
																					"package": "@lit-protocol/vincent-tool-sdk",
																					"refersToTypeParameter": true
																				}
																			}
																		},
																		"extendsType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 175,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 176,
																						"name": "evalDenyResultSchema",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "types.ts",
																								"line": 201,
																								"character": 10,
																								"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L201"
																							}
																						],
																						"type": {
																							"type": "inferred",
																							"name": "Schema"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							176
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "types.ts",
																						"line": 200,
																						"character": 80,
																						"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L200"
																					}
																				]
																			}
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "src/lib/types.ts",
																					"qualifiedName": "Schema"
																				},
																				"name": "Schema",
																				"package": "@lit-protocol/vincent-tool-sdk",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																					"qualifiedName": "ZodType"
																				},
																				"name": "z.ZodType",
																				"package": "zod",
																				"qualifiedName": "ZodType"
																			},
																			"trueType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																					"qualifiedName": "TypeOf"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "src/lib/types.ts",
																							"qualifiedName": "Schema"
																						},
																						"name": "Schema",
																						"package": "@lit-protocol/vincent-tool-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "z.infer",
																				"package": "zod",
																				"qualifiedName": "TypeOf"
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "undefined"
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																171,
																172
															]
														}
													],
													"sources": [
														{
															"fileName": "types.ts",
															"line": 196,
															"character": 20,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L196"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												168,
												177,
												169
											]
										}
									],
									"sources": [
										{
											"fileName": "types.ts",
											"line": 194,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L194"
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 195,
			"name": "VincentTool",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 357,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L357"
				}
			],
			"typeParameters": [
				{
					"id": 208,
					"name": "ToolParamsSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					}
				},
				{
					"id": 209,
					"name": "PkgNames",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "PolicyMap",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
							"qualifiedName": "ToolPolicyMap"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": 209,
								"name": "PkgNames",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ToolPolicyMap",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				},
				{
					"id": 211,
					"name": "PoliciesByPackageName",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "policyByPackageName"
						},
						"objectType": {
							"type": "reference",
							"target": 210,
							"name": "PolicyMap",
							"package": "@lit-protocol/vincent-tool-sdk",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 212,
					"name": "ExecuteSuccessSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"name": "z.ZodType",
								"package": "zod",
								"qualifiedName": "ZodType"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 213,
					"name": "ExecuteFailSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"name": "z.ZodType",
								"package": "zod",
								"qualifiedName": "ZodType"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 214,
					"name": "PrecheckSuccessSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"name": "z.ZodType",
								"package": "zod",
								"qualifiedName": "ZodType"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 215,
					"name": "PrecheckFailSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"name": "z.ZodType",
								"package": "zod",
								"qualifiedName": "ZodType"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 216,
					"name": "ExecuteFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/types.ts",
							"qualifiedName": "ToolLifecycleFunction"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 208,
								"name": "ToolParamsSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "ToolExecutionPolicyContext"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 211,
										"name": "PoliciesByPackageName",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ToolExecutionPolicyContext",
								"package": "@lit-protocol/vincent-tool-sdk"
							},
							{
								"type": "reference",
								"target": 212,
								"name": "ExecuteSuccessSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 213,
								"name": "ExecuteFailSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ToolLifecycleFunction",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				},
				{
					"id": 217,
					"name": "PrecheckFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "ToolLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 208,
										"name": "ToolParamsSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 156,
										"typeArguments": [
											{
												"type": "reference",
												"target": 211,
												"name": "PoliciesByPackageName",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-tool-sdk"
									},
									{
										"type": "reference",
										"target": 214,
										"name": "PrecheckSuccessSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 215,
										"name": "PrecheckFailSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ToolLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 196,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 199,
							"name": "execute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 385,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L385"
								}
							],
							"type": {
								"type": "reference",
								"target": 216,
								"name": "ExecuteFn",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 197,
							"name": "packageName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 383,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L383"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 198,
							"name": "precheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 384,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L384"
								}
							],
							"type": {
								"type": "reference",
								"target": 217,
								"name": "PrecheckFn",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 201,
							"name": "supportedPolicies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 387,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L387"
								}
							],
							"type": {
								"type": "reference",
								"target": 210,
								"name": "PolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 200,
							"name": "toolParamsSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 386,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L386"
								}
							],
							"type": {
								"type": "reference",
								"target": 208,
								"name": "ToolParamsSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								199,
								197,
								198,
								201,
								200
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 382,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L382"
						}
					]
				}
			}
		},
		{
			"id": 121,
			"name": "VincentToolPolicy",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 74,
					"character": 12,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L74"
				}
			],
			"typeParameters": [
				{
					"id": 140,
					"name": "ToolParamsSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
							"qualifiedName": "ZodType"
						},
						"name": "z.ZodType",
						"package": "zod",
						"qualifiedName": "ZodType"
					}
				},
				{
					"id": 141,
					"name": "VP",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/types.ts",
							"qualifiedName": "VincentPolicy"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "VincentPolicy",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				},
				{
					"id": 142,
					"name": "PackageName",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 143,
					"name": "IpfsCid",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 122,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 123,
							"name": "ipfsCid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L80"
								}
							],
							"type": {
								"type": "reference",
								"target": 143,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 127,
							"name": "toolParameterMappings",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L82"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 140,
														"name": "ToolParamsSchema",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "z.infer",
												"package": "zod",
												"qualifiedName": "TypeOf"
											}
										},
										"templateType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "toolParamsSchema"
														},
														"objectType": {
															"type": "reference",
															"target": 141,
															"name": "VP",
															"package": "@lit-protocol/vincent-tool-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "z.infer",
												"package": "zod",
												"qualifiedName": "TypeOf"
											}
										}
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 124,
							"name": "vincentPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L81"
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 141,
										"name": "VP",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 125,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 126,
													"name": "packageName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types.ts",
															"line": 81,
															"character": 24,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L81"
														}
													],
													"type": {
														"type": "reference",
														"target": 142,
														"name": "PackageName",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														126
													]
												}
											],
											"sources": [
												{
													"fileName": "types.ts",
													"line": 81,
													"character": 22,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L81"
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								123,
								127,
								124
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 79,
							"character": 4,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/types.ts#L79"
						}
					]
				}
			}
		},
		{
			"id": 91,
			"name": "asBundledVincentPolicy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "policyCore/bundledPolicy/bundledPolicy.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/bundledPolicy.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 92,
					"name": "asBundledVincentPolicy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "policyCore/bundledPolicy/bundledPolicy.ts",
							"line": 6,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/bundledPolicy/bundledPolicy.ts#L6"
						}
					],
					"typeParameters": [
						{
							"id": 93,
							"name": "VP",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "VincentPolicy"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "VincentPolicy",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						},
						{
							"id": 94,
							"name": "IpfsCid",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 95,
							"name": "vincentPolicy",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 93,
								"name": "VP",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 96,
							"name": "ipfsCid",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 94,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"typeArguments": [
							{
								"type": "reference",
								"target": 93,
								"name": "VP",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 94,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "BundledVincentPolicy",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 85,
			"name": "asBundledVincentTool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "toolCore/bundledTool/bundledTool.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/bundledTool.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 86,
					"name": "asBundledVincentTool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "toolCore/bundledTool/bundledTool.ts",
							"line": 6,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/bundledTool/bundledTool.ts#L6"
						}
					],
					"typeParameters": [
						{
							"id": 87,
							"name": "VT",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": 195,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "VincentTool",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						},
						{
							"id": 88,
							"name": "IpfsCid",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 89,
							"name": "vincentTool",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 87,
								"name": "VT",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 90,
							"name": "ipfsCid",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 88,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 114,
						"typeArguments": [
							{
								"type": "reference",
								"target": 87,
								"name": "VT",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 88,
								"name": "IpfsCid",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "BundledVincentTool",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "createVincentPolicy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "policyCore/vincentPolicy.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "createVincentPolicy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wraps a raw VincentPolicyDef with internal logic and returns a fully typed\npolicy object, preserving inference for all lifecycle methods ("
							},
							{
								"kind": "code",
								"text": "`evaluate`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`precheck`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`commit`"
							},
							{
								"kind": "text",
								"text": ")\nand providing metadata such as "
							},
							{
								"kind": "code",
								"text": "`ipfsCid`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`packageName`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "policyCore/vincentPolicy.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L35"
						}
					],
					"typeParameters": [
						{
							"id": 3,
							"name": "PackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "PolicyToolParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 5,
							"name": "UserParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 6,
							"name": "PrecheckAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 7,
							"name": "PrecheckDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 8,
							"name": "EvalAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 9,
							"name": "EvalDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 10,
							"name": "CommitParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 11,
							"name": "CommitAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 12,
							"name": "CommitDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 13,
							"name": "policyDef",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
									"qualifiedName": "VincentPolicyDef"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3,
										"name": "PackageName",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 4,
										"name": "PolicyToolParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5,
										"name": "UserParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 6,
										"name": "PrecheckAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 7,
										"name": "PrecheckDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 8,
										"name": "EvalAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 9,
										"name": "EvalDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 10,
										"name": "CommitParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 11,
										"name": "CommitAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 12,
										"name": "CommitDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
											"qualifiedName": "PolicyDefLifecycleFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4,
												"name": "PolicyToolParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 5,
												"name": "UserParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 8,
												"name": "EvalAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 9,
												"name": "EvalDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyDefLifecycleFunction",
										"package": "@lit-protocol/vincent-tool-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
											"qualifiedName": "PolicyDefLifecycleFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4,
												"name": "PolicyToolParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 5,
												"name": "UserParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 6,
												"name": "PrecheckAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 7,
												"name": "PrecheckDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyDefLifecycleFunction",
										"package": "@lit-protocol/vincent-tool-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/policyCore/policyDef/types.ts",
											"qualifiedName": "PolicyDefCommitFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 10,
												"name": "CommitParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 11,
												"name": "CommitAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 12,
												"name": "CommitDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyDefCommitFunction",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								],
								"name": "VincentPolicyDef",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/types.ts",
							"qualifiedName": "VincentPolicy"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 3,
								"name": "PackageName",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 4,
								"name": "PolicyToolParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 5,
								"name": "UserParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 6,
								"name": "PrecheckAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 7,
								"name": "PrecheckDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 8,
								"name": "EvalAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9,
								"name": "EvalDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 10,
								"name": "CommitParams",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 11,
								"name": "CommitAllowResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 12,
								"name": "CommitDenyResult",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "PolicyLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4,
										"name": "PolicyToolParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5,
										"name": "UserParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 8,
										"name": "EvalAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 9,
										"name": "EvalDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "PolicyLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "PolicyLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4,
										"name": "PolicyToolParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5,
										"name": "UserParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 6,
										"name": "PrecheckAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 7,
										"name": "PrecheckDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "PolicyLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/types.ts",
									"qualifiedName": "CommitLifecycleFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10,
										"name": "CommitParams",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 11,
										"name": "CommitAllowResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 12,
										"name": "CommitDenyResult",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CommitLifecycleFunction",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						],
						"name": "VincentPolicy",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 49,
			"name": "createVincentTool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "toolCore/vincentTool.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/vincentTool.ts#L28"
				}
			],
			"signatures": [
				{
					"id": 50,
					"name": "createVincentTool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wraps a VincentToolDef object and returns a fully typed tool with\nstandard lifecycle entrypoints ("
							},
							{
								"kind": "code",
								"text": "`precheck`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`execute`"
							},
							{
								"kind": "text",
								"text": ") and strong inference\nbased on schemas and supported policies."
							}
						]
					},
					"sources": [
						{
							"fileName": "toolCore/vincentTool.ts",
							"line": 28,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/vincentTool.ts#L28"
						}
					],
					"typeParameters": [
						{
							"id": 51,
							"name": "ToolParamsSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 52,
							"name": "PkgNames",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 53,
							"name": "PolicyMap",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
									"qualifiedName": "ToolPolicyMap"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": 52,
										"name": "PkgNames",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ToolPolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						},
						{
							"id": 54,
							"name": "PolicyMapByPackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 55,
							"name": "PrecheckSuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 56,
							"name": "PrecheckFailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 57,
							"name": "ExecuteSuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 58,
							"name": "ExecuteFailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 59,
							"name": "toolDef",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
									"qualifiedName": "VincentToolDef"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 51,
										"name": "ToolParamsSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 52,
										"name": "PkgNames",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 53,
										"name": "PolicyMap",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 54,
										"name": "PolicyMapByPackageName",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55,
										"name": "PrecheckSuccessSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56,
										"name": "PrecheckFailSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57,
										"name": "ExecuteSuccessSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58,
										"name": "ExecuteFailSchema",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
											"qualifiedName": "ToolDefLifecycleFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 51,
												"name": "ToolParamsSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 156,
												"typeArguments": [
													{
														"type": "reference",
														"target": 54,
														"name": "PolicyMapByPackageName",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyEvaluationResultContext",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": 55,
												"name": "PrecheckSuccessSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 56,
												"name": "PrecheckFailSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ToolDefLifecycleFunction",
										"package": "@lit-protocol/vincent-tool-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/toolCore/toolDef/types.ts",
											"qualifiedName": "ToolDefLifecycleFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 51,
												"name": "ToolParamsSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "ToolExecutionPolicyContext"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 54,
														"name": "PolicyMapByPackageName",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ToolExecutionPolicyContext",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": 57,
												"name": "ExecuteSuccessSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 58,
												"name": "ExecuteFailSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ToolDefLifecycleFunction",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								],
								"name": "VincentToolDef",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 195,
						"typeArguments": [
							{
								"type": "reference",
								"target": 51,
								"name": "ToolParamsSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 52,
								"name": "PkgNames",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 53,
								"name": "PolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 54,
								"name": "PolicyMapByPackageName",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57,
								"name": "ExecuteSuccessSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58,
								"name": "ExecuteFailSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55,
								"name": "PrecheckSuccessSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56,
								"name": "PrecheckFailSchema",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "VincentTool",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 14,
			"name": "createVincentToolPolicy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "policyCore/vincentPolicy.ts",
					"line": 302,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L302"
				}
			],
			"signatures": [
				{
					"id": 15,
					"name": "createVincentToolPolicy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adapts a single policy to a specific tool by applying parameter mappings.\nThis allows the policy's schema-defined params to be inferred and automatically\nextracted from the tool's input params. Also attaches schema metadata for result typing."
							}
						]
					},
					"sources": [
						{
							"fileName": "policyCore/vincentPolicy.ts",
							"line": 302,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L302"
						}
					],
					"typeParameters": [
						{
							"id": 16,
							"name": "PackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17,
							"name": "IpfsCid",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "ToolParamsSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 19,
							"name": "PolicyToolParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 20,
							"name": "UserParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 21,
							"name": "PrecheckAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 22,
							"name": "PrecheckDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 23,
							"name": "EvalAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 24,
							"name": "EvalDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 25,
							"name": "CommitParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 26,
							"name": "CommitAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						},
						{
							"id": 27,
							"name": "CommitDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodUndefined"
								},
								"name": "ZodUndefined",
								"package": "zod"
							}
						}
					],
					"parameters": [
						{
							"id": 28,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 29,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31,
											"name": "bundledVincentPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 317,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L317"
												}
											],
											"type": {
												"type": "reference",
												"target": 107,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/lib/types.ts",
															"qualifiedName": "VincentPolicy"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 16,
																"name": "PackageName",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 19,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 20,
																"name": "UserParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 21,
																"name": "PrecheckAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 22,
																"name": "PrecheckDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 23,
																"name": "EvalAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 24,
																"name": "EvalDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 25,
																"name": "CommitParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 26,
																"name": "CommitAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 27,
																"name": "CommitDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 20,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 23,
																		"name": "EvalAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 24,
																		"name": "EvalDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 20,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 21,
																		"name": "PrecheckAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 22,
																		"name": "PrecheckDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "CommitLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 25,
																		"name": "CommitParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 26,
																		"name": "CommitAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 27,
																		"name": "CommitDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "CommitLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														],
														"name": "VincentPolicy",
														"package": "@lit-protocol/vincent-tool-sdk"
													},
													{
														"type": "reference",
														"target": 17,
														"name": "IpfsCid",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "BundledVincentPolicy",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 32,
											"name": "toolParameterMappings",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 340,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L340"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "mapped",
														"parameter": "K",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
																	"qualifiedName": "TypeOf"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TypeOf",
																"package": "zod"
															}
														}
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30,
											"name": "toolParamsSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 316,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L316"
												}
											],
											"type": {
												"type": "reference",
												"target": 18,
												"name": "ToolParamsSchema",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31,
												32,
												30
											]
										}
									],
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 315,
											"character": 10,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L315"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37,
									"name": "__schemaTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 373,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L373"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 48,
													"name": "commit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 384,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L384"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "CommitLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 25,
																		"name": "CommitParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 26,
																		"name": "CommitAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 27,
																		"name": "CommitDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "CommitLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														]
													}
												},
												{
													"id": 44,
													"name": "commitAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 379,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L379"
														}
													],
													"type": {
														"type": "reference",
														"target": 26,
														"name": "CommitAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 45,
													"name": "commitDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 380,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L380"
														}
													],
													"type": {
														"type": "reference",
														"target": 27,
														"name": "CommitDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 43,
													"name": "commitParamsSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 378,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L378"
														}
													],
													"type": {
														"type": "reference",
														"target": 25,
														"name": "CommitParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 39,
													"name": "evalAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 374,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L374"
														}
													],
													"type": {
														"type": "reference",
														"target": 23,
														"name": "EvalAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 40,
													"name": "evalDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 375,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L375"
														}
													],
													"type": {
														"type": "reference",
														"target": 24,
														"name": "EvalDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 46,
													"name": "evaluate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 382,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L382"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/lib/types.ts",
															"qualifiedName": "PolicyLifecycleFunction"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 19,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 20,
																"name": "UserParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 23,
																"name": "EvalAllowResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 24,
																"name": "EvalDenyResult",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "PolicyLifecycleFunction",
														"package": "@lit-protocol/vincent-tool-sdk"
													}
												},
												{
													"id": 47,
													"name": "precheck",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 383,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L383"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/types.ts",
																	"qualifiedName": "PolicyLifecycleFunction"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19,
																		"name": "PolicyToolParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 20,
																		"name": "UserParams",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 21,
																		"name": "PrecheckAllowResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 22,
																		"name": "PrecheckDenyResult",
																		"package": "@lit-protocol/vincent-tool-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PolicyLifecycleFunction",
																"package": "@lit-protocol/vincent-tool-sdk"
															}
														]
													}
												},
												{
													"id": 41,
													"name": "precheckAllowResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 376,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L376"
														}
													],
													"type": {
														"type": "reference",
														"target": 21,
														"name": "PrecheckAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 42,
													"name": "precheckDenyResultSchema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "policyCore/vincentPolicy.ts",
															"line": 377,
															"character": 6,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L377"
														}
													],
													"type": {
														"type": "reference",
														"target": 22,
														"name": "PrecheckDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														48,
														44,
														45,
														43,
														39,
														40,
														46,
														47,
														41,
														42
													]
												}
											],
											"sources": [
												{
													"fileName": "policyCore/vincentPolicy.ts",
													"line": 373,
													"character": 19,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L373"
												}
											]
										}
									}
								},
								{
									"id": 35,
									"name": "ipfsCid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 371,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L371"
										}
									],
									"type": {
										"type": "reference",
										"target": 17,
										"name": "IpfsCid",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 36,
									"name": "toolParameterMappings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 372,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L372"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
															"qualifiedName": "TypeOf"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 19,
																"name": "PolicyToolParams",
																"package": "@lit-protocol/vincent-tool-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "TypeOf",
														"package": "zod"
													}
												}
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 34,
									"name": "vincentPolicy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "policyCore/vincentPolicy.ts",
											"line": 370,
											"character": 4,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L370"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/lib/types.ts",
											"qualifiedName": "VincentPolicy"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16,
												"name": "PackageName",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 19,
												"name": "PolicyToolParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 20,
												"name": "UserParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 21,
												"name": "PrecheckAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 22,
												"name": "PrecheckDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 23,
												"name": "EvalAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 24,
												"name": "EvalDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 25,
												"name": "CommitParams",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 26,
												"name": "CommitAllowResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 27,
												"name": "CommitDenyResult",
												"package": "@lit-protocol/vincent-tool-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "PolicyLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 19,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 20,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 23,
														"name": "EvalAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 24,
														"name": "EvalDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "PolicyLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 19,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 20,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 21,
														"name": "PrecheckAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 22,
														"name": "PrecheckDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "PolicyLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "CommitLifecycleFunction"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 25,
														"name": "CommitParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 26,
														"name": "CommitAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 27,
														"name": "CommitDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CommitLifecycleFunction",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										],
										"name": "VincentPolicy",
										"package": "@lit-protocol/vincent-tool-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37,
										35,
										36,
										34
									]
								}
							],
							"sources": [
								{
									"fileName": "policyCore/vincentPolicy.ts",
									"line": 369,
									"character": 19,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/policyCore/vincentPolicy.ts#L369"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 97,
			"name": "supportedPoliciesForTool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 98,
					"name": "supportedPoliciesForTool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Safely builds a strongly typed policy map from an array of VincentToolPolicy entries.\nEnforces literal string "
							},
							{
								"kind": "code",
								"text": "`packageName`"
							},
							{
								"kind": "text",
								"text": " keys and exposes reverse lookup maps."
							}
						]
					},
					"sources": [
						{
							"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L18"
						}
					],
					"typeParameters": [
						{
							"id": 99,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 100,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 104,
													"name": "ipfsCid",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
															"line": 21,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L21"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 101,
													"name": "vincentPolicy",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
															"line": 20,
															"character": 4,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L20"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 102,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 103,
																	"name": "packageName",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
																			"line": 20,
																			"character": 21,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		103
																	]
																}
															],
															"sources": [
																{
																	"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
																	"line": 20,
																	"character": 19,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L20"
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														104,
														101
													]
												}
											],
											"sources": [
												{
													"fileName": "toolCore/helpers/supportedPoliciesForTool.ts",
													"line": 19,
													"character": 34,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts#L19"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 105,
							"name": "PkgNames",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "packageName"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "vincentPolicy"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "intrinsic",
											"name": "number"
										},
										"objectType": {
											"type": "reference",
											"target": 99,
											"name": "Policies",
											"package": "@lit-protocol/vincent-tool-sdk",
											"refersToTypeParameter": true
										}
									}
								}
							}
						}
					],
					"parameters": [
						{
							"id": 106,
							"name": "policies",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 99,
								"name": "Policies",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
							"qualifiedName": "ToolPolicyMap"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 99,
								"name": "Policies",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 105,
								"name": "PkgNames",
								"package": "@lit-protocol/vincent-tool-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ToolPolicyMap",
						"package": "@lit-protocol/vincent-tool-sdk"
					}
				}
			]
		},
		{
			"id": 60,
			"name": "vincentPolicyHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "handlers/vincentPolicyHandler.ts",
					"line": 32,
					"character": 22,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 61,
					"name": "vincentPolicyHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "handlers/vincentPolicyHandler.ts",
							"line": 32,
							"character": 22,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L32"
						}
					],
					"typeParameters": [
						{
							"id": 62,
							"name": "PackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 63,
							"name": "PolicyToolParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 64,
							"name": "UserParams",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "ZodTypeDef"
												},
												"name": "ZodTypeDef",
												"package": "zod"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ZodType",
										"package": "zod"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 65,
							"name": "EvalAllowResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "ZodTypeDef"
												},
												"name": "ZodTypeDef",
												"package": "zod"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ZodType",
										"package": "zod"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 66,
							"name": "EvalDenyResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "ZodTypeDef"
												},
												"name": "ZodTypeDef",
												"package": "zod"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ZodType",
										"package": "zod"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 67,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 68,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 71,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentPolicyHandler.ts",
													"line": 56,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L56"
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "PolicyConsumerContext",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 70,
											"name": "toolParams",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentPolicyHandler.ts",
													"line": 55,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 69,
											"name": "vincentPolicy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentPolicyHandler.ts",
													"line": 43,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L43"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/types.ts",
													"qualifiedName": "VincentPolicy"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 62,
														"name": "PackageName",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 63,
														"name": "PolicyToolParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 64,
														"name": "UserParams",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": 65,
														"name": "EvalAllowResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 66,
														"name": "EvalDenyResult",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "VincentPolicy",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												71,
												70,
												69
											]
										}
									],
									"sources": [
										{
											"fileName": "handlers/vincentPolicyHandler.ts",
											"line": 42,
											"character": 3,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentPolicyHandler.ts#L42"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 72,
			"name": "vincentToolHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "handlers/vincentToolHandler.ts",
					"line": 104,
					"character": 13,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L104"
				}
			],
			"signatures": [
				{
					"id": 73,
					"name": "vincentToolHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "handlers/vincentToolHandler.ts",
							"line": 104,
							"character": 34,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L104"
						}
					],
					"typeParameters": [
						{
							"id": 74,
							"name": "ToolParamsSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
									"qualifiedName": "ZodType"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodTypeDef"
										},
										"name": "ZodTypeDef",
										"package": "zod"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ZodType",
								"package": "zod"
							}
						},
						{
							"id": 75,
							"name": "PkgNames",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 76,
							"name": "PolicyMap",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
									"qualifiedName": "ToolPolicyMap"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": 75,
										"name": "PkgNames",
										"package": "@lit-protocol/vincent-tool-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ToolPolicyMap",
								"package": "@lit-protocol/vincent-tool-sdk"
							}
						},
						{
							"id": 77,
							"name": "PoliciesByPackageName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 78,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 79,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 81,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentToolHandler.ts",
													"line": 124,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L124"
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "ToolConsumerContext",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										},
										{
											"id": 82,
											"name": "toolParams",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentToolHandler.ts",
													"line": 125,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L125"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 80,
											"name": "vincentTool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "handlers/vincentToolHandler.ts",
													"line": 114,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L114"
												}
											],
											"type": {
												"type": "reference",
												"target": 195,
												"typeArguments": [
													{
														"type": "reference",
														"target": 74,
														"name": "ToolParamsSchema",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 75,
														"name": "PkgNames",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 76,
														"name": "PolicyMap",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 77,
														"name": "PoliciesByPackageName",
														"package": "@lit-protocol/vincent-tool-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "VincentTool",
												"package": "@lit-protocol/vincent-tool-sdk"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												81,
												82,
												80
											]
										}
									],
									"sources": [
										{
											"fileName": "handlers/vincentToolHandler.ts",
											"line": 113,
											"character": 3,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L113"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 83,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "handlers/vincentToolHandler.ts",
									"line": 127,
									"character": 9,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L127"
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "handlers/vincentToolHandler.ts",
											"line": 127,
											"character": 9,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/8e21b5da26217bce6eb8963c7b9c9ea95c6a2290/packages/libs/tool-sdk/src/lib/handlers/vincentToolHandler.ts#L127"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				223
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				107,
				114,
				156,
				195,
				121
			]
		},
		{
			"title": "Functions",
			"children": [
				91,
				85,
				1,
				49,
				14,
				97,
				60,
				72
			]
		}
	],
	"packageName": "@lit-protocol/vincent-tool-sdk",
	"packageVersion": "1.0.0",
	"readme": [
		{
			"kind": "text",
			"text": "# tool-sdk\n\nThis library was generated with [Nx](https://nx.dev).\n\n## Building\n\nRun "
		},
		{
			"kind": "code",
			"text": "`nx build tool-sdk`"
		},
		{
			"kind": "text",
			"text": " to build the library.\n\n## Usage\n\n# Vincent Policy & Tool SDK\n\nThis library provides a type-safe lifecycle system for defining and composing **policies** and **tools**, with strong TypeScript inference support throughout.\n\n## 🧩 Core Concepts\n\n- **Policies** encapsulate decision logic (precheck, evaluate, commit) and define their input/output schemas.\n- **Tools** orchestrate multiple policies and expose "
		},
		{
			"kind": "code",
			"text": "`precheck`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`execute`"
		},
		{
			"kind": "text",
			"text": " lifecycle methods.\n- **Context injection** provides "
		},
		{
			"kind": "code",
			"text": "`allow()`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`deny()`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`succeed()`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`fail()`"
		},
		{
			"kind": "text",
			"text": " methods, with schema-safe return typing.\n- All inference is preserved automatically using "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`createVincentToolPolicy`"
		},
		{
			"kind": "text",
			"text": ", and "
		},
		{
			"kind": "code",
			"text": "`createVincentTool`"
		},
		{
			"kind": "text",
			"text": ".\n\n---\n\n### 🔁 Calling "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " on a Policy from within a Tool\n\nPolicies can define a "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " lifecycle method to finalize changes once a tool executes successfully. These "
		},
		{
			"kind": "code",
			"text": "`commit()`"
		},
		{
			"kind": "text",
			"text": " functions are injected automatically into the "
		},
		{
			"kind": "code",
			"text": "`allowedPolicies`"
		},
		{
			"kind": "text",
			"text": " object of the "
		},
		{
			"kind": "code",
			"text": "`ToolContext`"
		},
		{
			"kind": "text",
			"text": ".\n\n### Example Policy (max daily spend)\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { z } from 'zod';\nimport { createVincentPolicy } from '@lit-protocol/vincent-tool-sdk';\n\nimport { getAmountSpentToday, adjustDailySpendAmount } from '@my-org/spending-limit-client';\n\nexport const dailySpendPolicy = createVincentPolicy({\n  ipfsCid: 'policy-committable',\n  packageName: '@lit-protocol/max-spend-policy',\n\n  toolParamsSchema: z.object({\n    buySomething: z.boolean(),\n    buyAmount: z.number(),\n  }),\n  userParamsSchema: z.object({\n    perBuyLimit: z.number(),\n    maxAmountPerDay: z.number(),\n  }),\n\n  evalAllowResultSchema: z.object({\n    ok: z.boolean(),\n    amountRemaining: z.number(),\n    amountToSpend: z.number(),\n  }),\n  evalDenyResultSchema: z.union([\n    z.object({\n      reason: z.literal('Buy amount request exceeds per-buy limit'),\n      buyAmount: z.number(),\n    }),\n    z.object({\n      reason: z.enum(['Buy amount request exceeds max amount per day']),\n      buyAmount: z.number(),\n      amountSpentToday: z.number(),\n      amountRemaining: z.number(),\n    }),\n  ]),\n\n  commitParamsSchema: z.object({ amountSpent: z.number() }),\n  commitAllowResultSchema: z.object({\n    transactionId: z.string(),\n    timestamp: z.number(),\n  }),\n  commitDenyResultSchema: z.object({\n    errorCode: z.number().optional(),\n    message: z.string(),\n  }),\n\n  evaluate: async ({ toolParams, userParams }, context) => {\n    const { maxAmountPerDay, perBuyLimit } = userParams;\n    const { buyAmount } = toolParams;\n\n    if (buyAmount > perBuyLimit) {\n      return context.deny({\n        reason: 'Buy amount request exceeds per-buy limit',\n        buyAmount,\n      });\n    }\n\n    const amountSpentToday = await getAmountSpentToday(context.delegation.delegator);\n    const amountRemaining = maxAmountPerDay - amountSpentToday;\n\n    if (buyAmount > amountRemaining) {\n      return context.deny({\n        reason: 'Buy amount request exceeds max amount per day',\n        amountSpentToday,\n        buyAmount,\n        amountRemaining,\n      });\n    }\n\n    return context.allow({\n      ok: true,\n      amountRemaining,\n      amountToSpend: buyAmount,\n    });\n  },\n\n  commit: async ({ amountSpent }, context) => {\n    try {\n      const spendCommitResult: { transactionId: string; timestamp: number } =\n        await adjustDailySpendAmount(context.delegation.delegator, amountSpent);\n\n      return context.allow(spendCommitResult);\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        if ('errorCode' in e) {\n          return context.deny({\n            errorCode: e.errorCode as number,\n            message: e.message,\n          });\n        } else {\n          return context.deny({ message: e.message });\n        }\n      }\n\n      return context.deny({ message: String(e) });\n    }\n  },\n});\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n### Example Tool - Uniswap\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { z } from 'zod';\n\nimport { createVincentToolPolicy, createVincentTool } from '@lit-protocol/vincent-tool-sdk';\n\nimport { dailySpendPolicy } from '@lit-protocol/max-spend-policy';\n\nimport uniswapV3Client from '@uniswap/v3-sdk';\n\nconst toolParamsSchema = z.object({\n  buy: z.boolean(),\n  buyAmount: z.number(),\n});\n\nexport const myTokenSwapTool = createVincentTool({\n  toolParamsSchema,\n\n  supportedPolicies: [\n    createVincentToolPolicy({\n      toolParamsSchema,\n      policyDef: dailySpendPolicy,\n      toolParameterMappings: { buy: 'buyAmount' },\n    }),\n  ],\n  executeSuccessSchema: z.object({\n    message: z.string(),\n    amountSpent: z.number().optional(),\n    spendCommitResult: z\n      .object({\n        transactionId: z.string(),\n        timestamp: z.number(),\n      })\n      .optional(),\n  }),\n\n  executeFailSchema: z.object({ error: z.string(), message: z.string() }),\n\n  async execute(toolParams, { succeed, fail, policiesContext }) {\n    const spendPolicyContext = policiesContext.allowedPolicies['@lit-protocol/max-spend-policy'];\n\n    const amountSpent: number = await uniswapV3Client.performSwap({});\n\n    if (spendPolicyContext) {\n      const spendCommitResult = await spendPolicyContext.commit({\n        amountSpent,\n      });\n\n      if (!spendCommitResult.allow) {\n        return fail({\n          error: `Policy commit denied with code ${spendCommitResult.result.errorCode}`,\n          message: 'Tool executed but policy commit denied',\n        });\n      }\n\n      if (spendCommitResult.allow) {\n        return succeed({\n          amountSpent,\n          spendCommitResult: spendCommitResult.result,\n          message: 'Tool executed and spending limit policy commit completed',\n        });\n      }\n    }\n\n    return succeed({\n      message: 'Tool executed for user without enabled spending limit',\n    });\n  },\n});\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n## 👨‍💻 Consumer Usage (with Inference!)\n\n### Note: These are low-level interfaces that are not typically used by app, tool or policy developers directly. Consumers at this level are our LIT action wrappers and the LitToolClient -- see @lit-protocol/vincent-app-sdk for the LitToolClient.\n\nTool and policy authors export their tool and policies like this:\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nexport const myTool = createVincentTool(...);\nexport const limitPolicy = createVincentPolicy(...);\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThen, consumers can use:\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport { myTool } from 'awesome-tool-package';\n\nconst typedTool = createVincentTool(myTool.__vincentToolDef);\n\ntypedTool.execute(\n  { amount: 50, action: 'transfer' },\n  {\n    delegation: { delegatee: 'a', delegator: 'b' },\n    policiesContext: {\n      evaluatedPolicies: ['limit-check', 'type-check'],\n      allowedPolicies: {\n        'limit-check': { result: { approved: true } },\n        'type-check': { result: { allowed: true } },\n      },\n    },\n  },\n); // ✅ fully typed and schema validated\n```"
		},
		{
			"kind": "text",
			"text": "\n\n---\n\n## 🔧 Summary of Create Functions\n\n| Function                                           | Purpose                                                                           |\n| -------------------------------------------------- | --------------------------------------------------------------------------------- |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy(def)`"
		},
		{
			"kind": "text",
			"text": "                         | Defines a reusable, type-safe policy with lifecycle methods                       |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentToolPolicy({ policyDef, mappings })`"
		},
		{
			"kind": "text",
			"text": " | Adapts a policy to a tool’s parameter schema                                      |\n| "
		},
		{
			"kind": "code",
			"text": "`createVincentTool(def)`"
		},
		{
			"kind": "text",
			"text": "                           | Composes policies and schemas into a type-safe tool with "
		},
		{
			"kind": "code",
			"text": "`execute`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`precheck`"
		},
		{
			"kind": "text",
			"text": " |\n\n---\n\n## 🧠 Tip\n\nTool and policy authors should export the result of "
		},
		{
			"kind": "code",
			"text": "`createVincentPolicy`"
		},
		{
			"kind": "text",
			"text": " / "
		},
		{
			"kind": "code",
			"text": "`createVincentTool()`"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentPolicy"
		},
		"2": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentPolicy"
		},
		"3": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PackageName"
		},
		"4": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PolicyToolParams"
		},
		"5": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "UserParams"
		},
		"6": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckAllowResult"
		},
		"7": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckDenyResult"
		},
		"8": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalAllowResult"
		},
		"9": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalDenyResult"
		},
		"10": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitParams"
		},
		"11": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitAllowResult"
		},
		"12": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitDenyResult"
		},
		"13": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "policyDef"
		},
		"14": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentToolPolicy"
		},
		"15": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "createVincentToolPolicy"
		},
		"16": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PackageName"
		},
		"17": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "IpfsCid"
		},
		"18": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"19": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PolicyToolParams"
		},
		"20": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "UserParams"
		},
		"21": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckAllowResult"
		},
		"22": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "PrecheckDenyResult"
		},
		"23": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalAllowResult"
		},
		"24": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "EvalDenyResult"
		},
		"25": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitParams"
		},
		"26": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitAllowResult"
		},
		"27": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "CommitDenyResult"
		},
		"28": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "config"
		},
		"29": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParamsSchema"
		},
		"31": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.bundledVincentPolicy"
		},
		"32": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParameterMappings"
		},
		"33": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"35": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"36": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.toolParameterMappings"
		},
		"37": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.__schemaTypes"
		},
		"38": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evalAllowResultSchema"
		},
		"40": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evalDenyResultSchema"
		},
		"41": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheckAllowResultSchema"
		},
		"42": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheckDenyResultSchema"
		},
		"43": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitParamsSchema"
		},
		"44": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitAllowResultSchema"
		},
		"45": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commitDenyResultSchema"
		},
		"46": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.evaluate"
		},
		"47": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.precheck"
		},
		"48": {
			"sourceFileName": "src/lib/policyCore/vincentPolicy.ts",
			"qualifiedName": "__type.commit"
		},
		"49": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "createVincentTool"
		},
		"50": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "createVincentTool"
		},
		"51": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"52": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PkgNames"
		},
		"53": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PolicyMap"
		},
		"54": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PolicyMapByPackageName"
		},
		"55": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PrecheckSuccessSchema"
		},
		"56": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "PrecheckFailSchema"
		},
		"57": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ExecuteSuccessSchema"
		},
		"58": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "ExecuteFailSchema"
		},
		"59": {
			"sourceFileName": "src/lib/toolCore/vincentTool.ts",
			"qualifiedName": "toolDef"
		},
		"60": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "vincentPolicyHandler"
		},
		"61": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "vincentPolicyHandler"
		},
		"62": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "PackageName"
		},
		"63": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "PolicyToolParams"
		},
		"64": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "UserParams"
		},
		"65": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "EvalAllowResult"
		},
		"66": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "EvalDenyResult"
		},
		"67": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "__0"
		},
		"68": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "__type"
		},
		"69": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"70": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "__type.toolParams"
		},
		"71": {
			"sourceFileName": "src/lib/handlers/vincentPolicyHandler.ts",
			"qualifiedName": "__type.context"
		},
		"72": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "vincentToolHandler"
		},
		"73": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "vincentToolHandler"
		},
		"74": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"75": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "PkgNames"
		},
		"76": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "PolicyMap"
		},
		"77": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "PoliciesByPackageName"
		},
		"78": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__0"
		},
		"79": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__type"
		},
		"80": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__type.vincentTool"
		},
		"81": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__type.context"
		},
		"82": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__type.toolParams"
		},
		"83": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__function"
		},
		"84": {
			"sourceFileName": "src/lib/handlers/vincentToolHandler.ts",
			"qualifiedName": "__function"
		},
		"85": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "asBundledVincentTool"
		},
		"86": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "asBundledVincentTool"
		},
		"87": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "VT"
		},
		"88": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "IpfsCid"
		},
		"89": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "vincentTool"
		},
		"90": {
			"sourceFileName": "src/lib/toolCore/bundledTool/bundledTool.ts",
			"qualifiedName": "ipfsCid"
		},
		"91": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "asBundledVincentPolicy"
		},
		"92": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "asBundledVincentPolicy"
		},
		"93": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "VP"
		},
		"94": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "IpfsCid"
		},
		"95": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "vincentPolicy"
		},
		"96": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/bundledPolicy.ts",
			"qualifiedName": "ipfsCid"
		},
		"97": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "supportedPoliciesForTool"
		},
		"98": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "supportedPoliciesForTool"
		},
		"99": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "Policies"
		},
		"100": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type"
		},
		"101": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"102": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type"
		},
		"103": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type.packageName"
		},
		"104": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"105": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "PkgNames"
		},
		"106": {
			"sourceFileName": "src/lib/toolCore/helpers/supportedPoliciesForTool.ts",
			"qualifiedName": "policies"
		},
		"107": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "BundledVincentPolicy"
		},
		"108": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"110": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"112": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "VP"
		},
		"113": {
			"sourceFileName": "src/lib/policyCore/bundledPolicy/types.ts",
			"qualifiedName": "IpfsCid"
		},
		"114": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "BundledVincentTool"
		},
		"115": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "__type"
		},
		"116": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"117": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "__type.vincentTool"
		},
		"119": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "VT"
		},
		"120": {
			"sourceFileName": "src/lib/toolCore/bundledTool/types.ts",
			"qualifiedName": "IpfsCid"
		},
		"121": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "VincentToolPolicy"
		},
		"122": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.ipfsCid"
		},
		"124": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"125": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.packageName"
		},
		"127": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.toolParameterMappings"
		},
		"140": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"141": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "VP"
		},
		"142": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PackageName"
		},
		"143": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "IpfsCid"
		},
		"156": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PolicyEvaluationResultContext"
		},
		"157": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.evaluatedPolicies"
		},
		"159": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.allow"
		},
		"161": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.allowedPolicies"
		},
		"162": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"163": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.result"
		},
		"164": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"165": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.evalAllowResultSchema"
		},
		"166": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.deniedPolicy"
		},
		"167": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.allow"
		},
		"169": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.deniedPolicy"
		},
		"170": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.packageName"
		},
		"172": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.result"
		},
		"173": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.error"
		},
		"175": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"176": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.evalDenyResultSchema"
		},
		"177": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.allowedPolicies"
		},
		"178": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"179": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.result"
		},
		"180": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"181": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.evalAllowResultSchema"
		},
		"182": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "Policies"
		},
		"183": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"184": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.vincentPolicy"
		},
		"195": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "VincentTool"
		},
		"196": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.packageName"
		},
		"198": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.precheck"
		},
		"199": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.execute"
		},
		"200": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.toolParamsSchema"
		},
		"201": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.supportedPolicies"
		},
		"208": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "ToolParamsSchema"
		},
		"209": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PkgNames"
		},
		"210": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PolicyMap"
		},
		"211": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PoliciesByPackageName"
		},
		"212": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "ExecuteSuccessSchema"
		},
		"213": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "ExecuteFailSchema"
		},
		"214": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PrecheckSuccessSchema"
		},
		"215": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PrecheckFailSchema"
		},
		"216": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "ExecuteFn"
		},
		"217": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "PrecheckFn"
		},
		"223": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext"
		},
		"224": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext.policiesContext"
		},
		"225": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.toolIpfsCid"
		},
		"226": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appId"
		},
		"227": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.appVersion"
		},
		"228": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "BaseContext.delegation"
		},
		"229": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegateeAddress"
		},
		"231": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.delegatorPkpInfo"
		},
		"232": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"234": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.ethAddress"
		},
		"235": {
			"sourceFileName": "src/lib/types.ts",
			"qualifiedName": "__type.publicKey"
		},
		"236": {
			"sourceFileName": "src/lib/toolCore/toolDef/context/types.ts",
			"qualifiedName": "BaseToolContext.Policies"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
