// src/bundler/templateHandlerTool.ts

import path from 'path';

export function getToolHandlerTemplate({
  outputFilePath,
  sourceToolFilePath,
  sourceSchemasFilePath,
}: {
  outputFilePath: string;
  sourceToolFilePath: string;
  sourceSchemasFilePath: string;
}): () => string {
  const relativeToolPath = path.resolve(path.dirname(outputFilePath), sourceToolFilePath);
  const relativeSchemasPath = path.resolve(path.dirname(outputFilePath), sourceSchemasFilePath);

  return () => `/**
 * DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
 */
import { vincentToolHandler } from '@lit-protocol/vincent-tool-sdk';

import { vincentTool } from '${relativeToolPath}';
import { toolParamsSchema } from '${relativeSchemasPath}';

declare const toolParams: typeof toolParamsSchema;
declare const context: {
  delegatorPkpEthAddress: string;
};

(async () => {
  return await vincentToolHandler({
    vincentTool: vincentTool,
    context: {
      delegatorPkpEthAddress: context.delegatorPkpEthAddress,
    },
    toolParams,
  });
})();
`;
}
