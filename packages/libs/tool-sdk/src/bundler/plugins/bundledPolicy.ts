// src/bundler/plugins/bundledPolicy.ts

import { Plugin } from 'rollup';
import path from 'path';
import fs from 'fs';

export function bundledPolicy({
  outputDir,
  sourcePolicyFilePath,
  pkgName,
}: {
  outputDir: string;
  sourcePolicyFilePath: string;
  pkgName: string;
}): Plugin {
  const relativePolicyPath = path.resolve(outputDir, sourcePolicyFilePath);

  return {
    name: 'bundled-policy-generator',
    async generateBundle() {
      this.info({ message: 'Bundling policy...' });

      const bundledPath = path.join(outputDir, `bundled-vincent-policy.ts`);
      const code = `/**
 * DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
 */
import { asBundledVincentPolicy } from '@lit-protocol/vincent-tool-sdk';
import { vincentPolicy } from '${relativePolicyPath}';
import metadata from './vincent-policy-metadata.json';

if (!metadata.ipfsCid) throw new Error('ipfsCid is not defined');

export const bundledVincentPolicy = asBundledVincentPolicy(vincentPolicy, {
  ipfsCid: metadata.ipfsCid,
  packageName: "${pkgName}" as const,
});
`;
      fs.writeFileSync(bundledPath, code);
    },
  };
}
