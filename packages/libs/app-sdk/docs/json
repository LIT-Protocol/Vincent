{
	"id": 0,
	"name": "vincent-app-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "abilityClient",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The VincentAbilityClient is used to handle all interactions with VincentAbilities -- both local execution of its precheck()\nmethod and the execution of its "
					},
					{
						"kind": "code",
						"text": "`execute()`"
					},
					{
						"kind": "text",
						"text": " method via the LIT Action runtime.  The VincentAbilityClient also handles calling policy\nprecheck methods when they are defined, and returns all policy precheck results along with the ability precheck result."
					}
				]
			},
			"children": [
				{
					"id": 52,
					"name": "AbilityClientContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 53,
							"name": "delegatorPkpEthAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/types.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L73"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								53
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/types.ts",
							"line": 72,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L72"
						}
					]
				},
				{
					"id": 85,
					"name": "AbilityExecuteResponseFailure",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 90,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 92,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseFailure.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 89,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 91,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityExecuteResponseFailure.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 87,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 88,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 86,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L27"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								90,
								89,
								87,
								88,
								86
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/execute/types.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L26"
						}
					],
					"typeParameters": [
						{
							"id": 91,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 92,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 78,
					"name": "AbilityExecuteResponseFailureNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 83,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 84,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseFailureNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 82,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 80,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 81,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 79,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L36"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								83,
								82,
								80,
								81,
								79
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/execute/types.ts",
							"line": 35,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L35"
						}
					],
					"typeParameters": [
						{
							"id": 84,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "AbilityExecuteResponseSuccess",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 101,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 103,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseSuccess.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 100,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 102,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityExecuteResponseSuccess.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 99,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								101,
								100,
								99
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/execute/types.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L12"
						}
					],
					"typeParameters": [
						{
							"id": 102,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 103,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "AbilityExecuteResponseSuccessNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 96,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 97,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseSuccessNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 95,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 94,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/execute/types.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								96,
								95,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/execute/types.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L19"
						}
					],
					"typeParameters": [
						{
							"id": 97,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "AbilityPrecheckResponseFailure",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 120,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 122,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseFailure.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 119,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 121,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityPrecheckResponseFailure.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 117,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 118,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 116,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L26"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								120,
								119,
								117,
								118,
								116
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
							"line": 25,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L25"
						}
					],
					"typeParameters": [
						{
							"id": 121,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 122,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 108,
					"name": "AbilityPrecheckResponseFailureNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 113,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L39"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 114,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseFailureNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 112,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 110,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 109,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L35"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								113,
								112,
								110,
								111,
								109
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
							"line": 34,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L34"
						}
					],
					"typeParameters": [
						{
							"id": 114,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "AbilityPrecheckResponseSuccess",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 131,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 133,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseSuccess.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 130,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L13"
								}
							],
							"type": {
								"type": "reference",
								"target": 132,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityPrecheckResponseSuccess.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 129,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								131,
								130,
								129
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L11"
						}
					],
					"typeParameters": [
						{
							"id": 132,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 133,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "AbilityPrecheckResponseSuccessNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 126,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L21"
								}
							],
							"type": {
								"type": "reference",
								"target": 54,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 127,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 125,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 124,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								126,
								125,
								124
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L18"
						}
					],
					"typeParameters": [
						{
							"id": 127,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 54,
					"name": "BaseAbilityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "BaseAbilityContext is returned with ability execution results, and contains information about the app, delegation, and\npolicy evaluation results for any policies that the user had enabled for the ability."
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 56,
							"name": "abilityIpfsCid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "ability-sdk/dist/src/lib/types.d.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.abilityIpfsCid"
							}
						},
						{
							"id": 57,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "ability-sdk/dist/src/lib/types.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.appId"
							}
						},
						{
							"id": 58,
							"name": "appVersion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "ability-sdk/dist/src/lib/types.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.appVersion"
							}
						},
						{
							"id": 59,
							"name": "delegation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "ability-sdk/dist/src/lib/types.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 61,
											"name": "delegateeAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "ability-sdk/dist/src/lib/types.d.ts",
													"line": 252,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 62,
											"name": "delegatorPkpInfo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "ability-sdk/dist/src/lib/types.d.ts",
													"line": 253,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 63,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 65,
															"name": "ethAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ability-sdk/dist/src/lib/types.d.ts",
																	"line": 255,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 66,
															"name": "publicKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ability-sdk/dist/src/lib/types.d.ts",
																	"line": 256,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 64,
															"name": "tokenId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ability-sdk/dist/src/lib/types.d.ts",
																	"line": 254,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																65,
																66,
																64
															]
														}
													],
													"sources": [
														{
															"fileName": "ability-sdk/dist/src/lib/types.d.ts",
															"line": 253,
															"character": 26
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												61,
												62
											]
										}
									],
									"sources": [
										{
											"fileName": "ability-sdk/dist/src/lib/types.d.ts",
											"line": 251,
											"character": 16
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.delegation"
							}
						},
						{
							"id": 55,
							"name": "policiesContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "ability-sdk/dist/src/lib/abilityCore/abilityConfig/context/types.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 67,
								"name": "Policies",
								"package": "@lit-protocol/vincent-ability-sdk",
								"qualifiedName": "BaseAbilityContext.Policies",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56,
								57,
								58,
								59,
								55
							]
						}
					],
					"sources": [
						{
							"fileName": "ability-sdk/dist/src/lib/abilityCore/abilityConfig/context/types.d.ts",
							"line": 8,
							"character": 17
						}
					],
					"typeParameters": [
						{
							"id": 67,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../ability-sdk/src/lib/types.ts",
								"qualifiedName": "BaseContext"
							},
							"name": "BaseContext",
							"package": "@lit-protocol/vincent-ability-sdk"
						}
					]
				},
				{
					"id": 35,
					"name": "VincentAbilityClient",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Vincent Ability Client is used to interact with Vincent abilities.\n\n- Precheck ability parameters and policies\n- Execute abilities remotely"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 42,
							"name": "execute",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/types.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L63"
								}
							],
							"signatures": [
								{
									"id": 43,
									"name": "execute",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Executes the ability with the given parameters.\n\nThis method validates the ability parameters, executes the ability remotely, and returns the result."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves to a AbilityResponse containing the execution result"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "app-sdk/src/abilityClient/types.ts",
											"line": 63,
											"character": 2,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L63"
										}
									],
									"parameters": [
										{
											"id": 44,
											"name": "rawAbilityParams",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parameters to be passed to the ability"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "AbilityParamsSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.AbilityParamsSchema",
														"refersToTypeParameter": true
													}
												],
												"name": "TypeOf",
												"package": "zod"
											}
										},
										{
											"id": 45,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The context for the ability execution, including the delegator PKP Ethereum address"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 52,
												"name": "AbilityClientContext",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 74,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "ExecuteSuccessSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.ExecuteSuccessSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "ExecuteFailSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.ExecuteFailSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PoliciesByPackageName",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PoliciesByPackageName",
														"refersToTypeParameter": true
													}
												],
												"name": "AbilityExecuteResponse",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36,
							"name": "precheck",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/types.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L44"
								}
							],
							"signatures": [
								{
									"id": 37,
									"name": "precheck",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Performs a precheck of the ability parameters and policies.\n\nThis method validates the ability parameters and checks if the policies allow the ability to be executed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves to a AbilityResponse containing the precheck result"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "app-sdk/src/abilityClient/types.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L44"
										}
									],
									"parameters": [
										{
											"id": 38,
											"name": "rawAbilityParams",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parameters to be passed to the ability"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "AbilityParamsSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.AbilityParamsSchema",
														"refersToTypeParameter": true
													}
												],
												"name": "TypeOf",
												"package": "zod"
											}
										},
										{
											"id": 39,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The context for the ability execution, including the delegator PKP Ethereum address"
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 52,
														"name": "AbilityClientContext",
														"package": "@lit-protocol/vincent-app-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 41,
																	"name": "rpcUrl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/abilityClient/types.ts",
																			"line": 47,
																			"character": 6,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L47"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		41
																	]
																}
															],
															"sources": [
																{
																	"fileName": "app-sdk/src/abilityClient/types.ts",
																	"line": 46,
																	"character": 36,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L46"
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 104,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "PrecheckSuccessSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PrecheckSuccessSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PrecheckFailSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PrecheckFailSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PoliciesByPackageName",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PoliciesByPackageName",
														"refersToTypeParameter": true
													}
												],
												"name": "AbilityPrecheckResponse",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								42,
								36
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/types.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/types.ts#L27"
						}
					]
				},
				{
					"id": 74,
					"name": "AbilityExecuteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/execute/types.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 75,
							"name": "SuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 76,
							"name": "FailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 77,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 75,
									"name": "SuccessSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 98,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 75,
													"name": "SuccessSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 77,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseSuccess",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 93,
									"typeArguments": [
										{
											"type": "reference",
											"target": 77,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseSuccessNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 76,
									"name": "FailSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 85,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 76,
													"name": "FailSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 77,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseFailure",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 78,
									"typeArguments": [
										{
											"type": "reference",
											"target": 77,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						]
					}
				},
				{
					"id": 104,
					"name": "AbilityPrecheckResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/precheck/types.ts",
							"line": 43,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L43"
						}
					],
					"typeParameters": [
						{
							"id": 105,
							"name": "SuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 106,
							"name": "FailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 107,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 105,
									"name": "SuccessSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 128,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 105,
													"name": "SuccessSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 107,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseSuccess",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 123,
									"typeArguments": [
										{
											"type": "reference",
											"target": 107,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseSuccessNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 106,
									"name": "FailSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 115,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 106,
													"name": "FailSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 107,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseFailure",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 108,
									"typeArguments": [
										{
											"type": "reference",
											"target": 107,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						]
					}
				},
				{
					"id": 2,
					"name": "disconnectVincentAbilityClients",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method closes any registered event listeners maintained by Vincent Ability Clients, allowing your process to exit gracefully."
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/index.ts",
							"line": 22,
							"character": 6,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/index.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "disconnectVincentAbilityClients",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/index.ts",
									"line": 22,
									"character": 6,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/index.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 20,
					"name": "getVincentAbilityClient",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/vincentAbilityClient.ts",
							"line": 114,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "getVincentAbilityClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A VincentAbilityClient provides a type-safe interface for executing abilities, for both "
									},
									{
										"kind": "code",
										"text": "`precheck()`"
									},
									{
										"kind": "text",
										"text": "\nand "
									},
									{
										"kind": "code",
										"text": "`execute()`"
									},
									{
										"kind": "text",
										"text": " functionality.\n\n"
									},
									{
										"kind": "code",
										"text": "```typescript\nimport { disconnectVincentAbilityClients, getVincentAbilityClient, isAbilityResponseFailure } from '@lit-protocol/vincent-app-sdk/abilityClient';\nimport { bundledVincentAbility as uniswapBundledAbility } from '@lit-protocol/vincent-ability-uniswap-swap';\nimport { delegateeEthersSigner } = from './ethersSigner';\nimport { ETH_RPC_URL, BASE_RPC_URL } from './rpcConfigs';\n\nconst uniswapAbilityClient = getVincentAbilityClient({\n    bundledVincentAbility: uniswapBundledAbility,\n    ethersSigner: delegateeEthersSigner,\n  });\n\n// First, call `precheck()` to get a best-estimate result indicating that the ability execution in the LIT action runtime will not fail\nconst precheckResult = await uniswapSwapAbilityClient.precheck({\n    ethRpcUrl: ETH_RPC_URL,\n    rpcUrlForUniswap: BASE_RPC_URL,\n    chainIdForUniswap: 8453, // Base\n    tokenInAddress: '0x4200000000000000000000000000000000000006', // WETH\n    tokenInDecimals: 18,\n    tokenInAmount: 0.0000077,\n    tokenOutAddress: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', // USDC on Base\n    tokenOutDecimals: 8,\n  },\n  {\n    delegatorPkpEthAddress: '0x123456789123456789123456789...',\n  });\n\nconst uniswapSwapExecutionResult = await uniswapSwapAbilityClient.execute({\n  ethRpcUrl: ETH_RPC_URL,\n  rpcUrlForUniswap: BASE_RPC_URL,\n  chainIdForUniswap: 8453,\n  tokenInAddress: '0x4200000000000000000000000000000000000006', // WETH\n  tokenInDecimals: 18,\n  tokenInAmount: 0.0000077,\n  tokenOutAddress: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', // USDC on Base\n  tokenOutDecimals: 8,\n},\n{\n  delegatorPkpEthAddress: '0x123456789123456789123456789...',\n});\n\nif(isAbilityResponseFailure(uniswapSwapExecutionResult)) {\n  ...handle failure\n} else {\n ...handle result\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/vincentAbilityClient.ts",
									"line": 114,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L114"
								}
							],
							"parameters": [
								{
									"id": 31,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33,
													"name": "bundledVincentAbility",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The bundled vincent ability that you want to interact with"
															}
														]
													},
													"sources": [
														{
															"fileName": "app-sdk/src/abilityClient/vincentAbilityClient.ts",
															"line": 125,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L125"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../ability-sdk/src/lib/abilityCore/bundledAbility/types.ts",
															"qualifiedName": "BundledVincentAbility"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../ability-sdk/src/lib/types.ts",
																	"qualifiedName": "VincentAbility"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "AbilityParamsSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PkgNames",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PolicyMap",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PoliciesByPackageName",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "ExecuteSuccessSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "ExecuteFailSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PrecheckSuccessSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PrecheckFailSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "VincentAbility",
																"package": "@lit-protocol/vincent-ability-sdk"
															},
															{
																"type": "reference",
																"target": -1,
																"name": "IpfsCid",
																"package": "@lit-protocol/vincent-app-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "BundledVincentAbility",
														"package": "@lit-protocol/vincent-ability-sdk"
													}
												},
												{
													"id": 34,
													"name": "ethersSigner",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An ethers signer that has been configured with your delegatee key"
															}
														]
													},
													"sources": [
														{
															"fileName": "app-sdk/src/abilityClient/vincentAbilityClient.ts",
															"line": 140,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L140"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
															"qualifiedName": "Signer"
														},
														"name": "Signer",
														"package": "@ethersproject/abstract-signer",
														"externalUrl": "https://docs.ethers.org/v5/api/"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33,
														34
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/abilityClient/vincentAbilityClient.ts",
													"line": 124,
													"character": 10,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L124"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 35,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "AbilityParamsSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PoliciesByPackageName",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "ExecuteSuccessSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "ExecuteFailSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PrecheckSuccessSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PrecheckFailSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "VincentAbilityClient",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				},
				{
					"id": 17,
					"name": "isAbilityResponseFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 18,
							"name": "isAbilityResponseFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
									"line": 30,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 19,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 78,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseFailureNoResult",
											"package": "@lit-protocol/vincent-app-sdk"
										},
										{
											"type": "reference",
											"target": 85,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseFailure",
											"package": "@lit-protocol/vincent-app-sdk"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 11,
					"name": "isAbilityResponseRuntimeFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
							"line": 51,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "isAbilityResponseRuntimeFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response that was a runtime error\nThis could be caused by code "
									},
									{
										"kind": "code",
										"text": "`throw()`"
									},
									{
										"kind": "text",
										"text": "ing an error from inside ability or policy code, or by errors encountered in the\nVincent SDK wrapping code that handles the execution of the ability/policies.\n\nThis could also be the result of a schema validation error -- use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "isAbilityResponseSchemaValidationFailure",
										"target": 14
									},
									{
										"kind": "text",
										"text": " to check\nto see if have a data validation error."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
									"line": 51,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 78,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 14,
					"name": "isAbilityResponseSchemaValidationFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
							"line": 64,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "isAbilityResponseSchemaValidationFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response that was caused by\na schema parsing failure.  All data inputs and outputs to / from Vincent Abilities and Policies is validated using ZOD schemas.\n\nIf this returns true, you can parse the "
									},
									{
										"kind": "code",
										"text": "`schemaValidationError`"
									},
									{
										"kind": "text",
										"text": " property in the response - it is a ZodError object."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
									"line": 64,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L64"
								}
							],
							"parameters": [
								{
									"id": 16,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 78,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 8,
					"name": "isAbilityResponseSuccess",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 9,
							"name": "isAbilityResponseSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a successful ability response"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/abilityClient/typeGuards.ts",
									"line": 15,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 10,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 98,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseSuccess",
											"package": "@lit-protocol/vincent-app-sdk"
										},
										{
											"type": "reference",
											"target": 93,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseSuccessNoResult",
											"package": "@lit-protocol/vincent-app-sdk"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						52,
						85,
						78,
						98,
						93,
						115,
						108,
						128,
						123,
						54,
						35
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						74,
						104
					]
				},
				{
					"title": "Functions",
					"children": [
						2,
						20,
						17,
						11,
						14,
						8
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						2,
						20,
						17,
						11,
						14,
						8
					]
				},
				{
					"title": "Interfaces",
					"children": [
						52,
						85,
						78,
						98,
						93,
						115,
						108,
						128,
						123,
						54,
						35,
						74,
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "app-sdk/src/abilityClient/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/abilityClient/index.ts#L1"
				}
			]
		},
		{
			"id": 6,
			"name": "expressMiddleware",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Express middleware is used to add a VincentJWT-specific authentication to your Express.js server routes\n\nAll functionality is encapsulated into a single factory function -- see "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createVincentUserMiddleware",
						"target": 243
					},
					{
						"kind": "text",
						"text": " for details\n\nYou can see the source for the Express authentication handler below; use this as a reference to implement\nyour own midddleware/authentication for other frameworks! Pull requests are welcome.\n"
					},
					{
						"kind": "code",
						"text": "\n\n```ts\nfunction getAuthenticateUserExpressHandler<const UserKey extends string>({\n  allowedAudience,\n  requiredAppId,\n  userKey,\n}: {\n  allowedAudience: string;\n  requiredAppId: number | undefined;\n  userKey: UserKey;\n}) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n      res.status(401).json({ error: 'No token provided' });\n      return;\n    }\n\n    const parts = authHeader.split(' ');\n    if (parts.length !== 2) {\n      res.status(401).json({ error: `Invalid authorization header - expected \"Bearer <token>\"` });\n      return;\n    }\n\n    const [scheme, rawJWT] = parts;\n    if (!/^Bearer$/i.test(scheme)) {\n      res.status(401).json({ error: `Expected \"Bearer\" scheme, got \"${scheme}\"` });\n      return;\n    }\n\n    try {\n      const decodedJWT = verify({ jwt: rawJWT, expectedAudience: allowedAudience, requiredAppId });\n      if (!decodedJWT) {\n        res.status(401).json({ error: 'Invalid token' });\n        return;\n      }\n\n      (req as unknown as Record<string, VincentJWTData>)[userKey] = {\n        decodedJWT,\n        rawJWT,\n      } as VincentJWTData;\n\n      next();\n    } catch (e) {\n      res.status(401).json({ error: `Invalid token: ${(e as Error).message}` });\n    }\n  };\n}\n```"
					}
				]
			},
			"children": [
				{
					"id": 287,
					"name": "VincentJWTData",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 288,
							"name": "decodedJWT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/expressMiddleware/types.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": 198,
								"name": "VincentJWT",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						},
						{
							"id": 289,
							"name": "rawJWT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/expressMiddleware/types.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								288,
								289
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/expressMiddleware/types.ts",
							"line": 37,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L37"
						}
					]
				},
				{
					"id": 267,
					"name": "AuthenticatedRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An interface that extends the Express.js Request interface to include authenticated user data\n\nYou probably don't need this type; see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createVincentUserMiddleware",
								"target": 243
							},
							{
								"kind": "text",
								"text": " for details"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/expressMiddleware/types.ts",
							"line": 48,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L48"
						}
					],
					"typeParameters": [
						{
							"id": 268,
							"name": "UserKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 269,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 270,
							"name": "ResBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 271,
							"name": "ReqBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 272,
							"name": "ReqQuery",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
									"qualifiedName": "e.Request"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 269,
										"name": "P",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 270,
										"name": "ResBody",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 271,
										"name": "ReqBody",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 272,
										"name": "ReqQuery",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "Request",
								"package": "@types/express",
								"qualifiedName": "e.Request"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"target": 268,
									"name": "UserKey",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "reference",
									"target": 287,
									"name": "VincentJWTData",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						]
					}
				},
				{
					"id": 273,
					"name": "AuthenticatedRequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An Express.js RequestHandler that guarantees the request is authenticated with a PKP address\n\nYou probably don't need this type; see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createVincentUserMiddleware",
								"target": 243
							},
							{
								"kind": "text",
								"text": " for details"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/expressMiddleware/types.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L24"
						}
					],
					"typeParameters": [
						{
							"id": 279,
							"name": "UserKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 280,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 0
								},
								"objectType": {
									"type": "reference",
									"target": 285,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 281,
							"name": "ResBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 1
								},
								"objectType": {
									"type": "reference",
									"target": 285,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 282,
							"name": "ReqBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 2
								},
								"objectType": {
									"type": "reference",
									"target": 285,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 283,
							"name": "ReqQuery",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 3
								},
								"objectType": {
									"type": "reference",
									"target": 285,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 284,
							"name": "Locals",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 4
								},
								"objectType": {
									"type": "reference",
									"target": 285,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 274,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/expressMiddleware/types.ts",
									"line": 31,
									"character": 4,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L31"
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 267,
												"typeArguments": [
													{
														"type": "reference",
														"target": 279,
														"name": "UserKey",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 280,
														"name": "P",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 281,
														"name": "ResBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 282,
														"name": "ReqBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 283,
														"name": "ReqQuery",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "AuthenticatedRequest",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										},
										{
											"id": 277,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 281,
														"name": "ResBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 284,
														"name": "Locals",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 278,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 285,
					"name": "ExtractRequestHandlerParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extract the params type from the original Express.js RequestHandler\n\nYou probably don't need this type; see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createVincentUserMiddleware",
								"target": 243
							},
							{
								"kind": "text",
								"text": " for details"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/expressMiddleware/types.ts",
							"line": 12,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/types.ts#L12"
						}
					],
					"typeParameters": [
						{
							"id": 286,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 286,
							"name": "T",
							"package": "@lit-protocol/vincent-app-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
								"qualifiedName": "e.RequestHandler"
							},
							"typeArguments": [
								{
									"type": "inferred",
									"name": "P"
								},
								{
									"type": "inferred",
									"name": "ResBody"
								},
								{
									"type": "inferred",
									"name": "ReqBody"
								},
								{
									"type": "inferred",
									"name": "ReqQuery"
								},
								{
									"type": "inferred",
									"name": "Locals"
								}
							],
							"name": "RequestHandler",
							"package": "@types/express",
							"qualifiedName": "e.RequestHandler"
						},
						"trueType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "P"
									},
									"name": "P",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ResBody"
									},
									"name": "ResBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ReqBody"
									},
									"name": "ReqBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ReqQuery"
									},
									"name": "ReqQuery",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "Locals"
									},
									"name": "Locals",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								}
							]
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 243,
					"name": "createVincentUserMiddleware",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/expressMiddleware/express.ts",
							"line": 79,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "createVincentUserMiddleware",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an Express middleware function to authenticate a user using a JWT token, and a type-guard wrapper function\nfor type-safe usage of route handlers guarded by the middleware.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`middleware()`"
									},
									{
										"kind": "text",
										"text": " function:\n- Checks the "
									},
									{
										"kind": "code",
										"text": "`Authorization`"
									},
									{
										"kind": "text",
										"text": " header for a Bearer token, verifies the token, and checks its audience.\n- If the token is valid, it attaches the user information (decoded JWT, and raw JWT string) to the request object\n- If the token is missing or invalid, it returns a 401 Unauthorized response with an error message.\n\nDesignate what field on "
									},
									{
										"kind": "code",
										"text": "`req`"
									},
									{
										"kind": "text",
										"text": " should be set with the JWT with the "
									},
									{
										"kind": "code",
										"text": "`userKey`"
									},
									{
										"kind": "text",
										"text": " configuration option.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`handler()`"
									},
									{
										"kind": "text",
										"text": " function:\n- Provides a type-safe reference to "
									},
									{
										"kind": "code",
										"text": "`req`"
									},
									{
										"kind": "text",
										"text": " where the "
									},
									{
										"kind": "code",
										"text": "`userKey`"
									},
									{
										"kind": "text",
										"text": " you have provided is correctly inferred to the appropriate type\n- Note that it is still your responsibility to ensure you have attached the "
									},
									{
										"kind": "code",
										"text": "`middleware`"
									},
									{
										"kind": "text",
										"text": " somewhere in the chain before you use the "
									},
									{
										"kind": "code",
										"text": "`handler()`"
									},
									{
										"kind": "text",
										"text": "\n  - If you forget, the "
									},
									{
										"kind": "code",
										"text": "`handler()`"
									},
									{
										"kind": "text",
										"text": " function will throw an error if the expected "
									},
									{
										"kind": "code",
										"text": "`req[userKey]`"
									},
									{
										"kind": "text",
										"text": " does not exist.\n\nSee [express.js documentation](https://expressjs.com/en/guide/writing-middleware.html) for details on writing your route handler"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { createVincentUserMiddleware } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\n// In your environment configuration\nconst ALLOWED_AUDIENCE = 'https://yourapp.example.com';\nconst VINCENT_APP_ID = 555; // Provided by the vincent app registry\n\nconst { middleware, handler } = createVincentUserMiddleware({\n allowedAudience: ALLOWED_AUDIENCE,\n requiredAppId: VINCENT_APP_ID,\n userKey: 'vincentUser',\n});\n\n// Apply to routes that require authentication; req is guaranteed authenticated because it is wrapped in `handler()`\napp.get('/protected-resource', middleware, handler((req, res) => {\n    // handler() gives you the correct inferred type of `req[userKey]`\n    const pkpAddress = req.vincentUser.decodedJWT.payload.pkp.ethAddress;\n    const appInfo = req.vincentUser.decodedJWT.payload.app;\n\n    if(appInfo) {\n      res.json({ message: `Hello, user with PKP address ${pkpAddress}. You are authenticated for app ${appInfo.id} @ v${appInfo.version}` });\n      return;\n    }\n\n    res.json({ message: `Hello, user with PKP address ${pkpAddress}.` });\n  })\n);\n```"
											},
											{
												"kind": "text",
												"text": "\n\nSee the code below for the implementation used by the "
											},
											{
												"kind": "code",
												"text": "`middleware`"
											},
											{
												"kind": "text",
												"text": " returned by this function. You can adapt this logic\nto the HTTP framework of your choice."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/expressMiddleware/express.ts",
									"line": 79,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L79"
								}
							],
							"typeParameters": [
								{
									"id": 245,
									"name": "UserKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 246,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 247,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 248,
													"name": "allowedAudience",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/expressMiddleware/express.ts",
															"line": 80,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L80"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 250,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/expressMiddleware/express.ts",
															"line": 82,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L82"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 249,
													"name": "userKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/expressMiddleware/express.ts",
															"line": 81,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L81"
														}
													],
													"type": {
														"type": "reference",
														"target": 245,
														"name": "UserKey",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														248,
														250,
														249
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/expressMiddleware/express.ts",
													"line": 79,
													"character": 82,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L79"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 251,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 258,
											"name": "handler",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/expressMiddleware/express.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L86"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/expressMiddleware/express.ts",
															"line": 91,
															"character": 9,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L91"
														}
													],
													"signatures": [
														{
															"id": 260,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "app-sdk/src/expressMiddleware/express.ts",
																	"line": 91,
																	"character": 9,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L91"
																}
															],
															"parameters": [
																{
																	"id": 261,
																	"name": "handler",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 273,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 245,
																				"name": "UserKey",
																				"package": "@lit-protocol/vincent-app-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "AuthenticatedRequestHandler",
																		"package": "@lit-protocol/vincent-app-sdk"
																	}
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 262,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/expressMiddleware/express.ts",
																			"line": 92,
																			"character": 11,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L92"
																		}
																	],
																	"signatures": [
																		{
																			"id": 263,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "app-sdk/src/expressMiddleware/express.ts",
																					"line": 92,
																					"character": 11,
																					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L92"
																				}
																			],
																			"parameters": [
																				{
																					"id": 264,
																					"name": "req",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																							"qualifiedName": "e.Request"
																						},
																						"name": "Request",
																						"package": "@types/express",
																						"qualifiedName": "e.Request"
																					}
																				},
																				{
																					"id": 265,
																					"name": "res",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																							"qualifiedName": "e.Response"
																						},
																						"name": "Response",
																						"package": "@types/express",
																						"qualifiedName": "e.Response"
																					}
																				},
																				{
																					"id": 266,
																					"name": "next",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																							"qualifiedName": "e.NextFunction"
																						},
																						"name": "NextFunction",
																						"package": "@types/express",
																						"qualifiedName": "e.NextFunction"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Promise"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "void"
																							}
																						],
																						"name": "Promise",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	]
																}
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 252,
											"name": "middleware",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/expressMiddleware/express.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L85"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 253,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/expressMiddleware/express.ts",
															"line": 113,
															"character": 9,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L113"
														}
													],
													"signatures": [
														{
															"id": 254,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "app-sdk/src/expressMiddleware/express.ts",
																	"line": 113,
																	"character": 9,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L113"
																}
															],
															"parameters": [
																{
																	"id": 255,
																	"name": "req",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																			"qualifiedName": "e.Request"
																		},
																		"name": "Request",
																		"package": "@types/express",
																		"qualifiedName": "e.Request"
																	}
																},
																{
																	"id": 256,
																	"name": "res",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																			"qualifiedName": "e.Response"
																		},
																		"name": "Response",
																		"package": "@types/express",
																		"qualifiedName": "e.Response"
																	}
																},
																{
																	"id": 257,
																	"name": "next",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
																			"qualifiedName": "e.NextFunction"
																		},
																		"name": "NextFunction",
																		"package": "@types/express",
																		"qualifiedName": "e.NextFunction"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												258,
												252
											]
										}
									],
									"sources": [
										{
											"fileName": "app-sdk/src/expressMiddleware/express.ts",
											"line": 84,
											"character": 9,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/express.ts#L84"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						287
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						267,
						273,
						285
					]
				},
				{
					"title": "Functions",
					"children": [
						243
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						243
					]
				},
				{
					"title": "Interfaces",
					"children": [
						267,
						273,
						285
					]
				},
				{
					"title": "Other",
					"children": [
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "app-sdk/src/expressMiddleware/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/expressMiddleware/index.ts#L1"
				}
			]
		},
		{
			"id": 4,
			"name": "jwt",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`jwt`"
					},
					{
						"kind": "text",
						"text": " module provides helper methods that allow you to decode and validate Vincent-specific JWTs.\n\nVincent JWTs are composed using the "
					},
					{
						"kind": "code",
						"text": "`did-jwt`"
					},
					{
						"kind": "text",
						"text": " library, but have a custom "
					},
					{
						"kind": "code",
						"text": "`alg`"
					},
					{
						"kind": "text",
						"text": " of "
					},
					{
						"kind": "code",
						"text": "`ES256K`"
					},
					{
						"kind": "text",
						"text": ", and are signed using\nPKP ethereum keys.\n\nVincent JWTs are issued by the Vincent Dashboard when a user provides delegation permission for your app to their agent PKP.\nThey are passed to your web app using a redirectUri which you configure on your app.\n\nThe methods exported by the "
					},
					{
						"kind": "code",
						"text": "`jwt`"
					},
					{
						"kind": "text",
						"text": " module are low-level - you probably will just want to use "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "getWebAuthClient",
						"target": 217
					},
					{
						"kind": "text",
						"text": " to get\na "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "WebAuthClient",
						"target": 220
					},
					{
						"kind": "text",
						"text": " which handles the redirect process, parsing the JWT from the URL, and verifying it for you."
					}
				]
			},
			"children": [
				{
					"id": 198,
					"name": "VincentJWT",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface representing a decoded Vincent JWT\n\n VincentJWT"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 202,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.data"
							}
						},
						{
							"id": 200,
							"name": "header",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L8"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/did-jwt@8.0.17/node_modules/did-jwt/src/JWT.ts",
									"qualifiedName": "JWTHeader"
								},
								"name": "JWTHeader",
								"package": "did-jwt",
								"externalUrl": "https://www.jsdocs.io/package/did-jwt"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.header"
							}
						},
						{
							"id": 199,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payload of the JWT"
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L73"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/jwt/types.ts",
									"qualifiedName": "BaseVincentJWTPayload"
								},
								"name": "BaseVincentJWTPayload",
								"package": "@lit-protocol/vincent-app-sdk"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.payload"
							}
						},
						{
							"id": 201,
							"name": "signature",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.signature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								202,
								200,
								199,
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/types.ts",
							"line": 72,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L72"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "src/jwt/types.ts",
								"qualifiedName": "JWTDecoded"
							},
							"name": "JWTDecoded",
							"package": "@lit-protocol/vincent-app-sdk"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 203,
							"name": "VincentJWTAppSpecific"
						}
					]
				},
				{
					"id": 203,
					"name": "VincentJWTAppSpecific",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "VincentJWTAppSpecific type JWTs are used to signal authorization from a user to use a specific app / appVersion"
							}
						]
					},
					"children": [
						{
							"id": 207,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 202,
								"name": "VincentJWT.data"
							}
						},
						{
							"id": 205,
							"name": "header",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L8"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/did-jwt@8.0.17/node_modules/did-jwt/src/JWT.ts",
									"qualifiedName": "JWTHeader"
								},
								"name": "JWTHeader",
								"package": "did-jwt",
								"externalUrl": "https://www.jsdocs.io/package/did-jwt"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 200,
								"name": "VincentJWT.header"
							}
						},
						{
							"id": 204,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payload of the JWT"
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L87"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/jwt/types.ts",
									"qualifiedName": "VincentJWTAppSpecificPayload"
								},
								"name": "VincentJWTAppSpecificPayload",
								"package": "@lit-protocol/vincent-app-sdk"
							},
							"overwrites": {
								"type": "reference",
								"target": 199,
								"name": "VincentJWT.payload"
							}
						},
						{
							"id": 206,
							"name": "signature",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/types.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 201,
								"name": "VincentJWT.signature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								207,
								205,
								204,
								206
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/types.ts",
							"line": 86,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/types.ts#L86"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 198,
							"name": "VincentJWT",
							"package": "@lit-protocol/vincent-app-sdk"
						}
					]
				},
				{
					"id": 140,
					"name": "decode",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Decodes a Vincent JWT in string form and returns an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "VincentJWT",
								"target": 198
							},
							{
								"kind": "text",
								"text": " decoded object for your use"
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "jwt",
								"content": [
									{
										"kind": "text",
										"text": "The jwt in string form. It will be decoded and checked to be sure it is not malformed."
									}
								]
							},
							{
								"tag": "@param",
								"name": "requiredAppId",
								"content": [
									{
										"kind": "text",
										"text": "The appId that should be in the payload of the JWT. If app is not defined, or app.id is different, this method will throw.\n\n<div class=\"box info-box\">\n  <p class=\"box-title info-box-title\">\n    <span class=\"box-icon info-icon\">Info</span> Note\n  </p>\nThis method only <i><b>decodes</b></i> the JWT_ -- you still need to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "verify",
										"target": 156
									},
									{
										"kind": "text",
										"text": " the JWT to be sure it is valid!\nIf the JWT is expired, you need to use a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient",
										"target": 220
									},
									{
										"kind": "text",
										"text": " to get a new JWT.\n\nSee "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getWebAuthClient",
										"target": 217
									},
									{
										"kind": "text",
										"text": "\n\n</div>"
									}
								]
							},
							{
								"tag": "@function",
								"content": []
							},
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\n  import { decode, isExpired } from '@lit-protocol/vincent-app-sdk/jwt';\n\n  const decodedVincentJWT = decode({ jwt, requiredAppId: 555 });\n  const isJWTExpired = isExpired(decodedVincentJWT);\n\n  if(!isJWTExpired) {\n    // User is logged in\n    // You still need to verify the JWT!\n  } else {\n    // User needs to get a new JWT\n    webAuthClient.redirectToConnectPage({redirectUri: window.location.href });\n  }\n\n ```"
									}
								]
							}
						],
						"modifierTags": [
							"@expand"
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 148,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L148"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 156,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L156"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 164,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L164"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 209,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "decode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 148,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L148"
								}
							],
							"parameters": [
								{
									"id": 142,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 143,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 144,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 152,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L152"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 145,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 153,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L153"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														144,
														145
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 151,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L151"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 198,
								"name": "VincentJWT",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						},
						{
							"id": 146,
							"name": "decode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 156,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 147,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 148,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 149,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 160,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L160"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 150,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 161,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L161"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														149,
														150
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 159,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L159"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 203,
								"name": "VincentJWTAppSpecific",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						},
						{
							"id": 151,
							"name": "decode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 164,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L164"
								}
							],
							"parameters": [
								{
									"id": 152,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 153,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 154,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 168,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L168"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 155,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 169,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L169"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														154,
														155
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 167,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L167"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									},
									{
										"type": "reference",
										"target": 203,
										"name": "VincentJWTAppSpecific",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								]
							}
						}
					]
				},
				{
					"id": 208,
					"name": "getAppInfo",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/accessors.ts",
							"line": 7,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "getAppInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/accessors.ts",
									"line": 7,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 210,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 203,
										"name": "VincentJWTAppSpecific",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 211,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 212,
											"name": "appId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/accessors.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L8"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 213,
											"name": "version",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/accessors.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L9"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												212,
												213
											]
										}
									],
									"sources": [
										{
											"fileName": "app-sdk/src/jwt/accessors.ts",
											"line": 7,
											"character": 63,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L7"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 214,
					"name": "getPKPInfo",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/accessors.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "getPKPInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/accessors.ts",
									"line": 18,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/accessors.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 216,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/@lit-protocol+types@7.2.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@lit-protocol/types/src/lib/interfaces.d.ts",
									"qualifiedName": "IRelayPKP"
								},
								"name": "IRelayPKP",
								"package": "@lit-protocol/types",
								"externalUrl": "https://v7-api-doc-lit-js-sdk.vercel.app/modules/types_src.html"
							}
						}
					]
				},
				{
					"id": 178,
					"name": "isAppSpecificJWT",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/typeGuards.ts",
							"line": 10,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/typeGuards.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "isAppSpecificJWT",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use this typeguard function to identify if the JWT is appId specific and make subsequent type-safe\nreferences into the payload of the JWT"
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/typeGuards.ts",
									"line": 10,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/typeGuards.ts#L10"
								}
							],
							"parameters": [
								{
									"id": 180,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "decodedJWT",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 203,
									"name": "VincentJWTAppSpecific",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 137,
					"name": "isExpired",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/core/isExpired.ts",
							"line": 9,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/isExpired.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "isExpired",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if a JWT is expired based on its 'exp' claim"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if expired, false otherwise"
											}
										]
									},
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/isExpired.ts",
									"line": 9,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/isExpired.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 139,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "isGeneralJWT",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/typeGuards.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/typeGuards.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "isGeneralJWT",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use this typeguard function to identify if the JWT is a general authentication JWT that has no specific app target"
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/typeGuards.ts",
									"line": 15,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/typeGuards.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 177,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "decodedJWT",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 198,
									"name": "VincentJWT",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 156,
					"name": "verify",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Decodes and verifies an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "VincentJWT",
								"target": 198
							},
							{
								"kind": "text",
								"text": " token in string form\n\nThis function returns the decoded "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "VincentJWT",
								"target": 198
							},
							{
								"kind": "text",
								"text": " object only if:\n1. The JWT signature is valid\n2. The JWT is not expired\n3. All time claims (nbf, iat) are valid\n4. The JWT has an audience claim that includes the expected audience"
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "params",
								"content": []
							},
							{
								"tag": "@param",
								"name": "jwt",
								"content": [
									{
										"kind": "text",
										"text": "The JWT string to verify"
									}
								]
							},
							{
								"tag": "@param",
								"name": "expectedAudience",
								"content": [
									{
										"kind": "text",
										"text": "String that should be in the audience claim(s)"
									}
								]
							},
							{
								"tag": "@param",
								"name": "requiredAppId",
								"content": [
									{
										"kind": "text",
										"text": "The appId that should be in the payload of the JWT. If app is not defined, or app.id is different, this method will throw."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The decoded VincentJWT object if it was verified successfully"
									}
								]
							},
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							},
							{
								"tag": "@function",
								"content": []
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\n import { verify } from '@lit-protocol/vincent-app-sdk/jwt';\n\n try {\n   const decodedAndVerifiedVincentJWT = verify({ jwt, expectedAudience: 'https://myapp.com', requiredAppId: 555 });\n  } catch(e) {\n   // Handle invalid/expired JWT casew\n }\n```"
									}
								]
							}
						],
						"modifierTags": [
							"@expand"
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L13"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 22,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L22"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L32"
						},
						{
							"fileName": "app-sdk/src/jwt/core/validate.ts",
							"line": 74,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "verify",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 13,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 158,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 159,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 161,
													"name": "expectedAudience",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L18"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 160,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L17"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 162,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 19,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L19"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														161,
														160,
														162
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 16,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L16"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 198,
								"name": "VincentJWT",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						},
						{
							"id": 163,
							"name": "verify",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 22,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L22"
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 165,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 167,
													"name": "expectedAudience",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 28,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L28"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 166,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 27,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L27"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 168,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 29,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L29"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														167,
														166,
														168
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 26,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L26"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 203,
								"name": "VincentJWTAppSpecific",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						},
						{
							"id": 169,
							"name": "verify",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/jwt/core/validate.ts",
									"line": 32,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L32"
								}
							],
							"parameters": [
								{
									"id": 170,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 171,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 173,
													"name": "expectedAudience",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 38,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L38"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 172,
													"name": "jwt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 37,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L37"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 174,
													"name": "requiredAppId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/jwt/core/validate.ts",
															"line": 39,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L39"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														173,
														172,
														174
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/jwt/core/validate.ts",
													"line": 36,
													"character": 3,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/core/validate.ts#L36"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 198,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									},
									{
										"type": "reference",
										"target": 203,
										"name": "VincentJWTAppSpecific",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						198,
						203
					]
				},
				{
					"title": "Functions",
					"children": [
						140,
						208,
						214,
						178,
						137,
						175,
						156
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						140,
						137,
						156
					]
				},
				{
					"title": "Interfaces",
					"children": [
						198
					]
				},
				{
					"title": "Other",
					"children": [
						203,
						208,
						214,
						178,
						175
					]
				}
			],
			"sources": [
				{
					"fileName": "app-sdk/src/jwt/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/jwt/index.ts#L1"
				}
			]
		},
		{
			"id": 7,
			"name": "utils",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Utility functions for interacting with the Vincent delegation backend"
					}
				]
			},
			"children": [
				{
					"id": 290,
					"name": "getDelegatorsAgentPkpAddresses",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "app-sdk/src/utils/delegation.ts",
							"line": 9,
							"character": 22,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/delegation.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "getDelegatorsAgentPkpAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a (paginated) list of delegator agent PKPs for a specific app version\n\nSee documentation at "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "vincent-contracts-sdk!getDelegatedPkpEthAddresses | vincent-contracts-sdk/getDelegatedPkpEthAddresses"
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/utils/delegation.ts",
									"line": 9,
									"character": 22,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/delegation.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 292,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 293,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 294,
													"name": "appId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/utils/types.ts",
															"line": 8,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L8"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 295,
													"name": "appVersion",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/utils/types.ts",
															"line": 9,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L9"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 297,
													"name": "pageOpts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "app-sdk/src/utils/types.ts",
															"line": 11,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L11"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 298,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 300,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/utils/types.ts",
																			"line": 11,
																			"character": 32,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L11"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 299,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/utils/types.ts",
																			"line": 11,
																			"character": 15,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L11"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		300,
																		299
																	]
																}
															],
															"sources": [
																{
																	"fileName": "app-sdk/src/utils/types.ts",
																	"line": 11,
																	"character": 13,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L11"
																}
															]
														}
													}
												},
												{
													"id": 296,
													"name": "signer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "app-sdk/src/utils/types.ts",
															"line": 10,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L10"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
															"qualifiedName": "Signer"
														},
														"name": "Signer",
														"package": "@ethersproject/abstract-signer",
														"externalUrl": "https://docs.ethers.org/v5/api/"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														294,
														295,
														297,
														296
													]
												}
											],
											"sources": [
												{
													"fileName": "app-sdk/src/utils/types.ts",
													"line": 7,
													"character": 17,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/types.ts#L7"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						290
					]
				}
			],
			"sources": [
				{
					"fileName": "app-sdk/src/utils/typedocRoot.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/utils/typedocRoot.ts#L1"
				}
			]
		},
		{
			"id": 5,
			"name": "webAuthClient",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The webAuthClient module contains methods and types that are used to implement authentication in Vincent web apps\nAuthentication is handled via redirects to the Vincent dashboard portal that return JWTs with authentication information\nthat can be used to secure your backend Vincent app UI.\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n```"
					}
				]
			},
			"children": [
				{
					"id": 240,
					"name": "RedirectToVincentDelegationPageParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 241,
							"name": "redirectUri",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								241
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/webAuthClient/types.ts",
							"line": 7,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L7"
						}
					]
				},
				{
					"id": 220,
					"name": "WebAuthClient",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Vincent Web Application Client is used in web apps to handle interactions with the Vincent app portal.\n\n- Connect page redirection\n- Authentication helpers that are browser specific"
							}
						]
					},
					"children": [
						{
							"id": 228,
							"name": "decodeVincentJWT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extracts a decoded/parsed Vincent JWT (JSON Web Token) from the current window location\n\nThe token is verified as part of this process; if the token is invalid or expired, this method will throw.\n\nSee: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.redirectToConnectPage",
										"target": 221
									},
									{
										"kind": "text",
										"text": " for example usage"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If there was a JWT in the page URL, but it was invalid / could not be verified"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 229,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "app-sdk/src/webAuthClient/types.ts",
											"line": 83,
											"character": 25,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
										}
									],
									"signatures": [
										{
											"id": 230,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "code",
																"text": "`null`"
															},
															{
																"kind": "text",
																"text": " if no JWT is found, otherwise both the decoded jwt and the original JWT string is returned"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "app-sdk/src/webAuthClient/types.ts",
													"line": 83,
													"character": 25,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
												}
											],
											"parameters": [
												{
													"id": 231,
													"name": "expectedAudience",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Provide a valid "
															},
															{
																"kind": "code",
																"text": "`redirectUri`"
															},
															{
																"kind": "text",
																"text": " for your app; this is typically your app's origin"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 232,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 233,
																	"name": "decodedJWT",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/webAuthClient/types.ts",
																			"line": 85,
																			"character": 9,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 203,
																		"name": "VincentJWTAppSpecific",
																		"package": "@lit-protocol/vincent-app-sdk"
																	}
																},
																{
																	"id": 234,
																	"name": "jwtStr",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "app-sdk/src/webAuthClient/types.ts",
																			"line": 85,
																			"character": 44,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		233,
																		234
																	]
																}
															],
															"sources": [
																{
																	"fileName": "app-sdk/src/webAuthClient/types.ts",
																	"line": 85,
																	"character": 7,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 225,
							"name": "uriContainsVincentJWT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the current window location is a connect URI associated with Vincent\n\nYou can use this to detect if a user is loading your app as a result of approving permissions\non the Vincent Connect page -- e.g. they just logged in\n\nSee: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.redirectToConnectPage",
										"target": 221
									},
									{
										"kind": "text",
										"text": " for example usage"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 226,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "app-sdk/src/webAuthClient/types.ts",
											"line": 68,
											"character": 11,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
										}
									],
									"signatures": [
										{
											"id": 227,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "code",
																"text": "`true`"
															},
															{
																"kind": "text",
																"text": " if the current window URI is a connect URI, otherwise "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "app-sdk/src/webAuthClient/types.ts",
													"line": 68,
													"character": 11,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 221,
							"name": "redirectToConnectPage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Redirects the user to the Vincent Connect page.\n\nIf the user approves your app permissions, they will be redirected back to the "
									},
									{
										"kind": "code",
										"text": "`redirectUri`"
									},
									{
										"kind": "text",
										"text": ".\n\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.uriContainsVincentJWT",
										"target": 225
									},
									{
										"kind": "text",
										"text": " to detect if a user has just opened your app via the Connect page\n\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.decodeVincentJWT",
										"target": 228
									},
									{
										"kind": "text",
										"text": " to decode and verify the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "VincentJWT",
										"target": 198
									},
									{
										"kind": "text",
										"text": " from the page URI, and store it for later usage\n\nNOTE: You must register the "
									},
									{
										"kind": "code",
										"text": "`redirectUri`"
									},
									{
										"kind": "text",
										"text": " on your Vincent app for it to be considered a valid redirect target"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n\nconst vincentAppClient = getWebAuthClient({ appId: MY_APP_ID });\n// ... In your app logic:\nif(vincentAppClient.uriContainsVincentJWT()) {\n  // Handle app logic for the user has just logged in\n  const { decoded, jwtStr } = vincentAppClient.decodeVincentJWT(EXPECTED_AUDIENCE);\n  // Store `jwtStr` for later usage; the user is now logged in.\n} else {\n  // Handle app logic for the user is already logged in (check for stored & unexpired JWT)\n  // ...\n   *   // Handle app logic for the user is not yet logged in\n vincentAppClient.redirectToConnectPage({ redirectUri: window.location.href });\n}\n```"
											}
										]
									},
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 222,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "app-sdk/src/webAuthClient/types.ts",
											"line": 54,
											"character": 32,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
										}
									],
									"signatures": [
										{
											"id": 223,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/webAuthClient/types.ts",
													"line": 54,
													"character": 32,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
												}
											],
											"parameters": [
												{
													"id": 224,
													"name": "redirectConfig",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 240,
														"name": "RedirectToVincentDelegationPageParams",
														"package": "@lit-protocol/vincent-app-sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 235,
							"name": "removeVincentJWTFromURI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the Vincent connect JWT from the current window URI.\n\nThis is useful for cleaning up the URL after decoding and storing the JWT,\nensuring the redirect URL looks clean for the user and no sensitive information\nis exposed in the URI."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n\nconst vincentAppClient = getWebAuthClient({ appId: MY_APP_ID });\n\nif (vincentAppClient.uriContainsVincentJWT()) {\n  const { decodedJWT, jwtStr } = vincentAppClient.decodeVincentJWT();\n  // Store the JWT and use it for authentication\n\n  // Now we can remove the JWT from the URL searchParams\n  vincentAppClient.removeVincentJWTFromURI();\n}\n```"
											}
										]
									},
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 236,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "app-sdk/src/webAuthClient/types.ts",
											"line": 112,
											"character": 25,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
										}
									],
									"signatures": [
										{
											"id": 237,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "app-sdk/src/webAuthClient/types.ts",
													"line": 112,
													"character": 25,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								228,
								225,
								221,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/webAuthClient/types.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L22"
						}
					]
				},
				{
					"id": 238,
					"name": "WebAuthClientConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 239,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/types.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								239
							]
						}
					],
					"sources": [
						{
							"fileName": "app-sdk/src/webAuthClient/types.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/types.ts#L3"
						}
					]
				},
				{
					"id": 217,
					"name": "getWebAuthClient",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WebAuthClient",
								"target": 220
							},
							{
								"kind": "text",
								"text": " instance.\n\n- "
							},
							{
								"kind": "code",
								"text": "`appId`"
							},
							{
								"kind": "text",
								"text": " is the numeric app ID displayed for your app on the Vincent Dashboard"
							}
						]
					},
					"sources": [
						{
							"fileName": "app-sdk/src/webAuthClient/app.ts",
							"line": 31,
							"character": 13,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/app.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 218,
							"name": "getWebAuthClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "app-sdk/src/webAuthClient/app.ts",
									"line": 31,
									"character": 32,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/app.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 219,
									"name": "appClientConfig",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 238,
										"name": "WebAuthClientConfig",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 220,
								"name": "WebAuthClient",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						240,
						220,
						238
					]
				},
				{
					"title": "Functions",
					"children": [
						217
					]
				}
			],
			"sources": [
				{
					"fileName": "app-sdk/src/webAuthClient/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/1d0291702859b630f17e14434b05465edc24e22b/packages/libs/app-sdk/src/webAuthClient/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				6,
				4,
				7,
				5
			]
		}
	],
	"packageName": "@lit-protocol/vincent-app-sdk",
	"packageVersion": "1.0.2",
	"readme": [
		{
			"kind": "text",
			"text": "# Vincent SDK\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```\nnpm install @lit-protocol/vincent-app-sdk\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Usage\n\n# Client (Web)\n\n## WebAuthClient\n\nThe Vincent Web Auth Client provides methods for managing user authentication, JWT tokens, and connect flows in Vincent applications.\n\n### Methods\n\n#### redirectToConnectPage()\n\nRedirects the user to the Vincent connect page to obtain authorization. Once the user has completed the vincent connect flow\nthey will be redirected back to your app with a signed JWT that you can use to authenticate requests against your backend APIs\n\n- When a JWT is expired, you need to use this method to get a new JWT\n\n#### uriContainsVincentJWT()\n\nChecks if the current window location contains a Vincent connect JWT. You can use this method to know that you should update connect state with the newly provided JWT\n\n- Returns: Boolean indicating if the URI contains a connect JWT\n\n#### decodeVincentJWT(expectedAudience)\n\nDecodes a Vincent connect JWT. Performs basic sanity check but does not perform full verify() logic. You will want to run "
		},
		{
			"kind": "code",
			"text": "`verify()`"
		},
		{
			"kind": "text",
			"text": " from the jwt abilities to verify the JWT is fully valid and not expired etc.\n\n- The expected audience is typically your app's domain -- it should be one of your valid redirectUri values from your Vincent app configuration\n\n- Returns: An object containing both the original JWT string and the decoded JWT object\n\n#### removeVincentJWTFromURI()\n\nRemoves the connect JWT parameter from the current URI. Call this after you have verified and stored the JWT for later usage.\n\n### Basic Usage\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webaAthClient';\nimport { isExpired } from '@lit-protocol/vincent-app-sdk/jwt';\n\nconst vincentAppClient = getWebAuthClient({ appId: MY_APP_ID });\n// ... In your app logic:\nif (vincentAppClient.uriContainsVincentJWT()) {\n  // Handle app logic for the user has just logged in\n  const { decoded, jwt } = vincentAppClient.decodeVincentJWT(window.location.origin);\n  // Store `jwt` for later usage; the user is now logged in.\n} else {\n  // Handle app logic for the user is _already logged in_ (check for stored & unexpired JWT)\n\n  const jwt = localStorage.getItem('VINCENT_AUTH_JWT');\n  if (jwt && isExpired(jwt)) {\n    // User must re-log in\n    vincentAppClient.redirectToConnectPage({ redirectUri: window.location.href });\n  }\n\n  if (!jwt) {\n    // Handle app logic for the user is not yet logged in\n    vincentAppClient.redirectToConnectPage({ redirectUri: window.location.href });\n  }\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n# Backend\n\nIn your backend, you will have to verify the JWT to make sure the user has granted you the required permissions to act on their behalf.\n\n## VincentAbilityClient\n\nThe Vincent Ability Client uses an ethers signer for your delegatee account to run Vincent Abilities on behalf of your app users.\n\nThis client will typically be used by an AI agent or your app backend service, as it requires a signer that conforms to the ethers v5 signer API, and with access to your delegatee account's private key to authenticate with the LIT network when executing the Vincent Ability.\n\n### Configuration\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\ninterface VincentAbilityClientConfig {\n  ethersSigner: ethers.Signer; // An ethers v5 compatible signer\n  vincentAbilityCid: string; // The CID of the Vincent Ability to execute\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Methods\n\n#### execute(params: VincentAbilityParams): Promise<ExecuteJsResponse>\n\nExecutes a Vincent Ability with the provided parameters.\n\n- "
		},
		{
			"kind": "code",
			"text": "`params`"
		},
		{
			"kind": "text",
			"text": ": Record<string, unknown> - Parameters to pass to the Vincent Ability\n- Returns: Promise resolving to an ExecuteJsResponse from the LIT network\n\n### Ability execution\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport { getVincentAbilityClient } from '@lit-protocol/vincent-app-sdk/abilityClient';\n// Import the ability you want to execute\nimport { bundledVincentAbility as erc20BundledAbility } from '@lit-protocol/vincent-ability-erc20-approval';\n\n// One of delegatee signers from your app's Vincent Dashboard\nconst delegateeSigner = new ethers.Wallet('YOUR_DELEGATEE_PRIVATE_KEY');\n\n// Initialize the Vincent Ability Client\nconst abilityClient = getVincentAbilityClient({\n  ethersSigner: delegateeSigner,\n  bundledVincentAbility: erc20BundledAbility,\n});\nconst delegatorPkpEthAddress = '0x09182301238';\n\nconst abilityParams = {\n  // Fill with the params your ability needs\n};\n\n// Run precheck to see if ability should be executed\nconst precheckResult = await client.precheck(abilityParams, {\n  delegatorPkpEthAddress,\n});\n\nif (precheckResult.success === true) {\n  // Execute the Vincent Ability\n  const executeResult = await client.execute(abilityParams, {\n    delegatorPkpEthAddress,\n  });\n\n  // ...ability has executed, you can check `executeResult` for details\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Usage\n\n### Authentication\n\nA basic Express authentication middleware factory function is provided with the SDK.\n\n- Create an express middleware using "
		},
		{
			"kind": "code",
			"text": "`getAuthenticateUserExpressHandler()`"
		},
		{
			"kind": "text",
			"text": "\n- Once you have added the middleware to your route, use "
		},
		{
			"kind": "code",
			"text": "`authenticatedRequestHandler()`"
		},
		{
			"kind": "text",
			"text": " to provide\n  type-safe access to "
		},
		{
			"kind": "code",
			"text": "`req.user`"
		},
		{
			"kind": "text",
			"text": " in your downstream RequestHandler functions.\n- When defining your authenticated routes, use the "
		},
		{
			"kind": "code",
			"text": "`ExpressAuthHelpers`"
		},
		{
			"kind": "text",
			"text": " type to type your functions and function arguments.\n\nSee getAuthenticateUserExpressHandler() documentation to see the source for the express authentication route handler\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport {\n  authenticatedRequestHandler,\n  getAuthenticateUserExpressHandler,\n} from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\nimport type { AuthenticatedRequest } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\nconst { ALLOWED_AUDIENCE } = process.env;\n\nconst authenticateUserMiddleware = getAuthenticateUserExpressHandler(ALLOWED_AUDIENCE);\n\n// Define an authenticated route handler\nconst getUserProfile = async (req: AuthenticatedRequest, res: Response) => {\n  // Access authenticated user information\n  const { pkpAddress } = req.user;\n\n  // Fetch and return user data\n  const userData = await userRepository.findByAddress(pkpAddress);\n  res.json(userData);\n};\n\n// Use in Express route with authentication\napp.get('/profile', authenticateUser, authenticatedRequestHandler(getUserProfile));\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## JWT Authentication\n\n### Overview\n\nThe JWT authentication system in Vincent SDK allows for secure communication between user applications and Vincent Abilities. JWTs are used to verify user connect and authorize ability executions.\n\n### Authentication Flow\n\n1. User initiates an action requiring Vincent Ability access\n2. Application redirects to the Vincent connect page using "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient.redirectToConnectPage()`"
		},
		{
			"kind": "text",
			"text": "\n3. User provides login for the requested abilities/policies\n4. User is redirected back to the application with a JWT in the URL\n5. Application validates and stores the JWT using "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient`"
		},
		{
			"kind": "text",
			"text": " methods\n6. JWT is used to authenticate with the app backend\n\n### JWT Structure\n\nVincent JWTs contain:\n\n- User account identity information (pkpAddress and pkpPublicKey)\n- Expiration timestamp\n- Signature from the Vincent authorization service\n\n### Error Handling\n\nWhen JWT validation fails, descriptive error messages are thrown to help with troubleshooting.\n\n### Usage Notes\n\n- JWTs have an expiration time after which they are no longer valid\n- When a JWT expires, redirect the user to the connect page to obtain a new one using the "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient`"
		},
		{
			"kind": "text",
			"text": "\n\n## Release\n\nPre-requisites:\n\n- You will need a valid npm account with access to the "
		},
		{
			"kind": "code",
			"text": "`@lit-protocol`"
		},
		{
			"kind": "text",
			"text": " organization.\n- Run "
		},
		{
			"kind": "code",
			"text": "`pnpm vercel login`"
		},
		{
			"kind": "text",
			"text": " at sdk root to get a authentication token for vercel\n- Also you will need to fill the "
		},
		{
			"kind": "code",
			"text": "`.env`"
		},
		{
			"kind": "text",
			"text": " file with the vercel project and org ids for the [vincent-docs](https://vercel.com/lit-protocol/vincent-docs) project.\n\nThen run "
		},
		{
			"kind": "code",
			"text": "`pnpm release`"
		},
		{
			"kind": "text",
			"text": " on the repository root. It will prompt you to update the Vincent SDK version and then ask you to confirm the release.\nThis process will also generate a "
		},
		{
			"kind": "code",
			"text": "`CHANGELOG.md`"
		},
		{
			"kind": "text",
			"text": " record with the changes for the release and update typedoc in vercel after publishing the SDK."
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "src/abilityClient/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "src/abilityClient/index.ts",
			"qualifiedName": "disconnectVincentAbilityClients"
		},
		"3": {
			"sourceFileName": "src/internal/LitNodeClient/getLitNodeClient.ts",
			"qualifiedName": "disconnectVincentAbilityClients"
		},
		"4": {
			"sourceFileName": "src/jwt/index.ts",
			"qualifiedName": ""
		},
		"5": {
			"sourceFileName": "src/webAuthClient/index.ts",
			"qualifiedName": ""
		},
		"6": {
			"sourceFileName": "src/expressMiddleware/index.ts",
			"qualifiedName": ""
		},
		"7": {
			"sourceFileName": "src/utils/typedocRoot.ts",
			"qualifiedName": ""
		},
		"8": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSuccess"
		},
		"9": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSuccess"
		},
		"10": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"11": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseRuntimeFailure"
		},
		"12": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseRuntimeFailure"
		},
		"13": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"14": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSchemaValidationFailure"
		},
		"15": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSchemaValidationFailure"
		},
		"16": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"17": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseFailure"
		},
		"18": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseFailure"
		},
		"19": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"20": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "getVincentAbilityClient"
		},
		"21": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "getVincentAbilityClient"
		},
		"31": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "params"
		},
		"32": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type"
		},
		"33": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type.bundledVincentAbility"
		},
		"34": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type.ethersSigner"
		},
		"35": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient"
		},
		"36": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.precheck"
		},
		"37": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.precheck"
		},
		"38": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "rawAbilityParams"
		},
		"39": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "context"
		},
		"40": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "__type"
		},
		"41": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "__type.rpcUrl"
		},
		"42": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.execute"
		},
		"43": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.execute"
		},
		"44": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "rawAbilityParams"
		},
		"45": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "context"
		},
		"52": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "AbilityClientContext"
		},
		"53": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "AbilityClientContext.delegatorPkpEthAddress"
		},
		"54": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext"
		},
		"55": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext.policiesContext"
		},
		"56": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.abilityIpfsCid"
		},
		"57": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.appId"
		},
		"58": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.appVersion"
		},
		"59": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.delegation"
		},
		"60": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"61": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.delegateeAddress"
		},
		"62": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.delegatorPkpInfo"
		},
		"63": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"64": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"65": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.ethAddress"
		},
		"66": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.publicKey"
		},
		"67": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext.Policies"
		},
		"74": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponse"
		},
		"75": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "SuccessSchema"
		},
		"76": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "FailSchema"
		},
		"77": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "Policies"
		},
		"78": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult"
		},
		"79": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.success"
		},
		"80": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.runtimeError"
		},
		"81": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.schemaValidationError"
		},
		"82": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.result"
		},
		"83": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.context"
		},
		"84": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.Policies"
		},
		"85": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure"
		},
		"86": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.success"
		},
		"87": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.runtimeError"
		},
		"88": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.schemaValidationError"
		},
		"89": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.result"
		},
		"90": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.context"
		},
		"91": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.Result"
		},
		"92": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.Policies"
		},
		"93": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult"
		},
		"94": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.success"
		},
		"95": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.result"
		},
		"96": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.context"
		},
		"97": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.Policies"
		},
		"98": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess"
		},
		"99": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.success"
		},
		"100": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.result"
		},
		"101": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.context"
		},
		"102": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.Result"
		},
		"103": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.Policies"
		},
		"104": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponse"
		},
		"105": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "SuccessSchema"
		},
		"106": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "FailSchema"
		},
		"107": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "Policies"
		},
		"108": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult"
		},
		"109": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.success"
		},
		"110": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.runtimeError"
		},
		"111": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.schemaValidationError"
		},
		"112": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.result"
		},
		"113": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.context"
		},
		"114": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.Policies"
		},
		"115": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure"
		},
		"116": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.success"
		},
		"117": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.runtimeError"
		},
		"118": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.schemaValidationError"
		},
		"119": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.result"
		},
		"120": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.context"
		},
		"121": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.Result"
		},
		"122": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.Policies"
		},
		"123": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult"
		},
		"124": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.success"
		},
		"125": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.result"
		},
		"126": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.context"
		},
		"127": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.Policies"
		},
		"128": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess"
		},
		"129": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.success"
		},
		"130": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.result"
		},
		"131": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.context"
		},
		"132": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.Result"
		},
		"133": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.Policies"
		},
		"137": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "isExpired"
		},
		"138": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "isExpired"
		},
		"139": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "decodedJWT"
		},
		"140": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"141": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"142": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"143": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"144": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"145": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"146": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"147": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"148": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"149": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"150": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"151": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"152": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"153": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"154": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"155": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"156": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"157": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"158": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"159": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"161": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.expectedAudience"
		},
		"162": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"163": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"164": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"165": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"166": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"167": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.expectedAudience"
		},
		"168": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"169": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"170": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__0"
		},
		"171": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type"
		},
		"172": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.jwt"
		},
		"173": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.expectedAudience"
		},
		"174": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"175": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "isGeneralJWT"
		},
		"176": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "isGeneralJWT"
		},
		"177": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "decodedJWT"
		},
		"178": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "isAppSpecificJWT"
		},
		"179": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "isAppSpecificJWT"
		},
		"180": {
			"sourceFileName": "src/jwt/typeGuards.ts",
			"qualifiedName": "decodedJWT"
		},
		"198": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWT"
		},
		"199": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWT.payload"
		},
		"200": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.header"
		},
		"201": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.signature"
		},
		"202": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.data"
		},
		"203": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTAppSpecific"
		},
		"204": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTAppSpecific.payload"
		},
		"205": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.header"
		},
		"206": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.signature"
		},
		"207": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.data"
		},
		"208": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "getAppInfo"
		},
		"209": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "getAppInfo"
		},
		"210": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "decodedJWT"
		},
		"211": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "__type.appId"
		},
		"213": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "__type.version"
		},
		"214": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "getPKPInfo"
		},
		"215": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "getPKPInfo"
		},
		"216": {
			"sourceFileName": "src/jwt/accessors.ts",
			"qualifiedName": "decodedJWT"
		},
		"217": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "getWebAuthClient"
		},
		"218": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "getWebAuthClient"
		},
		"219": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "appClientConfig"
		},
		"220": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient"
		},
		"221": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.redirectToConnectPage"
		},
		"222": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"223": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"224": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "redirectConfig"
		},
		"225": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.uriContainsVincentJWT"
		},
		"226": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"227": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.decodeVincentJWT"
		},
		"229": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"231": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "expectedAudience"
		},
		"232": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type.decodedJWT"
		},
		"234": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type.jwtStr"
		},
		"235": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.removeVincentJWTFromURI"
		},
		"236": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"238": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClientConfig"
		},
		"239": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClientConfig.appId"
		},
		"240": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "RedirectToVincentDelegationPageParams"
		},
		"241": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "RedirectToVincentDelegationPageParams.redirectUri"
		},
		"243": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "createVincentUserMiddleware"
		},
		"244": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "createVincentUserMiddleware"
		},
		"245": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "UserKey"
		},
		"246": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "config"
		},
		"247": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__type"
		},
		"248": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__type.allowedAudience"
		},
		"249": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__type.userKey"
		},
		"250": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__type.requiredAppId"
		},
		"251": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__object"
		},
		"252": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__object.middleware"
		},
		"253": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"254": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"255": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "req"
		},
		"256": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "res"
		},
		"257": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "next"
		},
		"258": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__object.handler"
		},
		"259": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"260": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"261": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "handler"
		},
		"262": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"263": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"264": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "req"
		},
		"265": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "res"
		},
		"266": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "next"
		},
		"267": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest"
		},
		"268": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "UserKey"
		},
		"269": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "P"
		},
		"270": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ResBody"
		},
		"271": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqBody"
		},
		"272": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqQuery"
		},
		"273": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequestHandler"
		},
		"274": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type"
		},
		"275": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type"
		},
		"276": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "req"
		},
		"277": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "res"
		},
		"278": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "next"
		},
		"279": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "UserKey"
		},
		"280": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "P"
		},
		"281": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ResBody"
		},
		"282": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqBody"
		},
		"283": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqQuery"
		},
		"284": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "Locals"
		},
		"285": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ExtractRequestHandlerParams"
		},
		"286": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "T"
		},
		"287": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "VincentJWTData"
		},
		"288": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "VincentJWTData.decodedJWT"
		},
		"289": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "VincentJWTData.rawJWT"
		},
		"290": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "getDelegatorsAgentPkpAddresses"
		},
		"291": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "getDelegatorsAgentPkpAddresses"
		},
		"292": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "params"
		},
		"293": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams"
		},
		"294": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.appId"
		},
		"295": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.appVersion"
		},
		"296": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.signer"
		},
		"297": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.pageOpts"
		},
		"298": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type.offset"
		},
		"300": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type.limit"
		}
	},
	"files": {
		"entries": {
			"1": "src/abilityClient/index.ts",
			"2": "src/jwt/index.ts",
			"3": "src/webAuthClient/index.ts",
			"4": "src/expressMiddleware/index.ts",
			"5": "src/utils/typedocRoot.ts"
		},
		"reflections": {
			"1": 1,
			"2": 4,
			"3": 5,
			"4": 6,
			"5": 7
		}
	}
}
