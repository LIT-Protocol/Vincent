{
	"id": 6072,
	"name": "vincent-app-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 6078,
			"name": "expressMiddleware",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Express middleware is used to add a VincentJWT-specific authentication to your Express.js server routes\n\n- Create express middleware using "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "getAuthenticateUserExpressHandler",
						"target": 6284
					},
					{
						"kind": "text",
						"text": "\n- Once you have added the middleware to your route, use "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "authenticatedRequestHandler",
						"target": 6276
					},
					{
						"kind": "text",
						"text": " to provide\ntype-safe access to "
					},
					{
						"kind": "code",
						"text": "`req.user`"
					},
					{
						"kind": "text",
						"text": " in your downstream RequestHandler functions."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nimport { authenticatedRequestHandler, getAuthenticateUserExpressHandler } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\nimport type { AuthenticatedRequest } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\nconst { ALLOWED_AUDIENCE } = process.env;\n\nconst authenticateUserMiddleware = getAuthenticateUserExpressHandler(ALLOWED_AUDIENCE);\n\n// Define an authenticated route handler\nconst getUserProfile = async (req: AuthenticatedRequest, res: Response) => {\n  // Access authenticated user information\n  const { pkpAddress } = req.user;\n\n  // Fetch and return user data\n  const userData = await userRepository.findByAddress(pkpAddress);\n  res.json(userData);\n};\n\n// Use in Express route with authentication\napp.get('/profile', authenticateUser, authenticatedRequestHandler(getUserProfile));\n```"
							},
							{
								"kind": "text",
								"text": "\n\nYou can see the source for "
							},
							{
								"kind": "code",
								"text": "`getAuthenticateUserExpressHandler()`"
							},
							{
								"kind": "text",
								"text": " below; use this as a reference to implement\nyour own midddleware/authentication for other frameworks! Pull requests are welcome."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 6292,
					"name": "AuthenticatedRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An interface that extends the Express.js Request interface to include authenticated user data"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6293,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L42"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6294,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6295,
											"name": "decodedJWT",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
													"line": 43,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L43"
												}
											],
											"type": {
												"type": "reference",
												"target": 6233,
												"name": "VincentJWT",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										},
										{
											"id": 6296,
											"name": "rawJWT",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
													"line": 44,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L44"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6295,
												6296
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
											"line": 42,
											"character": 8,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L42"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6293
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
							"line": 40,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L40"
						}
					],
					"typeParameters": [
						{
							"id": 6297,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 6298,
							"name": "ResBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 6299,
							"name": "ReqBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 6300,
							"name": "ReqQuery",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
								"qualifiedName": "e.Request"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 6297,
									"name": "P",
									"package": "@lit-protocol/vincent-app-sdk",
									"qualifiedName": "AuthenticatedRequest.P",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 6298,
									"name": "ResBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"qualifiedName": "AuthenticatedRequest.ResBody",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 6299,
									"name": "ReqBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"qualifiedName": "AuthenticatedRequest.ReqBody",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 6300,
									"name": "ReqQuery",
									"package": "@lit-protocol/vincent-app-sdk",
									"qualifiedName": "AuthenticatedRequest.ReqQuery",
									"refersToTypeParameter": true
								}
							],
							"name": "Request",
							"package": "@types/express",
							"qualifiedName": "e.Request"
						}
					]
				},
				{
					"id": 6301,
					"name": "AuthenticatedRequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An Express.js RequestHandler that guarantees the request is authenticated with a PKP address\n\nYou probably don't need this type; see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "authenticatedRequestHandler",
								"target": 6276
							},
							{
								"kind": "text",
								"text": " for details"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L24"
						}
					],
					"typeParameters": [
						{
							"id": 6307,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 0
								},
								"objectType": {
									"type": "reference",
									"target": 6312,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 6308,
							"name": "ResBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 1
								},
								"objectType": {
									"type": "reference",
									"target": 6312,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 6309,
							"name": "ReqBody",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 2
								},
								"objectType": {
									"type": "reference",
									"target": 6312,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 6310,
							"name": "ReqQuery",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 3
								},
								"objectType": {
									"type": "reference",
									"target": 6312,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						},
						{
							"id": 6311,
							"name": "Locals",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 4
								},
								"objectType": {
									"type": "reference",
									"target": 6312,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
												"qualifiedName": "e.RequestHandler"
											},
											"name": "RequestHandler",
											"package": "@types/express",
											"qualifiedName": "e.RequestHandler"
										}
									],
									"name": "ExtractRequestHandlerParams",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6302,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L30"
								}
							],
							"signatures": [
								{
									"id": 6303,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 6304,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 6292,
												"typeArguments": [
													{
														"type": "reference",
														"target": 6307,
														"name": "P",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 6308,
														"name": "ResBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 6309,
														"name": "ReqBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 6310,
														"name": "ReqQuery",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "AuthenticatedRequest",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										},
										{
											"id": 6305,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 6308,
														"name": "ResBody",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 6311,
														"name": "Locals",
														"package": "@lit-protocol/vincent-app-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 6306,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 6312,
					"name": "ExtractRequestHandlerParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extract the parameters type from the original Express.js RequestHandler\n\nYou probably don't need this type; see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "authenticatedRequestHandler",
								"target": 6276
							},
							{
								"kind": "text",
								"text": " for details"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/expressMiddleware/types.ts",
							"line": 12,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/types.ts#L12"
						}
					],
					"typeParameters": [
						{
							"id": 6313,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6313,
							"name": "T",
							"package": "@lit-protocol/vincent-app-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
								"qualifiedName": "e.RequestHandler"
							},
							"typeArguments": [
								{
									"type": "inferred",
									"name": "P"
								},
								{
									"type": "inferred",
									"name": "ResBody"
								},
								{
									"type": "inferred",
									"name": "ReqBody"
								},
								{
									"type": "inferred",
									"name": "ReqQuery"
								},
								{
									"type": "inferred",
									"name": "Locals"
								}
							],
							"name": "RequestHandler",
							"package": "@types/express",
							"qualifiedName": "e.RequestHandler"
						},
						"trueType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "P"
									},
									"name": "P",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ResBody"
									},
									"name": "ResBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ReqBody"
									},
									"name": "ReqBody",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "ReqQuery"
									},
									"name": "ReqQuery",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/expressMiddleware/types.ts",
										"qualifiedName": "Locals"
									},
									"name": "Locals",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								}
							]
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 6276,
					"name": "authenticatedRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Higher-order helper function to enforce authentication on a request handler and assert the type of "
							},
							{
								"kind": "code",
								"text": "`Request`"
							},
							{
								"kind": "text",
								"text": " that is\npassed into your authenticated Express routes.\n\nThis function takes an "
							},
							{
								"kind": "code",
								"text": "`AuthenticatedRequestHandler`"
							},
							{
								"kind": "text",
								"text": " and returns a new request handler\nthat verifies that the request has a 'user' property with the correct shape on it before calling the original handler.\nIf the "
							},
							{
								"kind": "code",
								"text": "`req.user`"
							},
							{
								"kind": "text",
								"text": " property isn't the correct shape, it sends a "
							},
							{
								"kind": "code",
								"text": "`401 Unauthorized`"
							},
							{
								"kind": "text",
								"text": " response to the client.\n\nNOTE: This does not verify signatures or any other content -- use "
							},
							{
								"kind": "code",
								"text": "`getAuthenticateUserExpressHandler`"
							},
							{
								"kind": "text",
								"text": " to create a\nmiddleware that does those things and ensure that your routes use it.\n\nSee [express.js documentation](https://expressjs.com/en/guide/writing-middleware.html) for details on writing your route handler"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nimport { authenticatedRequestHandler, getAuthenticateUserExpressHandler } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\nimport type { AuthenticatedRequest } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\n// Define an authenticated route handler\nconst getUserProfile = async (req: AuthenticatedRequest, res: Response) => {\n  // Access authenticated user information\n  const { pkpAddress } = req.user;\n\n  // Fetch and return user data\n  const userData = await userRepository.findByAddress(pkpAddress);\n  res.json(userData);\n};\n\n// Use in Express route with authentication\napp.get('/profile', authenticateUser, authenticatedRequestHandler(getUserProfile));\n```"
									}
								]
							},
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
							"line": 59,
							"character": 13,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 6277,
							"name": "authenticatedRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L60"
								}
							],
							"parameters": [
								{
									"id": 6278,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6301,
										"name": "AuthenticatedRequestHandler",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6279,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
											"line": 60,
											"character": 44,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L60"
										}
									],
									"signatures": [
										{
											"id": 6280,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
													"line": 60,
													"character": 44,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L60"
												}
											],
											"parameters": [
												{
													"id": 6281,
													"name": "req",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.Request"
														},
														"name": "Request",
														"package": "@types/express",
														"qualifiedName": "e.Request"
													}
												},
												{
													"id": 6282,
													"name": "res",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.Response"
														},
														"name": "Response",
														"package": "@types/express",
														"qualifiedName": "e.Response"
													}
												},
												{
													"id": 6283,
													"name": "next",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.NextFunction"
														},
														"name": "NextFunction",
														"package": "@types/express",
														"qualifiedName": "e.NextFunction"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 6284,
					"name": "getAuthenticateUserExpressHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an Express middleware function to authenticate a user using a JWT token.\n\nThis middleware checks the "
							},
							{
								"kind": "code",
								"text": "`Authorization`"
							},
							{
								"kind": "text",
								"text": " header for a Bearer token, verifies the token, and checks its audience.\nIf the token is valid, it attaches the user information (decoded JWT, raw token, and PKP address) to the request object as "
							},
							{
								"kind": "code",
								"text": "`req.user`"
							},
							{
								"kind": "text",
								"text": ".\nIf the token is missing or invalid, it returns a 401 Unauthorized response with an error message.\n\nNOTE: Wrap your route handler functions with "
							},
							{
								"kind": "code",
								"text": "`authenticatedRequestHandler()`"
							},
							{
								"kind": "text",
								"text": " to assert the type of "
							},
							{
								"kind": "code",
								"text": "`Request`"
							},
							{
								"kind": "text",
								"text": " and to\nensure that "
							},
							{
								"kind": "code",
								"text": "`req.user`"
							},
							{
								"kind": "text",
								"text": " was correctly set before your route handler is run.\n\nSee [express.js documentation](https://expressjs.com/en/guide/writing-middleware.html) for details on writing your route handler"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nimport { authenticatedRequestHandler, getAuthenticateUserExpressHandler } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\nimport type { AuthenticatedRequest } from '@lit-protocol/vincent-app-sdk/expressMiddleware';\n\n// In your environment configuration\nconst ALLOWED_AUDIENCE = 'https://yourapp.example.com';\n\n// Create the authentication middleware\nconst authenticateUser = getAuthenticateUserExpressHandler(ALLOWED_AUDIENCE);\n\n// Define a handler that requires authentication\nconst getProtectedResource = (req: AuthenticatedRequest, res: Response) => {\n  // The request is now authenticated\n  // No need for type casting as the handler is properly typed\n  const { pkpAddress } = req.user;\n  res.json({ message: `Hello, user with PKP address ${pkpAddress}` });\n};\n\n// Apply to routes that require authentication by using authenticatedRequestHandler\napp.get('/protected-resource', authenticateUser, authenticatedRequestHandler(getProtectedResource));\n```"
									},
									{
										"kind": "text",
										"text": "\n\nYou can see the source for "
									},
									{
										"kind": "code",
										"text": "`getAuthenticateUserExpressHandler()`"
									},
									{
										"kind": "text",
										"text": " below; use this as a reference to implement\nyour own midddleware/authentication for other frameworks! Pull requests are welcome.\n"
									},
									{
										"kind": "code",
										"text": "\n\n```ts\nexport const getAuthenticateUserExpressHandler =\n  (allowedAudience: string) => async (req: Request, res: Response, next: NextFunction) => {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n      res.status(401).json({ error: 'No token provided' });\n      return;\n    }\n\n    const parts = authHeader.split(' ');\n    if (parts.length !== 2) {\n      res.status(401).json({ error: `Invalid authorization header - expected \"Bearer <token>\"` });\n      return;\n    }\n\n    const [scheme, rawJWT] = parts;\n    if (!/^Bearer$/i.test(scheme)) {\n      res.status(401).json({ error: `Expected \"Bearer\" scheme, got \"${scheme}\"` });\n      return;\n    }\n\n    try {\n      const decodedJWT = verify(rawJWT, allowedAudience);\n      if (!decodedJWT) {\n        res.status(401).json({ error: 'Invalid token' });\n        return;\n      }\n\n      (req as AuthenticatedRequest).user = {\n        decodedJWT,\n        rawJWT,\n      };\n\n      next();\n    } catch (e) {\n      res.status(401).json({ error: `Invalid token: ${(e as Error).message}` });\n    }\n  };\n```"
									}
								]
							},
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
							"line": 110,
							"character": 13,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L110"
						}
					],
					"signatures": [
						{
							"id": 6285,
							"name": "getAuthenticateUserExpressHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L111"
								}
							],
							"parameters": [
								{
									"id": 6286,
									"name": "allowedAudience",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6287,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
											"line": 111,
											"character": 31,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L111"
										}
									],
									"signatures": [
										{
											"id": 6288,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/expressMiddleware/express.ts",
													"line": 111,
													"character": 31,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/express.ts#L111"
												}
											],
											"parameters": [
												{
													"id": 6289,
													"name": "req",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.Request"
														},
														"name": "Request",
														"package": "@types/express",
														"qualifiedName": "e.Request"
													}
												},
												{
													"id": 6290,
													"name": "res",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.Response"
														},
														"name": "Response",
														"package": "@types/express",
														"qualifiedName": "e.Response"
													}
												},
												{
													"id": 6291,
													"name": "next",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@types+express@5.0.3/node_modules/@types/express/index.d.ts",
															"qualifiedName": "e.NextFunction"
														},
														"name": "NextFunction",
														"package": "@types/express",
														"qualifiedName": "e.NextFunction"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						6292
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						6301,
						6312
					]
				},
				{
					"title": "Functions",
					"children": [
						6276,
						6284
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						6276,
						6284
					]
				},
				{
					"title": "Interfaces",
					"children": [
						6292,
						6301,
						6312
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/libs/app-sdk/src/expressMiddleware/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/expressMiddleware/index.ts#L1"
				}
			]
		},
		{
			"id": 6076,
			"name": "jwt",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`jwt`"
					},
					{
						"kind": "text",
						"text": " module provides helper methods that allow you to decode and validate Vincent-specific JWTs.\n\nVincent JWTs are composed using the "
					},
					{
						"kind": "code",
						"text": "`did-jwt`"
					},
					{
						"kind": "text",
						"text": " library, but have a custom "
					},
					{
						"kind": "code",
						"text": "`alg`"
					},
					{
						"kind": "text",
						"text": " of "
					},
					{
						"kind": "code",
						"text": "`ES256K`"
					},
					{
						"kind": "text",
						"text": ", and are signed using\nPKP ethereum keys.\n\nVincent JWTs are issued by the Vincent Dashboard when a user provides delegation permission for your app to their agent PKP.\nThey are passed to your web app using a redirectUri which you configure on your app.\n\nThe methods exported by the "
					},
					{
						"kind": "code",
						"text": "`jwt`"
					},
					{
						"kind": "text",
						"text": " module are low-level - you probably will just want to use "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "getWebAuthClient",
						"target": 6250
					},
					{
						"kind": "text",
						"text": " to get\na "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "WebAuthClient",
						"target": 6253
					},
					{
						"kind": "text",
						"text": " which handles the redirect process, parsing the JWT from the URL, and verifying it for you."
					}
				]
			},
			"children": [
				{
					"id": 6233,
					"name": "VincentJWT",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface representing a decoded Vincent JWT\n\n VincentJWT"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6237,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.data"
							}
						},
						{
							"id": 6235,
							"name": "header",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L8"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/did-jwt@8.0.17/node_modules/did-jwt/src/JWT.ts",
									"qualifiedName": "JWTHeader"
								},
								"name": "JWTHeader",
								"package": "did-jwt",
								"externalUrl": "https://www.jsdocs.io/package/did-jwt"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.header"
							}
						},
						{
							"id": 6234,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payload of the JWT"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 74,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"target": 6238,
								"name": "VincentJWTPayload",
								"package": "@lit-protocol/vincent-app-sdk"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.payload"
							}
						},
						{
							"id": 6236,
							"name": "signature",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "JWTDecoded.signature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6237,
								6235,
								6234,
								6236
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
							"line": 73,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L73"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "src/jwt/types.ts",
								"qualifiedName": "JWTDecoded"
							},
							"name": "JWTDecoded",
							"package": "@lit-protocol/vincent-app-sdk"
						}
					]
				},
				{
					"id": 6238,
					"name": "VincentJWTPayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extended payload interface for Vincent-specific JWTs.\n\n VincentJWTPayload"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6240,
							"name": "app",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The app associated with the JWT."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L55"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6241,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6242,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
													"line": 56,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L56"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 6243,
											"name": "version",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
													"line": 57,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L57"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6242,
												6243
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
											"line": 55,
											"character": 7,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L55"
										}
									]
								}
							}
						},
						{
							"id": 6244,
							"name": "authentication",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The authentication method used to generate the JWT."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L59"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6245,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6246,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6247,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6246,
												6247
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
											"line": 59,
											"character": 18,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L59"
										}
									]
								}
							}
						},
						{
							"id": 6239,
							"name": "pkp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The PKP associated with the JWT."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L54"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/@lit-protocol+types@7.2.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@lit-protocol/types/src/lib/interfaces.d.ts",
									"qualifiedName": "IRelayPKP"
								},
								"name": "IRelayPKP",
								"package": "@lit-protocol/types",
								"externalUrl": "https://v7-api-doc-lit-js-sdk.vercel.app/modules/types_src.html"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6240,
								6244,
								6239
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
							"line": 53,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L53"
						}
					],
					"indexSignatures": [
						{
							"id": 6248,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/types.ts",
									"line": 53,
									"character": 17,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/types.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 6249,
									"name": "x",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/.pnpm/did-jwt@8.0.17/node_modules/did-jwt/src/JWT.ts",
								"qualifiedName": "JWTPayload"
							},
							"name": "JWTPayload",
							"package": "did-jwt",
							"externalUrl": "https://www.jsdocs.io/package/did-jwt"
						}
					]
				},
				{
					"id": 6212,
					"name": "decode",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/jwt/core/validate.ts",
							"line": 143,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/validate.ts#L143"
						}
					],
					"signatures": [
						{
							"id": 6213,
							"name": "decode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodes a Vincent JWT in string form and returns an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "VincentJWT",
										"target": 6233
									},
									{
										"kind": "text",
										"text": " decoded object for your use\n\n<div class=\"box info-box\">\n  <p class=\"box-title info-box-title\">\n    <span class=\"box-icon info-icon\">Info</span> Note\n  </p>\nThis method only <i><b>decodes</b></i> the JWT_ -- you still need to verify the JWT to be sure it is valid using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "verify",
										"target": 6215
									},
									{
										"kind": "text",
										"text": ".\nIf the JWT is expired, you need to use a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient",
										"target": 6253
									},
									{
										"kind": "text",
										"text": " to get a new JWT.\n\nSee "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getWebAuthClient",
										"target": 6250
									},
									{
										"kind": "text",
										"text": "\n\n</div>"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\n  import { decode, isExpired } from '@lit-protocol/vincent-app-sdk/jwt';\n\n  const decodedVincentJWT = decode(jwt);\n  const isJWTExpired = isExpired(decodedVincentJWT);\n\n  if(!isJWTExpired) {\n    // User is logged in\n    // You still need to verify the JWT!\n  } else {\n    // User needs to get a new JWT\n    webAuthClient.redirectToDelegationAuthPage({redirectUri: window.location.href });\n  }\n\n\n ```"
											}
										]
									}
								],
								"modifierTags": [
									"@expand"
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/core/validate.ts",
									"line": 143,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/validate.ts#L143"
								}
							],
							"parameters": [
								{
									"id": 6214,
									"name": "jwt",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 6233,
								"name": "VincentJWT",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				},
				{
					"id": 6209,
					"name": "isExpired",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/jwt/core/isExpired.ts",
							"line": 9,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/isExpired.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 6210,
							"name": "isExpired",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if a JWT is expired based on its 'exp' claim"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if expired, false otherwise"
											}
										]
									},
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/core/isExpired.ts",
									"line": 9,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/isExpired.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 6211,
									"name": "decodedJWT",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6233,
										"name": "VincentJWT",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 6215,
					"name": "verify",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/jwt/core/validate.ts",
							"line": 42,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/validate.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 6216,
							"name": "verify",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodes and verifies an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "VincentJWT",
										"target": 6233
									},
									{
										"kind": "text",
										"text": " token in string form\n\nThis function returns the decoded "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "VincentJWT",
										"target": 6233
									},
									{
										"kind": "text",
										"text": " object only if:\n1. The JWT signature is valid\n2. The JWT is not expired\n3. All time claims (nbf, iat) are valid\n4. The JWT has an audience claim that includes the expected audience"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The decoded VincentJWT object if it was verified successfully"
											}
										]
									},
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									},
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\n import { verify } from '@lit-protocol/vincent-app-sdk/jwt';\n\n try {\n   const decodedAndVerifiedVincentJWT = verify(jwt, 'https://myapp.com');\n  } catch(e) {\n   // Handle invalid/expired JWT casew\n }\n```"
											}
										]
									}
								],
								"modifierTags": [
									"@expand"
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/jwt/core/validate.ts",
									"line": 42,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/core/validate.ts#L42"
								}
							],
							"parameters": [
								{
									"id": 6217,
									"name": "jwt",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The JWT string to verify"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6218,
									"name": "expectedAudience",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "String that should be in the audience claim(s)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 6233,
								"name": "VincentJWT",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						6233,
						6238
					]
				},
				{
					"title": "Functions",
					"children": [
						6212,
						6209,
						6215
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						6212,
						6209,
						6215
					]
				},
				{
					"title": "Interfaces",
					"children": [
						6233,
						6238
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/libs/app-sdk/src/jwt/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/jwt/index.ts#L1"
				}
			]
		},
		{
			"id": 6073,
			"name": "abilityClient",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The VincentAbilityClient is used to handle all interactions with VincentAbilities -- both local execution of its precheck()\nmethod and the execution of its "
					},
					{
						"kind": "code",
						"text": "`execute()`"
					},
					{
						"kind": "text",
						"text": " method via the LIT Action runtime.  The VincentAbilityClient also handles calling policy\nprecheck methods when they are defined, and returns all policy precheck results along with the ability precheck result."
					}
				]
			},
			"children": [
				{
					"id": 6126,
					"name": "BaseAbilityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "BaseAbilityContext is returned with ability execution results, and contains information about the app, delegation, and\npolicy evaluation results for any policies that the user had enabled for the ability."
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6129,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.appId"
							}
						},
						{
							"id": 6130,
							"name": "appVersion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.appVersion"
							}
						},
						{
							"id": 6131,
							"name": "delegation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6132,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6133,
											"name": "delegateeAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
													"line": 252,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6134,
											"name": "delegatorPkpInfo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
													"line": 253,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 6135,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 6137,
															"name": "ethAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
																	"line": 255,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 6138,
															"name": "publicKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
																	"line": 256,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 6136,
															"name": "tokenId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
																	"line": 254,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																6137,
																6138,
																6136
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
															"line": 253,
															"character": 26
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6133,
												6134
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
											"line": 251,
											"character": 16
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.delegation"
							}
						},
						{
							"id": 6127,
							"name": "policiesContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/ability-sdk/dist/src/lib/abilityCore/abilityConfig/context/types.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 6139,
								"name": "Policies",
								"package": "@lit-protocol/vincent-ability-sdk",
								"qualifiedName": "BaseAbilityContext.Policies",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6128,
							"name": "abilityIpfsCid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/libs/ability-sdk/dist/src/lib/types.d.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseContext.abilityIpfsCid"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6129,
								6130,
								6131,
								6127,
								6128
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/ability-sdk/dist/src/lib/abilityCore/abilityConfig/context/types.d.ts",
							"line": 8,
							"character": 17
						}
					],
					"typeParameters": [
						{
							"id": 6139,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../ability-sdk/src/lib/types.ts",
								"qualifiedName": "BaseContext"
							},
							"name": "BaseContext",
							"package": "@lit-protocol/vincent-ability-sdk"
						}
					]
				},
				{
					"id": 6124,
					"name": "AbilityClientContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6125,
							"name": "delegatorPkpEthAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6125
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
							"line": 70,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L70"
						}
					]
				},
				{
					"id": 6157,
					"name": "AbilityExecuteResponseFailure",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6162,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6164,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseFailure.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6161,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 6163,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityExecuteResponseFailure.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6159,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6160,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6158,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L27"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6162,
								6161,
								6159,
								6160,
								6158
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L26"
						}
					],
					"typeParameters": [
						{
							"id": 6163,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 6164,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6150,
					"name": "AbilityExecuteResponseFailureNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6155,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6156,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseFailureNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6154,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 6152,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6153,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6151,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L36"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6155,
								6154,
								6152,
								6153,
								6151
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
							"line": 35,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L35"
						}
					],
					"typeParameters": [
						{
							"id": 6156,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6170,
					"name": "AbilityExecuteResponseSuccess",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6173,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6175,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseSuccess.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6172,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 6174,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityExecuteResponseSuccess.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6171,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6173,
								6172,
								6171
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L12"
						}
					],
					"typeParameters": [
						{
							"id": 6174,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 6175,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6165,
					"name": "AbilityExecuteResponseSuccessNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6168,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../ability-sdk/src/lib/types.ts",
											"qualifiedName": "PolicyEvaluationResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6169,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityExecuteResponseSuccessNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyEvaluationResultContext",
										"package": "@lit-protocol/vincent-ability-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6167,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 6166,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6168,
								6167,
								6166
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L19"
						}
					],
					"typeParameters": [
						{
							"id": 6169,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6187,
					"name": "AbilityPrecheckResponseFailure",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6192,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6194,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseFailure.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6191,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 6193,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityPrecheckResponseFailure.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6189,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6190,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6188,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L26"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6192,
								6191,
								6189,
								6190,
								6188
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
							"line": 25,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L25"
						}
					],
					"typeParameters": [
						{
							"id": 6193,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 6194,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6180,
					"name": "AbilityPrecheckResponseFailureNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6185,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L39"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6186,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseFailureNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6184,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 6182,
							"name": "runtimeError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6183,
							"name": "schemaValidationError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ability-sdk/src/lib/types.ts",
									"qualifiedName": "SchemaValidationError"
								},
								"name": "SchemaValidationError",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6181,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L35"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6185,
								6184,
								6182,
								6183,
								6181
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
							"line": 34,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L34"
						}
					],
					"typeParameters": [
						{
							"id": 6186,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6200,
					"name": "AbilityPrecheckResponseSuccess",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6203,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6205,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseSuccess.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6202,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L13"
								}
							],
							"type": {
								"type": "reference",
								"target": 6204,
								"name": "Result",
								"package": "@lit-protocol/vincent-app-sdk",
								"qualifiedName": "AbilityPrecheckResponseSuccess.Result",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6201,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6203,
								6202,
								6201
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L11"
						}
					],
					"typeParameters": [
						{
							"id": 6204,
							"name": "Result",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 6205,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6195,
					"name": "AbilityPrecheckResponseSuccessNoResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6198,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L21"
								}
							],
							"type": {
								"type": "reference",
								"target": 6126,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/abilityClient/precheck/types.ts",
											"qualifiedName": "PolicyPrecheckResultContext"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6199,
												"name": "Policies",
												"package": "@lit-protocol/vincent-app-sdk",
												"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.Policies",
												"refersToTypeParameter": true
											}
										],
										"name": "PolicyPrecheckResultContext",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								],
								"name": "BaseAbilityContext",
								"package": "@lit-protocol/vincent-ability-sdk"
							}
						},
						{
							"id": 6197,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 6196,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6198,
								6197,
								6196
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L18"
						}
					],
					"typeParameters": [
						{
							"id": 6199,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6107,
					"name": "VincentAbilityClient",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Vincent Ability Client is used to interact with Vincent abilities.\n\n- Precheck ability parameters and policies\n- Execute abilities remotely"
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6114,
							"name": "execute",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L63"
								}
							],
							"signatures": [
								{
									"id": 6115,
									"name": "execute",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Executes the ability with the given parameters.\n\nThis method validates the ability parameters, executes the ability remotely, and returns the result."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves to a AbilityResponse containing the execution result"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
											"line": 63,
											"character": 2,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L63"
										}
									],
									"parameters": [
										{
											"id": 6116,
											"name": "rawAbilityParams",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parameters to be passed to the tool"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "AbilityParamsSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.AbilityParamsSchema",
														"refersToTypeParameter": true
													}
												],
												"name": "TypeOf",
												"package": "zod"
											}
										},
										{
											"id": 6117,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The context for the ability execution, including the delegator PKP Ethereum address"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6124,
												"name": "AbilityClientContext",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6146,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "ExecuteSuccessSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.ExecuteSuccessSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "ExecuteFailSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.ExecuteFailSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PoliciesByPackageName",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PoliciesByPackageName",
														"refersToTypeParameter": true
													}
												],
												"name": "AbilityExecuteResponse",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 6108,
							"name": "precheck",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L44"
								}
							],
							"signatures": [
								{
									"id": 6109,
									"name": "precheck",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Performs a precheck of the ability parameters and policies.\n\nThis method validates the ability parameters and checks if the policies allow the ability to be executed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves to a AbilityResponse containing the precheck result"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L44"
										}
									],
									"parameters": [
										{
											"id": 6110,
											"name": "rawAbilityParams",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parameters to be passed to the tool"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
													"qualifiedName": "TypeOf"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "AbilityParamsSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.AbilityParamsSchema",
														"refersToTypeParameter": true
													}
												],
												"name": "TypeOf",
												"package": "zod"
											}
										},
										{
											"id": 6111,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The context for the ability execution, including the delegator PKP Ethereum address"
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 6124,
														"name": "AbilityClientContext",
														"package": "@lit-protocol/vincent-app-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 6112,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 6113,
																	"name": "rpcUrl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
																			"line": 47,
																			"character": 6,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L47"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		6113
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
																	"line": 46,
																	"character": 33,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L46"
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 6176,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "PrecheckSuccessSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PrecheckSuccessSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PrecheckFailSchema",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PrecheckFailSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "PoliciesByPackageName",
														"package": "@lit-protocol/vincent-app-sdk",
														"qualifiedName": "VincentAbilityClient.PoliciesByPackageName",
														"refersToTypeParameter": true
													}
												],
												"name": "AbilityPrecheckResponse",
												"package": "@lit-protocol/vincent-app-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								6114,
								6108
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/types.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/types.ts#L27"
						}
					]
				},
				{
					"id": 6146,
					"name": "AbilityExecuteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/execute/types.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/execute/types.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 6147,
							"name": "SuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 6148,
							"name": "FailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 6149,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 6147,
									"name": "SuccessSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 6170,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 6147,
													"name": "SuccessSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 6149,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseSuccess",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 6165,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6149,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseSuccessNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 6148,
									"name": "FailSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 6157,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 6148,
													"name": "FailSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 6149,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseFailure",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 6150,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6149,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						]
					}
				},
				{
					"id": 6176,
					"name": "AbilityPrecheckResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/precheck/types.ts",
							"line": 43,
							"character": 12,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/precheck/types.ts#L43"
						}
					],
					"typeParameters": [
						{
							"id": 6177,
							"name": "SuccessSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 6178,
							"name": "FailSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
											"qualifiedName": "ZodType"
										},
										"name": "z.ZodType",
										"package": "zod",
										"qualifiedName": "ZodType"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 6179,
							"name": "Policies",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 6177,
									"name": "SuccessSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 6200,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 6177,
													"name": "SuccessSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 6179,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseSuccess",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 6195,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6179,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseSuccessNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 6178,
									"name": "FailSchema",
									"package": "@lit-protocol/vincent-app-sdk",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
										"qualifiedName": "ZodType"
									},
									"name": "z.ZodType",
									"package": "zod",
									"qualifiedName": "ZodType"
								},
								"trueType": {
									"type": "reference",
									"target": 6187,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/zod@3.25.64/node_modules/zod/dist/types/v3/types.d.ts",
												"qualifiedName": "TypeOf"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 6178,
													"name": "FailSchema",
													"package": "@lit-protocol/vincent-app-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "z.infer",
											"package": "zod",
											"qualifiedName": "TypeOf"
										},
										{
											"type": "reference",
											"target": 6179,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseFailure",
									"package": "@lit-protocol/vincent-app-sdk"
								},
								"falseType": {
									"type": "reference",
									"target": 6180,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6179,
											"name": "Policies",
											"package": "@lit-protocol/vincent-app-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "AbilityPrecheckResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						]
					}
				},
				{
					"id": 6074,
					"name": "disconnectVincentAbilityClients",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method closes any registered event listeners maintained by Vincent Ability Clients, allowing your process to exit gracefully."
							}
						],
						"blockTags": [
							{
								"tag": "@category",
								"content": [
									{
										"kind": "text",
										"text": "API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/index.ts",
							"line": 22,
							"character": 6,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/index.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 6075,
							"name": "disconnectVincentAbilityClients",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/index.ts",
									"line": 22,
									"character": 6,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/index.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6092,
					"name": "getVincentAbilityClient",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts",
							"line": 113,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L113"
						}
					],
					"signatures": [
						{
							"id": 6093,
							"name": "getVincentAbilityClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A VincentAbilityClient provides a type-safe interface for executing abilities, for both "
									},
									{
										"kind": "code",
										"text": "`precheck()`"
									},
									{
										"kind": "text",
										"text": "\nand "
									},
									{
										"kind": "code",
										"text": "`execute()`"
									},
									{
										"kind": "text",
										"text": " functionality.\n\n"
									},
									{
										"kind": "code",
										"text": "```typescript\nimport { disconnectVincentAbilityClients, getVincentAbilityClient, isAbilityResponseFailure } from '@lit-protocol/vincent-app-sdk/abilityClient';\nimport { bundledVincentAbility as uniswapBundledAbility } from '@lit-protocol/vincent-ability-uniswap-swap';\nimport { delegateeEthersSigner } = from './ethersSigner';\nimport { ETH_RPC_URL, BASE_RPC_URL } from './rpcConfigs';\n\nconst uniswapAbilityClient = getVincentAbilityClient({\n    bundledVincentAbility: uniswapBundledAbility,\n    ethersSigner: delegateeEthersSigner,\n  });\n\n// First, call `precheck()` to get a best-estimate result indicating that the ability execution in the LIT action runtime will not fail\nconst precheckResult = await uniswapSwapAbilityClient.precheck({\n    ethRpcUrl: ETH_RPC_URL,\n    rpcUrlForUniswap: BASE_RPC_URL,\n    chainIdForUniswap: 8453, // Base\n    tokenInAddress: '0x4200000000000000000000000000000000000006', // WETH\n    tokenInDecimals: 18,\n    tokenInAmount: 0.0000077,\n    tokenOutAddress: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', // USDC on Base\n    tokenOutDecimals: 8,\n  },\n  {\n    delegatorPkpEthAddress: '0x123456789123456789123456789...',\n  });\n\nconst uniswapSwapExecutionResult = await uniswapSwapAbilityClient.execute({\n  ethRpcUrl: ETH_RPC_URL,\n  rpcUrlForUniswap: BASE_RPC_URL,\n  chainIdForUniswap: 8453,\n  tokenInAddress: '0x4200000000000000000000000000000000000006', // WETH\n  tokenInDecimals: 18,\n  tokenInAmount: 0.0000077,\n  tokenOutAddress: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', // USDC on Base\n  tokenOutDecimals: 8,\n},\n{\n  delegatorPkpEthAddress: '0x123456789123456789123456789...',\n});\n\nif(isAbilityResponseFailure(uniswapSwapExecutionResult)) {\n  ...handle failure\n} else {\n ...handle result\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts",
									"line": 113,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L113"
								}
							],
							"parameters": [
								{
									"id": 6103,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6104,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6105,
													"name": "bundledVincentAbility",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts",
															"line": 124,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L124"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../ability-sdk/src/lib/abilityCore/bundledAbility/types.ts",
															"qualifiedName": "BundledVincentAbility"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../ability-sdk/src/lib/types.ts",
																	"qualifiedName": "VincentAbility"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "AbilityParamsSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PkgNames",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PolicyMap",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PoliciesByPackageName",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "ExecuteSuccessSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "ExecuteFailSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PrecheckSuccessSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "PrecheckFailSchema",
																		"package": "@lit-protocol/vincent-app-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "VincentAbility",
																"package": "@lit-protocol/vincent-ability-sdk"
															},
															{
																"type": "reference",
																"target": -1,
																"name": "IpfsCid",
																"package": "@lit-protocol/vincent-app-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "BundledVincentAbility",
														"package": "@lit-protocol/vincent-ability-sdk"
													}
												},
												{
													"id": 6106,
													"name": "ethersSigner",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An ethers signer that has been configured with your delegatee key"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts",
															"line": 139,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L139"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
															"qualifiedName": "Signer"
														},
														"name": "Signer",
														"package": "@ethersproject/abstract-signer",
														"externalUrl": "https://docs.ethers.org/v5/api/"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6105,
														6106
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts",
													"line": 123,
													"character": 10,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/vincentAbilityClient.ts#L123"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 6107,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "AbilityParamsSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PoliciesByPackageName",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "ExecuteSuccessSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "ExecuteFailSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PrecheckSuccessSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "PrecheckFailSchema",
										"package": "@lit-protocol/vincent-app-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "VincentAbilityClient",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				},
				{
					"id": 6089,
					"name": "isAbilityResponseFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 6090,
							"name": "isAbilityResponseFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
									"line": 30,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 6091,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 6157,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseFailure",
											"package": "@lit-protocol/vincent-app-sdk"
										},
										{
											"type": "reference",
											"target": 6150,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseFailureNoResult",
											"package": "@lit-protocol/vincent-app-sdk"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 6083,
					"name": "isAbilityResponseRuntimeFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
							"line": 51,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 6084,
							"name": "isAbilityResponseRuntimeFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response that was a runtime error\nThis could be caused by code "
									},
									{
										"kind": "code",
										"text": "`throw()`"
									},
									{
										"kind": "text",
										"text": "ing an error from inside ability or policy code, or by errors encountered in the\nVincent SDK wrapping code that handles the execution of the tool/policies.\n\nThis could also be the result of a schema validation error -- use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "isAbilityResponseSchemaValidationFailure",
										"target": 6086
									},
									{
										"kind": "text",
										"text": " to check\nto see if have a data validation error."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
									"line": 51,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 6085,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 6150,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 6086,
					"name": "isAbilityResponseSchemaValidationFailure",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
							"line": 64,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 6087,
							"name": "isAbilityResponseSchemaValidationFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a failure ability response that was caused by\na schema parsing failure.  All data inputs and outputs to / from Vincent Abilities and Policies is validated using ZOD schemas.\n\nIf this returns true, you can parse the "
									},
									{
										"kind": "code",
										"text": "`schemaValidationError`"
									},
									{
										"kind": "text",
										"text": " property in the response - it is a ZodError object."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
									"line": 64,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L64"
								}
							],
							"parameters": [
								{
									"id": 6088,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 6150,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "AbilityExecuteResponseFailureNoResult",
									"package": "@lit-protocol/vincent-app-sdk"
								}
							}
						}
					]
				},
				{
					"id": 6080,
					"name": "isAbilityResponseSuccess",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 6081,
							"name": "isAbilityResponseSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type guard function that returns true only if the passed value is a successful ability response"
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "API"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/abilityClient/typeGuards.ts",
									"line": 15,
									"character": 16,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/typeGuards.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 6082,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 6170,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseSuccess",
											"package": "@lit-protocol/vincent-app-sdk"
										},
										{
											"type": "reference",
											"target": 6165,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "AbilityExecuteResponseSuccessNoResult",
											"package": "@lit-protocol/vincent-app-sdk"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						6126,
						6124,
						6157,
						6150,
						6170,
						6165,
						6187,
						6180,
						6200,
						6195,
						6107
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						6146,
						6176
					]
				},
				{
					"title": "Functions",
					"children": [
						6074,
						6092,
						6089,
						6083,
						6086,
						6080
					]
				}
			],
			"categories": [
				{
					"title": "API",
					"children": [
						6074,
						6092,
						6089,
						6083,
						6086,
						6080
					]
				},
				{
					"title": "Interfaces",
					"children": [
						6126,
						6124,
						6157,
						6150,
						6170,
						6165,
						6187,
						6180,
						6200,
						6195,
						6107,
						6146,
						6176
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/libs/app-sdk/src/abilityClient/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/abilityClient/index.ts#L1"
				}
			]
		},
		{
			"id": 6079,
			"name": "utils",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Utility functions for interacting with the Vincent delegation backend"
					}
				]
			},
			"children": [
				{
					"id": 6314,
					"name": "getDelegatorsAgentPkpAddresses",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/utils/delegation.ts",
							"line": 9,
							"character": 22,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/delegation.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 6315,
							"name": "getDelegatorsAgentPkpAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a (paginated) list of delegator agent PKPs for a specific app version\n\nSee documentation at "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "vincent-contracts-sdk!getDelegatedPkpEthAddresses | vincent-contracts-sdk/getDelegatedPkpEthAddresses"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/utils/delegation.ts",
									"line": 9,
									"character": 22,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/delegation.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 6316,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6317,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6318,
													"name": "appId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/utils/types.ts",
															"line": 8,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L8"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 6319,
													"name": "appVersion",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/utils/types.ts",
															"line": 9,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L9"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 6321,
													"name": "pageOpts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/utils/types.ts",
															"line": 11,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L11"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 6322,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 6324,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/libs/app-sdk/src/utils/types.ts",
																			"line": 11,
																			"character": 32,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L11"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 6323,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/libs/app-sdk/src/utils/types.ts",
																			"line": 11,
																			"character": 15,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L11"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		6324,
																		6323
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/libs/app-sdk/src/utils/types.ts",
																	"line": 11,
																	"character": 13,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L11"
																}
															]
														}
													}
												},
												{
													"id": 6320,
													"name": "signer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/libs/app-sdk/src/utils/types.ts",
															"line": 10,
															"character": 2,
															"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L10"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
															"qualifiedName": "Signer"
														},
														"name": "Signer",
														"package": "@ethersproject/abstract-signer",
														"externalUrl": "https://docs.ethers.org/v5/api/"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6318,
														6319,
														6321,
														6320
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/utils/types.ts",
													"line": 7,
													"character": 17,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/types.ts#L7"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						6314
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/libs/app-sdk/src/utils/typedocRoot.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/utils/typedocRoot.ts#L1"
				}
			]
		},
		{
			"id": 6077,
			"name": "webAuthClient",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The webAuthClient module contains methods and types that are used to implement authentication in Vincent web apps\nAuthentication is handled via redirects to the Vincent dashboard portal that return JWTs with authentication information\nthat can be used to secure your backend Vincent app UI.\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n```"
					}
				]
			},
			"children": [
				{
					"id": 6273,
					"name": "RedirectToVincentDelegationPageParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 6274,
							"name": "redirectUri",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6274
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
							"line": 7,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L7"
						}
					]
				},
				{
					"id": 6253,
					"name": "WebAuthClient",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Vincent Web Application Client is used in web apps to handle interactions with the Vincent app portal.\n\n- Delegation authorizxation page redirection\n- Authentication helpers that are browser specific"
							}
						]
					},
					"children": [
						{
							"id": 6261,
							"name": "decodeVincentLoginJWT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extracts a decoded/parsed Vincent JWT (JSON Web Token) from the current window location\n\nThe token is verified as part of this process; if the token is invalid or expired, this method will throw.\n\nSee: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.redirectToDelegationAuthPage",
										"target": 6254
									},
									{
										"kind": "text",
										"text": " for example usage"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If there was a JWT in the page URL, but it was invalid / could not be verified"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6262,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
											"line": 83,
											"character": 25,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
										}
									],
									"signatures": [
										{
											"id": 6263,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "code",
																"text": "`null`"
															},
															{
																"kind": "text",
																"text": " if no JWT is found, otherwise both the decoded jwt and the original JWT string is returned"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
													"line": 83,
													"character": 25,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L83"
												}
											],
											"parameters": [
												{
													"id": 6264,
													"name": "expectedAudience",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Provide a valid "
															},
															{
																"kind": "code",
																"text": "`redirectUri`"
															},
															{
																"kind": "text",
																"text": " for your app; this is typically your app's origin"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 6265,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 6266,
																	"name": "decodedJWT",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
																			"line": 85,
																			"character": 9,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 6233,
																		"name": "VincentJWT",
																		"package": "@lit-protocol/vincent-app-sdk"
																	}
																},
																{
																	"id": 6267,
																	"name": "jwtStr",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
																			"line": 85,
																			"character": 33,
																			"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		6266,
																		6267
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
																	"line": 85,
																	"character": 7,
																	"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L85"
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 6258,
							"name": "isLogin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the current window location is a login URI associated with Vincent\n\nYou can use this to detect if a user is loading your app as a result of approving permissions\non the Vincent delegation auth page -- e.g. they just logged in\n\nSee: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.redirectToDelegationAuthPage",
										"target": 6254
									},
									{
										"kind": "text",
										"text": " for example usage"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6259,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
											"line": 68,
											"character": 11,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
										}
									],
									"signatures": [
										{
											"id": 6260,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "code",
																"text": "`true`"
															},
															{
																"kind": "text",
																"text": " if the current window URI is a login URI, otherwise "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
													"line": 68,
													"character": 11,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 6254,
							"name": "redirectToDelegationAuthPage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Redirects the user to the Vincent delegation auth page.\n\nIf the user approves your app permissions, they will be redirected back to the "
									},
									{
										"kind": "code",
										"text": "`redirectUri`"
									},
									{
										"kind": "text",
										"text": ".\n\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.isLogin",
										"target": 6258
									},
									{
										"kind": "text",
										"text": " to detect if a user has just opened your app via the delegation auth page\n\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebAuthClient.decodeVincentLoginJWT",
										"target": 6261
									},
									{
										"kind": "text",
										"text": " to decode and verify the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "VincentJWT",
										"target": 6233
									},
									{
										"kind": "text",
										"text": " from the page URI, and store it for later usage\n\nNOTE: You must register the "
									},
									{
										"kind": "code",
										"text": "`redirectUri`"
									},
									{
										"kind": "text",
										"text": " on your Vincent app for it to be considered a valid redirect target"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n\nconst vincentAppClient = getWebAuthClient({ appId: MY_APP_ID });\n// ... In your app logic:\nif(vincentAppClient.isLogin()) {\n  // Handle app logic for the user has just logged in\n  const { decoded, jwt } = vincentAppClient.decodeVincentLoginJWT(EXPECTED_AUDIENCE);\n  // Store `jwt` for later usage; the user is now logged in.\n} else {\n  // Handle app logic for the user is already logged in (check for stored & unexpired JWT)\n  // ...\n   *   // Handle app logic for the user is not yet logged in\n vincentAppClient.redirectToDelegationAuthPage({ redirectUri: window.location.href });\n}\n```"
											}
										]
									},
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6255,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
											"line": 54,
											"character": 32,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
										}
									],
									"signatures": [
										{
											"id": 6256,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
													"line": 54,
													"character": 32,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L54"
												}
											],
											"parameters": [
												{
													"id": 6257,
													"name": "redirectConfig",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 6273,
														"name": "RedirectToVincentDelegationPageParams",
														"package": "@lit-protocol/vincent-app-sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 6268,
							"name": "removeLoginJWTFromURI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the Vincent login JWT from the current window URI.\n\nThis is useful for cleaning up the URL after decoding and storing the JWT,\nensuring the redirect URL looks clean for the user and no sensitive information\nis exposed in the URI."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { getWebAuthClient } from '@lit-protocol/vincent-app-sdk/webAuthClient';\n\nconst vincentAppClient = getWebAuthClient({ appId: MY_APP_ID });\n\nif (vincentAppClient.isLogin()) {\n  const { decodedJWT, jwtStr } = vincentAppClient.decodeVincentLoginJWT();\n  // Store the JWT and use it for authentication\n\n  // Now we can remove the JWT from the URL searchParams\n  vincentAppClient.removeLoginJWTFromURI();\n}\n```"
											}
										]
									},
									{
										"tag": "@function",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6269,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
											"line": 112,
											"character": 25,
											"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
										}
									],
									"signatures": [
										{
											"id": 6270,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
													"line": 112,
													"character": 25,
													"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L112"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6261,
								6258,
								6254,
								6268
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L22"
						}
					]
				},
				{
					"id": 6271,
					"name": "WebAuthClientConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 6272,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6272
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/webAuthClient/types.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/types.ts#L3"
						}
					]
				},
				{
					"id": 6250,
					"name": "getWebAuthClient",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WebAuthClient",
								"target": 6253
							},
							{
								"kind": "text",
								"text": " instance.\n\n- "
							},
							{
								"kind": "code",
								"text": "`appId`"
							},
							{
								"kind": "text",
								"text": " is the numeric app ID displayed for your app on the Vincent Dashboard"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/libs/app-sdk/src/webAuthClient/app.ts",
							"line": 31,
							"character": 13,
							"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/app.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 6251,
							"name": "getWebAuthClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/libs/app-sdk/src/webAuthClient/app.ts",
									"line": 31,
									"character": 32,
									"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/app.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 6252,
									"name": "appClientConfig",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6271,
										"name": "WebAuthClientConfig",
										"package": "@lit-protocol/vincent-app-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 6253,
								"name": "WebAuthClient",
								"package": "@lit-protocol/vincent-app-sdk"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						6273,
						6253,
						6271
					]
				},
				{
					"title": "Functions",
					"children": [
						6250
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/libs/app-sdk/src/webAuthClient/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/LIT-Protocol/Vincent/blob/4a88a3be3ac0da81b1483ef36bbbb6977653d1f7/packages/libs/app-sdk/src/webAuthClient/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				6078,
				6076,
				6073,
				6079,
				6077
			]
		}
	],
	"packageName": "@lit-protocol/vincent-app-sdk",
	"packageVersion": "1.0.2",
	"readme": [
		{
			"kind": "text",
			"text": "# Vincent SDK\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```\nnpm install @lit-protocol/vincent-app-sdk\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Usage\n\n# Client (Web)\n\n## VincentWebAppClient\n\nThe Vincent Web App Client provides methods for managing user authentication, JWT tokens, and consent flows in Vincent applications.\n\n### Methods\n\n#### redirectToConsentPage()\n\nRedirects the user to the Vincent consent page to obtain authorization. Once the user has completed the vincent consent flow\nthey will be redirected back to your app with a signed JWT that you can use to authenticate requests against your backend APIs\n\n- When a JWT is expired, you need to use this method to get a new JWT\n\n#### isLoginUri()\n\nChecks if the current window location contains a Vincent login JWT. You can use this method to know that you should update login state with the newly provided JWT\n\n- Returns: Boolean indicating if the URI contains a login JWT\n\n#### decodeVincentLoginJWT(expectedAudience)\n\nDecodes a Vincent login JWT. Performs basic sanity check but does not perform full verify() logic. You will want to run "
		},
		{
			"kind": "code",
			"text": "`verify()`"
		},
		{
			"kind": "text",
			"text": " from the jwt abilities to verify the JWT is fully valid and not expired etc.\n\n- The expected audience is typically your app's domain -- it should be one of your valid redirectUri values from your Vincent app configuration\n\n- Returns: An object containing both the original JWT string and the decoded JWT object\n\n#### removeLoginJWTFromURI()\n\nRemoves the login JWT parameter from the current URI. Call this after you have verified and stored the JWT for later usage.\n\n### Basic Usage\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport { getVincentWebAppClient, jwt } from '@lit-protocol/vincent-app-sdk';\n\nconst { isExpired } = jwt;\n\nconst vincentAppClient = getVincentWebAppClient({ appId: MY_APP_ID });\n// ... In your app logic:\nif (vincentAppClient.isLogin()) {\n  // Handle app logic for the user has just logged in\n  const { decoded, jwt } = vincentAppClient.decodeVincentLoginJWT(window.location.origin);\n  // Store `jwt` for later usage; the user is now logged in.\n} else {\n  // Handle app logic for the user is _already logged in_ (check for stored & unexpired JWT)\n\n  const jwt = localStorage.getItem('VINCENT_AUTH_JWT');\n  if (jwt && isExpired(jwt)) {\n    // User must re-log in\n    vincentAppClient.redirectToConsentPage({ redirectUri: window.location.href });\n  }\n\n  if (!jwt) {\n    // Handle app logic for the user is not yet logged in\n    vincentAppClient.redirectToConsentPage({ redirectUri: window.location.href });\n  }\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n# Backend\n\nIn your backend, you will have to verify the JWT to make sure the user has granted you the required permissions to act on their behalf.\n\n## VincentAbilityClient\n\nThe Vincent Ability Client uses an ethers signer for your delegatee account to run Vincent Abilities on behalf of your app users.\n\nThis client will typically be used by an AI agent or your app backend service, as it requires a signer that conforms to the ethers v5 signer API, and with access to your delegatee account's private key to authenticate with the LIT network when executing the Vincent Ability.\n\n### Configuration\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\ninterface VincentAbilityClientConfig {\n  ethersSigner: ethers.Signer; // An ethers v5 compatible signer\n  vincentAbilityCid: string; // The CID of the Vincent Ability to execute\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Methods\n\n#### execute(params: VincentAbilityParams): Promise<ExecuteJsResponse>\n\nExecutes a Vincent Ability with the provided parameters.\n\n- "
		},
		{
			"kind": "code",
			"text": "`params`"
		},
		{
			"kind": "text",
			"text": ": Record<string, unknown> - Parameters to pass to the Vincent Ability\n- Returns: Promise resolving to an ExecuteJsResponse from the LIT network\n\n### Ability execution\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport { getVincentAbilityClient } from '@lit-protocol/vincent-app-sdk';\n// Import the ability you want to execute\nimport { bundledVincentAbility as erc20BundledAbility } from '@lit-protocol/vincent-ability-erc20-approval';\n\n// One of delegatee signers from your app's Vincent Dashboard\nconst delegateeSigner = new ethers.Wallet('YOUR_DELEGATEE_PRIVATE_KEY');\n\n// Initialize the Vincent Ability Client\nconst abilityClient = getVincentAbilityClient({\n  ethersSigner: delegateeSigner,\n  bundledVincentAbility: erc20BundledAbility,\n});\nconst delegatorPkpEthAddress = '0x09182301238';\n\nconst abilityParams = {\n  // Fill with the params your ability needs\n};\n\n// Run precheck to see if ability should be executed\nconst precheckResult = await client.precheck(abilityParams, {\n  delegatorPkpEthAddress,\n});\n\nif (precheckResult.success === true) {\n  // Execute the Vincent Ability\n  const executeResult = await client.execute(abilityParams, {\n    delegatorPkpEthAddress,\n  });\n\n  // ...ability has executed, you can check `executeResult` for details\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Usage\n\n### Authentication\n\nA basic Express authentication middleware factory function is provided with the SDK.\n\n- Create an express middleware using "
		},
		{
			"kind": "code",
			"text": "`getAuthenticateUserExpressHandler()`"
		},
		{
			"kind": "text",
			"text": "\n- Once you have added the middleware to your route, use "
		},
		{
			"kind": "code",
			"text": "`authenticatedRequestHandler()`"
		},
		{
			"kind": "text",
			"text": " to provide\n  type-safe access to "
		},
		{
			"kind": "code",
			"text": "`req.user`"
		},
		{
			"kind": "text",
			"text": " in your downstream RequestHandler functions.\n- When defining your authenticated routes, use the "
		},
		{
			"kind": "code",
			"text": "`ExpressAuthHelpers`"
		},
		{
			"kind": "text",
			"text": " type to type your functions and function arguments.\n\nSee getAuthenticateUserExpressHandler() documentation to see the source for the express authentication route handler\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport { expressAuthHelpers } from '@lit-protocol/vincent-app-sdk';\nconst { authenticatedRequestHandler, getAuthenticateUserExpressHandler } = expressAuthHelpers;\n\nimport type { ExpressAuthHelpers } from '@lit-protocol/vincent-app-sdk';\n\nconst { ALLOWED_AUDIENCE } = process.env;\n\nconst authenticateUserMiddleware = getAuthenticateUserExpressHandler(ALLOWED_AUDIENCE);\n\n// Define an authenticated route handler\nconst getUserProfile = async (req: ExpressAuthHelpers['AuthenticatedRequest'], res: Response) => {\n  // Access authenticated user information\n  const { pkpAddress } = req.user;\n\n  // Fetch and return user data\n  const userData = await userRepository.findByAddress(pkpAddress);\n  res.json(userData);\n};\n\n// Use in Express route with authentication\napp.get('/profile', authenticateUser, authenticatedRequestHandler(getUserProfile));\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## JWT Authentication\n\n### Overview\n\nThe JWT authentication system in Vincent SDK allows for secure communication between user applications and Vincent Abilities. JWTs are used to verify user consent and authorize ability executions.\n\n### Authentication Flow\n\n1. User initiates an action requiring Vincent Ability access\n2. Application redirects to the Vincent consent page using "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient.redirectToConsentPage()`"
		},
		{
			"kind": "text",
			"text": "\n3. User provides consent for the requested abilities/policies\n4. User is redirected back to the application with a JWT in the URL\n5. Application validates and stores the JWT using "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient`"
		},
		{
			"kind": "text",
			"text": " methods\n6. JWT is used to authenticate with the app backend\n\n### JWT Structure\n\nVincent JWTs contain:\n\n- User account identity information (pkpAddress and pkpPublicKey)\n- Expiration timestamp\n- Signature from the Vincent authorization service\n\n### Error Handling\n\nWhen JWT validation fails, descriptive error messages are thrown to help with troubleshooting.\n\n### Usage Notes\n\n- JWTs have an expiration time after which they are no longer valid\n- When a JWT expires, redirect the user to the consent page to obtain a new one using the "
		},
		{
			"kind": "code",
			"text": "`VincentWebAppClient`"
		},
		{
			"kind": "text",
			"text": "\n\n## Release\n\nPre-requisites:\n\n- You will need a valid npm account with access to the "
		},
		{
			"kind": "code",
			"text": "`@lit-protocol`"
		},
		{
			"kind": "text",
			"text": " organization.\n- Run "
		},
		{
			"kind": "code",
			"text": "`pnpm vercel login`"
		},
		{
			"kind": "text",
			"text": " at sdk root to get a authentication token for vercel\n- Also you will need to fill the "
		},
		{
			"kind": "code",
			"text": "`.env`"
		},
		{
			"kind": "text",
			"text": " file with the vercel project and org ids for the [vincent-docs](https://vercel.com/lit-protocol/vincent-docs) project.\n\nThen run "
		},
		{
			"kind": "code",
			"text": "`pnpm release`"
		},
		{
			"kind": "text",
			"text": " on the repository root. It will prompt you to update the Vincent SDK version and then ask you to confirm the release.\nThis process will also generate a "
		},
		{
			"kind": "code",
			"text": "`CHANGELOG.md`"
		},
		{
			"kind": "text",
			"text": " record with the changes for the release and update typedoc in vercel after publishing the SDK."
		}
	],
	"symbolIdMap": {
		"6073": {
			"sourceFileName": "src/abilityClient/index.ts",
			"qualifiedName": ""
		},
		"6074": {
			"sourceFileName": "src/abilityClient/index.ts",
			"qualifiedName": "disconnectVincentAbilityClients"
		},
		"6075": {
			"sourceFileName": "src/internal/LitNodeClient/getLitNodeClient.ts",
			"qualifiedName": "disconnectVincentAbilityClients"
		},
		"6076": {
			"sourceFileName": "src/jwt/index.ts",
			"qualifiedName": ""
		},
		"6077": {
			"sourceFileName": "src/webAuthClient/index.ts",
			"qualifiedName": ""
		},
		"6078": {
			"sourceFileName": "src/expressMiddleware/index.ts",
			"qualifiedName": ""
		},
		"6079": {
			"sourceFileName": "src/utils/typedocRoot.ts",
			"qualifiedName": ""
		},
		"6080": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSuccess"
		},
		"6081": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSuccess"
		},
		"6082": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"6083": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseRuntimeFailure"
		},
		"6084": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseRuntimeFailure"
		},
		"6085": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"6086": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSchemaValidationFailure"
		},
		"6087": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseSchemaValidationFailure"
		},
		"6088": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"6089": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseFailure"
		},
		"6090": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "isAbilityResponseFailure"
		},
		"6091": {
			"sourceFileName": "src/abilityClient/typeGuards.ts",
			"qualifiedName": "value"
		},
		"6092": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "getVincentAbilityClient"
		},
		"6093": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "getVincentAbilityClient"
		},
		"6103": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "params"
		},
		"6104": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type"
		},
		"6105": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type.bundledVincentAbility"
		},
		"6106": {
			"sourceFileName": "src/abilityClient/vincentAbilityClient.ts",
			"qualifiedName": "__type.ethersSigner"
		},
		"6107": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient"
		},
		"6108": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.precheck"
		},
		"6109": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.precheck"
		},
		"6110": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "rawAbilityParams"
		},
		"6111": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "context"
		},
		"6112": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "__type"
		},
		"6113": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "__type.rpcUrl"
		},
		"6114": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.execute"
		},
		"6115": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "VincentAbilityClient.execute"
		},
		"6116": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "rawAbilityParams"
		},
		"6117": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "context"
		},
		"6124": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "AbilityClientContext"
		},
		"6125": {
			"sourceFileName": "src/abilityClient/types.ts",
			"qualifiedName": "AbilityClientContext.delegatorPkpEthAddress"
		},
		"6126": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext"
		},
		"6127": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext.policiesContext"
		},
		"6128": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.abilityIpfsCid"
		},
		"6129": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.appId"
		},
		"6130": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.appVersion"
		},
		"6131": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "BaseContext.delegation"
		},
		"6132": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"6133": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.delegateeAddress"
		},
		"6134": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.delegatorPkpInfo"
		},
		"6135": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type"
		},
		"6136": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"6137": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.ethAddress"
		},
		"6138": {
			"sourceFileName": "../ability-sdk/src/lib/types.ts",
			"qualifiedName": "__type.publicKey"
		},
		"6139": {
			"sourceFileName": "../ability-sdk/src/lib/abilityCore/abilityConfig/context/types.ts",
			"qualifiedName": "BaseAbilityContext.Policies"
		},
		"6146": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponse"
		},
		"6147": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "SuccessSchema"
		},
		"6148": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "FailSchema"
		},
		"6149": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "Policies"
		},
		"6150": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult"
		},
		"6151": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.success"
		},
		"6152": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.runtimeError"
		},
		"6153": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.schemaValidationError"
		},
		"6154": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.result"
		},
		"6155": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.context"
		},
		"6156": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailureNoResult.Policies"
		},
		"6157": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure"
		},
		"6158": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.success"
		},
		"6159": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.runtimeError"
		},
		"6160": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.schemaValidationError"
		},
		"6161": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.result"
		},
		"6162": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.context"
		},
		"6163": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.Result"
		},
		"6164": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseFailure.Policies"
		},
		"6165": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult"
		},
		"6166": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.success"
		},
		"6167": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.result"
		},
		"6168": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.context"
		},
		"6169": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccessNoResult.Policies"
		},
		"6170": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess"
		},
		"6171": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.success"
		},
		"6172": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.result"
		},
		"6173": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.context"
		},
		"6174": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.Result"
		},
		"6175": {
			"sourceFileName": "src/abilityClient/execute/types.ts",
			"qualifiedName": "AbilityExecuteResponseSuccess.Policies"
		},
		"6176": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponse"
		},
		"6177": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "SuccessSchema"
		},
		"6178": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "FailSchema"
		},
		"6179": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "Policies"
		},
		"6180": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult"
		},
		"6181": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.success"
		},
		"6182": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.runtimeError"
		},
		"6183": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.schemaValidationError"
		},
		"6184": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.result"
		},
		"6185": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.context"
		},
		"6186": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailureNoResult.Policies"
		},
		"6187": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure"
		},
		"6188": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.success"
		},
		"6189": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.runtimeError"
		},
		"6190": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.schemaValidationError"
		},
		"6191": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.result"
		},
		"6192": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.context"
		},
		"6193": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.Result"
		},
		"6194": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseFailure.Policies"
		},
		"6195": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult"
		},
		"6196": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.success"
		},
		"6197": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.result"
		},
		"6198": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.context"
		},
		"6199": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccessNoResult.Policies"
		},
		"6200": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess"
		},
		"6201": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.success"
		},
		"6202": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.result"
		},
		"6203": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.context"
		},
		"6204": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.Result"
		},
		"6205": {
			"sourceFileName": "src/abilityClient/precheck/types.ts",
			"qualifiedName": "AbilityPrecheckResponseSuccess.Policies"
		},
		"6209": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "isExpired"
		},
		"6210": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "isExpired"
		},
		"6211": {
			"sourceFileName": "src/jwt/core/isExpired.ts",
			"qualifiedName": "decodedJWT"
		},
		"6212": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"6213": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "decode"
		},
		"6214": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "jwt"
		},
		"6215": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"6216": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "verify"
		},
		"6217": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "jwt"
		},
		"6218": {
			"sourceFileName": "src/jwt/core/validate.ts",
			"qualifiedName": "expectedAudience"
		},
		"6233": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWT"
		},
		"6234": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWT.payload"
		},
		"6235": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.header"
		},
		"6236": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.signature"
		},
		"6237": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "JWTDecoded.data"
		},
		"6238": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTPayload"
		},
		"6239": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTPayload.pkp"
		},
		"6240": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTPayload.app"
		},
		"6241": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type"
		},
		"6242": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type.id"
		},
		"6243": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type.version"
		},
		"6244": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "VincentJWTPayload.authentication"
		},
		"6245": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type"
		},
		"6246": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type.type"
		},
		"6247": {
			"sourceFileName": "src/jwt/types.ts",
			"qualifiedName": "__type.value"
		},
		"6248": {
			"sourceFileName": "../../../node_modules/.pnpm/did-jwt@8.0.17/node_modules/did-jwt/src/JWT.ts",
			"qualifiedName": "JWTPayload.__index"
		},
		"6250": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "getWebAuthClient"
		},
		"6251": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "getWebAuthClient"
		},
		"6252": {
			"sourceFileName": "src/webAuthClient/app.ts",
			"qualifiedName": "appClientConfig"
		},
		"6253": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient"
		},
		"6254": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.redirectToDelegationAuthPage"
		},
		"6255": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6256": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6257": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "redirectConfig"
		},
		"6258": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.isLogin"
		},
		"6259": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6260": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6261": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.decodeVincentLoginJWT"
		},
		"6262": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6263": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6264": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "expectedAudience"
		},
		"6265": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6266": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type.decodedJWT"
		},
		"6267": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type.jwtStr"
		},
		"6268": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClient.removeLoginJWTFromURI"
		},
		"6269": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6270": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "__type"
		},
		"6271": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClientConfig"
		},
		"6272": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "WebAuthClientConfig.appId"
		},
		"6273": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "RedirectToVincentDelegationPageParams"
		},
		"6274": {
			"sourceFileName": "src/webAuthClient/types.ts",
			"qualifiedName": "RedirectToVincentDelegationPageParams.redirectUri"
		},
		"6276": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "authenticatedRequestHandler"
		},
		"6277": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "authenticatedRequestHandler"
		},
		"6278": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "handler"
		},
		"6279": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"6280": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"6281": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "req"
		},
		"6282": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "res"
		},
		"6283": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "next"
		},
		"6284": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "getAuthenticateUserExpressHandler"
		},
		"6285": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "getAuthenticateUserExpressHandler"
		},
		"6286": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "allowedAudience"
		},
		"6287": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"6288": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "__function"
		},
		"6289": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "req"
		},
		"6290": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "res"
		},
		"6291": {
			"sourceFileName": "src/expressMiddleware/express.ts",
			"qualifiedName": "next"
		},
		"6292": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest"
		},
		"6293": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest.user"
		},
		"6294": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type"
		},
		"6295": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type.decodedJWT"
		},
		"6296": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type.rawJWT"
		},
		"6297": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest.P"
		},
		"6298": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest.ResBody"
		},
		"6299": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest.ReqBody"
		},
		"6300": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequest.ReqQuery"
		},
		"6301": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "AuthenticatedRequestHandler"
		},
		"6302": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type"
		},
		"6303": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "__type"
		},
		"6304": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "req"
		},
		"6305": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "res"
		},
		"6306": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "next"
		},
		"6307": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "P"
		},
		"6308": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ResBody"
		},
		"6309": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqBody"
		},
		"6310": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ReqQuery"
		},
		"6311": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "Locals"
		},
		"6312": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "ExtractRequestHandlerParams"
		},
		"6313": {
			"sourceFileName": "src/expressMiddleware/types.ts",
			"qualifiedName": "T"
		},
		"6314": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "getDelegatorsAgentPkpAddresses"
		},
		"6315": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "getDelegatorsAgentPkpAddresses"
		},
		"6316": {
			"sourceFileName": "src/utils/delegation.ts",
			"qualifiedName": "params"
		},
		"6317": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams"
		},
		"6318": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.appId"
		},
		"6319": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.appVersion"
		},
		"6320": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.signer"
		},
		"6321": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "GetDelegatorsAgentPkpsParams.pageOpts"
		},
		"6322": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type"
		},
		"6323": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type.offset"
		},
		"6324": {
			"sourceFileName": "src/utils/types.ts",
			"qualifiedName": "__type.limit"
		}
	},
	"files": {
		"entries": {
			"1": "src/abilityClient/index.ts",
			"2": "src/jwt/index.ts",
			"3": "src/webAuthClient/index.ts",
			"4": "src/expressMiddleware/index.ts",
			"5": "src/utils/typedocRoot.ts"
		},
		"reflections": {
			"1": 6073,
			"2": 6076,
			"3": 6077,
			"4": 6078,
			"5": 6079
		}
	}
}
