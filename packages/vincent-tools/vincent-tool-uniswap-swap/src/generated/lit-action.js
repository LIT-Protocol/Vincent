/**
 * DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
 * @type {string}
 */
const code = "\"use strict\";\n(() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __esm = (fn, res) => function __init() {\n    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n  };\n  var __commonJS = (cb, mod2) => function __require() {\n    return mod2 || (0, cb[__getOwnPropNames(cb)[0]])((mod2 = { exports: {} }).exports, mod2), mod2.exports;\n  };\n  var __export = (target, all) => {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod2, isNodeMode, target) => (target = mod2 != null ? __create(__getProtoOf(mod2)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod2 || !mod2.__esModule ? __defProp(target, \"default\", { value: mod2, enumerable: true }) : target,\n    mod2\n  ));\n  var __toCommonJS = (mod2) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod2);\n\n  // ../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/__dirname.js\n  var init_dirname = __esm({\n    \"../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/__dirname.js\"() {\n      \"use strict\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/process.js\n  var process_exports = {};\n  __export(process_exports, {\n    _debugEnd: () => _debugEnd,\n    _debugProcess: () => _debugProcess,\n    _events: () => _events,\n    _eventsCount: () => _eventsCount,\n    _exiting: () => _exiting,\n    _fatalExceptions: () => _fatalExceptions,\n    _getActiveHandles: () => _getActiveHandles,\n    _getActiveRequests: () => _getActiveRequests,\n    _kill: () => _kill,\n    _linkedBinding: () => _linkedBinding,\n    _maxListeners: () => _maxListeners,\n    _preload_modules: () => _preload_modules,\n    _rawDebug: () => _rawDebug,\n    _startProfilerIdleNotifier: () => _startProfilerIdleNotifier,\n    _stopProfilerIdleNotifier: () => _stopProfilerIdleNotifier,\n    _tickCallback: () => _tickCallback,\n    abort: () => abort,\n    addListener: () => addListener,\n    allowedNodeEnvironmentFlags: () => allowedNodeEnvironmentFlags,\n    arch: () => arch,\n    argv: () => argv,\n    argv0: () => argv0,\n    assert: () => assert,\n    binding: () => binding,\n    browser: () => browser,\n    chdir: () => chdir,\n    config: () => config,\n    cpuUsage: () => cpuUsage,\n    cwd: () => cwd,\n    debugPort: () => debugPort,\n    default: () => process,\n    dlopen: () => dlopen,\n    domain: () => domain,\n    emit: () => emit,\n    emitWarning: () => emitWarning,\n    env: () => env,\n    execArgv: () => execArgv,\n    execPath: () => execPath,\n    exit: () => exit,\n    features: () => features,\n    hasUncaughtExceptionCaptureCallback: () => hasUncaughtExceptionCaptureCallback,\n    hrtime: () => hrtime,\n    kill: () => kill,\n    listeners: () => listeners,\n    memoryUsage: () => memoryUsage,\n    moduleLoadList: () => moduleLoadList,\n    nextTick: () => nextTick,\n    off: () => off,\n    on: () => on,\n    once: () => once,\n    openStdin: () => openStdin,\n    pid: () => pid,\n    platform: () => platform,\n    ppid: () => ppid,\n    prependListener: () => prependListener,\n    prependOnceListener: () => prependOnceListener,\n    reallyExit: () => reallyExit,\n    release: () => release,\n    removeAllListeners: () => removeAllListeners,\n    removeListener: () => removeListener,\n    resourceUsage: () => resourceUsage,\n    setSourceMapsEnabled: () => setSourceMapsEnabled,\n    setUncaughtExceptionCaptureCallback: () => setUncaughtExceptionCaptureCallback,\n    stderr: () => stderr,\n    stdin: () => stdin,\n    stdout: () => stdout,\n    title: () => title,\n    umask: () => umask,\n    uptime: () => uptime,\n    version: () => version,\n    versions: () => versions\n  });\n  function unimplemented(name) {\n    throw new Error(\"Node.js process \" + name + \" is not supported by JSPM core outside of Node.js\");\n  }\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue)\n      return;\n    draining = false;\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n    if (queue.length)\n      drainQueue();\n  }\n  function drainQueue() {\n    if (draining)\n      return;\n    var timeout = setTimeout(cleanUpNextTick, 0);\n    draining = true;\n    var len = queue.length;\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n      while (++queueIndex < len) {\n        if (currentQueue)\n          currentQueue[queueIndex].run();\n      }\n      queueIndex = -1;\n      len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n  }\n  function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining)\n      setTimeout(drainQueue, 0);\n  }\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n  function noop() {\n  }\n  function _linkedBinding(name) {\n    unimplemented(\"_linkedBinding\");\n  }\n  function dlopen(name) {\n    unimplemented(\"dlopen\");\n  }\n  function _getActiveRequests() {\n    return [];\n  }\n  function _getActiveHandles() {\n    return [];\n  }\n  function assert(condition, message) {\n    if (!condition)\n      throw new Error(message || \"assertion error\");\n  }\n  function hasUncaughtExceptionCaptureCallback() {\n    return false;\n  }\n  function uptime() {\n    return _performance.now() / 1e3;\n  }\n  function hrtime(previousTimestamp) {\n    var baseNow = Math.floor((Date.now() - _performance.now()) * 1e-3);\n    var clocktime = _performance.now() * 1e-3;\n    var seconds = Math.floor(clocktime) + baseNow;\n    var nanoseconds = Math.floor(clocktime % 1 * 1e9);\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0];\n      nanoseconds = nanoseconds - previousTimestamp[1];\n      if (nanoseconds < 0) {\n        seconds--;\n        nanoseconds += nanoPerSec;\n      }\n    }\n    return [seconds, nanoseconds];\n  }\n  function on() {\n    return process;\n  }\n  function listeners(name) {\n    return [];\n  }\n  var queue, draining, currentQueue, queueIndex, title, arch, platform, env, argv, execArgv, version, versions, emitWarning, binding, umask, cwd, chdir, release, browser, _rawDebug, moduleLoadList, domain, _exiting, config, reallyExit, _kill, cpuUsage, resourceUsage, memoryUsage, kill, exit, openStdin, allowedNodeEnvironmentFlags, features, _fatalExceptions, setUncaughtExceptionCaptureCallback, _tickCallback, _debugProcess, _debugEnd, _startProfilerIdleNotifier, _stopProfilerIdleNotifier, stdout, stderr, stdin, abort, pid, ppid, execPath, debugPort, argv0, _preload_modules, setSourceMapsEnabled, _performance, nowOffset, nanoPerSec, _maxListeners, _events, _eventsCount, addListener, once, off, removeListener, removeAllListeners, emit, prependListener, prependOnceListener, process;\n  var init_process = __esm({\n    \"../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/process.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      queue = [];\n      draining = false;\n      queueIndex = -1;\n      Item.prototype.run = function() {\n        this.fun.apply(null, this.array);\n      };\n      title = \"browser\";\n      arch = \"x64\";\n      platform = \"browser\";\n      env = {\n        PATH: \"/usr/bin\",\n        LANG: typeof navigator !== \"undefined\" ? navigator.language + \".UTF-8\" : void 0,\n        PWD: \"/\",\n        HOME: \"/home\",\n        TMP: \"/tmp\"\n      };\n      argv = [\"/usr/bin/node\"];\n      execArgv = [];\n      version = \"v16.8.0\";\n      versions = {};\n      emitWarning = function(message, type) {\n        console.warn((type ? type + \": \" : \"\") + message);\n      };\n      binding = function(name) {\n        unimplemented(\"binding\");\n      };\n      umask = function(mask2) {\n        return 0;\n      };\n      cwd = function() {\n        return \"/\";\n      };\n      chdir = function(dir) {\n      };\n      release = {\n        name: \"node\",\n        sourceUrl: \"\",\n        headersUrl: \"\",\n        libUrl: \"\"\n      };\n      browser = true;\n      _rawDebug = noop;\n      moduleLoadList = [];\n      domain = {};\n      _exiting = false;\n      config = {};\n      reallyExit = noop;\n      _kill = noop;\n      cpuUsage = function() {\n        return {};\n      };\n      resourceUsage = cpuUsage;\n      memoryUsage = cpuUsage;\n      kill = noop;\n      exit = noop;\n      openStdin = noop;\n      allowedNodeEnvironmentFlags = {};\n      features = {\n        inspector: false,\n        debug: false,\n        uv: false,\n        ipv6: false,\n        tls_alpn: false,\n        tls_sni: false,\n        tls_ocsp: false,\n        tls: false,\n        cached_builtins: true\n      };\n      _fatalExceptions = noop;\n      setUncaughtExceptionCaptureCallback = noop;\n      _tickCallback = noop;\n      _debugProcess = noop;\n      _debugEnd = noop;\n      _startProfilerIdleNotifier = noop;\n      _stopProfilerIdleNotifier = noop;\n      stdout = void 0;\n      stderr = void 0;\n      stdin = void 0;\n      abort = noop;\n      pid = 2;\n      ppid = 1;\n      execPath = \"/bin/usr/node\";\n      debugPort = 9229;\n      argv0 = \"node\";\n      _preload_modules = [];\n      setSourceMapsEnabled = noop;\n      _performance = {\n        now: typeof performance !== \"undefined\" ? performance.now.bind(performance) : void 0,\n        timing: typeof performance !== \"undefined\" ? performance.timing : void 0\n      };\n      if (_performance.now === void 0) {\n        nowOffset = Date.now();\n        if (_performance.timing && _performance.timing.navigationStart) {\n          nowOffset = _performance.timing.navigationStart;\n        }\n        _performance.now = () => Date.now() - nowOffset;\n      }\n      nanoPerSec = 1e9;\n      hrtime.bigint = function(time) {\n        var diff = hrtime(time);\n        if (typeof BigInt === \"undefined\") {\n          return diff[0] * nanoPerSec + diff[1];\n        }\n        return BigInt(diff[0] * nanoPerSec) + BigInt(diff[1]);\n      };\n      _maxListeners = 10;\n      _events = {};\n      _eventsCount = 0;\n      addListener = on;\n      once = on;\n      off = on;\n      removeListener = on;\n      removeAllListeners = on;\n      emit = noop;\n      prependListener = on;\n      prependOnceListener = on;\n      process = {\n        version,\n        versions,\n        arch,\n        platform,\n        browser,\n        release,\n        _rawDebug,\n        moduleLoadList,\n        binding,\n        _linkedBinding,\n        _events,\n        _eventsCount,\n        _maxListeners,\n        on,\n        addListener,\n        once,\n        off,\n        removeListener,\n        removeAllListeners,\n        emit,\n        prependListener,\n        prependOnceListener,\n        listeners,\n        domain,\n        _exiting,\n        config,\n        dlopen,\n        uptime,\n        _getActiveRequests,\n        _getActiveHandles,\n        reallyExit,\n        _kill,\n        cpuUsage,\n        resourceUsage,\n        memoryUsage,\n        kill,\n        exit,\n        openStdin,\n        allowedNodeEnvironmentFlags,\n        assert,\n        features,\n        _fatalExceptions,\n        setUncaughtExceptionCaptureCallback,\n        hasUncaughtExceptionCaptureCallback,\n        emitWarning,\n        nextTick,\n        _tickCallback,\n        _debugProcess,\n        _debugEnd,\n        _startProfilerIdleNotifier,\n        _stopProfilerIdleNotifier,\n        stdout,\n        stdin,\n        stderr,\n        abort,\n        umask,\n        chdir,\n        cwd,\n        env,\n        title,\n        argv,\n        execArgv,\n        pid,\n        ppid,\n        execPath,\n        debugPort,\n        hrtime,\n        argv0,\n        _preload_modules,\n        setSourceMapsEnabled\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/process.js\n  var init_process2 = __esm({\n    \"../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/process.js\"() {\n      \"use strict\";\n      init_process();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/chunk-DtuTasat.js\n  function dew$2() {\n    if (_dewExec$2)\n      return exports$2;\n    _dewExec$2 = true;\n    exports$2.byteLength = byteLength;\n    exports$2.toByteArray = toByteArray;\n    exports$2.fromByteArray = fromByteArray;\n    var lookup = [];\n    var revLookup = [];\n    var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n    var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    }\n    revLookup[\"-\".charCodeAt(0)] = 62;\n    revLookup[\"_\".charCodeAt(0)] = 63;\n    function getLens(b64) {\n      var len2 = b64.length;\n      if (len2 % 4 > 0) {\n        throw new Error(\"Invalid string. Length must be a multiple of 4\");\n      }\n      var validLen = b64.indexOf(\"=\");\n      if (validLen === -1)\n        validLen = len2;\n      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;\n      return [validLen, placeHoldersLen];\n    }\n    function byteLength(b64) {\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function _byteLength(b64, validLen, placeHoldersLen) {\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function toByteArray(b64) {\n      var tmp;\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n      var curByte = 0;\n      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;\n      var i2;\n      for (i2 = 0; i2 < len2; i2 += 4) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];\n        arr[curByte++] = tmp >> 16 & 255;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n      }\n      if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;\n        arr[curByte++] = tmp & 255;\n      }\n      if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n      }\n      return arr;\n    }\n    function tripletToBase64(num) {\n      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n    }\n    function encodeChunk(uint8, start, end) {\n      var tmp;\n      var output2 = [];\n      for (var i2 = start; i2 < end; i2 += 3) {\n        tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);\n        output2.push(tripletToBase64(tmp));\n      }\n      return output2.join(\"\");\n    }\n    function fromByteArray(uint8) {\n      var tmp;\n      var len2 = uint8.length;\n      var extraBytes = len2 % 3;\n      var parts = [];\n      var maxChunkLength = 16383;\n      for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));\n      }\n      if (extraBytes === 1) {\n        tmp = uint8[len2 - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n      } else if (extraBytes === 2) {\n        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n      }\n      return parts.join(\"\");\n    }\n    return exports$2;\n  }\n  function dew$1() {\n    if (_dewExec$1)\n      return exports$1;\n    _dewExec$1 = true;\n    exports$1.read = function(buffer, offset, isLE2, mLen, nBytes) {\n      var e, m;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var nBits = -7;\n      var i = isLE2 ? nBytes - 1 : 0;\n      var d = isLE2 ? -1 : 1;\n      var s = buffer[offset + i];\n      i += d;\n      e = s & (1 << -nBits) - 1;\n      s >>= -nBits;\n      nBits += eLen;\n      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {\n      }\n      m = e & (1 << -nBits) - 1;\n      e >>= -nBits;\n      nBits += mLen;\n      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {\n      }\n      if (e === 0) {\n        e = 1 - eBias;\n      } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n      } else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n      }\n      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n    };\n    exports$1.write = function(buffer, value, offset, isLE2, mLen, nBytes) {\n      var e, m, c;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n      var i = isLE2 ? 0 : nBytes - 1;\n      var d = isLE2 ? 1 : -1;\n      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n      value = Math.abs(value);\n      if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n      } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n          e--;\n          c *= 2;\n        }\n        if (e + eBias >= 1) {\n          value += rt / c;\n        } else {\n          value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n          e++;\n          c /= 2;\n        }\n        if (e + eBias >= eMax) {\n          m = 0;\n          e = eMax;\n        } else if (e + eBias >= 1) {\n          m = (value * c - 1) * Math.pow(2, mLen);\n          e = e + eBias;\n        } else {\n          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n          e = 0;\n        }\n      }\n      for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {\n      }\n      e = e << mLen | m;\n      eLen += mLen;\n      for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {\n      }\n      buffer[offset + i - d] |= s * 128;\n    };\n    return exports$1;\n  }\n  function dew() {\n    if (_dewExec)\n      return exports;\n    _dewExec = true;\n    const base64 = dew$2();\n    const ieee754 = dew$1();\n    const customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") : null;\n    exports.Buffer = Buffer3;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n    const K_MAX_LENGTH = 2147483647;\n    exports.kMaxLength = K_MAX_LENGTH;\n    Buffer3.TYPED_ARRAY_SUPPORT = typedArraySupport();\n    if (!Buffer3.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n      console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n    }\n    function typedArraySupport() {\n      try {\n        const arr = new Uint8Array(1);\n        const proto = {\n          foo: function() {\n            return 42;\n          }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n      } catch (e) {\n        return false;\n      }\n    }\n    Object.defineProperty(Buffer3.prototype, \"parent\", {\n      enumerable: true,\n      get: function() {\n        if (!Buffer3.isBuffer(this))\n          return void 0;\n        return this.buffer;\n      }\n    });\n    Object.defineProperty(Buffer3.prototype, \"offset\", {\n      enumerable: true,\n      get: function() {\n        if (!Buffer3.isBuffer(this))\n          return void 0;\n        return this.byteOffset;\n      }\n    });\n    function createBuffer(length) {\n      if (length > K_MAX_LENGTH) {\n        throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n      }\n      const buf = new Uint8Array(length);\n      Object.setPrototypeOf(buf, Buffer3.prototype);\n      return buf;\n    }\n    function Buffer3(arg, encodingOrOffset, length) {\n      if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") {\n          throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        }\n        return allocUnsafe(arg);\n      }\n      return from(arg, encodingOrOffset, length);\n    }\n    Buffer3.poolSize = 8192;\n    function from(value, encodingOrOffset, length) {\n      if (typeof value === \"string\") {\n        return fromString(value, encodingOrOffset);\n      }\n      if (ArrayBuffer.isView(value)) {\n        return fromArrayView(value);\n      }\n      if (value == null) {\n        throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n      }\n      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n      if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n      if (typeof value === \"number\") {\n        throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n      }\n      const valueOf = value.valueOf && value.valueOf();\n      if (valueOf != null && valueOf !== value) {\n        return Buffer3.from(valueOf, encodingOrOffset, length);\n      }\n      const b2 = fromObject(value);\n      if (b2)\n        return b2;\n      if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n        return Buffer3.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n      }\n      throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    }\n    Buffer3.from = function(value, encodingOrOffset, length) {\n      return from(value, encodingOrOffset, length);\n    };\n    Object.setPrototypeOf(Buffer3.prototype, Uint8Array.prototype);\n    Object.setPrototypeOf(Buffer3, Uint8Array);\n    function assertSize(size) {\n      if (typeof size !== \"number\") {\n        throw new TypeError('\"size\" argument must be of type number');\n      } else if (size < 0) {\n        throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n      }\n    }\n    function alloc(size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(size);\n      }\n      if (fill !== void 0) {\n        return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n      }\n      return createBuffer(size);\n    }\n    Buffer3.alloc = function(size, fill, encoding) {\n      return alloc(size, fill, encoding);\n    };\n    function allocUnsafe(size) {\n      assertSize(size);\n      return createBuffer(size < 0 ? 0 : checked(size) | 0);\n    }\n    Buffer3.allocUnsafe = function(size) {\n      return allocUnsafe(size);\n    };\n    Buffer3.allocUnsafeSlow = function(size) {\n      return allocUnsafe(size);\n    };\n    function fromString(string, encoding) {\n      if (typeof encoding !== \"string\" || encoding === \"\") {\n        encoding = \"utf8\";\n      }\n      if (!Buffer3.isEncoding(encoding)) {\n        throw new TypeError(\"Unknown encoding: \" + encoding);\n      }\n      const length = byteLength(string, encoding) | 0;\n      let buf = createBuffer(length);\n      const actual = buf.write(string, encoding);\n      if (actual !== length) {\n        buf = buf.slice(0, actual);\n      }\n      return buf;\n    }\n    function fromArrayLike(array) {\n      const length = array.length < 0 ? 0 : checked(array.length) | 0;\n      const buf = createBuffer(length);\n      for (let i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n      }\n      return buf;\n    }\n    function fromArrayView(arrayView) {\n      if (isInstance(arrayView, Uint8Array)) {\n        const copy4 = new Uint8Array(arrayView);\n        return fromArrayBuffer(copy4.buffer, copy4.byteOffset, copy4.byteLength);\n      }\n      return fromArrayLike(arrayView);\n    }\n    function fromArrayBuffer(array, byteOffset, length) {\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\"offset\" is outside of buffer bounds');\n      }\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\"length\" is outside of buffer bounds');\n      }\n      let buf;\n      if (byteOffset === void 0 && length === void 0) {\n        buf = new Uint8Array(array);\n      } else if (length === void 0) {\n        buf = new Uint8Array(array, byteOffset);\n      } else {\n        buf = new Uint8Array(array, byteOffset, length);\n      }\n      Object.setPrototypeOf(buf, Buffer3.prototype);\n      return buf;\n    }\n    function fromObject(obj) {\n      if (Buffer3.isBuffer(obj)) {\n        const len = checked(obj.length) | 0;\n        const buf = createBuffer(len);\n        if (buf.length === 0) {\n          return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n      }\n      if (obj.length !== void 0) {\n        if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n          return createBuffer(0);\n        }\n        return fromArrayLike(obj);\n      }\n      if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n        return fromArrayLike(obj.data);\n      }\n    }\n    function checked(length) {\n      if (length >= K_MAX_LENGTH) {\n        throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n      }\n      return length | 0;\n    }\n    function SlowBuffer(length) {\n      if (+length != length) {\n        length = 0;\n      }\n      return Buffer3.alloc(+length);\n    }\n    Buffer3.isBuffer = function isBuffer(b2) {\n      return b2 != null && b2._isBuffer === true && b2 !== Buffer3.prototype;\n    };\n    Buffer3.compare = function compare(a, b2) {\n      if (isInstance(a, Uint8Array))\n        a = Buffer3.from(a, a.offset, a.byteLength);\n      if (isInstance(b2, Uint8Array))\n        b2 = Buffer3.from(b2, b2.offset, b2.byteLength);\n      if (!Buffer3.isBuffer(a) || !Buffer3.isBuffer(b2)) {\n        throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n      }\n      if (a === b2)\n        return 0;\n      let x = a.length;\n      let y = b2.length;\n      for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b2[i]) {\n          x = a[i];\n          y = b2[i];\n          break;\n        }\n      }\n      if (x < y)\n        return -1;\n      if (y < x)\n        return 1;\n      return 0;\n    };\n    Buffer3.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return true;\n        default:\n          return false;\n      }\n    };\n    Buffer3.concat = function concat2(list, length) {\n      if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n      if (list.length === 0) {\n        return Buffer3.alloc(0);\n      }\n      let i;\n      if (length === void 0) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n      const buffer = Buffer3.allocUnsafe(length);\n      let pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        let buf = list[i];\n        if (isInstance(buf, Uint8Array)) {\n          if (pos + buf.length > buffer.length) {\n            if (!Buffer3.isBuffer(buf))\n              buf = Buffer3.from(buf);\n            buf.copy(buffer, pos);\n          } else {\n            Uint8Array.prototype.set.call(buffer, buf, pos);\n          }\n        } else if (!Buffer3.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        } else {\n          buf.copy(buffer, pos);\n        }\n        pos += buf.length;\n      }\n      return buffer;\n    };\n    function byteLength(string, encoding) {\n      if (Buffer3.isBuffer(string)) {\n        return string.length;\n      }\n      if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n        return string.byteLength;\n      }\n      if (typeof string !== \"string\") {\n        throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n      }\n      const len = string.length;\n      const mustMatch = arguments.length > 2 && arguments[2] === true;\n      if (!mustMatch && len === 0)\n        return 0;\n      let loweredCase = false;\n      for (; ; ) {\n        switch (encoding) {\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n            return len;\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8ToBytes3(string).length;\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return len * 2;\n          case \"hex\":\n            return len >>> 1;\n          case \"base64\":\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) {\n              return mustMatch ? -1 : utf8ToBytes3(string).length;\n            }\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer3.byteLength = byteLength;\n    function slowToString(encoding, start, end) {\n      let loweredCase = false;\n      if (start === void 0 || start < 0) {\n        start = 0;\n      }\n      if (start > this.length) {\n        return \"\";\n      }\n      if (end === void 0 || end > this.length) {\n        end = this.length;\n      }\n      if (end <= 0) {\n        return \"\";\n      }\n      end >>>= 0;\n      start >>>= 0;\n      if (end <= start) {\n        return \"\";\n      }\n      if (!encoding)\n        encoding = \"utf8\";\n      while (true) {\n        switch (encoding) {\n          case \"hex\":\n            return hexSlice(this, start, end);\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8Slice(this, start, end);\n          case \"ascii\":\n            return asciiSlice(this, start, end);\n          case \"latin1\":\n          case \"binary\":\n            return latin1Slice(this, start, end);\n          case \"base64\":\n            return base64Slice(this, start, end);\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return utf16leSlice(this, start, end);\n          default:\n            if (loweredCase)\n              throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer3.prototype._isBuffer = true;\n    function swap(b2, n2, m) {\n      const i = b2[n2];\n      b2[n2] = b2[m];\n      b2[m] = i;\n    }\n    Buffer3.prototype.swap16 = function swap16() {\n      const len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n      }\n      for (let i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n    Buffer3.prototype.swap32 = function swap32() {\n      const len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n      }\n      for (let i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n    Buffer3.prototype.swap64 = function swap64() {\n      const len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n      }\n      for (let i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n    Buffer3.prototype.toString = function toString() {\n      const length = this.length;\n      if (length === 0)\n        return \"\";\n      if (arguments.length === 0)\n        return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n    Buffer3.prototype.toLocaleString = Buffer3.prototype.toString;\n    Buffer3.prototype.equals = function equals(b2) {\n      if (!Buffer3.isBuffer(b2))\n        throw new TypeError(\"Argument must be a Buffer\");\n      if (this === b2)\n        return true;\n      return Buffer3.compare(this, b2) === 0;\n    };\n    Buffer3.prototype.inspect = function inspect() {\n      let str = \"\";\n      const max = exports.INSPECT_MAX_BYTES;\n      str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n      if (this.length > max)\n        str += \" ... \";\n      return \"<Buffer \" + str + \">\";\n    };\n    if (customInspectSymbol) {\n      Buffer3.prototype[customInspectSymbol] = Buffer3.prototype.inspect;\n    }\n    Buffer3.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (isInstance(target, Uint8Array)) {\n        target = Buffer3.from(target, target.offset, target.byteLength);\n      }\n      if (!Buffer3.isBuffer(target)) {\n        throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n      }\n      if (start === void 0) {\n        start = 0;\n      }\n      if (end === void 0) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === void 0) {\n        thisStart = 0;\n      }\n      if (thisEnd === void 0) {\n        thisEnd = this.length;\n      }\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError(\"out of range index\");\n      }\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n      if (this === target)\n        return 0;\n      let x = thisEnd - thisStart;\n      let y = end - start;\n      const len = Math.min(x, y);\n      const thisCopy = this.slice(thisStart, thisEnd);\n      const targetCopy = target.slice(start, end);\n      for (let i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n      if (x < y)\n        return -1;\n      if (y < x)\n        return 1;\n      return 0;\n    };\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      if (buffer.length === 0)\n        return -1;\n      if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 2147483647) {\n        byteOffset = 2147483647;\n      } else if (byteOffset < -2147483648) {\n        byteOffset = -2147483648;\n      }\n      byteOffset = +byteOffset;\n      if (numberIsNaN(byteOffset)) {\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n      if (byteOffset < 0)\n        byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir)\n          return -1;\n        else\n          byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir)\n          byteOffset = 0;\n        else\n          return -1;\n      }\n      if (typeof val === \"string\") {\n        val = Buffer3.from(val, encoding);\n      }\n      if (Buffer3.isBuffer(val)) {\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === \"number\") {\n        val = val & 255;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n      throw new TypeError(\"val must be string, number or Buffer\");\n    }\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      let indexSize = 1;\n      let arrLength = arr.length;\n      let valLength = val.length;\n      if (encoding !== void 0) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n      function read(buf, i2) {\n        if (indexSize === 1) {\n          return buf[i2];\n        } else {\n          return buf.readUInt16BE(i2 * indexSize);\n        }\n      }\n      let i;\n      if (dir) {\n        let foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1)\n              foundIndex = i;\n            if (i - foundIndex + 1 === valLength)\n              return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1)\n              i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength)\n          byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          let found = true;\n          for (let j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found)\n            return i;\n        }\n      }\n      return -1;\n    }\n    Buffer3.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n    Buffer3.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n    Buffer3.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      const remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n      const strLen = string.length;\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      let i;\n      for (i = 0; i < length; ++i) {\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (numberIsNaN(parsed))\n          return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes3(string, buf.length - offset), buf, offset, length);\n    }\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n    Buffer3.prototype.write = function write(string, offset, length, encoding) {\n      if (offset === void 0) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n      } else if (length === void 0 && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n      } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n          length = length >>> 0;\n          if (encoding === void 0)\n            encoding = \"utf8\";\n        } else {\n          encoding = length;\n          length = void 0;\n        }\n      } else {\n        throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n      }\n      const remaining = this.length - offset;\n      if (length === void 0 || length > remaining)\n        length = remaining;\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError(\"Attempt to write outside buffer bounds\");\n      }\n      if (!encoding)\n        encoding = \"utf8\";\n      let loweredCase = false;\n      for (; ; ) {\n        switch (encoding) {\n          case \"hex\":\n            return hexWrite(this, string, offset, length);\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8Write(this, string, offset, length);\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n            return asciiWrite(this, string, offset, length);\n          case \"base64\":\n            return base64Write(this, string, offset, length);\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return ucs2Write(this, string, offset, length);\n          default:\n            if (loweredCase)\n              throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n    Buffer3.prototype.toJSON = function toJSON() {\n      return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      const res = [];\n      let i = start;\n      while (i < end) {\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n          let secondByte, thirdByte, fourthByte, tempCodePoint;\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 128) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 192) === 128) {\n                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                if (tempCodePoint > 127) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n        if (codePoint === null) {\n          codePoint = 65533;\n          bytesPerSequence = 1;\n        } else if (codePoint > 65535) {\n          codePoint -= 65536;\n          res.push(codePoint >>> 10 & 1023 | 55296);\n          codePoint = 56320 | codePoint & 1023;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n      return decodeCodePointsArray(res);\n    }\n    const MAX_ARGUMENTS_LENGTH = 4096;\n    function decodeCodePointsArray(codePoints) {\n      const len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints);\n      }\n      let res = \"\";\n      let i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n      return res;\n    }\n    function asciiSlice(buf, start, end) {\n      let ret = \"\";\n      end = Math.min(buf.length, end);\n      for (let i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 127);\n      }\n      return ret;\n    }\n    function latin1Slice(buf, start, end) {\n      let ret = \"\";\n      end = Math.min(buf.length, end);\n      for (let i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n    function hexSlice(buf, start, end) {\n      const len = buf.length;\n      if (!start || start < 0)\n        start = 0;\n      if (!end || end < 0 || end > len)\n        end = len;\n      let out = \"\";\n      for (let i = start; i < end; ++i) {\n        out += hexSliceLookupTable[buf[i]];\n      }\n      return out;\n    }\n    function utf16leSlice(buf, start, end) {\n      const bytes2 = buf.slice(start, end);\n      let res = \"\";\n      for (let i = 0; i < bytes2.length - 1; i += 2) {\n        res += String.fromCharCode(bytes2[i] + bytes2[i + 1] * 256);\n      }\n      return res;\n    }\n    Buffer3.prototype.slice = function slice(start, end) {\n      const len = this.length;\n      start = ~~start;\n      end = end === void 0 ? len : ~~end;\n      if (start < 0) {\n        start += len;\n        if (start < 0)\n          start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n      if (end < 0) {\n        end += len;\n        if (end < 0)\n          end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n      if (end < start)\n        end = start;\n      const newBuf = this.subarray(start, end);\n      Object.setPrototypeOf(newBuf, Buffer3.prototype);\n      return newBuf;\n    };\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0)\n        throw new RangeError(\"offset is not uint\");\n      if (offset + ext > length)\n        throw new RangeError(\"Trying to access beyond buffer length\");\n    }\n    Buffer3.prototype.readUintLE = Buffer3.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert)\n        checkOffset(offset, byteLength2, this.length);\n      let val = this[offset];\n      let mul = 1;\n      let i = 0;\n      while (++i < byteLength2 && (mul *= 256)) {\n        val += this[offset + i] * mul;\n      }\n      return val;\n    };\n    Buffer3.prototype.readUintBE = Buffer3.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength2, this.length);\n      }\n      let val = this[offset + --byteLength2];\n      let mul = 1;\n      while (byteLength2 > 0 && (mul *= 256)) {\n        val += this[offset + --byteLength2] * mul;\n      }\n      return val;\n    };\n    Buffer3.prototype.readUint8 = Buffer3.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n    Buffer3.prototype.readUint16LE = Buffer3.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n    Buffer3.prototype.readUint16BE = Buffer3.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n    Buffer3.prototype.readUint32LE = Buffer3.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n    };\n    Buffer3.prototype.readUint32BE = Buffer3.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n    Buffer3.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n      const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n      return BigInt(lo) + (BigInt(hi) << BigInt(32));\n    });\n    Buffer3.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n      const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n      return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n    });\n    Buffer3.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert)\n        checkOffset(offset, byteLength2, this.length);\n      let val = this[offset];\n      let mul = 1;\n      let i = 0;\n      while (++i < byteLength2 && (mul *= 256)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 128;\n      if (val >= mul)\n        val -= Math.pow(2, 8 * byteLength2);\n      return val;\n    };\n    Buffer3.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert)\n        checkOffset(offset, byteLength2, this.length);\n      let i = byteLength2;\n      let mul = 1;\n      let val = this[offset + --i];\n      while (i > 0 && (mul *= 256)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 128;\n      if (val >= mul)\n        val -= Math.pow(2, 8 * byteLength2);\n      return val;\n    };\n    Buffer3.prototype.readInt8 = function readInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 128))\n        return this[offset];\n      return (255 - this[offset] + 1) * -1;\n    };\n    Buffer3.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 2, this.length);\n      const val = this[offset] | this[offset + 1] << 8;\n      return val & 32768 ? val | 4294901760 : val;\n    };\n    Buffer3.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 2, this.length);\n      const val = this[offset + 1] | this[offset] << 8;\n      return val & 32768 ? val | 4294901760 : val;\n    };\n    Buffer3.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n    Buffer3.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n    Buffer3.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);\n      return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n    });\n    Buffer3.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const val = (first << 24) + // Overflow\n      this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n      return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n    });\n    Buffer3.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n    Buffer3.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n    Buffer3.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n    Buffer3.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer3.isBuffer(buf))\n        throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min)\n        throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length)\n        throw new RangeError(\"Index out of range\");\n    }\n    Buffer3.prototype.writeUintLE = Buffer3.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n        checkInt(this, value, offset, byteLength2, maxBytes, 0);\n      }\n      let mul = 1;\n      let i = 0;\n      this[offset] = value & 255;\n      while (++i < byteLength2 && (mul *= 256)) {\n        this[offset + i] = value / mul & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeUintBE = Buffer3.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n        checkInt(this, value, offset, byteLength2, maxBytes, 0);\n      }\n      let i = byteLength2 - 1;\n      let mul = 1;\n      this[offset + i] = value & 255;\n      while (--i >= 0 && (mul *= 256)) {\n        this[offset + i] = value / mul & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeUint8 = Buffer3.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 1, 255, 0);\n      this[offset] = value & 255;\n      return offset + 1;\n    };\n    Buffer3.prototype.writeUint16LE = Buffer3.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 2, 65535, 0);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeUint16BE = Buffer3.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 2, 65535, 0);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 255;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeUint32LE = Buffer3.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 4, 4294967295, 0);\n      this[offset + 3] = value >>> 24;\n      this[offset + 2] = value >>> 16;\n      this[offset + 1] = value >>> 8;\n      this[offset] = value & 255;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeUint32BE = Buffer3.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 4, 4294967295, 0);\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 255;\n      return offset + 4;\n    };\n    function wrtBigUInt64LE(buf, value, offset, min, max) {\n      checkIntBI(value, min, max, buf, offset, 7);\n      let lo = Number(value & BigInt(4294967295));\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      return offset;\n    }\n    function wrtBigUInt64BE(buf, value, offset, min, max) {\n      checkIntBI(value, min, max, buf, offset, 7);\n      let lo = Number(value & BigInt(4294967295));\n      buf[offset + 7] = lo;\n      lo = lo >> 8;\n      buf[offset + 6] = lo;\n      lo = lo >> 8;\n      buf[offset + 5] = lo;\n      lo = lo >> 8;\n      buf[offset + 4] = lo;\n      let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n      buf[offset + 3] = hi;\n      hi = hi >> 8;\n      buf[offset + 2] = hi;\n      hi = hi >> 8;\n      buf[offset + 1] = hi;\n      hi = hi >> 8;\n      buf[offset] = hi;\n      return offset + 8;\n    }\n    Buffer3.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n      return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n    });\n    Buffer3.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n      return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n    });\n    Buffer3.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength2 - 1);\n        checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n      }\n      let i = 0;\n      let mul = 1;\n      let sub = 0;\n      this[offset] = value & 255;\n      while (++i < byteLength2 && (mul *= 256)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength2 - 1);\n        checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n      }\n      let i = byteLength2 - 1;\n      let mul = 1;\n      let sub = 0;\n      this[offset + i] = value & 255;\n      while (--i >= 0 && (mul *= 256)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 1, 127, -128);\n      if (value < 0)\n        value = 255 + value + 1;\n      this[offset] = value & 255;\n      return offset + 1;\n    };\n    Buffer3.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 2, 32767, -32768);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 2, 32767, -32768);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 255;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 4, 2147483647, -2147483648);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      this[offset + 2] = value >>> 16;\n      this[offset + 3] = value >>> 24;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert)\n        checkInt(this, value, offset, 4, 2147483647, -2147483648);\n      if (value < 0)\n        value = 4294967295 + value + 1;\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 255;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n      return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n    });\n    Buffer3.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n      return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n    });\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length)\n        throw new RangeError(\"Index out of range\");\n      if (offset < 0)\n        throw new RangeError(\"Index out of range\");\n    }\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n    Buffer3.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n    Buffer3.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n    Buffer3.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n    Buffer3.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n    Buffer3.prototype.copy = function copy4(target, targetStart, start, end) {\n      if (!Buffer3.isBuffer(target))\n        throw new TypeError(\"argument should be a Buffer\");\n      if (!start)\n        start = 0;\n      if (!end && end !== 0)\n        end = this.length;\n      if (targetStart >= target.length)\n        targetStart = target.length;\n      if (!targetStart)\n        targetStart = 0;\n      if (end > 0 && end < start)\n        end = start;\n      if (end === start)\n        return 0;\n      if (target.length === 0 || this.length === 0)\n        return 0;\n      if (targetStart < 0) {\n        throw new RangeError(\"targetStart out of bounds\");\n      }\n      if (start < 0 || start >= this.length)\n        throw new RangeError(\"Index out of range\");\n      if (end < 0)\n        throw new RangeError(\"sourceEnd out of bounds\");\n      if (end > this.length)\n        end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n      const len = end - start;\n      if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") {\n        this.copyWithin(targetStart, start, end);\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n      }\n      return len;\n    };\n    Buffer3.prototype.fill = function fill(val, start, end, encoding) {\n      if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === \"string\") {\n          encoding = end;\n          end = this.length;\n        }\n        if (encoding !== void 0 && typeof encoding !== \"string\") {\n          throw new TypeError(\"encoding must be a string\");\n        }\n        if (typeof encoding === \"string\" && !Buffer3.isEncoding(encoding)) {\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        }\n        if (val.length === 1) {\n          const code = val.charCodeAt(0);\n          if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n            val = code;\n          }\n        }\n      } else if (typeof val === \"number\") {\n        val = val & 255;\n      } else if (typeof val === \"boolean\") {\n        val = Number(val);\n      }\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError(\"Out of range index\");\n      }\n      if (end <= start) {\n        return this;\n      }\n      start = start >>> 0;\n      end = end === void 0 ? this.length : end >>> 0;\n      if (!val)\n        val = 0;\n      let i;\n      if (typeof val === \"number\") {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        const bytes2 = Buffer3.isBuffer(val) ? val : Buffer3.from(val, encoding);\n        const len = bytes2.length;\n        if (len === 0) {\n          throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        }\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes2[i % len];\n        }\n      }\n      return this;\n    };\n    const errors = {};\n    function E(sym, getMessage, Base) {\n      errors[sym] = class NodeError extends Base {\n        constructor() {\n          super();\n          Object.defineProperty(this, \"message\", {\n            value: getMessage.apply(this, arguments),\n            writable: true,\n            configurable: true\n          });\n          this.name = `${this.name} [${sym}]`;\n          this.stack;\n          delete this.name;\n        }\n        get code() {\n          return sym;\n        }\n        set code(value) {\n          Object.defineProperty(this, \"code\", {\n            configurable: true,\n            enumerable: true,\n            value,\n            writable: true\n          });\n        }\n        toString() {\n          return `${this.name} [${sym}]: ${this.message}`;\n        }\n      };\n    }\n    E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n      if (name) {\n        return `${name} is outside of buffer bounds`;\n      }\n      return \"Attempt to access memory outside buffer bounds\";\n    }, RangeError);\n    E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n      return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n    }, TypeError);\n    E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n      let msg = `The value of \"${str}\" is out of range.`;\n      let received = input;\n      if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n        received = addNumericalSeparator(String(input));\n      } else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n          received = addNumericalSeparator(received);\n        }\n        received += \"n\";\n      }\n      msg += ` It must be ${range}. Received ${received}`;\n      return msg;\n    }, RangeError);\n    function addNumericalSeparator(val) {\n      let res = \"\";\n      let i = val.length;\n      const start = val[0] === \"-\" ? 1 : 0;\n      for (; i >= start + 4; i -= 3) {\n        res = `_${val.slice(i - 3, i)}${res}`;\n      }\n      return `${val.slice(0, i)}${res}`;\n    }\n    function checkBounds(buf, offset, byteLength2) {\n      validateNumber(offset, \"offset\");\n      if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {\n        boundsError(offset, buf.length - (byteLength2 + 1));\n      }\n    }\n    function checkIntBI(value, min, max, buf, offset, byteLength2) {\n      if (value > max || value < min) {\n        const n2 = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        {\n          if (min === 0 || min === BigInt(0)) {\n            range = `>= 0${n2} and < 2${n2} ** ${(byteLength2 + 1) * 8}${n2}`;\n          } else {\n            range = `>= -(2${n2} ** ${(byteLength2 + 1) * 8 - 1}${n2}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n2}`;\n          }\n        }\n        throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n      }\n      checkBounds(buf, offset, byteLength2);\n    }\n    function validateNumber(value, name) {\n      if (typeof value !== \"number\") {\n        throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n      }\n    }\n    function boundsError(value, length, type) {\n      if (Math.floor(value) !== value) {\n        validateNumber(value, type);\n        throw new errors.ERR_OUT_OF_RANGE(\"offset\", \"an integer\", value);\n      }\n      if (length < 0) {\n        throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n      }\n      throw new errors.ERR_OUT_OF_RANGE(\"offset\", `>= ${0} and <= ${length}`, value);\n    }\n    const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n    function base64clean(str) {\n      str = str.split(\"=\")[0];\n      str = str.trim().replace(INVALID_BASE64_RE, \"\");\n      if (str.length < 2)\n        return \"\";\n      while (str.length % 4 !== 0) {\n        str = str + \"=\";\n      }\n      return str;\n    }\n    function utf8ToBytes3(string, units) {\n      units = units || Infinity;\n      let codePoint;\n      const length = string.length;\n      let leadSurrogate = null;\n      const bytes2 = [];\n      for (let i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        if (codePoint > 55295 && codePoint < 57344) {\n          if (!leadSurrogate) {\n            if (codePoint > 56319) {\n              if ((units -= 3) > -1)\n                bytes2.push(239, 191, 189);\n              continue;\n            } else if (i + 1 === length) {\n              if ((units -= 3) > -1)\n                bytes2.push(239, 191, 189);\n              continue;\n            }\n            leadSurrogate = codePoint;\n            continue;\n          }\n          if (codePoint < 56320) {\n            if ((units -= 3) > -1)\n              bytes2.push(239, 191, 189);\n            leadSurrogate = codePoint;\n            continue;\n          }\n          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n        } else if (leadSurrogate) {\n          if ((units -= 3) > -1)\n            bytes2.push(239, 191, 189);\n        }\n        leadSurrogate = null;\n        if (codePoint < 128) {\n          if ((units -= 1) < 0)\n            break;\n          bytes2.push(codePoint);\n        } else if (codePoint < 2048) {\n          if ((units -= 2) < 0)\n            break;\n          bytes2.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n        } else if (codePoint < 65536) {\n          if ((units -= 3) < 0)\n            break;\n          bytes2.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n        } else if (codePoint < 1114112) {\n          if ((units -= 4) < 0)\n            break;\n          bytes2.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n        } else {\n          throw new Error(\"Invalid code point\");\n        }\n      }\n      return bytes2;\n    }\n    function asciiToBytes(str) {\n      const byteArray = [];\n      for (let i = 0; i < str.length; ++i) {\n        byteArray.push(str.charCodeAt(i) & 255);\n      }\n      return byteArray;\n    }\n    function utf16leToBytes(str, units) {\n      let c, hi, lo;\n      const byteArray = [];\n      for (let i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0)\n          break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n      return byteArray;\n    }\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n    function blitBuffer(src, dst, offset, length) {\n      let i;\n      for (i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length)\n          break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n    function isInstance(obj, type) {\n      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n    }\n    function numberIsNaN(obj) {\n      return obj !== obj;\n    }\n    const hexSliceLookupTable = function() {\n      const alphabet = \"0123456789abcdef\";\n      const table = new Array(256);\n      for (let i = 0; i < 16; ++i) {\n        const i16 = i * 16;\n        for (let j = 0; j < 16; ++j) {\n          table[i16 + j] = alphabet[i] + alphabet[j];\n        }\n      }\n      return table;\n    }();\n    function defineBigIntMethod(fn) {\n      return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n    }\n    function BufferBigIntNotDefined() {\n      throw new Error(\"BigInt not supported\");\n    }\n    return exports;\n  }\n  var exports$2, _dewExec$2, exports$1, _dewExec$1, exports, _dewExec;\n  var init_chunk_DtuTasat = __esm({\n    \"../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/chunk-DtuTasat.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      exports$2 = {};\n      _dewExec$2 = false;\n      exports$1 = {};\n      _dewExec$1 = false;\n      exports = {};\n      _dewExec = false;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/buffer.js\n  var buffer_exports = {};\n  __export(buffer_exports, {\n    Buffer: () => Buffer2,\n    INSPECT_MAX_BYTES: () => INSPECT_MAX_BYTES,\n    default: () => exports2,\n    kMaxLength: () => kMaxLength\n  });\n  var exports2, Buffer2, INSPECT_MAX_BYTES, kMaxLength;\n  var init_buffer = __esm({\n    \"../../../node_modules/.pnpm/@jspm+core@2.1.0/node_modules/@jspm/core/nodelibs/browser/buffer.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_chunk_DtuTasat();\n      exports2 = dew();\n      exports2[\"Buffer\"];\n      exports2[\"SlowBuffer\"];\n      exports2[\"INSPECT_MAX_BYTES\"];\n      exports2[\"kMaxLength\"];\n      Buffer2 = exports2.Buffer;\n      INSPECT_MAX_BYTES = exports2.INSPECT_MAX_BYTES;\n      kMaxLength = exports2.kMaxLength;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\n  var init_buffer2 = __esm({\n    \"../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\"() {\n      \"use strict\";\n      init_buffer();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/util.js\n  var util, objectUtil, ZodParsedType, getParsedType;\n  var init_util = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/util.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(util2) {\n        util2.assertEqual = (_) => {\n        };\n        function assertIs(_arg) {\n        }\n        util2.assertIs = assertIs;\n        function assertNever(_x) {\n          throw new Error();\n        }\n        util2.assertNever = assertNever;\n        util2.arrayToEnum = (items) => {\n          const obj = {};\n          for (const item of items) {\n            obj[item] = item;\n          }\n          return obj;\n        };\n        util2.getValidEnumValues = (obj) => {\n          const validKeys = util2.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n          const filtered = {};\n          for (const k of validKeys) {\n            filtered[k] = obj[k];\n          }\n          return util2.objectValues(filtered);\n        };\n        util2.objectValues = (obj) => {\n          return util2.objectKeys(obj).map(function(e) {\n            return obj[e];\n          });\n        };\n        util2.objectKeys = typeof Object.keys === \"function\" ? (obj) => Object.keys(obj) : (object2) => {\n          const keys = [];\n          for (const key in object2) {\n            if (Object.prototype.hasOwnProperty.call(object2, key)) {\n              keys.push(key);\n            }\n          }\n          return keys;\n        };\n        util2.find = (arr, checker) => {\n          for (const item of arr) {\n            if (checker(item))\n              return item;\n          }\n          return void 0;\n        };\n        util2.isInteger = typeof Number.isInteger === \"function\" ? (val) => Number.isInteger(val) : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n        function joinValues(array, separator = \" | \") {\n          return array.map((val) => typeof val === \"string\" ? `'${val}'` : val).join(separator);\n        }\n        util2.joinValues = joinValues;\n        util2.jsonStringifyReplacer = (_, value) => {\n          if (typeof value === \"bigint\") {\n            return value.toString();\n          }\n          return value;\n        };\n      })(util || (util = {}));\n      (function(objectUtil2) {\n        objectUtil2.mergeShapes = (first, second) => {\n          return {\n            ...first,\n            ...second\n            // second overwrites first\n          };\n        };\n      })(objectUtil || (objectUtil = {}));\n      ZodParsedType = util.arrayToEnum([\n        \"string\",\n        \"nan\",\n        \"number\",\n        \"integer\",\n        \"float\",\n        \"boolean\",\n        \"date\",\n        \"bigint\",\n        \"symbol\",\n        \"function\",\n        \"undefined\",\n        \"null\",\n        \"array\",\n        \"object\",\n        \"unknown\",\n        \"promise\",\n        \"void\",\n        \"never\",\n        \"map\",\n        \"set\"\n      ]);\n      getParsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n          case \"undefined\":\n            return ZodParsedType.undefined;\n          case \"string\":\n            return ZodParsedType.string;\n          case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n          case \"boolean\":\n            return ZodParsedType.boolean;\n          case \"function\":\n            return ZodParsedType.function;\n          case \"bigint\":\n            return ZodParsedType.bigint;\n          case \"symbol\":\n            return ZodParsedType.symbol;\n          case \"object\":\n            if (Array.isArray(data)) {\n              return ZodParsedType.array;\n            }\n            if (data === null) {\n              return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n              return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n              return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n              return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n              return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n          default:\n            return ZodParsedType.unknown;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/ZodError.js\n  var ZodIssueCode, quotelessJson, ZodError;\n  var init_ZodError = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/ZodError.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_util();\n      ZodIssueCode = util.arrayToEnum([\n        \"invalid_type\",\n        \"invalid_literal\",\n        \"custom\",\n        \"invalid_union\",\n        \"invalid_union_discriminator\",\n        \"invalid_enum_value\",\n        \"unrecognized_keys\",\n        \"invalid_arguments\",\n        \"invalid_return_type\",\n        \"invalid_date\",\n        \"invalid_string\",\n        \"too_small\",\n        \"too_big\",\n        \"invalid_intersection_types\",\n        \"not_multiple_of\",\n        \"not_finite\"\n      ]);\n      quotelessJson = (obj) => {\n        const json = JSON.stringify(obj, null, 2);\n        return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n      };\n      ZodError = class _ZodError extends Error {\n        get errors() {\n          return this.issues;\n        }\n        constructor(issues) {\n          super();\n          this.issues = [];\n          this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n          };\n          this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n          };\n          const actualProto = new.target.prototype;\n          if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, actualProto);\n          } else {\n            this.__proto__ = actualProto;\n          }\n          this.name = \"ZodError\";\n          this.issues = issues;\n        }\n        format(_mapper) {\n          const mapper = _mapper || function(issue) {\n            return issue.message;\n          };\n          const fieldErrors = { _errors: [] };\n          const processError = (error) => {\n            for (const issue of error.issues) {\n              if (issue.code === \"invalid_union\") {\n                issue.unionErrors.map(processError);\n              } else if (issue.code === \"invalid_return_type\") {\n                processError(issue.returnTypeError);\n              } else if (issue.code === \"invalid_arguments\") {\n                processError(issue.argumentsError);\n              } else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n              } else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                  const el = issue.path[i];\n                  const terminal = i === issue.path.length - 1;\n                  if (!terminal) {\n                    curr[el] = curr[el] || { _errors: [] };\n                  } else {\n                    curr[el] = curr[el] || { _errors: [] };\n                    curr[el]._errors.push(mapper(issue));\n                  }\n                  curr = curr[el];\n                  i++;\n                }\n              }\n            }\n          };\n          processError(this);\n          return fieldErrors;\n        }\n        static assert(value) {\n          if (!(value instanceof _ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n          }\n        }\n        toString() {\n          return this.message;\n        }\n        get message() {\n          return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n        }\n        get isEmpty() {\n          return this.issues.length === 0;\n        }\n        flatten(mapper = (issue) => issue.message) {\n          const fieldErrors = {};\n          const formErrors = [];\n          for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n              fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n              fieldErrors[sub.path[0]].push(mapper(sub));\n            } else {\n              formErrors.push(mapper(sub));\n            }\n          }\n          return { formErrors, fieldErrors };\n        }\n        get formErrors() {\n          return this.flatten();\n        }\n      };\n      ZodError.create = (issues) => {\n        const error = new ZodError(issues);\n        return error;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/locales/en.js\n  var errorMap, en_default;\n  var init_en = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/locales/en.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_ZodError();\n      init_util();\n      errorMap = (issue, _ctx) => {\n        let message;\n        switch (issue.code) {\n          case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n              message = \"Required\";\n            } else {\n              message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n          case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n          case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n          case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n          case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n          case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n          case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n          case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n          case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n          case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n              if (\"includes\" in issue.validation) {\n                message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                if (typeof issue.validation.position === \"number\") {\n                  message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                }\n              } else if (\"startsWith\" in issue.validation) {\n                message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n              } else if (\"endsWith\" in issue.validation) {\n                message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n              } else {\n                util.assertNever(issue.validation);\n              }\n            } else if (issue.validation !== \"regex\") {\n              message = `Invalid ${issue.validation}`;\n            } else {\n              message = \"Invalid\";\n            }\n            break;\n          case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n              message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n              message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n              message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n              message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n              message = \"Invalid input\";\n            break;\n          case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n              message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n              message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n              message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n              message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n              message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n              message = \"Invalid input\";\n            break;\n          case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n          case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n          case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n          case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n          default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n        }\n        return { message };\n      };\n      en_default = errorMap;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/errors.js\n  function setErrorMap(map) {\n    overrideErrorMap = map;\n  }\n  function getErrorMap() {\n    return overrideErrorMap;\n  }\n  var overrideErrorMap;\n  var init_errors = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/errors.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_en();\n      overrideErrorMap = en_default;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/parseUtil.js\n  function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n      issueData,\n      data: ctx.data,\n      path: ctx.path,\n      errorMaps: [\n        ctx.common.contextualErrorMap,\n        // contextual error map is first priority\n        ctx.schemaErrorMap,\n        // then schema-bound map if available\n        overrideMap,\n        // then global override map\n        overrideMap === en_default ? void 0 : en_default\n        // then global default map\n      ].filter((x) => !!x)\n    });\n    ctx.common.issues.push(issue);\n  }\n  var makeIssue, EMPTY_PATH, ParseStatus, INVALID, DIRTY, OK, isAborted, isDirty, isValid, isAsync;\n  var init_parseUtil = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/parseUtil.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_errors();\n      init_en();\n      makeIssue = (params) => {\n        const { data, path, errorMaps, issueData } = params;\n        const fullPath = [...path, ...issueData.path || []];\n        const fullIssue = {\n          ...issueData,\n          path: fullPath\n        };\n        if (issueData.message !== void 0) {\n          return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message\n          };\n        }\n        let errorMessage = \"\";\n        const maps = errorMaps.filter((m) => !!m).slice().reverse();\n        for (const map of maps) {\n          errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n        }\n        return {\n          ...issueData,\n          path: fullPath,\n          message: errorMessage\n        };\n      };\n      EMPTY_PATH = [];\n      ParseStatus = class _ParseStatus {\n        constructor() {\n          this.value = \"valid\";\n        }\n        dirty() {\n          if (this.value === \"valid\")\n            this.value = \"dirty\";\n        }\n        abort() {\n          if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n        }\n        static mergeArray(status, results) {\n          const arrayValue = [];\n          for (const s of results) {\n            if (s.status === \"aborted\")\n              return INVALID;\n            if (s.status === \"dirty\")\n              status.dirty();\n            arrayValue.push(s.value);\n          }\n          return { status: status.value, value: arrayValue };\n        }\n        static async mergeObjectAsync(status, pairs) {\n          const syncPairs = [];\n          for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n              key,\n              value\n            });\n          }\n          return _ParseStatus.mergeObjectSync(status, syncPairs);\n        }\n        static mergeObjectSync(status, pairs) {\n          const finalObject = {};\n          for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n              return INVALID;\n            if (value.status === \"aborted\")\n              return INVALID;\n            if (key.status === \"dirty\")\n              status.dirty();\n            if (value.status === \"dirty\")\n              status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n              finalObject[key.value] = value.value;\n            }\n          }\n          return { status: status.value, value: finalObject };\n        }\n      };\n      INVALID = Object.freeze({\n        status: \"aborted\"\n      });\n      DIRTY = (value) => ({ status: \"dirty\", value });\n      OK = (value) => ({ status: \"valid\", value });\n      isAborted = (x) => x.status === \"aborted\";\n      isDirty = (x) => x.status === \"dirty\";\n      isValid = (x) => x.status === \"valid\";\n      isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/typeAliases.js\n  var init_typeAliases = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/typeAliases.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/errorUtil.js\n  var errorUtil;\n  var init_errorUtil = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/helpers/errorUtil.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(errorUtil2) {\n        errorUtil2.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n        errorUtil2.toString = (message) => typeof message === \"string\" ? message : message?.message;\n      })(errorUtil || (errorUtil = {}));\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/types.js\n  function processCreateParams(params) {\n    if (!params)\n      return {};\n    const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;\n    if (errorMap2 && (invalid_type_error || required_error)) {\n      throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap2)\n      return { errorMap: errorMap2, description };\n    const customMap = (iss, ctx) => {\n      const { message } = params;\n      if (iss.code === \"invalid_enum_value\") {\n        return { message: message ?? ctx.defaultError };\n      }\n      if (typeof ctx.data === \"undefined\") {\n        return { message: message ?? required_error ?? ctx.defaultError };\n      }\n      if (iss.code !== \"invalid_type\")\n        return { message: ctx.defaultError };\n      return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n  }\n  function timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n      secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    } else if (args.precision == null) {\n      secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\";\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n  }\n  function timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n  }\n  function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n      opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n  }\n  function isValidIP(ip, version3) {\n    if ((version3 === \"v4\" || !version3) && ipv4Regex.test(ip)) {\n      return true;\n    }\n    if ((version3 === \"v6\" || !version3) && ipv6Regex.test(ip)) {\n      return true;\n    }\n    return false;\n  }\n  function isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n      return false;\n    try {\n      const [header] = jwt.split(\".\");\n      const base64 = header.replace(/-/g, \"+\").replace(/_/g, \"/\").padEnd(header.length + (4 - header.length % 4) % 4, \"=\");\n      const decoded = JSON.parse(atob(base64));\n      if (typeof decoded !== \"object\" || decoded === null)\n        return false;\n      if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n        return false;\n      if (!decoded.alg)\n        return false;\n      if (alg && decoded.alg !== alg)\n        return false;\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  function isValidCidr(ip, version3) {\n    if ((version3 === \"v4\" || !version3) && ipv4CidrRegex.test(ip)) {\n      return true;\n    }\n    if ((version3 === \"v6\" || !version3) && ipv6CidrRegex.test(ip)) {\n      return true;\n    }\n    return false;\n  }\n  function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return valInt % stepInt / 10 ** decCount;\n  }\n  function deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n      const newShape = {};\n      for (const key in schema.shape) {\n        const fieldSchema = schema.shape[key];\n        newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n      }\n      return new ZodObject({\n        ...schema._def,\n        shape: () => newShape\n      });\n    } else if (schema instanceof ZodArray) {\n      return new ZodArray({\n        ...schema._def,\n        type: deepPartialify(schema.element)\n      });\n    } else if (schema instanceof ZodOptional) {\n      return ZodOptional.create(deepPartialify(schema.unwrap()));\n    } else if (schema instanceof ZodNullable) {\n      return ZodNullable.create(deepPartialify(schema.unwrap()));\n    } else if (schema instanceof ZodTuple) {\n      return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    } else {\n      return schema;\n    }\n  }\n  function mergeValues(a, b2) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b2);\n    if (a === b2) {\n      return { valid: true, data: a };\n    } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n      const bKeys = util.objectKeys(b2);\n      const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n      const newObj = { ...a, ...b2 };\n      for (const key of sharedKeys) {\n        const sharedValue = mergeValues(a[key], b2[key]);\n        if (!sharedValue.valid) {\n          return { valid: false };\n        }\n        newObj[key] = sharedValue.data;\n      }\n      return { valid: true, data: newObj };\n    } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n      if (a.length !== b2.length) {\n        return { valid: false };\n      }\n      const newArray = [];\n      for (let index = 0; index < a.length; index++) {\n        const itemA = a[index];\n        const itemB = b2[index];\n        const sharedValue = mergeValues(itemA, itemB);\n        if (!sharedValue.valid) {\n          return { valid: false };\n        }\n        newArray.push(sharedValue.data);\n      }\n      return { valid: true, data: newArray };\n    } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b2) {\n      return { valid: true, data: a };\n    } else {\n      return { valid: false };\n    }\n  }\n  function createZodEnum(values, params) {\n    return new ZodEnum({\n      values,\n      typeName: ZodFirstPartyTypeKind.ZodEnum,\n      ...processCreateParams(params)\n    });\n  }\n  function cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n  }\n  function custom(check, _params = {}, fatal) {\n    if (check)\n      return ZodAny.create().superRefine((data, ctx) => {\n        const r = check(data);\n        if (r instanceof Promise) {\n          return r.then((r2) => {\n            if (!r2) {\n              const params = cleanParams(_params, data);\n              const _fatal = params.fatal ?? fatal ?? true;\n              ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n          });\n        }\n        if (!r) {\n          const params = cleanParams(_params, data);\n          const _fatal = params.fatal ?? fatal ?? true;\n          ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n        }\n        return;\n      });\n    return ZodAny.create();\n  }\n  var ParseInputLazyPath, handleResult, ZodType, cuidRegex, cuid2Regex, ulidRegex, uuidRegex, nanoidRegex, jwtRegex, durationRegex, emailRegex, _emojiRegex, emojiRegex, ipv4Regex, ipv4CidrRegex, ipv6Regex, ipv6CidrRegex, base64Regex, base64urlRegex, dateRegexSource, dateRegex, ZodString, ZodNumber, ZodBigInt, ZodBoolean, ZodDate, ZodSymbol, ZodUndefined, ZodNull, ZodAny, ZodUnknown, ZodNever, ZodVoid, ZodArray, ZodObject, ZodUnion, getDiscriminator, ZodDiscriminatedUnion, ZodIntersection, ZodTuple, ZodRecord, ZodMap, ZodSet, ZodFunction, ZodLazy, ZodLiteral, ZodEnum, ZodNativeEnum, ZodPromise, ZodEffects, ZodOptional, ZodNullable, ZodDefault, ZodCatch, ZodNaN, BRAND, ZodBranded, ZodPipeline, ZodReadonly, late, ZodFirstPartyTypeKind, instanceOfType, stringType, numberType, nanType, bigIntType, booleanType, dateType, symbolType, undefinedType, nullType, anyType, unknownType, neverType, voidType, arrayType, objectType, strictObjectType, unionType, discriminatedUnionType, intersectionType, tupleType, recordType, mapType, setType, functionType, lazyType, literalType, enumType, nativeEnumType, promiseType, effectsType, optionalType, nullableType, preprocessType, pipelineType, ostring, onumber, oboolean, coerce, NEVER;\n  var init_types = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/types.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_ZodError();\n      init_errors();\n      init_errorUtil();\n      init_parseUtil();\n      init_util();\n      ParseInputLazyPath = class {\n        constructor(parent, value, path, key) {\n          this._cachedPath = [];\n          this.parent = parent;\n          this.data = value;\n          this._path = path;\n          this._key = key;\n        }\n        get path() {\n          if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n              this._cachedPath.push(...this._path, ...this._key);\n            } else {\n              this._cachedPath.push(...this._path, this._key);\n            }\n          }\n          return this._cachedPath;\n        }\n      };\n      handleResult = (ctx, result) => {\n        if (isValid(result)) {\n          return { success: true, data: result.value };\n        } else {\n          if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n          }\n          return {\n            success: false,\n            get error() {\n              if (this._error)\n                return this._error;\n              const error = new ZodError(ctx.common.issues);\n              this._error = error;\n              return this._error;\n            }\n          };\n        }\n      };\n      ZodType = class {\n        get description() {\n          return this._def.description;\n        }\n        _getType(input) {\n          return getParsedType(input.data);\n        }\n        _getOrReturnCtx(input, ctx) {\n          return ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent\n          };\n        }\n        _processInputParams(input) {\n          return {\n            status: new ParseStatus(),\n            ctx: {\n              common: input.parent.common,\n              data: input.data,\n              parsedType: getParsedType(input.data),\n              schemaErrorMap: this._def.errorMap,\n              path: input.path,\n              parent: input.parent\n            }\n          };\n        }\n        _parseSync(input) {\n          const result = this._parse(input);\n          if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n          }\n          return result;\n        }\n        _parseAsync(input) {\n          const result = this._parse(input);\n          return Promise.resolve(result);\n        }\n        parse(data, params) {\n          const result = this.safeParse(data, params);\n          if (result.success)\n            return result.data;\n          throw result.error;\n        }\n        safeParse(data, params) {\n          const ctx = {\n            common: {\n              issues: [],\n              async: params?.async ?? false,\n              contextualErrorMap: params?.errorMap\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data)\n          };\n          const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n          return handleResult(ctx, result);\n        }\n        \"~validate\"(data) {\n          const ctx = {\n            common: {\n              issues: [],\n              async: !!this[\"~standard\"].async\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data)\n          };\n          if (!this[\"~standard\"].async) {\n            try {\n              const result = this._parseSync({ data, path: [], parent: ctx });\n              return isValid(result) ? {\n                value: result.value\n              } : {\n                issues: ctx.common.issues\n              };\n            } catch (err) {\n              if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                this[\"~standard\"].async = true;\n              }\n              ctx.common = {\n                issues: [],\n                async: true\n              };\n            }\n          }\n          return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result) ? {\n            value: result.value\n          } : {\n            issues: ctx.common.issues\n          });\n        }\n        async parseAsync(data, params) {\n          const result = await this.safeParseAsync(data, params);\n          if (result.success)\n            return result.data;\n          throw result.error;\n        }\n        async safeParseAsync(data, params) {\n          const ctx = {\n            common: {\n              issues: [],\n              contextualErrorMap: params?.errorMap,\n              async: true\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data)\n          };\n          const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n          const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n          return handleResult(ctx, result);\n        }\n        refine(check, message) {\n          const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n              return { message };\n            } else if (typeof message === \"function\") {\n              return message(val);\n            } else {\n              return message;\n            }\n          };\n          return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n              code: ZodIssueCode.custom,\n              ...getIssueProperties(val)\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n              return result.then((data) => {\n                if (!data) {\n                  setError();\n                  return false;\n                } else {\n                  return true;\n                }\n              });\n            }\n            if (!result) {\n              setError();\n              return false;\n            } else {\n              return true;\n            }\n          });\n        }\n        refinement(check, refinementData) {\n          return this._refinement((val, ctx) => {\n            if (!check(val)) {\n              ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n              return false;\n            } else {\n              return true;\n            }\n          });\n        }\n        _refinement(refinement) {\n          return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement }\n          });\n        }\n        superRefine(refinement) {\n          return this._refinement(refinement);\n        }\n        constructor(def) {\n          this.spa = this.safeParseAsync;\n          this._def = def;\n          this.parse = this.parse.bind(this);\n          this.safeParse = this.safeParse.bind(this);\n          this.parseAsync = this.parseAsync.bind(this);\n          this.safeParseAsync = this.safeParseAsync.bind(this);\n          this.spa = this.spa.bind(this);\n          this.refine = this.refine.bind(this);\n          this.refinement = this.refinement.bind(this);\n          this.superRefine = this.superRefine.bind(this);\n          this.optional = this.optional.bind(this);\n          this.nullable = this.nullable.bind(this);\n          this.nullish = this.nullish.bind(this);\n          this.array = this.array.bind(this);\n          this.promise = this.promise.bind(this);\n          this.or = this.or.bind(this);\n          this.and = this.and.bind(this);\n          this.transform = this.transform.bind(this);\n          this.brand = this.brand.bind(this);\n          this.default = this.default.bind(this);\n          this.catch = this.catch.bind(this);\n          this.describe = this.describe.bind(this);\n          this.pipe = this.pipe.bind(this);\n          this.readonly = this.readonly.bind(this);\n          this.isNullable = this.isNullable.bind(this);\n          this.isOptional = this.isOptional.bind(this);\n          this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data)\n          };\n        }\n        optional() {\n          return ZodOptional.create(this, this._def);\n        }\n        nullable() {\n          return ZodNullable.create(this, this._def);\n        }\n        nullish() {\n          return this.nullable().optional();\n        }\n        array() {\n          return ZodArray.create(this);\n        }\n        promise() {\n          return ZodPromise.create(this, this._def);\n        }\n        or(option) {\n          return ZodUnion.create([this, option], this._def);\n        }\n        and(incoming) {\n          return ZodIntersection.create(this, incoming, this._def);\n        }\n        transform(transform) {\n          return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform }\n          });\n        }\n        default(def) {\n          const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n          return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault\n          });\n        }\n        brand() {\n          return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def)\n          });\n        }\n        catch(def) {\n          const catchValueFunc = typeof def === \"function\" ? def : () => def;\n          return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch\n          });\n        }\n        describe(description) {\n          const This = this.constructor;\n          return new This({\n            ...this._def,\n            description\n          });\n        }\n        pipe(target) {\n          return ZodPipeline.create(this, target);\n        }\n        readonly() {\n          return ZodReadonly.create(this);\n        }\n        isOptional() {\n          return this.safeParse(void 0).success;\n        }\n        isNullable() {\n          return this.safeParse(null).success;\n        }\n      };\n      cuidRegex = /^c[^\\s-]{8,}$/i;\n      cuid2Regex = /^[0-9a-z]+$/;\n      ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n      uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n      nanoidRegex = /^[a-z0-9_-]{21}$/i;\n      jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\n      durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n      emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n      _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\n      ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\n      ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n      ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\n      ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n      base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n      base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n      dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\n      dateRegex = new RegExp(`^${dateRegexSource}$`);\n      ZodString = class _ZodString extends ZodType {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = String(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.string) {\n            const ctx2 = this._getOrReturnCtx(input);\n            addIssueToContext(ctx2, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.string,\n              received: ctx2.parsedType\n            });\n            return INVALID;\n          }\n          const status = new ParseStatus();\n          let ctx = void 0;\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              if (input.data.length < check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_small,\n                  minimum: check.value,\n                  type: \"string\",\n                  inclusive: true,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              if (input.data.length > check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_big,\n                  maximum: check.value,\n                  type: \"string\",\n                  inclusive: true,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"length\") {\n              const tooBig = input.data.length > check.value;\n              const tooSmall = input.data.length < check.value;\n              if (tooBig || tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                if (tooBig) {\n                  addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: check.value,\n                    type: \"string\",\n                    inclusive: true,\n                    exact: true,\n                    message: check.message\n                  });\n                } else if (tooSmall) {\n                  addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: check.value,\n                    type: \"string\",\n                    inclusive: true,\n                    exact: true,\n                    message: check.message\n                  });\n                }\n                status.dirty();\n              }\n            } else if (check.kind === \"email\") {\n              if (!emailRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"email\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"emoji\") {\n              if (!emojiRegex) {\n                emojiRegex = new RegExp(_emojiRegex, \"u\");\n              }\n              if (!emojiRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"emoji\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"uuid\") {\n              if (!uuidRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"uuid\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"nanoid\") {\n              if (!nanoidRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"nanoid\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cuid\") {\n              if (!cuidRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"cuid\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cuid2\") {\n              if (!cuid2Regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"cuid2\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"ulid\") {\n              if (!ulidRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"ulid\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"url\") {\n              try {\n                new URL(input.data);\n              } catch {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"url\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"regex\") {\n              check.regex.lastIndex = 0;\n              const testResult = check.regex.test(input.data);\n              if (!testResult) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"regex\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"trim\") {\n              input.data = input.data.trim();\n            } else if (check.kind === \"includes\") {\n              if (!input.data.includes(check.value, check.position)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: { includes: check.value, position: check.position },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"toLowerCase\") {\n              input.data = input.data.toLowerCase();\n            } else if (check.kind === \"toUpperCase\") {\n              input.data = input.data.toUpperCase();\n            } else if (check.kind === \"startsWith\") {\n              if (!input.data.startsWith(check.value)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: { startsWith: check.value },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"endsWith\") {\n              if (!input.data.endsWith(check.value)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: { endsWith: check.value },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"datetime\") {\n              const regex = datetimeRegex(check);\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: \"datetime\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"date\") {\n              const regex = dateRegex;\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: \"date\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"time\") {\n              const regex = timeRegex(check);\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_string,\n                  validation: \"time\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"duration\") {\n              if (!durationRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"duration\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"ip\") {\n              if (!isValidIP(input.data, check.version)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"ip\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"jwt\") {\n              if (!isValidJWT(input.data, check.alg)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"jwt\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cidr\") {\n              if (!isValidCidr(input.data, check.version)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"cidr\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"base64\") {\n              if (!base64Regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"base64\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"base64url\") {\n              if (!base64urlRegex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  validation: \"base64url\",\n                  code: ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        _regex(regex, validation, message) {\n          return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        _addCheck(check) {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        email(message) {\n          return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n        }\n        url(message) {\n          return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n        }\n        emoji(message) {\n          return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n        }\n        uuid(message) {\n          return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n        }\n        nanoid(message) {\n          return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n        }\n        cuid(message) {\n          return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n        }\n        cuid2(message) {\n          return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n        }\n        ulid(message) {\n          return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n        }\n        base64(message) {\n          return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n        }\n        base64url(message) {\n          return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message)\n          });\n        }\n        jwt(options) {\n          return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n        }\n        ip(options) {\n          return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n        }\n        cidr(options) {\n          return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n        }\n        datetime(options) {\n          if (typeof options === \"string\") {\n            return this._addCheck({\n              kind: \"datetime\",\n              precision: null,\n              offset: false,\n              local: false,\n              message: options\n            });\n          }\n          return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message)\n          });\n        }\n        date(message) {\n          return this._addCheck({ kind: \"date\", message });\n        }\n        time(options) {\n          if (typeof options === \"string\") {\n            return this._addCheck({\n              kind: \"time\",\n              precision: null,\n              message: options\n            });\n          }\n          return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message)\n          });\n        }\n        duration(message) {\n          return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n        }\n        regex(regex, message) {\n          return this._addCheck({\n            kind: \"regex\",\n            regex,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        includes(value, options) {\n          return this._addCheck({\n            kind: \"includes\",\n            value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message)\n          });\n        }\n        startsWith(value, message) {\n          return this._addCheck({\n            kind: \"startsWith\",\n            value,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        endsWith(value, message) {\n          return this._addCheck({\n            kind: \"endsWith\",\n            value,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        min(minLength, message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        max(maxLength, message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        length(len, message) {\n          return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message)\n          });\n        }\n        /**\n         * Equivalent to `.min(1)`\n         */\n        nonempty(message) {\n          return this.min(1, errorUtil.errToObj(message));\n        }\n        trim() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }]\n          });\n        }\n        toLowerCase() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }]\n          });\n        }\n        toUpperCase() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }]\n          });\n        }\n        get isDatetime() {\n          return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n        }\n        get isDate() {\n          return !!this._def.checks.find((ch) => ch.kind === \"date\");\n        }\n        get isTime() {\n          return !!this._def.checks.find((ch) => ch.kind === \"time\");\n        }\n        get isDuration() {\n          return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n        }\n        get isEmail() {\n          return !!this._def.checks.find((ch) => ch.kind === \"email\");\n        }\n        get isURL() {\n          return !!this._def.checks.find((ch) => ch.kind === \"url\");\n        }\n        get isEmoji() {\n          return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n        }\n        get isUUID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n        }\n        get isNANOID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n        }\n        get isCUID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n        }\n        get isCUID2() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n        }\n        get isULID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n        }\n        get isIP() {\n          return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n        }\n        get isCIDR() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n        }\n        get isBase64() {\n          return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n        }\n        get isBase64url() {\n          return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n        }\n        get minLength() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxLength() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n      };\n      ZodString.create = (params) => {\n        return new ZodString({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind.ZodString,\n          coerce: params?.coerce ?? false,\n          ...processCreateParams(params)\n        });\n      };\n      ZodNumber = class _ZodNumber extends ZodType {\n        constructor() {\n          super(...arguments);\n          this.min = this.gte;\n          this.max = this.lte;\n          this.step = this.multipleOf;\n        }\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = Number(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.number) {\n            const ctx2 = this._getOrReturnCtx(input);\n            addIssueToContext(ctx2, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.number,\n              received: ctx2.parsedType\n            });\n            return INVALID;\n          }\n          let ctx = void 0;\n          const status = new ParseStatus();\n          for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n              if (!util.isInteger(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.invalid_type,\n                  expected: \"integer\",\n                  received: \"float\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"min\") {\n              const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n              if (tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_small,\n                  minimum: check.value,\n                  type: \"number\",\n                  inclusive: check.inclusive,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n              if (tooBig) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_big,\n                  maximum: check.value,\n                  type: \"number\",\n                  inclusive: check.inclusive,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"multipleOf\") {\n              if (floatSafeRemainder(input.data, check.value) !== 0) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.not_multiple_of,\n                  multipleOf: check.value,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"finite\") {\n              if (!Number.isFinite(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.not_finite,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        gte(value, message) {\n          return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n        }\n        gt(value, message) {\n          return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n        }\n        lte(value, message) {\n          return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n        }\n        lt(value, message) {\n          return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n        }\n        setLimit(kind, value, inclusive, message) {\n          return new _ZodNumber({\n            ...this._def,\n            checks: [\n              ...this._def.checks,\n              {\n                kind,\n                value,\n                inclusive,\n                message: errorUtil.toString(message)\n              }\n            ]\n          });\n        }\n        _addCheck(check) {\n          return new _ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        int(message) {\n          return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message)\n          });\n        }\n        positive(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message)\n          });\n        }\n        negative(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message)\n          });\n        }\n        nonpositive(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message)\n          });\n        }\n        nonnegative(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message)\n          });\n        }\n        multipleOf(value, message) {\n          return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message)\n          });\n        }\n        finite(message) {\n          return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message)\n          });\n        }\n        safe(message) {\n          return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message)\n          })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message)\n          });\n        }\n        get minValue() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxValue() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n        get isInt() {\n          return !!this._def.checks.find((ch) => ch.kind === \"int\" || ch.kind === \"multipleOf\" && util.isInteger(ch.value));\n        }\n        get isFinite() {\n          let max = null;\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n              return true;\n            } else if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            } else if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return Number.isFinite(min) && Number.isFinite(max);\n        }\n      };\n      ZodNumber.create = (params) => {\n        return new ZodNumber({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind.ZodNumber,\n          coerce: params?.coerce || false,\n          ...processCreateParams(params)\n        });\n      };\n      ZodBigInt = class _ZodBigInt extends ZodType {\n        constructor() {\n          super(...arguments);\n          this.min = this.gte;\n          this.max = this.lte;\n        }\n        _parse(input) {\n          if (this._def.coerce) {\n            try {\n              input.data = BigInt(input.data);\n            } catch {\n              return this._getInvalidInput(input);\n            }\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n          }\n          let ctx = void 0;\n          const status = new ParseStatus();\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n              if (tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_small,\n                  type: \"bigint\",\n                  minimum: check.value,\n                  inclusive: check.inclusive,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n              if (tooBig) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_big,\n                  type: \"bigint\",\n                  maximum: check.value,\n                  inclusive: check.inclusive,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"multipleOf\") {\n              if (input.data % check.value !== BigInt(0)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.not_multiple_of,\n                  multipleOf: check.value,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        _getInvalidInput(input) {\n          const ctx = this._getOrReturnCtx(input);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType\n          });\n          return INVALID;\n        }\n        gte(value, message) {\n          return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n        }\n        gt(value, message) {\n          return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n        }\n        lte(value, message) {\n          return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n        }\n        lt(value, message) {\n          return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n        }\n        setLimit(kind, value, inclusive, message) {\n          return new _ZodBigInt({\n            ...this._def,\n            checks: [\n              ...this._def.checks,\n              {\n                kind,\n                value,\n                inclusive,\n                message: errorUtil.toString(message)\n              }\n            ]\n          });\n        }\n        _addCheck(check) {\n          return new _ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        positive(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message)\n          });\n        }\n        negative(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message)\n          });\n        }\n        nonpositive(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message)\n          });\n        }\n        nonnegative(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message)\n          });\n        }\n        multipleOf(value, message) {\n          return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message)\n          });\n        }\n        get minValue() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxValue() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n      };\n      ZodBigInt.create = (params) => {\n        return new ZodBigInt({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind.ZodBigInt,\n          coerce: params?.coerce ?? false,\n          ...processCreateParams(params)\n        });\n      };\n      ZodBoolean = class extends ZodType {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = Boolean(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.boolean,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n      };\n      ZodBoolean.create = (params) => {\n        return new ZodBoolean({\n          typeName: ZodFirstPartyTypeKind.ZodBoolean,\n          coerce: params?.coerce || false,\n          ...processCreateParams(params)\n        });\n      };\n      ZodDate = class _ZodDate extends ZodType {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = new Date(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.date) {\n            const ctx2 = this._getOrReturnCtx(input);\n            addIssueToContext(ctx2, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.date,\n              received: ctx2.parsedType\n            });\n            return INVALID;\n          }\n          if (Number.isNaN(input.data.getTime())) {\n            const ctx2 = this._getOrReturnCtx(input);\n            addIssueToContext(ctx2, {\n              code: ZodIssueCode.invalid_date\n            });\n            return INVALID;\n          }\n          const status = new ParseStatus();\n          let ctx = void 0;\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              if (input.data.getTime() < check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_small,\n                  message: check.message,\n                  inclusive: true,\n                  exact: false,\n                  minimum: check.value,\n                  type: \"date\"\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              if (input.data.getTime() > check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.too_big,\n                  message: check.message,\n                  inclusive: true,\n                  exact: false,\n                  maximum: check.value,\n                  type: \"date\"\n                });\n                status.dirty();\n              }\n            } else {\n              util.assertNever(check);\n            }\n          }\n          return {\n            status: status.value,\n            value: new Date(input.data.getTime())\n          };\n        }\n        _addCheck(check) {\n          return new _ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        min(minDate, message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message)\n          });\n        }\n        max(maxDate, message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message)\n          });\n        }\n        get minDate() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min != null ? new Date(min) : null;\n        }\n        get maxDate() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max != null ? new Date(max) : null;\n        }\n      };\n      ZodDate.create = (params) => {\n        return new ZodDate({\n          checks: [],\n          coerce: params?.coerce || false,\n          typeName: ZodFirstPartyTypeKind.ZodDate,\n          ...processCreateParams(params)\n        });\n      };\n      ZodSymbol = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.symbol,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n      };\n      ZodSymbol.create = (params) => {\n        return new ZodSymbol({\n          typeName: ZodFirstPartyTypeKind.ZodSymbol,\n          ...processCreateParams(params)\n        });\n      };\n      ZodUndefined = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.undefined,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n      };\n      ZodUndefined.create = (params) => {\n        return new ZodUndefined({\n          typeName: ZodFirstPartyTypeKind.ZodUndefined,\n          ...processCreateParams(params)\n        });\n      };\n      ZodNull = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.null,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n      };\n      ZodNull.create = (params) => {\n        return new ZodNull({\n          typeName: ZodFirstPartyTypeKind.ZodNull,\n          ...processCreateParams(params)\n        });\n      };\n      ZodAny = class extends ZodType {\n        constructor() {\n          super(...arguments);\n          this._any = true;\n        }\n        _parse(input) {\n          return OK(input.data);\n        }\n      };\n      ZodAny.create = (params) => {\n        return new ZodAny({\n          typeName: ZodFirstPartyTypeKind.ZodAny,\n          ...processCreateParams(params)\n        });\n      };\n      ZodUnknown = class extends ZodType {\n        constructor() {\n          super(...arguments);\n          this._unknown = true;\n        }\n        _parse(input) {\n          return OK(input.data);\n        }\n      };\n      ZodUnknown.create = (params) => {\n        return new ZodUnknown({\n          typeName: ZodFirstPartyTypeKind.ZodUnknown,\n          ...processCreateParams(params)\n        });\n      };\n      ZodNever = class extends ZodType {\n        _parse(input) {\n          const ctx = this._getOrReturnCtx(input);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType\n          });\n          return INVALID;\n        }\n      };\n      ZodNever.create = (params) => {\n        return new ZodNever({\n          typeName: ZodFirstPartyTypeKind.ZodNever,\n          ...processCreateParams(params)\n        });\n      };\n      ZodVoid = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.void,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n      };\n      ZodVoid.create = (params) => {\n        return new ZodVoid({\n          typeName: ZodFirstPartyTypeKind.ZodVoid,\n          ...processCreateParams(params)\n        });\n      };\n      ZodArray = class _ZodArray extends ZodType {\n        _parse(input) {\n          const { ctx, status } = this._processInputParams(input);\n          const def = this._def;\n          if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.array,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n              addIssueToContext(ctx, {\n                code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                minimum: tooSmall ? def.exactLength.value : void 0,\n                maximum: tooBig ? def.exactLength.value : void 0,\n                type: \"array\",\n                inclusive: true,\n                exact: true,\n                message: def.exactLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n              addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: def.minLength.value,\n                type: \"array\",\n                inclusive: true,\n                exact: false,\n                message: def.minLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n              addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: def.maxLength.value,\n                type: \"array\",\n                inclusive: true,\n                exact: false,\n                message: def.maxLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n              return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result2) => {\n              return ParseStatus.mergeArray(status, result2);\n            });\n          }\n          const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n          });\n          return ParseStatus.mergeArray(status, result);\n        }\n        get element() {\n          return this._def.type;\n        }\n        min(minLength, message) {\n          return new _ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) }\n          });\n        }\n        max(maxLength, message) {\n          return new _ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) }\n          });\n        }\n        length(len, message) {\n          return new _ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) }\n          });\n        }\n        nonempty(message) {\n          return this.min(1, message);\n        }\n      };\n      ZodArray.create = (schema, params) => {\n        return new ZodArray({\n          type: schema,\n          minLength: null,\n          maxLength: null,\n          exactLength: null,\n          typeName: ZodFirstPartyTypeKind.ZodArray,\n          ...processCreateParams(params)\n        });\n      };\n      ZodObject = class _ZodObject extends ZodType {\n        constructor() {\n          super(...arguments);\n          this._cached = null;\n          this.nonstrict = this.passthrough;\n          this.augment = this.extend;\n        }\n        _getCached() {\n          if (this._cached !== null)\n            return this._cached;\n          const shape = this._def.shape();\n          const keys = util.objectKeys(shape);\n          this._cached = { shape, keys };\n          return this._cached;\n        }\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.object) {\n            const ctx2 = this._getOrReturnCtx(input);\n            addIssueToContext(ctx2, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.object,\n              received: ctx2.parsedType\n            });\n            return INVALID;\n          }\n          const { status, ctx } = this._processInputParams(input);\n          const { shape, keys: shapeKeys } = this._getCached();\n          const extraKeys = [];\n          if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n              if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n              }\n            }\n          }\n          const pairs = [];\n          for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n              key: { status: \"valid\", value: key },\n              value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n              alwaysSet: key in ctx.data\n            });\n          }\n          if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n              for (const key of extraKeys) {\n                pairs.push({\n                  key: { status: \"valid\", value: key },\n                  value: { status: \"valid\", value: ctx.data[key] }\n                });\n              }\n            } else if (unknownKeys === \"strict\") {\n              if (extraKeys.length > 0) {\n                addIssueToContext(ctx, {\n                  code: ZodIssueCode.unrecognized_keys,\n                  keys: extraKeys\n                });\n                status.dirty();\n              }\n            } else if (unknownKeys === \"strip\") {\n            } else {\n              throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n          } else {\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n              const value = ctx.data[key];\n              pairs.push({\n                key: { status: \"valid\", value: key },\n                value: catchall._parse(\n                  new ParseInputLazyPath(ctx, value, ctx.path, key)\n                  //, ctx.child(key), value, getParsedType(value)\n                ),\n                alwaysSet: key in ctx.data\n              });\n            }\n          }\n          if (ctx.common.async) {\n            return Promise.resolve().then(async () => {\n              const syncPairs = [];\n              for (const pair of pairs) {\n                const key = await pair.key;\n                const value = await pair.value;\n                syncPairs.push({\n                  key,\n                  value,\n                  alwaysSet: pair.alwaysSet\n                });\n              }\n              return syncPairs;\n            }).then((syncPairs) => {\n              return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n          } else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n          }\n        }\n        get shape() {\n          return this._def.shape();\n        }\n        strict(message) {\n          errorUtil.errToObj;\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...message !== void 0 ? {\n              errorMap: (issue, ctx) => {\n                const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                if (issue.code === \"unrecognized_keys\")\n                  return {\n                    message: errorUtil.errToObj(message).message ?? defaultError\n                  };\n                return {\n                  message: defaultError\n                };\n              }\n            } : {}\n          });\n        }\n        strip() {\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\"\n          });\n        }\n        passthrough() {\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\"\n          });\n        }\n        // const AugmentFactory =\n        //   <Def extends ZodObjectDef>(def: Def) =>\n        //   <Augmentation extends ZodRawShape>(\n        //     augmentation: Augmentation\n        //   ): ZodObject<\n        //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n        //     Def[\"unknownKeys\"],\n        //     Def[\"catchall\"]\n        //   > => {\n        //     return new ZodObject({\n        //       ...def,\n        //       shape: () => ({\n        //         ...def.shape(),\n        //         ...augmentation,\n        //       }),\n        //     }) as any;\n        //   };\n        extend(augmentation) {\n          return new _ZodObject({\n            ...this._def,\n            shape: () => ({\n              ...this._def.shape(),\n              ...augmentation\n            })\n          });\n        }\n        /**\n         * Prior to zod@1.0.12 there was a bug in the\n         * inferred type of merged objects. Please\n         * upgrade if you are experiencing issues.\n         */\n        merge(merging) {\n          const merged = new _ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n              ...this._def.shape(),\n              ...merging._def.shape()\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject\n          });\n          return merged;\n        }\n        // merge<\n        //   Incoming extends AnyZodObject,\n        //   Augmentation extends Incoming[\"shape\"],\n        //   NewOutput extends {\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   },\n        //   NewInput extends {\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }\n        // >(\n        //   merging: Incoming\n        // ): ZodObject<\n        //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n        //   Incoming[\"_def\"][\"unknownKeys\"],\n        //   Incoming[\"_def\"][\"catchall\"],\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   const merged: any = new ZodObject({\n        //     unknownKeys: merging._def.unknownKeys,\n        //     catchall: merging._def.catchall,\n        //     shape: () =>\n        //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n        //     typeName: ZodFirstPartyTypeKind.ZodObject,\n        //   }) as any;\n        //   return merged;\n        // }\n        setKey(key, schema) {\n          return this.augment({ [key]: schema });\n        }\n        // merge<Incoming extends AnyZodObject>(\n        //   merging: Incoming\n        // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n        // ZodObject<\n        //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n        //   Incoming[\"_def\"][\"unknownKeys\"],\n        //   Incoming[\"_def\"][\"catchall\"]\n        // > {\n        //   // const mergedShape = objectUtil.mergeShapes(\n        //   //   this._def.shape(),\n        //   //   merging._def.shape()\n        //   // );\n        //   const merged: any = new ZodObject({\n        //     unknownKeys: merging._def.unknownKeys,\n        //     catchall: merging._def.catchall,\n        //     shape: () =>\n        //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n        //     typeName: ZodFirstPartyTypeKind.ZodObject,\n        //   }) as any;\n        //   return merged;\n        // }\n        catchall(index) {\n          return new _ZodObject({\n            ...this._def,\n            catchall: index\n          });\n        }\n        pick(mask2) {\n          const shape = {};\n          for (const key of util.objectKeys(mask2)) {\n            if (mask2[key] && this.shape[key]) {\n              shape[key] = this.shape[key];\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => shape\n          });\n        }\n        omit(mask2) {\n          const shape = {};\n          for (const key of util.objectKeys(this.shape)) {\n            if (!mask2[key]) {\n              shape[key] = this.shape[key];\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => shape\n          });\n        }\n        /**\n         * @deprecated\n         */\n        deepPartial() {\n          return deepPartialify(this);\n        }\n        partial(mask2) {\n          const newShape = {};\n          for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask2 && !mask2[key]) {\n              newShape[key] = fieldSchema;\n            } else {\n              newShape[key] = fieldSchema.optional();\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => newShape\n          });\n        }\n        required(mask2) {\n          const newShape = {};\n          for (const key of util.objectKeys(this.shape)) {\n            if (mask2 && !mask2[key]) {\n              newShape[key] = this.shape[key];\n            } else {\n              const fieldSchema = this.shape[key];\n              let newField = fieldSchema;\n              while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n              }\n              newShape[key] = newField;\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => newShape\n          });\n        }\n        keyof() {\n          return createZodEnum(util.objectKeys(this.shape));\n        }\n      };\n      ZodObject.create = (shape, params) => {\n        return new ZodObject({\n          shape: () => shape,\n          unknownKeys: \"strip\",\n          catchall: ZodNever.create(),\n          typeName: ZodFirstPartyTypeKind.ZodObject,\n          ...processCreateParams(params)\n        });\n      };\n      ZodObject.strictCreate = (shape, params) => {\n        return new ZodObject({\n          shape: () => shape,\n          unknownKeys: \"strict\",\n          catchall: ZodNever.create(),\n          typeName: ZodFirstPartyTypeKind.ZodObject,\n          ...processCreateParams(params)\n        });\n      };\n      ZodObject.lazycreate = (shape, params) => {\n        return new ZodObject({\n          shape,\n          unknownKeys: \"strip\",\n          catchall: ZodNever.create(),\n          typeName: ZodFirstPartyTypeKind.ZodObject,\n          ...processCreateParams(params)\n        });\n      };\n      ZodUnion = class extends ZodType {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const options = this._def.options;\n          function handleResults(results) {\n            for (const result of results) {\n              if (result.result.status === \"valid\") {\n                return result.result;\n              }\n            }\n            for (const result of results) {\n              if (result.result.status === \"dirty\") {\n                ctx.common.issues.push(...result.ctx.common.issues);\n                return result.result;\n              }\n            }\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_union,\n              unionErrors\n            });\n            return INVALID;\n          }\n          if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n              const childCtx = {\n                ...ctx,\n                common: {\n                  ...ctx.common,\n                  issues: []\n                },\n                parent: null\n              };\n              return {\n                result: await option._parseAsync({\n                  data: ctx.data,\n                  path: ctx.path,\n                  parent: childCtx\n                }),\n                ctx: childCtx\n              };\n            })).then(handleResults);\n          } else {\n            let dirty = void 0;\n            const issues = [];\n            for (const option of options) {\n              const childCtx = {\n                ...ctx,\n                common: {\n                  ...ctx.common,\n                  issues: []\n                },\n                parent: null\n              };\n              const result = option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: childCtx\n              });\n              if (result.status === \"valid\") {\n                return result;\n              } else if (result.status === \"dirty\" && !dirty) {\n                dirty = { result, ctx: childCtx };\n              }\n              if (childCtx.common.issues.length) {\n                issues.push(childCtx.common.issues);\n              }\n            }\n            if (dirty) {\n              ctx.common.issues.push(...dirty.ctx.common.issues);\n              return dirty.result;\n            }\n            const unionErrors = issues.map((issues2) => new ZodError(issues2));\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_union,\n              unionErrors\n            });\n            return INVALID;\n          }\n        }\n        get options() {\n          return this._def.options;\n        }\n      };\n      ZodUnion.create = (types, params) => {\n        return new ZodUnion({\n          options: types,\n          typeName: ZodFirstPartyTypeKind.ZodUnion,\n          ...processCreateParams(params)\n        });\n      };\n      getDiscriminator = (type) => {\n        if (type instanceof ZodLazy) {\n          return getDiscriminator(type.schema);\n        } else if (type instanceof ZodEffects) {\n          return getDiscriminator(type.innerType());\n        } else if (type instanceof ZodLiteral) {\n          return [type.value];\n        } else if (type instanceof ZodEnum) {\n          return type.options;\n        } else if (type instanceof ZodNativeEnum) {\n          return util.objectValues(type.enum);\n        } else if (type instanceof ZodDefault) {\n          return getDiscriminator(type._def.innerType);\n        } else if (type instanceof ZodUndefined) {\n          return [void 0];\n        } else if (type instanceof ZodNull) {\n          return [null];\n        } else if (type instanceof ZodOptional) {\n          return [void 0, ...getDiscriminator(type.unwrap())];\n        } else if (type instanceof ZodNullable) {\n          return [null, ...getDiscriminator(type.unwrap())];\n        } else if (type instanceof ZodBranded) {\n          return getDiscriminator(type.unwrap());\n        } else if (type instanceof ZodReadonly) {\n          return getDiscriminator(type.unwrap());\n        } else if (type instanceof ZodCatch) {\n          return getDiscriminator(type._def.innerType);\n        } else {\n          return [];\n        }\n      };\n      ZodDiscriminatedUnion = class _ZodDiscriminatedUnion extends ZodType {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.object,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          const discriminator = this.discriminator;\n          const discriminatorValue = ctx.data[discriminator];\n          const option = this.optionsMap.get(discriminatorValue);\n          if (!option) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_union_discriminator,\n              options: Array.from(this.optionsMap.keys()),\n              path: [discriminator]\n            });\n            return INVALID;\n          }\n          if (ctx.common.async) {\n            return option._parseAsync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n          } else {\n            return option._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n          }\n        }\n        get discriminator() {\n          return this._def.discriminator;\n        }\n        get options() {\n          return this._def.options;\n        }\n        get optionsMap() {\n          return this._def.optionsMap;\n        }\n        /**\n         * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n         * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n         * have a different value for each object in the union.\n         * @param discriminator the name of the discriminator property\n         * @param types an array of object schemas\n         * @param params\n         */\n        static create(discriminator, options, params) {\n          const optionsMap = /* @__PURE__ */ new Map();\n          for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n              throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n              if (optionsMap.has(value)) {\n                throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n              }\n              optionsMap.set(value, type);\n            }\n          }\n          return new _ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params)\n          });\n        }\n      };\n      ZodIntersection = class extends ZodType {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n              return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n              addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_intersection_types\n              });\n              return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n              status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n          };\n          if (ctx.common.async) {\n            return Promise.all([\n              this._def.left._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              }),\n              this._def.right._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              })\n            ]).then(([left, right]) => handleParsed(left, right));\n          } else {\n            return handleParsed(this._def.left._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            }), this._def.right._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            }));\n          }\n        }\n      };\n      ZodIntersection.create = (left, right, params) => {\n        return new ZodIntersection({\n          left,\n          right,\n          typeName: ZodFirstPartyTypeKind.ZodIntersection,\n          ...processCreateParams(params)\n        });\n      };\n      ZodTuple = class _ZodTuple extends ZodType {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.array,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.too_small,\n              minimum: this._def.items.length,\n              inclusive: true,\n              exact: false,\n              type: \"array\"\n            });\n            return INVALID;\n          }\n          const rest = this._def.rest;\n          if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.too_big,\n              maximum: this._def.items.length,\n              inclusive: true,\n              exact: false,\n              type: \"array\"\n            });\n            status.dirty();\n          }\n          const items = [...ctx.data].map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n              return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n          }).filter((x) => !!x);\n          if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n              return ParseStatus.mergeArray(status, results);\n            });\n          } else {\n            return ParseStatus.mergeArray(status, items);\n          }\n        }\n        get items() {\n          return this._def.items;\n        }\n        rest(rest) {\n          return new _ZodTuple({\n            ...this._def,\n            rest\n          });\n        }\n      };\n      ZodTuple.create = (schemas, params) => {\n        if (!Array.isArray(schemas)) {\n          throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n        }\n        return new ZodTuple({\n          items: schemas,\n          typeName: ZodFirstPartyTypeKind.ZodTuple,\n          rest: null,\n          ...processCreateParams(params)\n        });\n      };\n      ZodRecord = class _ZodRecord extends ZodType {\n        get keySchema() {\n          return this._def.keyType;\n        }\n        get valueSchema() {\n          return this._def.valueType;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.object,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          const pairs = [];\n          const keyType = this._def.keyType;\n          const valueType = this._def.valueType;\n          for (const key in ctx.data) {\n            pairs.push({\n              key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n              value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n              alwaysSet: key in ctx.data\n            });\n          }\n          if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n          } else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n          }\n        }\n        get element() {\n          return this._def.valueType;\n        }\n        static create(first, second, third) {\n          if (second instanceof ZodType) {\n            return new _ZodRecord({\n              keyType: first,\n              valueType: second,\n              typeName: ZodFirstPartyTypeKind.ZodRecord,\n              ...processCreateParams(third)\n            });\n          }\n          return new _ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second)\n          });\n        }\n      };\n      ZodMap = class extends ZodType {\n        get keySchema() {\n          return this._def.keyType;\n        }\n        get valueSchema() {\n          return this._def.valueType;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.map,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          const keyType = this._def.keyType;\n          const valueType = this._def.valueType;\n          const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n              key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n              value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"]))\n            };\n          });\n          if (ctx.common.async) {\n            const finalMap = /* @__PURE__ */ new Map();\n            return Promise.resolve().then(async () => {\n              for (const pair of pairs) {\n                const key = await pair.key;\n                const value = await pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                  return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                  status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n              }\n              return { status: status.value, value: finalMap };\n            });\n          } else {\n            const finalMap = /* @__PURE__ */ new Map();\n            for (const pair of pairs) {\n              const key = pair.key;\n              const value = pair.value;\n              if (key.status === \"aborted\" || value.status === \"aborted\") {\n                return INVALID;\n              }\n              if (key.status === \"dirty\" || value.status === \"dirty\") {\n                status.dirty();\n              }\n              finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n          }\n        }\n      };\n      ZodMap.create = (keyType, valueType, params) => {\n        return new ZodMap({\n          valueType,\n          keyType,\n          typeName: ZodFirstPartyTypeKind.ZodMap,\n          ...processCreateParams(params)\n        });\n      };\n      ZodSet = class _ZodSet extends ZodType {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.set,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          const def = this._def;\n          if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n              addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: def.minSize.value,\n                type: \"set\",\n                inclusive: true,\n                exact: false,\n                message: def.minSize.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n              addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: def.maxSize.value,\n                type: \"set\",\n                inclusive: true,\n                exact: false,\n                message: def.maxSize.message\n              });\n              status.dirty();\n            }\n          }\n          const valueType = this._def.valueType;\n          function finalizeSet(elements2) {\n            const parsedSet = /* @__PURE__ */ new Set();\n            for (const element of elements2) {\n              if (element.status === \"aborted\")\n                return INVALID;\n              if (element.status === \"dirty\")\n                status.dirty();\n              parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n          }\n          const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n          if (ctx.common.async) {\n            return Promise.all(elements).then((elements2) => finalizeSet(elements2));\n          } else {\n            return finalizeSet(elements);\n          }\n        }\n        min(minSize, message) {\n          return new _ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) }\n          });\n        }\n        max(maxSize, message) {\n          return new _ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) }\n          });\n        }\n        size(size, message) {\n          return this.min(size, message).max(size, message);\n        }\n        nonempty(message) {\n          return this.min(1, message);\n        }\n      };\n      ZodSet.create = (valueType, params) => {\n        return new ZodSet({\n          valueType,\n          minSize: null,\n          maxSize: null,\n          typeName: ZodFirstPartyTypeKind.ZodSet,\n          ...processCreateParams(params)\n        });\n      };\n      ZodFunction = class _ZodFunction extends ZodType {\n        constructor() {\n          super(...arguments);\n          this.validate = this.implement;\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.function,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          function makeArgsIssue(args, error) {\n            return makeIssue({\n              data: args,\n              path: ctx.path,\n              errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), en_default].filter((x) => !!x),\n              issueData: {\n                code: ZodIssueCode.invalid_arguments,\n                argumentsError: error\n              }\n            });\n          }\n          function makeReturnsIssue(returns, error) {\n            return makeIssue({\n              data: returns,\n              path: ctx.path,\n              errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), en_default].filter((x) => !!x),\n              issueData: {\n                code: ZodIssueCode.invalid_return_type,\n                returnTypeError: error\n              }\n            });\n          }\n          const params = { errorMap: ctx.common.contextualErrorMap };\n          const fn = ctx.data;\n          if (this._def.returns instanceof ZodPromise) {\n            const me = this;\n            return OK(async function(...args) {\n              const error = new ZodError([]);\n              const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                error.addIssue(makeArgsIssue(args, e));\n                throw error;\n              });\n              const result = await Reflect.apply(fn, this, parsedArgs);\n              const parsedReturns = await me._def.returns._def.type.parseAsync(result, params).catch((e) => {\n                error.addIssue(makeReturnsIssue(result, e));\n                throw error;\n              });\n              return parsedReturns;\n            });\n          } else {\n            const me = this;\n            return OK(function(...args) {\n              const parsedArgs = me._def.args.safeParse(args, params);\n              if (!parsedArgs.success) {\n                throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n              }\n              const result = Reflect.apply(fn, this, parsedArgs.data);\n              const parsedReturns = me._def.returns.safeParse(result, params);\n              if (!parsedReturns.success) {\n                throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n              }\n              return parsedReturns.data;\n            });\n          }\n        }\n        parameters() {\n          return this._def.args;\n        }\n        returnType() {\n          return this._def.returns;\n        }\n        args(...items) {\n          return new _ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create())\n          });\n        }\n        returns(returnType) {\n          return new _ZodFunction({\n            ...this._def,\n            returns: returnType\n          });\n        }\n        implement(func) {\n          const validatedFunc = this.parse(func);\n          return validatedFunc;\n        }\n        strictImplement(func) {\n          const validatedFunc = this.parse(func);\n          return validatedFunc;\n        }\n        static create(args, returns, params) {\n          return new _ZodFunction({\n            args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params)\n          });\n        }\n      };\n      ZodLazy = class extends ZodType {\n        get schema() {\n          return this._def.getter();\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const lazySchema = this._def.getter();\n          return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n        }\n      };\n      ZodLazy.create = (getter, params) => {\n        return new ZodLazy({\n          getter,\n          typeName: ZodFirstPartyTypeKind.ZodLazy,\n          ...processCreateParams(params)\n        });\n      };\n      ZodLiteral = class extends ZodType {\n        _parse(input) {\n          if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              received: ctx.data,\n              code: ZodIssueCode.invalid_literal,\n              expected: this._def.value\n            });\n            return INVALID;\n          }\n          return { status: \"valid\", value: input.data };\n        }\n        get value() {\n          return this._def.value;\n        }\n      };\n      ZodLiteral.create = (value, params) => {\n        return new ZodLiteral({\n          value,\n          typeName: ZodFirstPartyTypeKind.ZodLiteral,\n          ...processCreateParams(params)\n        });\n      };\n      ZodEnum = class _ZodEnum extends ZodType {\n        _parse(input) {\n          if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n              expected: util.joinValues(expectedValues),\n              received: ctx.parsedType,\n              code: ZodIssueCode.invalid_type\n            });\n            return INVALID;\n          }\n          if (!this._cache) {\n            this._cache = new Set(this._def.values);\n          }\n          if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n              received: ctx.data,\n              code: ZodIssueCode.invalid_enum_value,\n              options: expectedValues\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n        get options() {\n          return this._def.values;\n        }\n        get enum() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        get Values() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        get Enum() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        extract(values, newDef = this._def) {\n          return _ZodEnum.create(values, {\n            ...this._def,\n            ...newDef\n          });\n        }\n        exclude(values, newDef = this._def) {\n          return _ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef\n          });\n        }\n      };\n      ZodEnum.create = createZodEnum;\n      ZodNativeEnum = class extends ZodType {\n        _parse(input) {\n          const nativeEnumValues = util.getValidEnumValues(this._def.values);\n          const ctx = this._getOrReturnCtx(input);\n          if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n              expected: util.joinValues(expectedValues),\n              received: ctx.parsedType,\n              code: ZodIssueCode.invalid_type\n            });\n            return INVALID;\n          }\n          if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n          }\n          if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n              received: ctx.data,\n              code: ZodIssueCode.invalid_enum_value,\n              options: expectedValues\n            });\n            return INVALID;\n          }\n          return OK(input.data);\n        }\n        get enum() {\n          return this._def.values;\n        }\n      };\n      ZodNativeEnum.create = (values, params) => {\n        return new ZodNativeEnum({\n          values,\n          typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n          ...processCreateParams(params)\n        });\n      };\n      ZodPromise = class extends ZodType {\n        unwrap() {\n          return this._def.type;\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.promise,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n          return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n              path: ctx.path,\n              errorMap: ctx.common.contextualErrorMap\n            });\n          }));\n        }\n      };\n      ZodPromise.create = (schema, params) => {\n        return new ZodPromise({\n          type: schema,\n          typeName: ZodFirstPartyTypeKind.ZodPromise,\n          ...processCreateParams(params)\n        });\n      };\n      ZodEffects = class extends ZodType {\n        innerType() {\n          return this._def.schema;\n        }\n        sourceType() {\n          return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          const effect = this._def.effect || null;\n          const checkCtx = {\n            addIssue: (arg) => {\n              addIssueToContext(ctx, arg);\n              if (arg.fatal) {\n                status.abort();\n              } else {\n                status.dirty();\n              }\n            },\n            get path() {\n              return ctx.path;\n            }\n          };\n          checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n          if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n              return Promise.resolve(processed).then(async (processed2) => {\n                if (status.value === \"aborted\")\n                  return INVALID;\n                const result = await this._def.schema._parseAsync({\n                  data: processed2,\n                  path: ctx.path,\n                  parent: ctx\n                });\n                if (result.status === \"aborted\")\n                  return INVALID;\n                if (result.status === \"dirty\")\n                  return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                  return DIRTY(result.value);\n                return result;\n              });\n            } else {\n              if (status.value === \"aborted\")\n                return INVALID;\n              const result = this._def.schema._parseSync({\n                data: processed,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (result.status === \"aborted\")\n                return INVALID;\n              if (result.status === \"dirty\")\n                return DIRTY(result.value);\n              if (status.value === \"dirty\")\n                return DIRTY(result.value);\n              return result;\n            }\n          }\n          if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n              const result = effect.refinement(acc, checkCtx);\n              if (ctx.common.async) {\n                return Promise.resolve(result);\n              }\n              if (result instanceof Promise) {\n                throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n              }\n              return acc;\n            };\n            if (ctx.common.async === false) {\n              const inner = this._def.schema._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (inner.status === \"aborted\")\n                return INVALID;\n              if (inner.status === \"dirty\")\n                status.dirty();\n              executeRefinement(inner.value);\n              return { status: status.value, value: inner.value };\n            } else {\n              return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                if (inner.status === \"aborted\")\n                  return INVALID;\n                if (inner.status === \"dirty\")\n                  status.dirty();\n                return executeRefinement(inner.value).then(() => {\n                  return { status: status.value, value: inner.value };\n                });\n              });\n            }\n          }\n          if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n              const base = this._def.schema._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (!isValid(base))\n                return INVALID;\n              const result = effect.transform(base.value, checkCtx);\n              if (result instanceof Promise) {\n                throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n              }\n              return { status: status.value, value: result };\n            } else {\n              return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                if (!isValid(base))\n                  return INVALID;\n                return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                  status: status.value,\n                  value: result\n                }));\n              });\n            }\n          }\n          util.assertNever(effect);\n        }\n      };\n      ZodEffects.create = (schema, effect, params) => {\n        return new ZodEffects({\n          schema,\n          typeName: ZodFirstPartyTypeKind.ZodEffects,\n          effect,\n          ...processCreateParams(params)\n        });\n      };\n      ZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n        return new ZodEffects({\n          schema,\n          effect: { type: \"preprocess\", transform: preprocess },\n          typeName: ZodFirstPartyTypeKind.ZodEffects,\n          ...processCreateParams(params)\n        });\n      };\n      ZodOptional = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType === ZodParsedType.undefined) {\n            return OK(void 0);\n          }\n          return this._def.innerType._parse(input);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      ZodOptional.create = (type, params) => {\n        return new ZodOptional({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind.ZodOptional,\n          ...processCreateParams(params)\n        });\n      };\n      ZodNullable = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType === ZodParsedType.null) {\n            return OK(null);\n          }\n          return this._def.innerType._parse(input);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      ZodNullable.create = (type, params) => {\n        return new ZodNullable({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind.ZodNullable,\n          ...processCreateParams(params)\n        });\n      };\n      ZodDefault = class extends ZodType {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          let data = ctx.data;\n          if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n          }\n          return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx\n          });\n        }\n        removeDefault() {\n          return this._def.innerType;\n        }\n      };\n      ZodDefault.create = (type, params) => {\n        return new ZodDefault({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind.ZodDefault,\n          defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n          ...processCreateParams(params)\n        });\n      };\n      ZodCatch = class extends ZodType {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const newCtx = {\n            ...ctx,\n            common: {\n              ...ctx.common,\n              issues: []\n            }\n          };\n          const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n              ...newCtx\n            }\n          });\n          if (isAsync(result)) {\n            return result.then((result2) => {\n              return {\n                status: \"valid\",\n                value: result2.status === \"valid\" ? result2.value : this._def.catchValue({\n                  get error() {\n                    return new ZodError(newCtx.common.issues);\n                  },\n                  input: newCtx.data\n                })\n              };\n            });\n          } else {\n            return {\n              status: \"valid\",\n              value: result.status === \"valid\" ? result.value : this._def.catchValue({\n                get error() {\n                  return new ZodError(newCtx.common.issues);\n                },\n                input: newCtx.data\n              })\n            };\n          }\n        }\n        removeCatch() {\n          return this._def.innerType;\n        }\n      };\n      ZodCatch.create = (type, params) => {\n        return new ZodCatch({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind.ZodCatch,\n          catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n          ...processCreateParams(params)\n        });\n      };\n      ZodNaN = class extends ZodType {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.invalid_type,\n              expected: ZodParsedType.nan,\n              received: ctx.parsedType\n            });\n            return INVALID;\n          }\n          return { status: \"valid\", value: input.data };\n        }\n      };\n      ZodNaN.create = (params) => {\n        return new ZodNaN({\n          typeName: ZodFirstPartyTypeKind.ZodNaN,\n          ...processCreateParams(params)\n        });\n      };\n      BRAND = Symbol(\"zod_brand\");\n      ZodBranded = class extends ZodType {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const data = ctx.data;\n          return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx\n          });\n        }\n        unwrap() {\n          return this._def.type;\n        }\n      };\n      ZodPipeline = class _ZodPipeline extends ZodType {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.common.async) {\n            const handleAsync = async () => {\n              const inResult = await this._def.in._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (inResult.status === \"aborted\")\n                return INVALID;\n              if (inResult.status === \"dirty\") {\n                status.dirty();\n                return DIRTY(inResult.value);\n              } else {\n                return this._def.out._parseAsync({\n                  data: inResult.value,\n                  path: ctx.path,\n                  parent: ctx\n                });\n              }\n            };\n            return handleAsync();\n          } else {\n            const inResult = this._def.in._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n            if (inResult.status === \"aborted\")\n              return INVALID;\n            if (inResult.status === \"dirty\") {\n              status.dirty();\n              return {\n                status: \"dirty\",\n                value: inResult.value\n              };\n            } else {\n              return this._def.out._parseSync({\n                data: inResult.value,\n                path: ctx.path,\n                parent: ctx\n              });\n            }\n          }\n        }\n        static create(a, b2) {\n          return new _ZodPipeline({\n            in: a,\n            out: b2,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline\n          });\n        }\n      };\n      ZodReadonly = class extends ZodType {\n        _parse(input) {\n          const result = this._def.innerType._parse(input);\n          const freeze = (data) => {\n            if (isValid(data)) {\n              data.value = Object.freeze(data.value);\n            }\n            return data;\n          };\n          return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      ZodReadonly.create = (type, params) => {\n        return new ZodReadonly({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind.ZodReadonly,\n          ...processCreateParams(params)\n        });\n      };\n      late = {\n        object: ZodObject.lazycreate\n      };\n      (function(ZodFirstPartyTypeKind2) {\n        ZodFirstPartyTypeKind2[\"ZodString\"] = \"ZodString\";\n        ZodFirstPartyTypeKind2[\"ZodNumber\"] = \"ZodNumber\";\n        ZodFirstPartyTypeKind2[\"ZodNaN\"] = \"ZodNaN\";\n        ZodFirstPartyTypeKind2[\"ZodBigInt\"] = \"ZodBigInt\";\n        ZodFirstPartyTypeKind2[\"ZodBoolean\"] = \"ZodBoolean\";\n        ZodFirstPartyTypeKind2[\"ZodDate\"] = \"ZodDate\";\n        ZodFirstPartyTypeKind2[\"ZodSymbol\"] = \"ZodSymbol\";\n        ZodFirstPartyTypeKind2[\"ZodUndefined\"] = \"ZodUndefined\";\n        ZodFirstPartyTypeKind2[\"ZodNull\"] = \"ZodNull\";\n        ZodFirstPartyTypeKind2[\"ZodAny\"] = \"ZodAny\";\n        ZodFirstPartyTypeKind2[\"ZodUnknown\"] = \"ZodUnknown\";\n        ZodFirstPartyTypeKind2[\"ZodNever\"] = \"ZodNever\";\n        ZodFirstPartyTypeKind2[\"ZodVoid\"] = \"ZodVoid\";\n        ZodFirstPartyTypeKind2[\"ZodArray\"] = \"ZodArray\";\n        ZodFirstPartyTypeKind2[\"ZodObject\"] = \"ZodObject\";\n        ZodFirstPartyTypeKind2[\"ZodUnion\"] = \"ZodUnion\";\n        ZodFirstPartyTypeKind2[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n        ZodFirstPartyTypeKind2[\"ZodIntersection\"] = \"ZodIntersection\";\n        ZodFirstPartyTypeKind2[\"ZodTuple\"] = \"ZodTuple\";\n        ZodFirstPartyTypeKind2[\"ZodRecord\"] = \"ZodRecord\";\n        ZodFirstPartyTypeKind2[\"ZodMap\"] = \"ZodMap\";\n        ZodFirstPartyTypeKind2[\"ZodSet\"] = \"ZodSet\";\n        ZodFirstPartyTypeKind2[\"ZodFunction\"] = \"ZodFunction\";\n        ZodFirstPartyTypeKind2[\"ZodLazy\"] = \"ZodLazy\";\n        ZodFirstPartyTypeKind2[\"ZodLiteral\"] = \"ZodLiteral\";\n        ZodFirstPartyTypeKind2[\"ZodEnum\"] = \"ZodEnum\";\n        ZodFirstPartyTypeKind2[\"ZodEffects\"] = \"ZodEffects\";\n        ZodFirstPartyTypeKind2[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n        ZodFirstPartyTypeKind2[\"ZodOptional\"] = \"ZodOptional\";\n        ZodFirstPartyTypeKind2[\"ZodNullable\"] = \"ZodNullable\";\n        ZodFirstPartyTypeKind2[\"ZodDefault\"] = \"ZodDefault\";\n        ZodFirstPartyTypeKind2[\"ZodCatch\"] = \"ZodCatch\";\n        ZodFirstPartyTypeKind2[\"ZodPromise\"] = \"ZodPromise\";\n        ZodFirstPartyTypeKind2[\"ZodBranded\"] = \"ZodBranded\";\n        ZodFirstPartyTypeKind2[\"ZodPipeline\"] = \"ZodPipeline\";\n        ZodFirstPartyTypeKind2[\"ZodReadonly\"] = \"ZodReadonly\";\n      })(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n      instanceOfType = (cls, params = {\n        message: `Input not instance of ${cls.name}`\n      }) => custom((data) => data instanceof cls, params);\n      stringType = ZodString.create;\n      numberType = ZodNumber.create;\n      nanType = ZodNaN.create;\n      bigIntType = ZodBigInt.create;\n      booleanType = ZodBoolean.create;\n      dateType = ZodDate.create;\n      symbolType = ZodSymbol.create;\n      undefinedType = ZodUndefined.create;\n      nullType = ZodNull.create;\n      anyType = ZodAny.create;\n      unknownType = ZodUnknown.create;\n      neverType = ZodNever.create;\n      voidType = ZodVoid.create;\n      arrayType = ZodArray.create;\n      objectType = ZodObject.create;\n      strictObjectType = ZodObject.strictCreate;\n      unionType = ZodUnion.create;\n      discriminatedUnionType = ZodDiscriminatedUnion.create;\n      intersectionType = ZodIntersection.create;\n      tupleType = ZodTuple.create;\n      recordType = ZodRecord.create;\n      mapType = ZodMap.create;\n      setType = ZodSet.create;\n      functionType = ZodFunction.create;\n      lazyType = ZodLazy.create;\n      literalType = ZodLiteral.create;\n      enumType = ZodEnum.create;\n      nativeEnumType = ZodNativeEnum.create;\n      promiseType = ZodPromise.create;\n      effectsType = ZodEffects.create;\n      optionalType = ZodOptional.create;\n      nullableType = ZodNullable.create;\n      preprocessType = ZodEffects.createWithPreprocess;\n      pipelineType = ZodPipeline.create;\n      ostring = () => stringType().optional();\n      onumber = () => numberType().optional();\n      oboolean = () => booleanType().optional();\n      coerce = {\n        string: (arg) => ZodString.create({ ...arg, coerce: true }),\n        number: (arg) => ZodNumber.create({ ...arg, coerce: true }),\n        boolean: (arg) => ZodBoolean.create({\n          ...arg,\n          coerce: true\n        }),\n        bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),\n        date: (arg) => ZodDate.create({ ...arg, coerce: true })\n      };\n      NEVER = INVALID;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/external.js\n  var external_exports = {};\n  __export(external_exports, {\n    BRAND: () => BRAND,\n    DIRTY: () => DIRTY,\n    EMPTY_PATH: () => EMPTY_PATH,\n    INVALID: () => INVALID,\n    NEVER: () => NEVER,\n    OK: () => OK,\n    ParseStatus: () => ParseStatus,\n    Schema: () => ZodType,\n    ZodAny: () => ZodAny,\n    ZodArray: () => ZodArray,\n    ZodBigInt: () => ZodBigInt,\n    ZodBoolean: () => ZodBoolean,\n    ZodBranded: () => ZodBranded,\n    ZodCatch: () => ZodCatch,\n    ZodDate: () => ZodDate,\n    ZodDefault: () => ZodDefault,\n    ZodDiscriminatedUnion: () => ZodDiscriminatedUnion,\n    ZodEffects: () => ZodEffects,\n    ZodEnum: () => ZodEnum,\n    ZodError: () => ZodError,\n    ZodFirstPartyTypeKind: () => ZodFirstPartyTypeKind,\n    ZodFunction: () => ZodFunction,\n    ZodIntersection: () => ZodIntersection,\n    ZodIssueCode: () => ZodIssueCode,\n    ZodLazy: () => ZodLazy,\n    ZodLiteral: () => ZodLiteral,\n    ZodMap: () => ZodMap,\n    ZodNaN: () => ZodNaN,\n    ZodNativeEnum: () => ZodNativeEnum,\n    ZodNever: () => ZodNever,\n    ZodNull: () => ZodNull,\n    ZodNullable: () => ZodNullable,\n    ZodNumber: () => ZodNumber,\n    ZodObject: () => ZodObject,\n    ZodOptional: () => ZodOptional,\n    ZodParsedType: () => ZodParsedType,\n    ZodPipeline: () => ZodPipeline,\n    ZodPromise: () => ZodPromise,\n    ZodReadonly: () => ZodReadonly,\n    ZodRecord: () => ZodRecord,\n    ZodSchema: () => ZodType,\n    ZodSet: () => ZodSet,\n    ZodString: () => ZodString,\n    ZodSymbol: () => ZodSymbol,\n    ZodTransformer: () => ZodEffects,\n    ZodTuple: () => ZodTuple,\n    ZodType: () => ZodType,\n    ZodUndefined: () => ZodUndefined,\n    ZodUnion: () => ZodUnion,\n    ZodUnknown: () => ZodUnknown,\n    ZodVoid: () => ZodVoid,\n    addIssueToContext: () => addIssueToContext,\n    any: () => anyType,\n    array: () => arrayType,\n    bigint: () => bigIntType,\n    boolean: () => booleanType,\n    coerce: () => coerce,\n    custom: () => custom,\n    date: () => dateType,\n    datetimeRegex: () => datetimeRegex,\n    defaultErrorMap: () => en_default,\n    discriminatedUnion: () => discriminatedUnionType,\n    effect: () => effectsType,\n    enum: () => enumType,\n    function: () => functionType,\n    getErrorMap: () => getErrorMap,\n    getParsedType: () => getParsedType,\n    instanceof: () => instanceOfType,\n    intersection: () => intersectionType,\n    isAborted: () => isAborted,\n    isAsync: () => isAsync,\n    isDirty: () => isDirty,\n    isValid: () => isValid,\n    late: () => late,\n    lazy: () => lazyType,\n    literal: () => literalType,\n    makeIssue: () => makeIssue,\n    map: () => mapType,\n    nan: () => nanType,\n    nativeEnum: () => nativeEnumType,\n    never: () => neverType,\n    null: () => nullType,\n    nullable: () => nullableType,\n    number: () => numberType,\n    object: () => objectType,\n    objectUtil: () => objectUtil,\n    oboolean: () => oboolean,\n    onumber: () => onumber,\n    optional: () => optionalType,\n    ostring: () => ostring,\n    pipeline: () => pipelineType,\n    preprocess: () => preprocessType,\n    promise: () => promiseType,\n    quotelessJson: () => quotelessJson,\n    record: () => recordType,\n    set: () => setType,\n    setErrorMap: () => setErrorMap,\n    strictObject: () => strictObjectType,\n    string: () => stringType,\n    symbol: () => symbolType,\n    transformer: () => effectsType,\n    tuple: () => tupleType,\n    undefined: () => undefinedType,\n    union: () => unionType,\n    unknown: () => unknownType,\n    util: () => util,\n    void: () => voidType\n  });\n  var init_external = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/external.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_errors();\n      init_parseUtil();\n      init_typeAliases();\n      init_util();\n      init_types();\n      init_ZodError();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/index.js\n  var init_v3 = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/v3/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_external();\n      init_external();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/index.js\n  var init_esm = __esm({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/esm/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_v3();\n      init_v3();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/policyDef/context/policyDefContext.ts\n  function createPolicyContext({\n    baseContext,\n    allowSchema,\n    denySchema\n  }) {\n    function allowWithSchema(result) {\n      return {\n        allow: true,\n        result\n      };\n    }\n    function allowWithoutSchema() {\n      return {\n        allow: true\n      };\n    }\n    function denyWithSchema(result, error) {\n      return {\n        allow: false,\n        result\n      };\n    }\n    function denyWithoutSchema(error) {\n      return {\n        allow: false,\n        ...error ? { error } : {},\n        result: void 0\n      };\n    }\n    const allow = allowSchema ? allowWithSchema : allowWithoutSchema;\n    const deny = denySchema ? denyWithSchema : denyWithoutSchema;\n    return {\n      ...baseContext,\n      allow,\n      deny\n    };\n  }\n  var init_policyDefContext = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/policyDef/context/policyDefContext.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/helpers/resultCreators.ts\n  function createDenyResult(params) {\n    if (params.result === void 0) {\n      return {\n        allow: false,\n        error: params.message,\n        result: void 0\n      };\n    }\n    return {\n      allow: false,\n      error: params.message,\n      result: params.result\n    };\n  }\n  function createDenyNoResult(message) {\n    return createDenyResult({ message });\n  }\n  function createAllowResult(params) {\n    if (params.result === void 0) {\n      return {\n        allow: true,\n        result: void 0\n      };\n    }\n    return {\n      allow: true,\n      result: params.result\n    };\n  }\n  function createAllowEvaluationResult(params) {\n    return {\n      allow: true,\n      evaluatedPolicies: params.evaluatedPolicies,\n      allowedPolicies: params.allowedPolicies,\n      deniedPolicy: void 0\n      // important for union discrimination\n    };\n  }\n  function createDenyEvaluationResult(params) {\n    return {\n      allow: false,\n      evaluatedPolicies: params.evaluatedPolicies,\n      allowedPolicies: params.allowedPolicies,\n      deniedPolicy: params.deniedPolicy\n    };\n  }\n  function wrapAllow(value) {\n    return createAllowResult({ result: value });\n  }\n  function returnNoResultDeny(message) {\n    return createDenyNoResult(message);\n  }\n  var init_resultCreators = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/helpers/resultCreators.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/helpers/typeGuards.ts\n  function isPolicyDenyResponse(val) {\n    return typeof val === \"object\" && val !== null && val.allow === false;\n  }\n  function isPolicyResponse(value) {\n    return typeof value === \"object\" && value !== null && \"allow\" in value && typeof value.allow === \"boolean\";\n  }\n  var init_typeGuards = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/helpers/typeGuards.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/helpers/zod.ts\n  function validateOrDeny(value, schema, phase, stage) {\n    const parsed = schema.safeParse(value);\n    if (!parsed.success) {\n      const descriptor = stage === \"input\" ? \"parameters\" : \"result\";\n      const message = `Invalid ${phase} ${descriptor}.`;\n      return createDenyResult({\n        message,\n        result: { zodError: parsed.error }\n      });\n    }\n    return parsed.data;\n  }\n  function getValidatedParamsOrDeny({\n    rawToolParams,\n    rawUserParams,\n    toolParamsSchema: toolParamsSchema2,\n    userParamsSchema,\n    phase\n  }) {\n    const toolParams2 = validateOrDeny(rawToolParams, toolParamsSchema2, phase, \"input\");\n    if (isPolicyDenyResponse(toolParams2)) {\n      return toolParams2;\n    }\n    const userParams = validateOrDeny(rawUserParams, userParamsSchema, phase, \"input\");\n    if (isPolicyDenyResponse(userParams)) {\n      return userParams;\n    }\n    return {\n      toolParams: toolParams2,\n      userParams\n    };\n  }\n  function getSchemaForPolicyResponseResult({\n    value,\n    allowResultSchema,\n    denyResultSchema\n  }) {\n    if (!isPolicyResponse(value)) {\n      console.log(\"getSchemaForPolicyResponseResult !isPolicyResponse\", value);\n      return {\n        schemaToUse: PolicyResponseShape,\n        parsedType: \"unknown\"\n      };\n    }\n    console.log(\"getSchemaForPolicyResponseResult value is\", value);\n    return {\n      schemaToUse: value.allow ? allowResultSchema : denyResultSchema,\n      parsedType: value.allow ? \"allow\" : \"deny\"\n    };\n  }\n  var PolicyResponseShape;\n  var init_zod = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/helpers/zod.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      init_resultCreators();\n      init_typeGuards();\n      PolicyResponseShape = external_exports.object({\n        allow: external_exports.boolean(),\n        result: external_exports.unknown()\n      });\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/helpers/index.ts\n  var init_helpers = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/helpers/index.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_resultCreators();\n      init_typeGuards();\n      init_zod();\n      init_zod();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/vincentPolicy.ts\n  function createVincentPolicy(policyDef) {\n    if (policyDef.commitParamsSchema && !policyDef.commit) {\n      throw new Error(\"Policy defines commitParamsSchema but is missing commit function\");\n    }\n    const userParamsSchema = policyDef.userParamsSchema ?? external_exports.undefined();\n    const evalAllowSchema = policyDef.evalAllowResultSchema ?? external_exports.undefined();\n    const evalDenySchema = policyDef.evalDenyResultSchema ?? external_exports.undefined();\n    const evaluate = async (args, baseContext) => {\n      try {\n        const context2 = createPolicyContext({\n          baseContext,\n          allowSchema: evalAllowSchema,\n          denySchema: evalDenySchema\n        });\n        const paramsOrDeny = getValidatedParamsOrDeny({\n          rawToolParams: args.toolParams,\n          rawUserParams: args.userParams,\n          toolParamsSchema: policyDef.toolParamsSchema,\n          userParamsSchema,\n          phase: \"evaluate\"\n        });\n        if (isPolicyDenyResponse(paramsOrDeny)) {\n          return paramsOrDeny;\n        }\n        const { toolParams: toolParams2, userParams } = paramsOrDeny;\n        const result = await policyDef.evaluate({ toolParams: toolParams2, userParams }, context2);\n        if (isPolicyDenyResponse(result)) {\n          return result;\n        }\n        const { schemaToUse } = getSchemaForPolicyResponseResult({\n          value: result,\n          allowResultSchema: evalAllowSchema,\n          denyResultSchema: evalDenySchema\n        });\n        const resultOrDeny = validateOrDeny(\n          result.result,\n          schemaToUse,\n          \"evaluate\",\n          \"output\"\n        );\n        if (isPolicyDenyResponse(resultOrDeny)) {\n          return resultOrDeny;\n        }\n        return wrapAllow(resultOrDeny);\n      } catch (err) {\n        return returnNoResultDeny(\n          err instanceof Error ? err.message : \"Unknown error\"\n        );\n      }\n    };\n    const precheckAllowSchema = policyDef.precheckAllowResultSchema ?? external_exports.undefined();\n    const precheckDenySchema = policyDef.precheckDenyResultSchema ?? external_exports.undefined();\n    const precheck = policyDef.precheck ? async (args, baseContext) => {\n      try {\n        const context2 = createPolicyContext({\n          baseContext,\n          allowSchema: precheckAllowSchema,\n          denySchema: precheckDenySchema\n        });\n        const { precheck: precheckFn } = policyDef;\n        if (!precheckFn) {\n          throw new Error(\"precheck function unexpectedly missing\");\n        }\n        const paramsOrDeny = getValidatedParamsOrDeny({\n          rawToolParams: args.toolParams,\n          rawUserParams: args.userParams,\n          toolParamsSchema: policyDef.toolParamsSchema,\n          userParamsSchema,\n          phase: \"precheck\"\n        });\n        if (isPolicyDenyResponse(paramsOrDeny)) {\n          return paramsOrDeny;\n        }\n        const result = await precheckFn(args, context2);\n        if (isPolicyDenyResponse(result)) {\n          return result;\n        }\n        const { schemaToUse } = getSchemaForPolicyResponseResult({\n          value: result,\n          allowResultSchema: precheckAllowSchema,\n          denyResultSchema: precheckDenySchema\n        });\n        const resultOrDeny = validateOrDeny(\n          result.result,\n          schemaToUse,\n          \"precheck\",\n          \"output\"\n        );\n        if (isPolicyDenyResponse(resultOrDeny)) {\n          return resultOrDeny;\n        }\n        return createAllowResult({ result: resultOrDeny });\n      } catch (err) {\n        return createDenyResult({\n          message: err instanceof Error ? err.message : \"Unknown error\"\n        });\n      }\n    } : void 0;\n    const commitAllowSchema = policyDef.commitAllowResultSchema ?? external_exports.undefined();\n    const commitDenySchema = policyDef.commitDenyResultSchema ?? external_exports.undefined();\n    const commitParamsSchema = policyDef.commitParamsSchema ?? external_exports.undefined();\n    const commit = policyDef.commit ? async (args, baseContext) => {\n      try {\n        const context2 = createPolicyContext({\n          baseContext,\n          denySchema: commitDenySchema,\n          allowSchema: commitAllowSchema\n        });\n        const { commit: commitFn } = policyDef;\n        if (!commitFn) {\n          throw new Error(\"commit function unexpectedly missing\");\n        }\n        const paramsOrDeny = validateOrDeny(args, commitParamsSchema, \"commit\", \"input\");\n        if (isPolicyDenyResponse(paramsOrDeny)) {\n          return paramsOrDeny;\n        }\n        const result = await commitFn(args, context2);\n        if (isPolicyDenyResponse(result)) {\n          return result;\n        }\n        const { schemaToUse } = getSchemaForPolicyResponseResult({\n          value: result,\n          allowResultSchema: commitAllowSchema,\n          denyResultSchema: commitDenySchema\n        });\n        const resultOrDeny = validateOrDeny(\n          result.result,\n          schemaToUse,\n          \"commit\",\n          \"output\"\n        );\n        if (isPolicyDenyResponse(resultOrDeny)) {\n          return resultOrDeny;\n        }\n        return createAllowResult({ result: resultOrDeny });\n      } catch (err) {\n        return createDenyResult({\n          message: err instanceof Error ? err.message : \"Unknown error\"\n        });\n      }\n    } : void 0;\n    const vincentPolicy2 = {\n      ...policyDef,\n      evaluate,\n      precheck,\n      commit\n    };\n    return vincentPolicy2;\n  }\n  function createVincentToolPolicy(config2) {\n    const {\n      bundledVincentPolicy: { vincentPolicy: vincentPolicy2, ipfsCid }\n    } = config2;\n    const result = {\n      vincentPolicy: vincentPolicy2,\n      ipfsCid,\n      toolParameterMappings: config2.toolParameterMappings,\n      // Explicitly include schema types in the returned object for type inference\n      __schemaTypes: {\n        evalAllowResultSchema: vincentPolicy2.evalAllowResultSchema,\n        evalDenyResultSchema: vincentPolicy2.evalDenyResultSchema,\n        commitParamsSchema: vincentPolicy2.commitParamsSchema,\n        precheckAllowResultSchema: vincentPolicy2.precheckAllowResultSchema,\n        precheckDenyResultSchema: vincentPolicy2.precheckDenyResultSchema,\n        commitAllowResultSchema: vincentPolicy2.commitAllowResultSchema,\n        commitDenyResultSchema: vincentPolicy2.commitDenyResultSchema,\n        // Explicit function types\n        evaluate: vincentPolicy2.evaluate,\n        precheck: vincentPolicy2.precheck,\n        commit: vincentPolicy2.commit\n      }\n    };\n    return result;\n  }\n  var init_vincentPolicy = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/vincentPolicy.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      init_policyDefContext();\n      init_helpers();\n      init_resultCreators();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/toolDef/context/types.ts\n  var YouMustCallContextSucceedOrFail;\n  var init_types2 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/toolDef/context/types.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      YouMustCallContextSucceedOrFail = Symbol(\n        \"ExecuteToolResult must come from context.succeed() or context.fail()\"\n      );\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/toolDef/context/resultCreators.ts\n  function createSuccess(result) {\n    return {\n      success: true,\n      result,\n      [YouMustCallContextSucceedOrFail]: \"ToolResult\"\n    };\n  }\n  function createSuccessNoResult() {\n    return {\n      success: true,\n      [YouMustCallContextSucceedOrFail]: \"ToolResult\"\n    };\n  }\n  function createFailure(result, error) {\n    return {\n      success: false,\n      result,\n      ...error ? { error } : {},\n      [YouMustCallContextSucceedOrFail]: \"ToolResult\"\n    };\n  }\n  function createFailureNoResult(error) {\n    return {\n      success: false,\n      result: void 0,\n      ...error ? { error } : {},\n      [YouMustCallContextSucceedOrFail]: \"ToolResult\"\n    };\n  }\n  var init_resultCreators2 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/toolDef/context/resultCreators.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_types2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/toolDef/context/toolContext.ts\n  function createExecutionToolContext(params) {\n    const { baseContext, successSchema, failSchema, policiesByPackageName } = params;\n    const succeed = successSchema ? createSuccess : createSuccessNoResult;\n    const fail = failSchema ? createFailure : createFailureNoResult;\n    const allowedPolicies = {};\n    for (const key of Object.keys(policiesByPackageName)) {\n      const k = key;\n      const entry = baseContext.policiesContext.allowedPolicies[k];\n      if (!entry)\n        continue;\n      allowedPolicies[k] = {\n        ...entry\n      };\n    }\n    const upgradedPoliciesContext = {\n      evaluatedPolicies: baseContext.policiesContext.evaluatedPolicies,\n      allow: true,\n      deniedPolicy: void 0,\n      allowedPolicies\n    };\n    return {\n      ...baseContext,\n      policiesContext: upgradedPoliciesContext,\n      succeed,\n      fail\n    };\n  }\n  function createPrecheckToolContext(params) {\n    const { baseContext, successSchema, failSchema } = params;\n    const succeed = successSchema ? createSuccess : createSuccessNoResult;\n    const fail = failSchema ? createFailure : createFailureNoResult;\n    return {\n      ...baseContext,\n      succeed,\n      fail\n    };\n  }\n  var init_toolContext = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/toolDef/context/toolContext.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_resultCreators2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/resultCreators.ts\n  function createToolSuccessResult(args) {\n    if (!args || args.result === void 0) {\n      return { success: true };\n    }\n    return { success: true, result: args.result };\n  }\n  function createToolFailureResult({\n    message,\n    result\n  }) {\n    if (result === void 0) {\n      return {\n        success: false,\n        error: message,\n        result: void 0\n      };\n    }\n    return {\n      success: false,\n      error: message,\n      result\n    };\n  }\n  function createToolFailureNoResult(message) {\n    return createToolFailureResult({ message });\n  }\n  function wrapFailure(value, message) {\n    return createToolFailureResult({ result: value, message });\n  }\n  function wrapNoResultFailure(message) {\n    return createToolFailureNoResult(message);\n  }\n  function wrapSuccess(value) {\n    return createToolSuccessResult({ result: value });\n  }\n  var init_resultCreators3 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/resultCreators.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/typeGuards.ts\n  function isToolFailureResult(value) {\n    return typeof value === \"object\" && value !== null && \"success\" in value && value.success === false && \"result\" in value;\n  }\n  function isToolResult(value) {\n    return typeof value === \"object\" && value !== null && \"success\" in value && typeof value.success === \"boolean\" && \"result\" in value;\n  }\n  var init_typeGuards2 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/typeGuards.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/zod.ts\n  function validateOrFail(value, schema, phase, stage) {\n    const effectiveSchema = schema ?? mustBeUndefinedSchema;\n    const parsed = effectiveSchema.safeParse(value);\n    if (!parsed.success) {\n      const descriptor = stage === \"input\" ? \"parameters\" : \"result\";\n      const message = `Invalid ${phase} ${descriptor}.`;\n      return createToolFailureResult({\n        message,\n        result: { zodError: parsed.error }\n      });\n    }\n    return parsed.data;\n  }\n  function getSchemaForToolResult({\n    value,\n    successResultSchema,\n    failureResultSchema\n  }) {\n    if (!isToolResult(value)) {\n      return {\n        schemaToUse: ToolResultShape,\n        parsedType: \"unknown\"\n      };\n    }\n    const schemaToUse = value.success ? successResultSchema ?? external_exports.undefined() : failureResultSchema ?? external_exports.undefined();\n    return {\n      schemaToUse,\n      parsedType: value.success ? \"success\" : \"failure\"\n    };\n  }\n  var ToolResultShape, mustBeUndefinedSchema;\n  var init_zod2 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/zod.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      init_resultCreators3();\n      init_typeGuards2();\n      ToolResultShape = external_exports.object({\n        success: external_exports.boolean(),\n        result: external_exports.unknown()\n      });\n      mustBeUndefinedSchema = external_exports.undefined();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/vincentTool.ts\n  function createVincentTool(toolDef) {\n    const { policyByPackageName } = toolDef.supportedPolicies;\n    const executeSuccessSchema2 = toolDef.executeSuccessSchema ?? external_exports.undefined();\n    const executeFailSchema2 = toolDef.executeFailSchema ?? external_exports.undefined();\n    const execute = async (params, baseToolContext) => {\n      try {\n        const context2 = createExecutionToolContext({\n          baseContext: baseToolContext,\n          successSchema: executeSuccessSchema2,\n          failSchema: executeFailSchema2,\n          policiesByPackageName: policyByPackageName\n        });\n        const parsedToolParams = validateOrFail(\n          params.toolParams,\n          toolDef.toolParamsSchema,\n          \"execute\",\n          \"input\"\n        );\n        if (isToolFailureResult(parsedToolParams)) {\n          return wrapFailure(parsedToolParams);\n        }\n        const result = await toolDef.execute(\n          // @ts-expect-error - TODO: fix this\n          { toolParams: parsedToolParams },\n          {\n            ...context2,\n            policiesContext: { ...context2.policiesContext, allow: true }\n          }\n        );\n        console.log(\"toolDef execute result\", result);\n        const { schemaToUse } = getSchemaForToolResult({\n          value: result,\n          successResultSchema: executeSuccessSchema2,\n          failureResultSchema: executeFailSchema2\n        });\n        const resultOrFailure = validateOrFail(\n          // @ts-expect-error - TODO: fix this\n          result.result,\n          schemaToUse,\n          \"execute\",\n          \"output\"\n        );\n        if (isToolFailureResult(resultOrFailure)) {\n          return wrapFailure(resultOrFailure);\n        }\n        return wrapSuccess(resultOrFailure);\n      } catch (err) {\n        return wrapNoResultFailure(err instanceof Error ? err.message : \"Unknown error\");\n      }\n    };\n    const precheckSuccessSchema2 = toolDef.precheckSuccessSchema ?? external_exports.undefined();\n    const precheckFailSchema2 = toolDef.precheckFailSchema ?? external_exports.undefined();\n    const { precheck: precheckFn } = toolDef;\n    const precheck = precheckFn ? async (params, baseToolContext) => {\n      try {\n        const context2 = createPrecheckToolContext({\n          baseContext: baseToolContext,\n          successSchema: precheckSuccessSchema2,\n          failSchema: precheckFailSchema2\n        });\n        const parsedToolParams = validateOrFail(\n          params.toolParams,\n          toolDef.toolParamsSchema,\n          \"precheck\",\n          \"input\"\n        );\n        if (isToolFailureResult(parsedToolParams)) {\n          return wrapFailure(parsedToolParams);\n        }\n        const result = await precheckFn(parsedToolParams, context2);\n        const { schemaToUse } = getSchemaForToolResult({\n          value: result,\n          successResultSchema: precheckSuccessSchema2,\n          failureResultSchema: precheckFailSchema2\n        });\n        const resultOrFailure = validateOrFail(\n          result,\n          schemaToUse,\n          \"precheck\",\n          \"output\"\n        );\n        if (isToolFailureResult(resultOrFailure)) {\n          return wrapFailure(resultOrFailure);\n        }\n        return wrapSuccess(resultOrFailure);\n      } catch (err) {\n        return wrapNoResultFailure(err instanceof Error ? err.message : \"Unknown error\");\n      }\n    } : void 0;\n    return {\n      execute,\n      precheck,\n      supportedPolicies: toolDef.supportedPolicies,\n      policyByPackageName,\n      toolParamsSchema: toolDef.toolParamsSchema,\n      __schemaTypes: {\n        precheckSuccessSchema: toolDef.precheckSuccessSchema,\n        precheckFailSchema: toolDef.precheckFailSchema,\n        executeSuccessSchema: toolDef.executeSuccessSchema,\n        executeFailSchema: toolDef.executeFailSchema\n      }\n    };\n  }\n  var init_vincentTool = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/vincentTool.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      init_toolContext();\n      init_resultCreators3();\n      init_zod2();\n      init_typeGuards2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/bn.js@5.2.2/node_modules/bn.js/lib/bn.js\n  var require_bn = __commonJS({\n    \"../../../node_modules/.pnpm/bn.js@5.2.2/node_modules/bn.js/lib/bn.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(module2, exports4) {\n        \"use strict\";\n        function assert3(val, msg) {\n          if (!val)\n            throw new Error(msg || \"Assertion failed\");\n        }\n        function inherits(ctor, superCtor) {\n          ctor.super_ = superCtor;\n          var TempCtor = function() {\n          };\n          TempCtor.prototype = superCtor.prototype;\n          ctor.prototype = new TempCtor();\n          ctor.prototype.constructor = ctor;\n        }\n        function BN(number2, base, endian) {\n          if (BN.isBN(number2)) {\n            return number2;\n          }\n          this.negative = 0;\n          this.words = null;\n          this.length = 0;\n          this.red = null;\n          if (number2 !== null) {\n            if (base === \"le\" || base === \"be\") {\n              endian = base;\n              base = 10;\n            }\n            this._init(number2 || 0, base || 10, endian || \"be\");\n          }\n        }\n        if (typeof module2 === \"object\") {\n          module2.exports = BN;\n        } else {\n          exports4.BN = BN;\n        }\n        BN.BN = BN;\n        BN.wordSize = 26;\n        var Buffer3;\n        try {\n          if (typeof window !== \"undefined\" && typeof window.Buffer !== \"undefined\") {\n            Buffer3 = window.Buffer;\n          } else {\n            Buffer3 = (init_buffer(), __toCommonJS(buffer_exports)).Buffer;\n          }\n        } catch (e) {\n        }\n        BN.isBN = function isBN(num) {\n          if (num instanceof BN) {\n            return true;\n          }\n          return num !== null && typeof num === \"object\" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n        };\n        BN.max = function max(left, right) {\n          if (left.cmp(right) > 0)\n            return left;\n          return right;\n        };\n        BN.min = function min(left, right) {\n          if (left.cmp(right) < 0)\n            return left;\n          return right;\n        };\n        BN.prototype._init = function init2(number2, base, endian) {\n          if (typeof number2 === \"number\") {\n            return this._initNumber(number2, base, endian);\n          }\n          if (typeof number2 === \"object\") {\n            return this._initArray(number2, base, endian);\n          }\n          if (base === \"hex\") {\n            base = 16;\n          }\n          assert3(base === (base | 0) && base >= 2 && base <= 36);\n          number2 = number2.toString().replace(/\\s+/g, \"\");\n          var start = 0;\n          if (number2[0] === \"-\") {\n            start++;\n            this.negative = 1;\n          }\n          if (start < number2.length) {\n            if (base === 16) {\n              this._parseHex(number2, start, endian);\n            } else {\n              this._parseBase(number2, base, start);\n              if (endian === \"le\") {\n                this._initArray(this.toArray(), base, endian);\n              }\n            }\n          }\n        };\n        BN.prototype._initNumber = function _initNumber(number2, base, endian) {\n          if (number2 < 0) {\n            this.negative = 1;\n            number2 = -number2;\n          }\n          if (number2 < 67108864) {\n            this.words = [number2 & 67108863];\n            this.length = 1;\n          } else if (number2 < 4503599627370496) {\n            this.words = [\n              number2 & 67108863,\n              number2 / 67108864 & 67108863\n            ];\n            this.length = 2;\n          } else {\n            assert3(number2 < 9007199254740992);\n            this.words = [\n              number2 & 67108863,\n              number2 / 67108864 & 67108863,\n              1\n            ];\n            this.length = 3;\n          }\n          if (endian !== \"le\")\n            return;\n          this._initArray(this.toArray(), base, endian);\n        };\n        BN.prototype._initArray = function _initArray(number2, base, endian) {\n          assert3(typeof number2.length === \"number\");\n          if (number2.length <= 0) {\n            this.words = [0];\n            this.length = 1;\n            return this;\n          }\n          this.length = Math.ceil(number2.length / 3);\n          this.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n          }\n          var j, w;\n          var off2 = 0;\n          if (endian === \"be\") {\n            for (i = number2.length - 1, j = 0; i >= 0; i -= 3) {\n              w = number2[i] | number2[i - 1] << 8 | number2[i - 2] << 16;\n              this.words[j] |= w << off2 & 67108863;\n              this.words[j + 1] = w >>> 26 - off2 & 67108863;\n              off2 += 24;\n              if (off2 >= 26) {\n                off2 -= 26;\n                j++;\n              }\n            }\n          } else if (endian === \"le\") {\n            for (i = 0, j = 0; i < number2.length; i += 3) {\n              w = number2[i] | number2[i + 1] << 8 | number2[i + 2] << 16;\n              this.words[j] |= w << off2 & 67108863;\n              this.words[j + 1] = w >>> 26 - off2 & 67108863;\n              off2 += 24;\n              if (off2 >= 26) {\n                off2 -= 26;\n                j++;\n              }\n            }\n          }\n          return this._strip();\n        };\n        function parseHex4Bits(string, index) {\n          var c = string.charCodeAt(index);\n          if (c >= 48 && c <= 57) {\n            return c - 48;\n          } else if (c >= 65 && c <= 70) {\n            return c - 55;\n          } else if (c >= 97 && c <= 102) {\n            return c - 87;\n          } else {\n            assert3(false, \"Invalid character in \" + string);\n          }\n        }\n        function parseHexByte(string, lowerBound, index) {\n          var r = parseHex4Bits(string, index);\n          if (index - 1 >= lowerBound) {\n            r |= parseHex4Bits(string, index - 1) << 4;\n          }\n          return r;\n        }\n        BN.prototype._parseHex = function _parseHex(number2, start, endian) {\n          this.length = Math.ceil((number2.length - start) / 6);\n          this.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n          }\n          var off2 = 0;\n          var j = 0;\n          var w;\n          if (endian === \"be\") {\n            for (i = number2.length - 1; i >= start; i -= 2) {\n              w = parseHexByte(number2, start, i) << off2;\n              this.words[j] |= w & 67108863;\n              if (off2 >= 18) {\n                off2 -= 18;\n                j += 1;\n                this.words[j] |= w >>> 26;\n              } else {\n                off2 += 8;\n              }\n            }\n          } else {\n            var parseLength = number2.length - start;\n            for (i = parseLength % 2 === 0 ? start + 1 : start; i < number2.length; i += 2) {\n              w = parseHexByte(number2, start, i) << off2;\n              this.words[j] |= w & 67108863;\n              if (off2 >= 18) {\n                off2 -= 18;\n                j += 1;\n                this.words[j] |= w >>> 26;\n              } else {\n                off2 += 8;\n              }\n            }\n          }\n          this._strip();\n        };\n        function parseBase(str, start, end, mul) {\n          var r = 0;\n          var b2 = 0;\n          var len = Math.min(str.length, end);\n          for (var i = start; i < len; i++) {\n            var c = str.charCodeAt(i) - 48;\n            r *= mul;\n            if (c >= 49) {\n              b2 = c - 49 + 10;\n            } else if (c >= 17) {\n              b2 = c - 17 + 10;\n            } else {\n              b2 = c;\n            }\n            assert3(c >= 0 && b2 < mul, \"Invalid character\");\n            r += b2;\n          }\n          return r;\n        }\n        BN.prototype._parseBase = function _parseBase(number2, base, start) {\n          this.words = [0];\n          this.length = 1;\n          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {\n            limbLen++;\n          }\n          limbLen--;\n          limbPow = limbPow / base | 0;\n          var total = number2.length - start;\n          var mod2 = total % limbLen;\n          var end = Math.min(total, total - mod2) + start;\n          var word = 0;\n          for (var i = start; i < end; i += limbLen) {\n            word = parseBase(number2, i, i + limbLen, base);\n            this.imuln(limbPow);\n            if (this.words[0] + word < 67108864) {\n              this.words[0] += word;\n            } else {\n              this._iaddn(word);\n            }\n          }\n          if (mod2 !== 0) {\n            var pow3 = 1;\n            word = parseBase(number2, i, number2.length, base);\n            for (i = 0; i < mod2; i++) {\n              pow3 *= base;\n            }\n            this.imuln(pow3);\n            if (this.words[0] + word < 67108864) {\n              this.words[0] += word;\n            } else {\n              this._iaddn(word);\n            }\n          }\n          this._strip();\n        };\n        BN.prototype.copy = function copy4(dest) {\n          dest.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            dest.words[i] = this.words[i];\n          }\n          dest.length = this.length;\n          dest.negative = this.negative;\n          dest.red = this.red;\n        };\n        function move(dest, src) {\n          dest.words = src.words;\n          dest.length = src.length;\n          dest.negative = src.negative;\n          dest.red = src.red;\n        }\n        BN.prototype._move = function _move(dest) {\n          move(dest, this);\n        };\n        BN.prototype.clone = function clone() {\n          var r = new BN(null);\n          this.copy(r);\n          return r;\n        };\n        BN.prototype._expand = function _expand(size) {\n          while (this.length < size) {\n            this.words[this.length++] = 0;\n          }\n          return this;\n        };\n        BN.prototype._strip = function strip() {\n          while (this.length > 1 && this.words[this.length - 1] === 0) {\n            this.length--;\n          }\n          return this._normSign();\n        };\n        BN.prototype._normSign = function _normSign() {\n          if (this.length === 1 && this.words[0] === 0) {\n            this.negative = 0;\n          }\n          return this;\n        };\n        if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n          try {\n            BN.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = inspect;\n          } catch (e) {\n            BN.prototype.inspect = inspect;\n          }\n        } else {\n          BN.prototype.inspect = inspect;\n        }\n        function inspect() {\n          return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n        }\n        var zeros2 = [\n          \"\",\n          \"0\",\n          \"00\",\n          \"000\",\n          \"0000\",\n          \"00000\",\n          \"000000\",\n          \"0000000\",\n          \"00000000\",\n          \"000000000\",\n          \"0000000000\",\n          \"00000000000\",\n          \"000000000000\",\n          \"0000000000000\",\n          \"00000000000000\",\n          \"000000000000000\",\n          \"0000000000000000\",\n          \"00000000000000000\",\n          \"000000000000000000\",\n          \"0000000000000000000\",\n          \"00000000000000000000\",\n          \"000000000000000000000\",\n          \"0000000000000000000000\",\n          \"00000000000000000000000\",\n          \"000000000000000000000000\",\n          \"0000000000000000000000000\"\n        ];\n        var groupSizes = [\n          0,\n          0,\n          25,\n          16,\n          12,\n          11,\n          10,\n          9,\n          8,\n          8,\n          7,\n          7,\n          7,\n          7,\n          6,\n          6,\n          6,\n          6,\n          6,\n          6,\n          6,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5\n        ];\n        var groupBases = [\n          0,\n          0,\n          33554432,\n          43046721,\n          16777216,\n          48828125,\n          60466176,\n          40353607,\n          16777216,\n          43046721,\n          1e7,\n          19487171,\n          35831808,\n          62748517,\n          7529536,\n          11390625,\n          16777216,\n          24137569,\n          34012224,\n          47045881,\n          64e6,\n          4084101,\n          5153632,\n          6436343,\n          7962624,\n          9765625,\n          11881376,\n          14348907,\n          17210368,\n          20511149,\n          243e5,\n          28629151,\n          33554432,\n          39135393,\n          45435424,\n          52521875,\n          60466176\n        ];\n        BN.prototype.toString = function toString(base, padding2) {\n          base = base || 10;\n          padding2 = padding2 | 0 || 1;\n          var out;\n          if (base === 16 || base === \"hex\") {\n            out = \"\";\n            var off2 = 0;\n            var carry = 0;\n            for (var i = 0; i < this.length; i++) {\n              var w = this.words[i];\n              var word = ((w << off2 | carry) & 16777215).toString(16);\n              carry = w >>> 24 - off2 & 16777215;\n              off2 += 2;\n              if (off2 >= 26) {\n                off2 -= 26;\n                i--;\n              }\n              if (carry !== 0 || i !== this.length - 1) {\n                out = zeros2[6 - word.length] + word + out;\n              } else {\n                out = word + out;\n              }\n            }\n            if (carry !== 0) {\n              out = carry.toString(16) + out;\n            }\n            while (out.length % padding2 !== 0) {\n              out = \"0\" + out;\n            }\n            if (this.negative !== 0) {\n              out = \"-\" + out;\n            }\n            return out;\n          }\n          if (base === (base | 0) && base >= 2 && base <= 36) {\n            var groupSize = groupSizes[base];\n            var groupBase = groupBases[base];\n            out = \"\";\n            var c = this.clone();\n            c.negative = 0;\n            while (!c.isZero()) {\n              var r = c.modrn(groupBase).toString(base);\n              c = c.idivn(groupBase);\n              if (!c.isZero()) {\n                out = zeros2[groupSize - r.length] + r + out;\n              } else {\n                out = r + out;\n              }\n            }\n            if (this.isZero()) {\n              out = \"0\" + out;\n            }\n            while (out.length % padding2 !== 0) {\n              out = \"0\" + out;\n            }\n            if (this.negative !== 0) {\n              out = \"-\" + out;\n            }\n            return out;\n          }\n          assert3(false, \"Base should be between 2 and 36\");\n        };\n        BN.prototype.toNumber = function toNumber2() {\n          var ret = this.words[0];\n          if (this.length === 2) {\n            ret += this.words[1] * 67108864;\n          } else if (this.length === 3 && this.words[2] === 1) {\n            ret += 4503599627370496 + this.words[1] * 67108864;\n          } else if (this.length > 2) {\n            assert3(false, \"Number can only safely store up to 53 bits\");\n          }\n          return this.negative !== 0 ? -ret : ret;\n        };\n        BN.prototype.toJSON = function toJSON() {\n          return this.toString(16, 2);\n        };\n        if (Buffer3) {\n          BN.prototype.toBuffer = function toBuffer(endian, length) {\n            return this.toArrayLike(Buffer3, endian, length);\n          };\n        }\n        BN.prototype.toArray = function toArray(endian, length) {\n          return this.toArrayLike(Array, endian, length);\n        };\n        var allocate = function allocate2(ArrayType, size) {\n          if (ArrayType.allocUnsafe) {\n            return ArrayType.allocUnsafe(size);\n          }\n          return new ArrayType(size);\n        };\n        BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n          this._strip();\n          var byteLength = this.byteLength();\n          var reqLength = length || Math.max(1, byteLength);\n          assert3(byteLength <= reqLength, \"byte array longer than desired length\");\n          assert3(reqLength > 0, \"Requested array length <= 0\");\n          var res = allocate(ArrayType, reqLength);\n          var postfix = endian === \"le\" ? \"LE\" : \"BE\";\n          this[\"_toArrayLike\" + postfix](res, byteLength);\n          return res;\n        };\n        BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n          var position = 0;\n          var carry = 0;\n          for (var i = 0, shift = 0; i < this.length; i++) {\n            var word = this.words[i] << shift | carry;\n            res[position++] = word & 255;\n            if (position < res.length) {\n              res[position++] = word >> 8 & 255;\n            }\n            if (position < res.length) {\n              res[position++] = word >> 16 & 255;\n            }\n            if (shift === 6) {\n              if (position < res.length) {\n                res[position++] = word >> 24 & 255;\n              }\n              carry = 0;\n              shift = 0;\n            } else {\n              carry = word >>> 24;\n              shift += 2;\n            }\n          }\n          if (position < res.length) {\n            res[position++] = carry;\n            while (position < res.length) {\n              res[position++] = 0;\n            }\n          }\n        };\n        BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n          var position = res.length - 1;\n          var carry = 0;\n          for (var i = 0, shift = 0; i < this.length; i++) {\n            var word = this.words[i] << shift | carry;\n            res[position--] = word & 255;\n            if (position >= 0) {\n              res[position--] = word >> 8 & 255;\n            }\n            if (position >= 0) {\n              res[position--] = word >> 16 & 255;\n            }\n            if (shift === 6) {\n              if (position >= 0) {\n                res[position--] = word >> 24 & 255;\n              }\n              carry = 0;\n              shift = 0;\n            } else {\n              carry = word >>> 24;\n              shift += 2;\n            }\n          }\n          if (position >= 0) {\n            res[position--] = carry;\n            while (position >= 0) {\n              res[position--] = 0;\n            }\n          }\n        };\n        if (Math.clz32) {\n          BN.prototype._countBits = function _countBits(w) {\n            return 32 - Math.clz32(w);\n          };\n        } else {\n          BN.prototype._countBits = function _countBits(w) {\n            var t = w;\n            var r = 0;\n            if (t >= 4096) {\n              r += 13;\n              t >>>= 13;\n            }\n            if (t >= 64) {\n              r += 7;\n              t >>>= 7;\n            }\n            if (t >= 8) {\n              r += 4;\n              t >>>= 4;\n            }\n            if (t >= 2) {\n              r += 2;\n              t >>>= 2;\n            }\n            return r + t;\n          };\n        }\n        BN.prototype._zeroBits = function _zeroBits(w) {\n          if (w === 0)\n            return 26;\n          var t = w;\n          var r = 0;\n          if ((t & 8191) === 0) {\n            r += 13;\n            t >>>= 13;\n          }\n          if ((t & 127) === 0) {\n            r += 7;\n            t >>>= 7;\n          }\n          if ((t & 15) === 0) {\n            r += 4;\n            t >>>= 4;\n          }\n          if ((t & 3) === 0) {\n            r += 2;\n            t >>>= 2;\n          }\n          if ((t & 1) === 0) {\n            r++;\n          }\n          return r;\n        };\n        BN.prototype.bitLength = function bitLength() {\n          var w = this.words[this.length - 1];\n          var hi = this._countBits(w);\n          return (this.length - 1) * 26 + hi;\n        };\n        function toBitArray(num) {\n          var w = new Array(num.bitLength());\n          for (var bit = 0; bit < w.length; bit++) {\n            var off2 = bit / 26 | 0;\n            var wbit = bit % 26;\n            w[bit] = num.words[off2] >>> wbit & 1;\n          }\n          return w;\n        }\n        BN.prototype.zeroBits = function zeroBits() {\n          if (this.isZero())\n            return 0;\n          var r = 0;\n          for (var i = 0; i < this.length; i++) {\n            var b2 = this._zeroBits(this.words[i]);\n            r += b2;\n            if (b2 !== 26)\n              break;\n          }\n          return r;\n        };\n        BN.prototype.byteLength = function byteLength() {\n          return Math.ceil(this.bitLength() / 8);\n        };\n        BN.prototype.toTwos = function toTwos2(width) {\n          if (this.negative !== 0) {\n            return this.abs().inotn(width).iaddn(1);\n          }\n          return this.clone();\n        };\n        BN.prototype.fromTwos = function fromTwos2(width) {\n          if (this.testn(width - 1)) {\n            return this.notn(width).iaddn(1).ineg();\n          }\n          return this.clone();\n        };\n        BN.prototype.isNeg = function isNeg() {\n          return this.negative !== 0;\n        };\n        BN.prototype.neg = function neg() {\n          return this.clone().ineg();\n        };\n        BN.prototype.ineg = function ineg() {\n          if (!this.isZero()) {\n            this.negative ^= 1;\n          }\n          return this;\n        };\n        BN.prototype.iuor = function iuor(num) {\n          while (this.length < num.length) {\n            this.words[this.length++] = 0;\n          }\n          for (var i = 0; i < num.length; i++) {\n            this.words[i] = this.words[i] | num.words[i];\n          }\n          return this._strip();\n        };\n        BN.prototype.ior = function ior(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuor(num);\n        };\n        BN.prototype.or = function or(num) {\n          if (this.length > num.length)\n            return this.clone().ior(num);\n          return num.clone().ior(this);\n        };\n        BN.prototype.uor = function uor(num) {\n          if (this.length > num.length)\n            return this.clone().iuor(num);\n          return num.clone().iuor(this);\n        };\n        BN.prototype.iuand = function iuand(num) {\n          var b2;\n          if (this.length > num.length) {\n            b2 = num;\n          } else {\n            b2 = this;\n          }\n          for (var i = 0; i < b2.length; i++) {\n            this.words[i] = this.words[i] & num.words[i];\n          }\n          this.length = b2.length;\n          return this._strip();\n        };\n        BN.prototype.iand = function iand(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuand(num);\n        };\n        BN.prototype.and = function and(num) {\n          if (this.length > num.length)\n            return this.clone().iand(num);\n          return num.clone().iand(this);\n        };\n        BN.prototype.uand = function uand(num) {\n          if (this.length > num.length)\n            return this.clone().iuand(num);\n          return num.clone().iuand(this);\n        };\n        BN.prototype.iuxor = function iuxor(num) {\n          var a;\n          var b2;\n          if (this.length > num.length) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          for (var i = 0; i < b2.length; i++) {\n            this.words[i] = a.words[i] ^ b2.words[i];\n          }\n          if (this !== a) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          this.length = a.length;\n          return this._strip();\n        };\n        BN.prototype.ixor = function ixor(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuxor(num);\n        };\n        BN.prototype.xor = function xor(num) {\n          if (this.length > num.length)\n            return this.clone().ixor(num);\n          return num.clone().ixor(this);\n        };\n        BN.prototype.uxor = function uxor(num) {\n          if (this.length > num.length)\n            return this.clone().iuxor(num);\n          return num.clone().iuxor(this);\n        };\n        BN.prototype.inotn = function inotn(width) {\n          assert3(typeof width === \"number\" && width >= 0);\n          var bytesNeeded = Math.ceil(width / 26) | 0;\n          var bitsLeft = width % 26;\n          this._expand(bytesNeeded);\n          if (bitsLeft > 0) {\n            bytesNeeded--;\n          }\n          for (var i = 0; i < bytesNeeded; i++) {\n            this.words[i] = ~this.words[i] & 67108863;\n          }\n          if (bitsLeft > 0) {\n            this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;\n          }\n          return this._strip();\n        };\n        BN.prototype.notn = function notn(width) {\n          return this.clone().inotn(width);\n        };\n        BN.prototype.setn = function setn(bit, val) {\n          assert3(typeof bit === \"number\" && bit >= 0);\n          var off2 = bit / 26 | 0;\n          var wbit = bit % 26;\n          this._expand(off2 + 1);\n          if (val) {\n            this.words[off2] = this.words[off2] | 1 << wbit;\n          } else {\n            this.words[off2] = this.words[off2] & ~(1 << wbit);\n          }\n          return this._strip();\n        };\n        BN.prototype.iadd = function iadd(num) {\n          var r;\n          if (this.negative !== 0 && num.negative === 0) {\n            this.negative = 0;\n            r = this.isub(num);\n            this.negative ^= 1;\n            return this._normSign();\n          } else if (this.negative === 0 && num.negative !== 0) {\n            num.negative = 0;\n            r = this.isub(num);\n            num.negative = 1;\n            return r._normSign();\n          }\n          var a, b2;\n          if (this.length > num.length) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          var carry = 0;\n          for (var i = 0; i < b2.length; i++) {\n            r = (a.words[i] | 0) + (b2.words[i] | 0) + carry;\n            this.words[i] = r & 67108863;\n            carry = r >>> 26;\n          }\n          for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            this.words[i] = r & 67108863;\n            carry = r >>> 26;\n          }\n          this.length = a.length;\n          if (carry !== 0) {\n            this.words[this.length] = carry;\n            this.length++;\n          } else if (a !== this) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          return this;\n        };\n        BN.prototype.add = function add2(num) {\n          var res;\n          if (num.negative !== 0 && this.negative === 0) {\n            num.negative = 0;\n            res = this.sub(num);\n            num.negative ^= 1;\n            return res;\n          } else if (num.negative === 0 && this.negative !== 0) {\n            this.negative = 0;\n            res = num.sub(this);\n            this.negative = 1;\n            return res;\n          }\n          if (this.length > num.length)\n            return this.clone().iadd(num);\n          return num.clone().iadd(this);\n        };\n        BN.prototype.isub = function isub(num) {\n          if (num.negative !== 0) {\n            num.negative = 0;\n            var r = this.iadd(num);\n            num.negative = 1;\n            return r._normSign();\n          } else if (this.negative !== 0) {\n            this.negative = 0;\n            this.iadd(num);\n            this.negative = 1;\n            return this._normSign();\n          }\n          var cmp = this.cmp(num);\n          if (cmp === 0) {\n            this.negative = 0;\n            this.length = 1;\n            this.words[0] = 0;\n            return this;\n          }\n          var a, b2;\n          if (cmp > 0) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          var carry = 0;\n          for (var i = 0; i < b2.length; i++) {\n            r = (a.words[i] | 0) - (b2.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 67108863;\n          }\n          for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 67108863;\n          }\n          if (carry === 0 && i < a.length && a !== this) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          this.length = Math.max(this.length, i);\n          if (a !== this) {\n            this.negative = 1;\n          }\n          return this._strip();\n        };\n        BN.prototype.sub = function sub(num) {\n          return this.clone().isub(num);\n        };\n        function smallMulTo(self2, num, out) {\n          out.negative = num.negative ^ self2.negative;\n          var len = self2.length + num.length | 0;\n          out.length = len;\n          len = len - 1 | 0;\n          var a = self2.words[0] | 0;\n          var b2 = num.words[0] | 0;\n          var r = a * b2;\n          var lo = r & 67108863;\n          var carry = r / 67108864 | 0;\n          out.words[0] = lo;\n          for (var k = 1; k < len; k++) {\n            var ncarry = carry >>> 26;\n            var rword = carry & 67108863;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {\n              var i = k - j | 0;\n              a = self2.words[i] | 0;\n              b2 = num.words[j] | 0;\n              r = a * b2 + rword;\n              ncarry += r / 67108864 | 0;\n              rword = r & 67108863;\n            }\n            out.words[k] = rword | 0;\n            carry = ncarry | 0;\n          }\n          if (carry !== 0) {\n            out.words[k] = carry | 0;\n          } else {\n            out.length--;\n          }\n          return out._strip();\n        }\n        var comb10MulTo = function comb10MulTo2(self2, num, out) {\n          var a = self2.words;\n          var b2 = num.words;\n          var o = out.words;\n          var c = 0;\n          var lo;\n          var mid;\n          var hi;\n          var a0 = a[0] | 0;\n          var al0 = a0 & 8191;\n          var ah0 = a0 >>> 13;\n          var a1 = a[1] | 0;\n          var al1 = a1 & 8191;\n          var ah1 = a1 >>> 13;\n          var a2 = a[2] | 0;\n          var al2 = a2 & 8191;\n          var ah2 = a2 >>> 13;\n          var a3 = a[3] | 0;\n          var al3 = a3 & 8191;\n          var ah3 = a3 >>> 13;\n          var a4 = a[4] | 0;\n          var al4 = a4 & 8191;\n          var ah4 = a4 >>> 13;\n          var a5 = a[5] | 0;\n          var al5 = a5 & 8191;\n          var ah5 = a5 >>> 13;\n          var a6 = a[6] | 0;\n          var al6 = a6 & 8191;\n          var ah6 = a6 >>> 13;\n          var a7 = a[7] | 0;\n          var al7 = a7 & 8191;\n          var ah7 = a7 >>> 13;\n          var a8 = a[8] | 0;\n          var al8 = a8 & 8191;\n          var ah8 = a8 >>> 13;\n          var a9 = a[9] | 0;\n          var al9 = a9 & 8191;\n          var ah9 = a9 >>> 13;\n          var b0 = b2[0] | 0;\n          var bl0 = b0 & 8191;\n          var bh0 = b0 >>> 13;\n          var b1 = b2[1] | 0;\n          var bl1 = b1 & 8191;\n          var bh1 = b1 >>> 13;\n          var b22 = b2[2] | 0;\n          var bl2 = b22 & 8191;\n          var bh2 = b22 >>> 13;\n          var b3 = b2[3] | 0;\n          var bl3 = b3 & 8191;\n          var bh3 = b3 >>> 13;\n          var b4 = b2[4] | 0;\n          var bl4 = b4 & 8191;\n          var bh4 = b4 >>> 13;\n          var b5 = b2[5] | 0;\n          var bl5 = b5 & 8191;\n          var bh5 = b5 >>> 13;\n          var b6 = b2[6] | 0;\n          var bl6 = b6 & 8191;\n          var bh6 = b6 >>> 13;\n          var b7 = b2[7] | 0;\n          var bl7 = b7 & 8191;\n          var bh7 = b7 >>> 13;\n          var b8 = b2[8] | 0;\n          var bl8 = b8 & 8191;\n          var bh8 = b8 >>> 13;\n          var b9 = b2[9] | 0;\n          var bl9 = b9 & 8191;\n          var bh9 = b9 >>> 13;\n          out.negative = self2.negative ^ num.negative;\n          out.length = 19;\n          lo = Math.imul(al0, bl0);\n          mid = Math.imul(al0, bh0);\n          mid = mid + Math.imul(ah0, bl0) | 0;\n          hi = Math.imul(ah0, bh0);\n          var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n          w0 &= 67108863;\n          lo = Math.imul(al1, bl0);\n          mid = Math.imul(al1, bh0);\n          mid = mid + Math.imul(ah1, bl0) | 0;\n          hi = Math.imul(ah1, bh0);\n          lo = lo + Math.imul(al0, bl1) | 0;\n          mid = mid + Math.imul(al0, bh1) | 0;\n          mid = mid + Math.imul(ah0, bl1) | 0;\n          hi = hi + Math.imul(ah0, bh1) | 0;\n          var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n          w1 &= 67108863;\n          lo = Math.imul(al2, bl0);\n          mid = Math.imul(al2, bh0);\n          mid = mid + Math.imul(ah2, bl0) | 0;\n          hi = Math.imul(ah2, bh0);\n          lo = lo + Math.imul(al1, bl1) | 0;\n          mid = mid + Math.imul(al1, bh1) | 0;\n          mid = mid + Math.imul(ah1, bl1) | 0;\n          hi = hi + Math.imul(ah1, bh1) | 0;\n          lo = lo + Math.imul(al0, bl2) | 0;\n          mid = mid + Math.imul(al0, bh2) | 0;\n          mid = mid + Math.imul(ah0, bl2) | 0;\n          hi = hi + Math.imul(ah0, bh2) | 0;\n          var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n          w2 &= 67108863;\n          lo = Math.imul(al3, bl0);\n          mid = Math.imul(al3, bh0);\n          mid = mid + Math.imul(ah3, bl0) | 0;\n          hi = Math.imul(ah3, bh0);\n          lo = lo + Math.imul(al2, bl1) | 0;\n          mid = mid + Math.imul(al2, bh1) | 0;\n          mid = mid + Math.imul(ah2, bl1) | 0;\n          hi = hi + Math.imul(ah2, bh1) | 0;\n          lo = lo + Math.imul(al1, bl2) | 0;\n          mid = mid + Math.imul(al1, bh2) | 0;\n          mid = mid + Math.imul(ah1, bl2) | 0;\n          hi = hi + Math.imul(ah1, bh2) | 0;\n          lo = lo + Math.imul(al0, bl3) | 0;\n          mid = mid + Math.imul(al0, bh3) | 0;\n          mid = mid + Math.imul(ah0, bl3) | 0;\n          hi = hi + Math.imul(ah0, bh3) | 0;\n          var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n          w3 &= 67108863;\n          lo = Math.imul(al4, bl0);\n          mid = Math.imul(al4, bh0);\n          mid = mid + Math.imul(ah4, bl0) | 0;\n          hi = Math.imul(ah4, bh0);\n          lo = lo + Math.imul(al3, bl1) | 0;\n          mid = mid + Math.imul(al3, bh1) | 0;\n          mid = mid + Math.imul(ah3, bl1) | 0;\n          hi = hi + Math.imul(ah3, bh1) | 0;\n          lo = lo + Math.imul(al2, bl2) | 0;\n          mid = mid + Math.imul(al2, bh2) | 0;\n          mid = mid + Math.imul(ah2, bl2) | 0;\n          hi = hi + Math.imul(ah2, bh2) | 0;\n          lo = lo + Math.imul(al1, bl3) | 0;\n          mid = mid + Math.imul(al1, bh3) | 0;\n          mid = mid + Math.imul(ah1, bl3) | 0;\n          hi = hi + Math.imul(ah1, bh3) | 0;\n          lo = lo + Math.imul(al0, bl4) | 0;\n          mid = mid + Math.imul(al0, bh4) | 0;\n          mid = mid + Math.imul(ah0, bl4) | 0;\n          hi = hi + Math.imul(ah0, bh4) | 0;\n          var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n          w4 &= 67108863;\n          lo = Math.imul(al5, bl0);\n          mid = Math.imul(al5, bh0);\n          mid = mid + Math.imul(ah5, bl0) | 0;\n          hi = Math.imul(ah5, bh0);\n          lo = lo + Math.imul(al4, bl1) | 0;\n          mid = mid + Math.imul(al4, bh1) | 0;\n          mid = mid + Math.imul(ah4, bl1) | 0;\n          hi = hi + Math.imul(ah4, bh1) | 0;\n          lo = lo + Math.imul(al3, bl2) | 0;\n          mid = mid + Math.imul(al3, bh2) | 0;\n          mid = mid + Math.imul(ah3, bl2) | 0;\n          hi = hi + Math.imul(ah3, bh2) | 0;\n          lo = lo + Math.imul(al2, bl3) | 0;\n          mid = mid + Math.imul(al2, bh3) | 0;\n          mid = mid + Math.imul(ah2, bl3) | 0;\n          hi = hi + Math.imul(ah2, bh3) | 0;\n          lo = lo + Math.imul(al1, bl4) | 0;\n          mid = mid + Math.imul(al1, bh4) | 0;\n          mid = mid + Math.imul(ah1, bl4) | 0;\n          hi = hi + Math.imul(ah1, bh4) | 0;\n          lo = lo + Math.imul(al0, bl5) | 0;\n          mid = mid + Math.imul(al0, bh5) | 0;\n          mid = mid + Math.imul(ah0, bl5) | 0;\n          hi = hi + Math.imul(ah0, bh5) | 0;\n          var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n          w5 &= 67108863;\n          lo = Math.imul(al6, bl0);\n          mid = Math.imul(al6, bh0);\n          mid = mid + Math.imul(ah6, bl0) | 0;\n          hi = Math.imul(ah6, bh0);\n          lo = lo + Math.imul(al5, bl1) | 0;\n          mid = mid + Math.imul(al5, bh1) | 0;\n          mid = mid + Math.imul(ah5, bl1) | 0;\n          hi = hi + Math.imul(ah5, bh1) | 0;\n          lo = lo + Math.imul(al4, bl2) | 0;\n          mid = mid + Math.imul(al4, bh2) | 0;\n          mid = mid + Math.imul(ah4, bl2) | 0;\n          hi = hi + Math.imul(ah4, bh2) | 0;\n          lo = lo + Math.imul(al3, bl3) | 0;\n          mid = mid + Math.imul(al3, bh3) | 0;\n          mid = mid + Math.imul(ah3, bl3) | 0;\n          hi = hi + Math.imul(ah3, bh3) | 0;\n          lo = lo + Math.imul(al2, bl4) | 0;\n          mid = mid + Math.imul(al2, bh4) | 0;\n          mid = mid + Math.imul(ah2, bl4) | 0;\n          hi = hi + Math.imul(ah2, bh4) | 0;\n          lo = lo + Math.imul(al1, bl5) | 0;\n          mid = mid + Math.imul(al1, bh5) | 0;\n          mid = mid + Math.imul(ah1, bl5) | 0;\n          hi = hi + Math.imul(ah1, bh5) | 0;\n          lo = lo + Math.imul(al0, bl6) | 0;\n          mid = mid + Math.imul(al0, bh6) | 0;\n          mid = mid + Math.imul(ah0, bl6) | 0;\n          hi = hi + Math.imul(ah0, bh6) | 0;\n          var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n          w6 &= 67108863;\n          lo = Math.imul(al7, bl0);\n          mid = Math.imul(al7, bh0);\n          mid = mid + Math.imul(ah7, bl0) | 0;\n          hi = Math.imul(ah7, bh0);\n          lo = lo + Math.imul(al6, bl1) | 0;\n          mid = mid + Math.imul(al6, bh1) | 0;\n          mid = mid + Math.imul(ah6, bl1) | 0;\n          hi = hi + Math.imul(ah6, bh1) | 0;\n          lo = lo + Math.imul(al5, bl2) | 0;\n          mid = mid + Math.imul(al5, bh2) | 0;\n          mid = mid + Math.imul(ah5, bl2) | 0;\n          hi = hi + Math.imul(ah5, bh2) | 0;\n          lo = lo + Math.imul(al4, bl3) | 0;\n          mid = mid + Math.imul(al4, bh3) | 0;\n          mid = mid + Math.imul(ah4, bl3) | 0;\n          hi = hi + Math.imul(ah4, bh3) | 0;\n          lo = lo + Math.imul(al3, bl4) | 0;\n          mid = mid + Math.imul(al3, bh4) | 0;\n          mid = mid + Math.imul(ah3, bl4) | 0;\n          hi = hi + Math.imul(ah3, bh4) | 0;\n          lo = lo + Math.imul(al2, bl5) | 0;\n          mid = mid + Math.imul(al2, bh5) | 0;\n          mid = mid + Math.imul(ah2, bl5) | 0;\n          hi = hi + Math.imul(ah2, bh5) | 0;\n          lo = lo + Math.imul(al1, bl6) | 0;\n          mid = mid + Math.imul(al1, bh6) | 0;\n          mid = mid + Math.imul(ah1, bl6) | 0;\n          hi = hi + Math.imul(ah1, bh6) | 0;\n          lo = lo + Math.imul(al0, bl7) | 0;\n          mid = mid + Math.imul(al0, bh7) | 0;\n          mid = mid + Math.imul(ah0, bl7) | 0;\n          hi = hi + Math.imul(ah0, bh7) | 0;\n          var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n          w7 &= 67108863;\n          lo = Math.imul(al8, bl0);\n          mid = Math.imul(al8, bh0);\n          mid = mid + Math.imul(ah8, bl0) | 0;\n          hi = Math.imul(ah8, bh0);\n          lo = lo + Math.imul(al7, bl1) | 0;\n          mid = mid + Math.imul(al7, bh1) | 0;\n          mid = mid + Math.imul(ah7, bl1) | 0;\n          hi = hi + Math.imul(ah7, bh1) | 0;\n          lo = lo + Math.imul(al6, bl2) | 0;\n          mid = mid + Math.imul(al6, bh2) | 0;\n          mid = mid + Math.imul(ah6, bl2) | 0;\n          hi = hi + Math.imul(ah6, bh2) | 0;\n          lo = lo + Math.imul(al5, bl3) | 0;\n          mid = mid + Math.imul(al5, bh3) | 0;\n          mid = mid + Math.imul(ah5, bl3) | 0;\n          hi = hi + Math.imul(ah5, bh3) | 0;\n          lo = lo + Math.imul(al4, bl4) | 0;\n          mid = mid + Math.imul(al4, bh4) | 0;\n          mid = mid + Math.imul(ah4, bl4) | 0;\n          hi = hi + Math.imul(ah4, bh4) | 0;\n          lo = lo + Math.imul(al3, bl5) | 0;\n          mid = mid + Math.imul(al3, bh5) | 0;\n          mid = mid + Math.imul(ah3, bl5) | 0;\n          hi = hi + Math.imul(ah3, bh5) | 0;\n          lo = lo + Math.imul(al2, bl6) | 0;\n          mid = mid + Math.imul(al2, bh6) | 0;\n          mid = mid + Math.imul(ah2, bl6) | 0;\n          hi = hi + Math.imul(ah2, bh6) | 0;\n          lo = lo + Math.imul(al1, bl7) | 0;\n          mid = mid + Math.imul(al1, bh7) | 0;\n          mid = mid + Math.imul(ah1, bl7) | 0;\n          hi = hi + Math.imul(ah1, bh7) | 0;\n          lo = lo + Math.imul(al0, bl8) | 0;\n          mid = mid + Math.imul(al0, bh8) | 0;\n          mid = mid + Math.imul(ah0, bl8) | 0;\n          hi = hi + Math.imul(ah0, bh8) | 0;\n          var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n          w8 &= 67108863;\n          lo = Math.imul(al9, bl0);\n          mid = Math.imul(al9, bh0);\n          mid = mid + Math.imul(ah9, bl0) | 0;\n          hi = Math.imul(ah9, bh0);\n          lo = lo + Math.imul(al8, bl1) | 0;\n          mid = mid + Math.imul(al8, bh1) | 0;\n          mid = mid + Math.imul(ah8, bl1) | 0;\n          hi = hi + Math.imul(ah8, bh1) | 0;\n          lo = lo + Math.imul(al7, bl2) | 0;\n          mid = mid + Math.imul(al7, bh2) | 0;\n          mid = mid + Math.imul(ah7, bl2) | 0;\n          hi = hi + Math.imul(ah7, bh2) | 0;\n          lo = lo + Math.imul(al6, bl3) | 0;\n          mid = mid + Math.imul(al6, bh3) | 0;\n          mid = mid + Math.imul(ah6, bl3) | 0;\n          hi = hi + Math.imul(ah6, bh3) | 0;\n          lo = lo + Math.imul(al5, bl4) | 0;\n          mid = mid + Math.imul(al5, bh4) | 0;\n          mid = mid + Math.imul(ah5, bl4) | 0;\n          hi = hi + Math.imul(ah5, bh4) | 0;\n          lo = lo + Math.imul(al4, bl5) | 0;\n          mid = mid + Math.imul(al4, bh5) | 0;\n          mid = mid + Math.imul(ah4, bl5) | 0;\n          hi = hi + Math.imul(ah4, bh5) | 0;\n          lo = lo + Math.imul(al3, bl6) | 0;\n          mid = mid + Math.imul(al3, bh6) | 0;\n          mid = mid + Math.imul(ah3, bl6) | 0;\n          hi = hi + Math.imul(ah3, bh6) | 0;\n          lo = lo + Math.imul(al2, bl7) | 0;\n          mid = mid + Math.imul(al2, bh7) | 0;\n          mid = mid + Math.imul(ah2, bl7) | 0;\n          hi = hi + Math.imul(ah2, bh7) | 0;\n          lo = lo + Math.imul(al1, bl8) | 0;\n          mid = mid + Math.imul(al1, bh8) | 0;\n          mid = mid + Math.imul(ah1, bl8) | 0;\n          hi = hi + Math.imul(ah1, bh8) | 0;\n          lo = lo + Math.imul(al0, bl9) | 0;\n          mid = mid + Math.imul(al0, bh9) | 0;\n          mid = mid + Math.imul(ah0, bl9) | 0;\n          hi = hi + Math.imul(ah0, bh9) | 0;\n          var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n          w9 &= 67108863;\n          lo = Math.imul(al9, bl1);\n          mid = Math.imul(al9, bh1);\n          mid = mid + Math.imul(ah9, bl1) | 0;\n          hi = Math.imul(ah9, bh1);\n          lo = lo + Math.imul(al8, bl2) | 0;\n          mid = mid + Math.imul(al8, bh2) | 0;\n          mid = mid + Math.imul(ah8, bl2) | 0;\n          hi = hi + Math.imul(ah8, bh2) | 0;\n          lo = lo + Math.imul(al7, bl3) | 0;\n          mid = mid + Math.imul(al7, bh3) | 0;\n          mid = mid + Math.imul(ah7, bl3) | 0;\n          hi = hi + Math.imul(ah7, bh3) | 0;\n          lo = lo + Math.imul(al6, bl4) | 0;\n          mid = mid + Math.imul(al6, bh4) | 0;\n          mid = mid + Math.imul(ah6, bl4) | 0;\n          hi = hi + Math.imul(ah6, bh4) | 0;\n          lo = lo + Math.imul(al5, bl5) | 0;\n          mid = mid + Math.imul(al5, bh5) | 0;\n          mid = mid + Math.imul(ah5, bl5) | 0;\n          hi = hi + Math.imul(ah5, bh5) | 0;\n          lo = lo + Math.imul(al4, bl6) | 0;\n          mid = mid + Math.imul(al4, bh6) | 0;\n          mid = mid + Math.imul(ah4, bl6) | 0;\n          hi = hi + Math.imul(ah4, bh6) | 0;\n          lo = lo + Math.imul(al3, bl7) | 0;\n          mid = mid + Math.imul(al3, bh7) | 0;\n          mid = mid + Math.imul(ah3, bl7) | 0;\n          hi = hi + Math.imul(ah3, bh7) | 0;\n          lo = lo + Math.imul(al2, bl8) | 0;\n          mid = mid + Math.imul(al2, bh8) | 0;\n          mid = mid + Math.imul(ah2, bl8) | 0;\n          hi = hi + Math.imul(ah2, bh8) | 0;\n          lo = lo + Math.imul(al1, bl9) | 0;\n          mid = mid + Math.imul(al1, bh9) | 0;\n          mid = mid + Math.imul(ah1, bl9) | 0;\n          hi = hi + Math.imul(ah1, bh9) | 0;\n          var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n          w10 &= 67108863;\n          lo = Math.imul(al9, bl2);\n          mid = Math.imul(al9, bh2);\n          mid = mid + Math.imul(ah9, bl2) | 0;\n          hi = Math.imul(ah9, bh2);\n          lo = lo + Math.imul(al8, bl3) | 0;\n          mid = mid + Math.imul(al8, bh3) | 0;\n          mid = mid + Math.imul(ah8, bl3) | 0;\n          hi = hi + Math.imul(ah8, bh3) | 0;\n          lo = lo + Math.imul(al7, bl4) | 0;\n          mid = mid + Math.imul(al7, bh4) | 0;\n          mid = mid + Math.imul(ah7, bl4) | 0;\n          hi = hi + Math.imul(ah7, bh4) | 0;\n          lo = lo + Math.imul(al6, bl5) | 0;\n          mid = mid + Math.imul(al6, bh5) | 0;\n          mid = mid + Math.imul(ah6, bl5) | 0;\n          hi = hi + Math.imul(ah6, bh5) | 0;\n          lo = lo + Math.imul(al5, bl6) | 0;\n          mid = mid + Math.imul(al5, bh6) | 0;\n          mid = mid + Math.imul(ah5, bl6) | 0;\n          hi = hi + Math.imul(ah5, bh6) | 0;\n          lo = lo + Math.imul(al4, bl7) | 0;\n          mid = mid + Math.imul(al4, bh7) | 0;\n          mid = mid + Math.imul(ah4, bl7) | 0;\n          hi = hi + Math.imul(ah4, bh7) | 0;\n          lo = lo + Math.imul(al3, bl8) | 0;\n          mid = mid + Math.imul(al3, bh8) | 0;\n          mid = mid + Math.imul(ah3, bl8) | 0;\n          hi = hi + Math.imul(ah3, bh8) | 0;\n          lo = lo + Math.imul(al2, bl9) | 0;\n          mid = mid + Math.imul(al2, bh9) | 0;\n          mid = mid + Math.imul(ah2, bl9) | 0;\n          hi = hi + Math.imul(ah2, bh9) | 0;\n          var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n          w11 &= 67108863;\n          lo = Math.imul(al9, bl3);\n          mid = Math.imul(al9, bh3);\n          mid = mid + Math.imul(ah9, bl3) | 0;\n          hi = Math.imul(ah9, bh3);\n          lo = lo + Math.imul(al8, bl4) | 0;\n          mid = mid + Math.imul(al8, bh4) | 0;\n          mid = mid + Math.imul(ah8, bl4) | 0;\n          hi = hi + Math.imul(ah8, bh4) | 0;\n          lo = lo + Math.imul(al7, bl5) | 0;\n          mid = mid + Math.imul(al7, bh5) | 0;\n          mid = mid + Math.imul(ah7, bl5) | 0;\n          hi = hi + Math.imul(ah7, bh5) | 0;\n          lo = lo + Math.imul(al6, bl6) | 0;\n          mid = mid + Math.imul(al6, bh6) | 0;\n          mid = mid + Math.imul(ah6, bl6) | 0;\n          hi = hi + Math.imul(ah6, bh6) | 0;\n          lo = lo + Math.imul(al5, bl7) | 0;\n          mid = mid + Math.imul(al5, bh7) | 0;\n          mid = mid + Math.imul(ah5, bl7) | 0;\n          hi = hi + Math.imul(ah5, bh7) | 0;\n          lo = lo + Math.imul(al4, bl8) | 0;\n          mid = mid + Math.imul(al4, bh8) | 0;\n          mid = mid + Math.imul(ah4, bl8) | 0;\n          hi = hi + Math.imul(ah4, bh8) | 0;\n          lo = lo + Math.imul(al3, bl9) | 0;\n          mid = mid + Math.imul(al3, bh9) | 0;\n          mid = mid + Math.imul(ah3, bl9) | 0;\n          hi = hi + Math.imul(ah3, bh9) | 0;\n          var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n          w12 &= 67108863;\n          lo = Math.imul(al9, bl4);\n          mid = Math.imul(al9, bh4);\n          mid = mid + Math.imul(ah9, bl4) | 0;\n          hi = Math.imul(ah9, bh4);\n          lo = lo + Math.imul(al8, bl5) | 0;\n          mid = mid + Math.imul(al8, bh5) | 0;\n          mid = mid + Math.imul(ah8, bl5) | 0;\n          hi = hi + Math.imul(ah8, bh5) | 0;\n          lo = lo + Math.imul(al7, bl6) | 0;\n          mid = mid + Math.imul(al7, bh6) | 0;\n          mid = mid + Math.imul(ah7, bl6) | 0;\n          hi = hi + Math.imul(ah7, bh6) | 0;\n          lo = lo + Math.imul(al6, bl7) | 0;\n          mid = mid + Math.imul(al6, bh7) | 0;\n          mid = mid + Math.imul(ah6, bl7) | 0;\n          hi = hi + Math.imul(ah6, bh7) | 0;\n          lo = lo + Math.imul(al5, bl8) | 0;\n          mid = mid + Math.imul(al5, bh8) | 0;\n          mid = mid + Math.imul(ah5, bl8) | 0;\n          hi = hi + Math.imul(ah5, bh8) | 0;\n          lo = lo + Math.imul(al4, bl9) | 0;\n          mid = mid + Math.imul(al4, bh9) | 0;\n          mid = mid + Math.imul(ah4, bl9) | 0;\n          hi = hi + Math.imul(ah4, bh9) | 0;\n          var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n          w13 &= 67108863;\n          lo = Math.imul(al9, bl5);\n          mid = Math.imul(al9, bh5);\n          mid = mid + Math.imul(ah9, bl5) | 0;\n          hi = Math.imul(ah9, bh5);\n          lo = lo + Math.imul(al8, bl6) | 0;\n          mid = mid + Math.imul(al8, bh6) | 0;\n          mid = mid + Math.imul(ah8, bl6) | 0;\n          hi = hi + Math.imul(ah8, bh6) | 0;\n          lo = lo + Math.imul(al7, bl7) | 0;\n          mid = mid + Math.imul(al7, bh7) | 0;\n          mid = mid + Math.imul(ah7, bl7) | 0;\n          hi = hi + Math.imul(ah7, bh7) | 0;\n          lo = lo + Math.imul(al6, bl8) | 0;\n          mid = mid + Math.imul(al6, bh8) | 0;\n          mid = mid + Math.imul(ah6, bl8) | 0;\n          hi = hi + Math.imul(ah6, bh8) | 0;\n          lo = lo + Math.imul(al5, bl9) | 0;\n          mid = mid + Math.imul(al5, bh9) | 0;\n          mid = mid + Math.imul(ah5, bl9) | 0;\n          hi = hi + Math.imul(ah5, bh9) | 0;\n          var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n          w14 &= 67108863;\n          lo = Math.imul(al9, bl6);\n          mid = Math.imul(al9, bh6);\n          mid = mid + Math.imul(ah9, bl6) | 0;\n          hi = Math.imul(ah9, bh6);\n          lo = lo + Math.imul(al8, bl7) | 0;\n          mid = mid + Math.imul(al8, bh7) | 0;\n          mid = mid + Math.imul(ah8, bl7) | 0;\n          hi = hi + Math.imul(ah8, bh7) | 0;\n          lo = lo + Math.imul(al7, bl8) | 0;\n          mid = mid + Math.imul(al7, bh8) | 0;\n          mid = mid + Math.imul(ah7, bl8) | 0;\n          hi = hi + Math.imul(ah7, bh8) | 0;\n          lo = lo + Math.imul(al6, bl9) | 0;\n          mid = mid + Math.imul(al6, bh9) | 0;\n          mid = mid + Math.imul(ah6, bl9) | 0;\n          hi = hi + Math.imul(ah6, bh9) | 0;\n          var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n          w15 &= 67108863;\n          lo = Math.imul(al9, bl7);\n          mid = Math.imul(al9, bh7);\n          mid = mid + Math.imul(ah9, bl7) | 0;\n          hi = Math.imul(ah9, bh7);\n          lo = lo + Math.imul(al8, bl8) | 0;\n          mid = mid + Math.imul(al8, bh8) | 0;\n          mid = mid + Math.imul(ah8, bl8) | 0;\n          hi = hi + Math.imul(ah8, bh8) | 0;\n          lo = lo + Math.imul(al7, bl9) | 0;\n          mid = mid + Math.imul(al7, bh9) | 0;\n          mid = mid + Math.imul(ah7, bl9) | 0;\n          hi = hi + Math.imul(ah7, bh9) | 0;\n          var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n          w16 &= 67108863;\n          lo = Math.imul(al9, bl8);\n          mid = Math.imul(al9, bh8);\n          mid = mid + Math.imul(ah9, bl8) | 0;\n          hi = Math.imul(ah9, bh8);\n          lo = lo + Math.imul(al8, bl9) | 0;\n          mid = mid + Math.imul(al8, bh9) | 0;\n          mid = mid + Math.imul(ah8, bl9) | 0;\n          hi = hi + Math.imul(ah8, bh9) | 0;\n          var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n          w17 &= 67108863;\n          lo = Math.imul(al9, bl9);\n          mid = Math.imul(al9, bh9);\n          mid = mid + Math.imul(ah9, bl9) | 0;\n          hi = Math.imul(ah9, bh9);\n          var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n          w18 &= 67108863;\n          o[0] = w0;\n          o[1] = w1;\n          o[2] = w2;\n          o[3] = w3;\n          o[4] = w4;\n          o[5] = w5;\n          o[6] = w6;\n          o[7] = w7;\n          o[8] = w8;\n          o[9] = w9;\n          o[10] = w10;\n          o[11] = w11;\n          o[12] = w12;\n          o[13] = w13;\n          o[14] = w14;\n          o[15] = w15;\n          o[16] = w16;\n          o[17] = w17;\n          o[18] = w18;\n          if (c !== 0) {\n            o[19] = c;\n            out.length++;\n          }\n          return out;\n        };\n        if (!Math.imul) {\n          comb10MulTo = smallMulTo;\n        }\n        function bigMulTo(self2, num, out) {\n          out.negative = num.negative ^ self2.negative;\n          out.length = self2.length + num.length;\n          var carry = 0;\n          var hncarry = 0;\n          for (var k = 0; k < out.length - 1; k++) {\n            var ncarry = hncarry;\n            hncarry = 0;\n            var rword = carry & 67108863;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {\n              var i = k - j;\n              var a = self2.words[i] | 0;\n              var b2 = num.words[j] | 0;\n              var r = a * b2;\n              var lo = r & 67108863;\n              ncarry = ncarry + (r / 67108864 | 0) | 0;\n              lo = lo + rword | 0;\n              rword = lo & 67108863;\n              ncarry = ncarry + (lo >>> 26) | 0;\n              hncarry += ncarry >>> 26;\n              ncarry &= 67108863;\n            }\n            out.words[k] = rword;\n            carry = ncarry;\n            ncarry = hncarry;\n          }\n          if (carry !== 0) {\n            out.words[k] = carry;\n          } else {\n            out.length--;\n          }\n          return out._strip();\n        }\n        function jumboMulTo(self2, num, out) {\n          return bigMulTo(self2, num, out);\n        }\n        BN.prototype.mulTo = function mulTo(num, out) {\n          var res;\n          var len = this.length + num.length;\n          if (this.length === 10 && num.length === 10) {\n            res = comb10MulTo(this, num, out);\n          } else if (len < 63) {\n            res = smallMulTo(this, num, out);\n          } else if (len < 1024) {\n            res = bigMulTo(this, num, out);\n          } else {\n            res = jumboMulTo(this, num, out);\n          }\n          return res;\n        };\n        function FFTM(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n        FFTM.prototype.makeRBT = function makeRBT(N) {\n          var t = new Array(N);\n          var l = BN.prototype._countBits(N) - 1;\n          for (var i = 0; i < N; i++) {\n            t[i] = this.revBin(i, l, N);\n          }\n          return t;\n        };\n        FFTM.prototype.revBin = function revBin(x, l, N) {\n          if (x === 0 || x === N - 1)\n            return x;\n          var rb = 0;\n          for (var i = 0; i < l; i++) {\n            rb |= (x & 1) << l - i - 1;\n            x >>= 1;\n          }\n          return rb;\n        };\n        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n          for (var i = 0; i < N; i++) {\n            rtws[i] = rws[rbt[i]];\n            itws[i] = iws[rbt[i]];\n          }\n        };\n        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n          this.permute(rbt, rws, iws, rtws, itws, N);\n          for (var s = 1; s < N; s <<= 1) {\n            var l = s << 1;\n            var rtwdf = Math.cos(2 * Math.PI / l);\n            var itwdf = Math.sin(2 * Math.PI / l);\n            for (var p = 0; p < N; p += l) {\n              var rtwdf_ = rtwdf;\n              var itwdf_ = itwdf;\n              for (var j = 0; j < s; j++) {\n                var re = rtws[p + j];\n                var ie = itws[p + j];\n                var ro = rtws[p + j + s];\n                var io = itws[p + j + s];\n                var rx = rtwdf_ * ro - itwdf_ * io;\n                io = rtwdf_ * io + itwdf_ * ro;\n                ro = rx;\n                rtws[p + j] = re + ro;\n                itws[p + j] = ie + io;\n                rtws[p + j + s] = re - ro;\n                itws[p + j + s] = ie - io;\n                if (j !== l) {\n                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n                  rtwdf_ = rx;\n                }\n              }\n            }\n          }\n        };\n        FFTM.prototype.guessLen13b = function guessLen13b(n2, m) {\n          var N = Math.max(m, n2) | 1;\n          var odd = N & 1;\n          var i = 0;\n          for (N = N / 2 | 0; N; N = N >>> 1) {\n            i++;\n          }\n          return 1 << i + 1 + odd;\n        };\n        FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n          if (N <= 1)\n            return;\n          for (var i = 0; i < N / 2; i++) {\n            var t = rws[i];\n            rws[i] = rws[N - i - 1];\n            rws[N - i - 1] = t;\n            t = iws[i];\n            iws[i] = -iws[N - i - 1];\n            iws[N - i - 1] = -t;\n          }\n        };\n        FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n          var carry = 0;\n          for (var i = 0; i < N / 2; i++) {\n            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;\n            ws[i] = w & 67108863;\n            if (w < 67108864) {\n              carry = 0;\n            } else {\n              carry = w / 67108864 | 0;\n            }\n          }\n          return ws;\n        };\n        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n          var carry = 0;\n          for (var i = 0; i < len; i++) {\n            carry = carry + (ws[i] | 0);\n            rws[2 * i] = carry & 8191;\n            carry = carry >>> 13;\n            rws[2 * i + 1] = carry & 8191;\n            carry = carry >>> 13;\n          }\n          for (i = 2 * len; i < N; ++i) {\n            rws[i] = 0;\n          }\n          assert3(carry === 0);\n          assert3((carry & ~8191) === 0);\n        };\n        FFTM.prototype.stub = function stub(N) {\n          var ph = new Array(N);\n          for (var i = 0; i < N; i++) {\n            ph[i] = 0;\n          }\n          return ph;\n        };\n        FFTM.prototype.mulp = function mulp(x, y, out) {\n          var N = 2 * this.guessLen13b(x.length, y.length);\n          var rbt = this.makeRBT(N);\n          var _ = this.stub(N);\n          var rws = new Array(N);\n          var rwst = new Array(N);\n          var iwst = new Array(N);\n          var nrws = new Array(N);\n          var nrwst = new Array(N);\n          var niwst = new Array(N);\n          var rmws = out.words;\n          rmws.length = N;\n          this.convert13b(x.words, x.length, rws, N);\n          this.convert13b(y.words, y.length, nrws, N);\n          this.transform(rws, _, rwst, iwst, N, rbt);\n          this.transform(nrws, _, nrwst, niwst, N, rbt);\n          for (var i = 0; i < N; i++) {\n            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n            rwst[i] = rx;\n          }\n          this.conjugate(rwst, iwst, N);\n          this.transform(rwst, iwst, rmws, _, N, rbt);\n          this.conjugate(rmws, _, N);\n          this.normalize13b(rmws, N);\n          out.negative = x.negative ^ y.negative;\n          out.length = x.length + y.length;\n          return out._strip();\n        };\n        BN.prototype.mul = function mul(num) {\n          var out = new BN(null);\n          out.words = new Array(this.length + num.length);\n          return this.mulTo(num, out);\n        };\n        BN.prototype.mulf = function mulf(num) {\n          var out = new BN(null);\n          out.words = new Array(this.length + num.length);\n          return jumboMulTo(this, num, out);\n        };\n        BN.prototype.imul = function imul(num) {\n          return this.clone().mulTo(num, this);\n        };\n        BN.prototype.imuln = function imuln(num) {\n          var isNegNum = num < 0;\n          if (isNegNum)\n            num = -num;\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          var carry = 0;\n          for (var i = 0; i < this.length; i++) {\n            var w = (this.words[i] | 0) * num;\n            var lo = (w & 67108863) + (carry & 67108863);\n            carry >>= 26;\n            carry += w / 67108864 | 0;\n            carry += lo >>> 26;\n            this.words[i] = lo & 67108863;\n          }\n          if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n          }\n          this.length = num === 0 ? 1 : this.length;\n          return isNegNum ? this.ineg() : this;\n        };\n        BN.prototype.muln = function muln(num) {\n          return this.clone().imuln(num);\n        };\n        BN.prototype.sqr = function sqr() {\n          return this.mul(this);\n        };\n        BN.prototype.isqr = function isqr() {\n          return this.imul(this.clone());\n        };\n        BN.prototype.pow = function pow3(num) {\n          var w = toBitArray(num);\n          if (w.length === 0)\n            return new BN(1);\n          var res = this;\n          for (var i = 0; i < w.length; i++, res = res.sqr()) {\n            if (w[i] !== 0)\n              break;\n          }\n          if (++i < w.length) {\n            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n              if (w[i] === 0)\n                continue;\n              res = res.mul(q);\n            }\n          }\n          return res;\n        };\n        BN.prototype.iushln = function iushln(bits) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var r = bits % 26;\n          var s = (bits - r) / 26;\n          var carryMask = 67108863 >>> 26 - r << 26 - r;\n          var i;\n          if (r !== 0) {\n            var carry = 0;\n            for (i = 0; i < this.length; i++) {\n              var newCarry = this.words[i] & carryMask;\n              var c = (this.words[i] | 0) - newCarry << r;\n              this.words[i] = c | carry;\n              carry = newCarry >>> 26 - r;\n            }\n            if (carry) {\n              this.words[i] = carry;\n              this.length++;\n            }\n          }\n          if (s !== 0) {\n            for (i = this.length - 1; i >= 0; i--) {\n              this.words[i + s] = this.words[i];\n            }\n            for (i = 0; i < s; i++) {\n              this.words[i] = 0;\n            }\n            this.length += s;\n          }\n          return this._strip();\n        };\n        BN.prototype.ishln = function ishln(bits) {\n          assert3(this.negative === 0);\n          return this.iushln(bits);\n        };\n        BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var h;\n          if (hint) {\n            h = (hint - hint % 26) / 26;\n          } else {\n            h = 0;\n          }\n          var r = bits % 26;\n          var s = Math.min((bits - r) / 26, this.length);\n          var mask2 = 67108863 ^ 67108863 >>> r << r;\n          var maskedWords = extended;\n          h -= s;\n          h = Math.max(0, h);\n          if (maskedWords) {\n            for (var i = 0; i < s; i++) {\n              maskedWords.words[i] = this.words[i];\n            }\n            maskedWords.length = s;\n          }\n          if (s === 0) {\n          } else if (this.length > s) {\n            this.length -= s;\n            for (i = 0; i < this.length; i++) {\n              this.words[i] = this.words[i + s];\n            }\n          } else {\n            this.words[0] = 0;\n            this.length = 1;\n          }\n          var carry = 0;\n          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n            var word = this.words[i] | 0;\n            this.words[i] = carry << 26 - r | word >>> r;\n            carry = word & mask2;\n          }\n          if (maskedWords && carry !== 0) {\n            maskedWords.words[maskedWords.length++] = carry;\n          }\n          if (this.length === 0) {\n            this.words[0] = 0;\n            this.length = 1;\n          }\n          return this._strip();\n        };\n        BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n          assert3(this.negative === 0);\n          return this.iushrn(bits, hint, extended);\n        };\n        BN.prototype.shln = function shln(bits) {\n          return this.clone().ishln(bits);\n        };\n        BN.prototype.ushln = function ushln(bits) {\n          return this.clone().iushln(bits);\n        };\n        BN.prototype.shrn = function shrn(bits) {\n          return this.clone().ishrn(bits);\n        };\n        BN.prototype.ushrn = function ushrn(bits) {\n          return this.clone().iushrn(bits);\n        };\n        BN.prototype.testn = function testn(bit) {\n          assert3(typeof bit === \"number\" && bit >= 0);\n          var r = bit % 26;\n          var s = (bit - r) / 26;\n          var q = 1 << r;\n          if (this.length <= s)\n            return false;\n          var w = this.words[s];\n          return !!(w & q);\n        };\n        BN.prototype.imaskn = function imaskn(bits) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var r = bits % 26;\n          var s = (bits - r) / 26;\n          assert3(this.negative === 0, \"imaskn works only with positive numbers\");\n          if (this.length <= s) {\n            return this;\n          }\n          if (r !== 0) {\n            s++;\n          }\n          this.length = Math.min(s, this.length);\n          if (r !== 0) {\n            var mask2 = 67108863 ^ 67108863 >>> r << r;\n            this.words[this.length - 1] &= mask2;\n          }\n          return this._strip();\n        };\n        BN.prototype.maskn = function maskn(bits) {\n          return this.clone().imaskn(bits);\n        };\n        BN.prototype.iaddn = function iaddn(num) {\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          if (num < 0)\n            return this.isubn(-num);\n          if (this.negative !== 0) {\n            if (this.length === 1 && (this.words[0] | 0) <= num) {\n              this.words[0] = num - (this.words[0] | 0);\n              this.negative = 0;\n              return this;\n            }\n            this.negative = 0;\n            this.isubn(num);\n            this.negative = 1;\n            return this;\n          }\n          return this._iaddn(num);\n        };\n        BN.prototype._iaddn = function _iaddn(num) {\n          this.words[0] += num;\n          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {\n            this.words[i] -= 67108864;\n            if (i === this.length - 1) {\n              this.words[i + 1] = 1;\n            } else {\n              this.words[i + 1]++;\n            }\n          }\n          this.length = Math.max(this.length, i + 1);\n          return this;\n        };\n        BN.prototype.isubn = function isubn(num) {\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          if (num < 0)\n            return this.iaddn(-num);\n          if (this.negative !== 0) {\n            this.negative = 0;\n            this.iaddn(num);\n            this.negative = 1;\n            return this;\n          }\n          this.words[0] -= num;\n          if (this.length === 1 && this.words[0] < 0) {\n            this.words[0] = -this.words[0];\n            this.negative = 1;\n          } else {\n            for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n              this.words[i] += 67108864;\n              this.words[i + 1] -= 1;\n            }\n          }\n          return this._strip();\n        };\n        BN.prototype.addn = function addn(num) {\n          return this.clone().iaddn(num);\n        };\n        BN.prototype.subn = function subn(num) {\n          return this.clone().isubn(num);\n        };\n        BN.prototype.iabs = function iabs() {\n          this.negative = 0;\n          return this;\n        };\n        BN.prototype.abs = function abs() {\n          return this.clone().iabs();\n        };\n        BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n          var len = num.length + shift;\n          var i;\n          this._expand(len);\n          var w;\n          var carry = 0;\n          for (i = 0; i < num.length; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            var right = (num.words[i] | 0) * mul;\n            w -= right & 67108863;\n            carry = (w >> 26) - (right / 67108864 | 0);\n            this.words[i + shift] = w & 67108863;\n          }\n          for (; i < this.length - shift; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            carry = w >> 26;\n            this.words[i + shift] = w & 67108863;\n          }\n          if (carry === 0)\n            return this._strip();\n          assert3(carry === -1);\n          carry = 0;\n          for (i = 0; i < this.length; i++) {\n            w = -(this.words[i] | 0) + carry;\n            carry = w >> 26;\n            this.words[i] = w & 67108863;\n          }\n          this.negative = 1;\n          return this._strip();\n        };\n        BN.prototype._wordDiv = function _wordDiv(num, mode) {\n          var shift = this.length - num.length;\n          var a = this.clone();\n          var b2 = num;\n          var bhi = b2.words[b2.length - 1] | 0;\n          var bhiBits = this._countBits(bhi);\n          shift = 26 - bhiBits;\n          if (shift !== 0) {\n            b2 = b2.ushln(shift);\n            a.iushln(shift);\n            bhi = b2.words[b2.length - 1] | 0;\n          }\n          var m = a.length - b2.length;\n          var q;\n          if (mode !== \"mod\") {\n            q = new BN(null);\n            q.length = m + 1;\n            q.words = new Array(q.length);\n            for (var i = 0; i < q.length; i++) {\n              q.words[i] = 0;\n            }\n          }\n          var diff = a.clone()._ishlnsubmul(b2, 1, m);\n          if (diff.negative === 0) {\n            a = diff;\n            if (q) {\n              q.words[m] = 1;\n            }\n          }\n          for (var j = m - 1; j >= 0; j--) {\n            var qj = (a.words[b2.length + j] | 0) * 67108864 + (a.words[b2.length + j - 1] | 0);\n            qj = Math.min(qj / bhi | 0, 67108863);\n            a._ishlnsubmul(b2, qj, j);\n            while (a.negative !== 0) {\n              qj--;\n              a.negative = 0;\n              a._ishlnsubmul(b2, 1, j);\n              if (!a.isZero()) {\n                a.negative ^= 1;\n              }\n            }\n            if (q) {\n              q.words[j] = qj;\n            }\n          }\n          if (q) {\n            q._strip();\n          }\n          a._strip();\n          if (mode !== \"div\" && shift !== 0) {\n            a.iushrn(shift);\n          }\n          return {\n            div: q || null,\n            mod: a\n          };\n        };\n        BN.prototype.divmod = function divmod(num, mode, positive) {\n          assert3(!num.isZero());\n          if (this.isZero()) {\n            return {\n              div: new BN(0),\n              mod: new BN(0)\n            };\n          }\n          var div, mod2, res;\n          if (this.negative !== 0 && num.negative === 0) {\n            res = this.neg().divmod(num, mode);\n            if (mode !== \"mod\") {\n              div = res.div.neg();\n            }\n            if (mode !== \"div\") {\n              mod2 = res.mod.neg();\n              if (positive && mod2.negative !== 0) {\n                mod2.iadd(num);\n              }\n            }\n            return {\n              div,\n              mod: mod2\n            };\n          }\n          if (this.negative === 0 && num.negative !== 0) {\n            res = this.divmod(num.neg(), mode);\n            if (mode !== \"mod\") {\n              div = res.div.neg();\n            }\n            return {\n              div,\n              mod: res.mod\n            };\n          }\n          if ((this.negative & num.negative) !== 0) {\n            res = this.neg().divmod(num.neg(), mode);\n            if (mode !== \"div\") {\n              mod2 = res.mod.neg();\n              if (positive && mod2.negative !== 0) {\n                mod2.isub(num);\n              }\n            }\n            return {\n              div: res.div,\n              mod: mod2\n            };\n          }\n          if (num.length > this.length || this.cmp(num) < 0) {\n            return {\n              div: new BN(0),\n              mod: this\n            };\n          }\n          if (num.length === 1) {\n            if (mode === \"div\") {\n              return {\n                div: this.divn(num.words[0]),\n                mod: null\n              };\n            }\n            if (mode === \"mod\") {\n              return {\n                div: null,\n                mod: new BN(this.modrn(num.words[0]))\n              };\n            }\n            return {\n              div: this.divn(num.words[0]),\n              mod: new BN(this.modrn(num.words[0]))\n            };\n          }\n          return this._wordDiv(num, mode);\n        };\n        BN.prototype.div = function div(num) {\n          return this.divmod(num, \"div\", false).div;\n        };\n        BN.prototype.mod = function mod2(num) {\n          return this.divmod(num, \"mod\", false).mod;\n        };\n        BN.prototype.umod = function umod(num) {\n          return this.divmod(num, \"mod\", true).mod;\n        };\n        BN.prototype.divRound = function divRound(num) {\n          var dm = this.divmod(num);\n          if (dm.mod.isZero())\n            return dm.div;\n          var mod2 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n          var half = num.ushrn(1);\n          var r2 = num.andln(1);\n          var cmp = mod2.cmp(half);\n          if (cmp < 0 || r2 === 1 && cmp === 0)\n            return dm.div;\n          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n        };\n        BN.prototype.modrn = function modrn(num) {\n          var isNegNum = num < 0;\n          if (isNegNum)\n            num = -num;\n          assert3(num <= 67108863);\n          var p = (1 << 26) % num;\n          var acc = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            acc = (p * acc + (this.words[i] | 0)) % num;\n          }\n          return isNegNum ? -acc : acc;\n        };\n        BN.prototype.modn = function modn(num) {\n          return this.modrn(num);\n        };\n        BN.prototype.idivn = function idivn(num) {\n          var isNegNum = num < 0;\n          if (isNegNum)\n            num = -num;\n          assert3(num <= 67108863);\n          var carry = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            var w = (this.words[i] | 0) + carry * 67108864;\n            this.words[i] = w / num | 0;\n            carry = w % num;\n          }\n          this._strip();\n          return isNegNum ? this.ineg() : this;\n        };\n        BN.prototype.divn = function divn(num) {\n          return this.clone().idivn(num);\n        };\n        BN.prototype.egcd = function egcd(p) {\n          assert3(p.negative === 0);\n          assert3(!p.isZero());\n          var x = this;\n          var y = p.clone();\n          if (x.negative !== 0) {\n            x = x.umod(p);\n          } else {\n            x = x.clone();\n          }\n          var A = new BN(1);\n          var B = new BN(0);\n          var C = new BN(0);\n          var D = new BN(1);\n          var g = 0;\n          while (x.isEven() && y.isEven()) {\n            x.iushrn(1);\n            y.iushrn(1);\n            ++g;\n          }\n          var yp = y.clone();\n          var xp = x.clone();\n          while (!x.isZero()) {\n            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)\n              ;\n            if (i > 0) {\n              x.iushrn(i);\n              while (i-- > 0) {\n                if (A.isOdd() || B.isOdd()) {\n                  A.iadd(yp);\n                  B.isub(xp);\n                }\n                A.iushrn(1);\n                B.iushrn(1);\n              }\n            }\n            for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)\n              ;\n            if (j > 0) {\n              y.iushrn(j);\n              while (j-- > 0) {\n                if (C.isOdd() || D.isOdd()) {\n                  C.iadd(yp);\n                  D.isub(xp);\n                }\n                C.iushrn(1);\n                D.iushrn(1);\n              }\n            }\n            if (x.cmp(y) >= 0) {\n              x.isub(y);\n              A.isub(C);\n              B.isub(D);\n            } else {\n              y.isub(x);\n              C.isub(A);\n              D.isub(B);\n            }\n          }\n          return {\n            a: C,\n            b: D,\n            gcd: y.iushln(g)\n          };\n        };\n        BN.prototype._invmp = function _invmp(p) {\n          assert3(p.negative === 0);\n          assert3(!p.isZero());\n          var a = this;\n          var b2 = p.clone();\n          if (a.negative !== 0) {\n            a = a.umod(p);\n          } else {\n            a = a.clone();\n          }\n          var x1 = new BN(1);\n          var x2 = new BN(0);\n          var delta = b2.clone();\n          while (a.cmpn(1) > 0 && b2.cmpn(1) > 0) {\n            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)\n              ;\n            if (i > 0) {\n              a.iushrn(i);\n              while (i-- > 0) {\n                if (x1.isOdd()) {\n                  x1.iadd(delta);\n                }\n                x1.iushrn(1);\n              }\n            }\n            for (var j = 0, jm = 1; (b2.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)\n              ;\n            if (j > 0) {\n              b2.iushrn(j);\n              while (j-- > 0) {\n                if (x2.isOdd()) {\n                  x2.iadd(delta);\n                }\n                x2.iushrn(1);\n              }\n            }\n            if (a.cmp(b2) >= 0) {\n              a.isub(b2);\n              x1.isub(x2);\n            } else {\n              b2.isub(a);\n              x2.isub(x1);\n            }\n          }\n          var res;\n          if (a.cmpn(1) === 0) {\n            res = x1;\n          } else {\n            res = x2;\n          }\n          if (res.cmpn(0) < 0) {\n            res.iadd(p);\n          }\n          return res;\n        };\n        BN.prototype.gcd = function gcd(num) {\n          if (this.isZero())\n            return num.abs();\n          if (num.isZero())\n            return this.abs();\n          var a = this.clone();\n          var b2 = num.clone();\n          a.negative = 0;\n          b2.negative = 0;\n          for (var shift = 0; a.isEven() && b2.isEven(); shift++) {\n            a.iushrn(1);\n            b2.iushrn(1);\n          }\n          do {\n            while (a.isEven()) {\n              a.iushrn(1);\n            }\n            while (b2.isEven()) {\n              b2.iushrn(1);\n            }\n            var r = a.cmp(b2);\n            if (r < 0) {\n              var t = a;\n              a = b2;\n              b2 = t;\n            } else if (r === 0 || b2.cmpn(1) === 0) {\n              break;\n            }\n            a.isub(b2);\n          } while (true);\n          return b2.iushln(shift);\n        };\n        BN.prototype.invm = function invm(num) {\n          return this.egcd(num).a.umod(num);\n        };\n        BN.prototype.isEven = function isEven() {\n          return (this.words[0] & 1) === 0;\n        };\n        BN.prototype.isOdd = function isOdd() {\n          return (this.words[0] & 1) === 1;\n        };\n        BN.prototype.andln = function andln(num) {\n          return this.words[0] & num;\n        };\n        BN.prototype.bincn = function bincn(bit) {\n          assert3(typeof bit === \"number\");\n          var r = bit % 26;\n          var s = (bit - r) / 26;\n          var q = 1 << r;\n          if (this.length <= s) {\n            this._expand(s + 1);\n            this.words[s] |= q;\n            return this;\n          }\n          var carry = q;\n          for (var i = s; carry !== 0 && i < this.length; i++) {\n            var w = this.words[i] | 0;\n            w += carry;\n            carry = w >>> 26;\n            w &= 67108863;\n            this.words[i] = w;\n          }\n          if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n          }\n          return this;\n        };\n        BN.prototype.isZero = function isZero() {\n          return this.length === 1 && this.words[0] === 0;\n        };\n        BN.prototype.cmpn = function cmpn(num) {\n          var negative = num < 0;\n          if (this.negative !== 0 && !negative)\n            return -1;\n          if (this.negative === 0 && negative)\n            return 1;\n          this._strip();\n          var res;\n          if (this.length > 1) {\n            res = 1;\n          } else {\n            if (negative) {\n              num = -num;\n            }\n            assert3(num <= 67108863, \"Number is too big\");\n            var w = this.words[0] | 0;\n            res = w === num ? 0 : w < num ? -1 : 1;\n          }\n          if (this.negative !== 0)\n            return -res | 0;\n          return res;\n        };\n        BN.prototype.cmp = function cmp(num) {\n          if (this.negative !== 0 && num.negative === 0)\n            return -1;\n          if (this.negative === 0 && num.negative !== 0)\n            return 1;\n          var res = this.ucmp(num);\n          if (this.negative !== 0)\n            return -res | 0;\n          return res;\n        };\n        BN.prototype.ucmp = function ucmp(num) {\n          if (this.length > num.length)\n            return 1;\n          if (this.length < num.length)\n            return -1;\n          var res = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            var a = this.words[i] | 0;\n            var b2 = num.words[i] | 0;\n            if (a === b2)\n              continue;\n            if (a < b2) {\n              res = -1;\n            } else if (a > b2) {\n              res = 1;\n            }\n            break;\n          }\n          return res;\n        };\n        BN.prototype.gtn = function gtn(num) {\n          return this.cmpn(num) === 1;\n        };\n        BN.prototype.gt = function gt(num) {\n          return this.cmp(num) === 1;\n        };\n        BN.prototype.gten = function gten(num) {\n          return this.cmpn(num) >= 0;\n        };\n        BN.prototype.gte = function gte(num) {\n          return this.cmp(num) >= 0;\n        };\n        BN.prototype.ltn = function ltn(num) {\n          return this.cmpn(num) === -1;\n        };\n        BN.prototype.lt = function lt(num) {\n          return this.cmp(num) === -1;\n        };\n        BN.prototype.lten = function lten(num) {\n          return this.cmpn(num) <= 0;\n        };\n        BN.prototype.lte = function lte(num) {\n          return this.cmp(num) <= 0;\n        };\n        BN.prototype.eqn = function eqn(num) {\n          return this.cmpn(num) === 0;\n        };\n        BN.prototype.eq = function eq(num) {\n          return this.cmp(num) === 0;\n        };\n        BN.red = function red(num) {\n          return new Red(num);\n        };\n        BN.prototype.toRed = function toRed(ctx) {\n          assert3(!this.red, \"Already a number in reduction context\");\n          assert3(this.negative === 0, \"red works only with positives\");\n          return ctx.convertTo(this)._forceRed(ctx);\n        };\n        BN.prototype.fromRed = function fromRed() {\n          assert3(this.red, \"fromRed works only with numbers in reduction context\");\n          return this.red.convertFrom(this);\n        };\n        BN.prototype._forceRed = function _forceRed(ctx) {\n          this.red = ctx;\n          return this;\n        };\n        BN.prototype.forceRed = function forceRed(ctx) {\n          assert3(!this.red, \"Already a number in reduction context\");\n          return this._forceRed(ctx);\n        };\n        BN.prototype.redAdd = function redAdd(num) {\n          assert3(this.red, \"redAdd works only with red numbers\");\n          return this.red.add(this, num);\n        };\n        BN.prototype.redIAdd = function redIAdd(num) {\n          assert3(this.red, \"redIAdd works only with red numbers\");\n          return this.red.iadd(this, num);\n        };\n        BN.prototype.redSub = function redSub(num) {\n          assert3(this.red, \"redSub works only with red numbers\");\n          return this.red.sub(this, num);\n        };\n        BN.prototype.redISub = function redISub(num) {\n          assert3(this.red, \"redISub works only with red numbers\");\n          return this.red.isub(this, num);\n        };\n        BN.prototype.redShl = function redShl(num) {\n          assert3(this.red, \"redShl works only with red numbers\");\n          return this.red.shl(this, num);\n        };\n        BN.prototype.redMul = function redMul(num) {\n          assert3(this.red, \"redMul works only with red numbers\");\n          this.red._verify2(this, num);\n          return this.red.mul(this, num);\n        };\n        BN.prototype.redIMul = function redIMul(num) {\n          assert3(this.red, \"redMul works only with red numbers\");\n          this.red._verify2(this, num);\n          return this.red.imul(this, num);\n        };\n        BN.prototype.redSqr = function redSqr() {\n          assert3(this.red, \"redSqr works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.sqr(this);\n        };\n        BN.prototype.redISqr = function redISqr() {\n          assert3(this.red, \"redISqr works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.isqr(this);\n        };\n        BN.prototype.redSqrt = function redSqrt() {\n          assert3(this.red, \"redSqrt works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.sqrt(this);\n        };\n        BN.prototype.redInvm = function redInvm() {\n          assert3(this.red, \"redInvm works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.invm(this);\n        };\n        BN.prototype.redNeg = function redNeg() {\n          assert3(this.red, \"redNeg works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.neg(this);\n        };\n        BN.prototype.redPow = function redPow(num) {\n          assert3(this.red && !num.red, \"redPow(normalNum)\");\n          this.red._verify1(this);\n          return this.red.pow(this, num);\n        };\n        var primes = {\n          k256: null,\n          p224: null,\n          p192: null,\n          p25519: null\n        };\n        function MPrime(name, p) {\n          this.name = name;\n          this.p = new BN(p, 16);\n          this.n = this.p.bitLength();\n          this.k = new BN(1).iushln(this.n).isub(this.p);\n          this.tmp = this._tmp();\n        }\n        MPrime.prototype._tmp = function _tmp() {\n          var tmp = new BN(null);\n          tmp.words = new Array(Math.ceil(this.n / 13));\n          return tmp;\n        };\n        MPrime.prototype.ireduce = function ireduce(num) {\n          var r = num;\n          var rlen;\n          do {\n            this.split(r, this.tmp);\n            r = this.imulK(r);\n            r = r.iadd(this.tmp);\n            rlen = r.bitLength();\n          } while (rlen > this.n);\n          var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n          if (cmp === 0) {\n            r.words[0] = 0;\n            r.length = 1;\n          } else if (cmp > 0) {\n            r.isub(this.p);\n          } else {\n            if (r.strip !== void 0) {\n              r.strip();\n            } else {\n              r._strip();\n            }\n          }\n          return r;\n        };\n        MPrime.prototype.split = function split3(input, out) {\n          input.iushrn(this.n, 0, out);\n        };\n        MPrime.prototype.imulK = function imulK(num) {\n          return num.imul(this.k);\n        };\n        function K256() {\n          MPrime.call(\n            this,\n            \"k256\",\n            \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n          );\n        }\n        inherits(K256, MPrime);\n        K256.prototype.split = function split3(input, output2) {\n          var mask2 = 4194303;\n          var outLen = Math.min(input.length, 9);\n          for (var i = 0; i < outLen; i++) {\n            output2.words[i] = input.words[i];\n          }\n          output2.length = outLen;\n          if (input.length <= 9) {\n            input.words[0] = 0;\n            input.length = 1;\n            return;\n          }\n          var prev = input.words[9];\n          output2.words[output2.length++] = prev & mask2;\n          for (i = 10; i < input.length; i++) {\n            var next = input.words[i] | 0;\n            input.words[i - 10] = (next & mask2) << 4 | prev >>> 22;\n            prev = next;\n          }\n          prev >>>= 22;\n          input.words[i - 10] = prev;\n          if (prev === 0 && input.length > 10) {\n            input.length -= 10;\n          } else {\n            input.length -= 9;\n          }\n        };\n        K256.prototype.imulK = function imulK(num) {\n          num.words[num.length] = 0;\n          num.words[num.length + 1] = 0;\n          num.length += 2;\n          var lo = 0;\n          for (var i = 0; i < num.length; i++) {\n            var w = num.words[i] | 0;\n            lo += w * 977;\n            num.words[i] = lo & 67108863;\n            lo = w * 64 + (lo / 67108864 | 0);\n          }\n          if (num.words[num.length - 1] === 0) {\n            num.length--;\n            if (num.words[num.length - 1] === 0) {\n              num.length--;\n            }\n          }\n          return num;\n        };\n        function P224() {\n          MPrime.call(\n            this,\n            \"p224\",\n            \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n          );\n        }\n        inherits(P224, MPrime);\n        function P192() {\n          MPrime.call(\n            this,\n            \"p192\",\n            \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n          );\n        }\n        inherits(P192, MPrime);\n        function P25519() {\n          MPrime.call(\n            this,\n            \"25519\",\n            \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n          );\n        }\n        inherits(P25519, MPrime);\n        P25519.prototype.imulK = function imulK(num) {\n          var carry = 0;\n          for (var i = 0; i < num.length; i++) {\n            var hi = (num.words[i] | 0) * 19 + carry;\n            var lo = hi & 67108863;\n            hi >>>= 26;\n            num.words[i] = lo;\n            carry = hi;\n          }\n          if (carry !== 0) {\n            num.words[num.length++] = carry;\n          }\n          return num;\n        };\n        BN._prime = function prime(name) {\n          if (primes[name])\n            return primes[name];\n          var prime2;\n          if (name === \"k256\") {\n            prime2 = new K256();\n          } else if (name === \"p224\") {\n            prime2 = new P224();\n          } else if (name === \"p192\") {\n            prime2 = new P192();\n          } else if (name === \"p25519\") {\n            prime2 = new P25519();\n          } else {\n            throw new Error(\"Unknown prime \" + name);\n          }\n          primes[name] = prime2;\n          return prime2;\n        };\n        function Red(m) {\n          if (typeof m === \"string\") {\n            var prime = BN._prime(m);\n            this.m = prime.p;\n            this.prime = prime;\n          } else {\n            assert3(m.gtn(1), \"modulus must be greater than 1\");\n            this.m = m;\n            this.prime = null;\n          }\n        }\n        Red.prototype._verify1 = function _verify1(a) {\n          assert3(a.negative === 0, \"red works only with positives\");\n          assert3(a.red, \"red works only with red numbers\");\n        };\n        Red.prototype._verify2 = function _verify2(a, b2) {\n          assert3((a.negative | b2.negative) === 0, \"red works only with positives\");\n          assert3(\n            a.red && a.red === b2.red,\n            \"red works only with red numbers\"\n          );\n        };\n        Red.prototype.imod = function imod(a) {\n          if (this.prime)\n            return this.prime.ireduce(a)._forceRed(this);\n          move(a, a.umod(this.m)._forceRed(this));\n          return a;\n        };\n        Red.prototype.neg = function neg(a) {\n          if (a.isZero()) {\n            return a.clone();\n          }\n          return this.m.sub(a)._forceRed(this);\n        };\n        Red.prototype.add = function add2(a, b2) {\n          this._verify2(a, b2);\n          var res = a.add(b2);\n          if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Red.prototype.iadd = function iadd(a, b2) {\n          this._verify2(a, b2);\n          var res = a.iadd(b2);\n          if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n          }\n          return res;\n        };\n        Red.prototype.sub = function sub(a, b2) {\n          this._verify2(a, b2);\n          var res = a.sub(b2);\n          if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Red.prototype.isub = function isub(a, b2) {\n          this._verify2(a, b2);\n          var res = a.isub(b2);\n          if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n          }\n          return res;\n        };\n        Red.prototype.shl = function shl(a, num) {\n          this._verify1(a);\n          return this.imod(a.ushln(num));\n        };\n        Red.prototype.imul = function imul(a, b2) {\n          this._verify2(a, b2);\n          return this.imod(a.imul(b2));\n        };\n        Red.prototype.mul = function mul(a, b2) {\n          this._verify2(a, b2);\n          return this.imod(a.mul(b2));\n        };\n        Red.prototype.isqr = function isqr(a) {\n          return this.imul(a, a.clone());\n        };\n        Red.prototype.sqr = function sqr(a) {\n          return this.mul(a, a);\n        };\n        Red.prototype.sqrt = function sqrt(a) {\n          if (a.isZero())\n            return a.clone();\n          var mod3 = this.m.andln(3);\n          assert3(mod3 % 2 === 1);\n          if (mod3 === 3) {\n            var pow3 = this.m.add(new BN(1)).iushrn(2);\n            return this.pow(a, pow3);\n          }\n          var q = this.m.subn(1);\n          var s = 0;\n          while (!q.isZero() && q.andln(1) === 0) {\n            s++;\n            q.iushrn(1);\n          }\n          assert3(!q.isZero());\n          var one = new BN(1).toRed(this);\n          var nOne = one.redNeg();\n          var lpow = this.m.subn(1).iushrn(1);\n          var z = this.m.bitLength();\n          z = new BN(2 * z * z).toRed(this);\n          while (this.pow(z, lpow).cmp(nOne) !== 0) {\n            z.redIAdd(nOne);\n          }\n          var c = this.pow(z, q);\n          var r = this.pow(a, q.addn(1).iushrn(1));\n          var t = this.pow(a, q);\n          var m = s;\n          while (t.cmp(one) !== 0) {\n            var tmp = t;\n            for (var i = 0; tmp.cmp(one) !== 0; i++) {\n              tmp = tmp.redSqr();\n            }\n            assert3(i < m);\n            var b2 = this.pow(c, new BN(1).iushln(m - i - 1));\n            r = r.redMul(b2);\n            c = b2.redSqr();\n            t = t.redMul(c);\n            m = i;\n          }\n          return r;\n        };\n        Red.prototype.invm = function invm(a) {\n          var inv = a._invmp(this.m);\n          if (inv.negative !== 0) {\n            inv.negative = 0;\n            return this.imod(inv).redNeg();\n          } else {\n            return this.imod(inv);\n          }\n        };\n        Red.prototype.pow = function pow3(a, num) {\n          if (num.isZero())\n            return new BN(1).toRed(this);\n          if (num.cmpn(1) === 0)\n            return a.clone();\n          var windowSize = 4;\n          var wnd = new Array(1 << windowSize);\n          wnd[0] = new BN(1).toRed(this);\n          wnd[1] = a;\n          for (var i = 2; i < wnd.length; i++) {\n            wnd[i] = this.mul(wnd[i - 1], a);\n          }\n          var res = wnd[0];\n          var current = 0;\n          var currentLen = 0;\n          var start = num.bitLength() % 26;\n          if (start === 0) {\n            start = 26;\n          }\n          for (i = num.length - 1; i >= 0; i--) {\n            var word = num.words[i];\n            for (var j = start - 1; j >= 0; j--) {\n              var bit = word >> j & 1;\n              if (res !== wnd[0]) {\n                res = this.sqr(res);\n              }\n              if (bit === 0 && current === 0) {\n                currentLen = 0;\n                continue;\n              }\n              current <<= 1;\n              current |= bit;\n              currentLen++;\n              if (currentLen !== windowSize && (i !== 0 || j !== 0))\n                continue;\n              res = this.mul(res, wnd[current]);\n              currentLen = 0;\n              current = 0;\n            }\n            start = 26;\n          }\n          return res;\n        };\n        Red.prototype.convertTo = function convertTo(num) {\n          var r = num.umod(this.m);\n          return r === num ? r.clone() : r;\n        };\n        Red.prototype.convertFrom = function convertFrom(num) {\n          var res = num.clone();\n          res.red = null;\n          return res;\n        };\n        BN.mont = function mont(num) {\n          return new Mont(num);\n        };\n        function Mont(m) {\n          Red.call(this, m);\n          this.shift = this.m.bitLength();\n          if (this.shift % 26 !== 0) {\n            this.shift += 26 - this.shift % 26;\n          }\n          this.r = new BN(1).iushln(this.shift);\n          this.r2 = this.imod(this.r.sqr());\n          this.rinv = this.r._invmp(this.m);\n          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n          this.minv = this.minv.umod(this.r);\n          this.minv = this.r.sub(this.minv);\n        }\n        inherits(Mont, Red);\n        Mont.prototype.convertTo = function convertTo(num) {\n          return this.imod(num.ushln(this.shift));\n        };\n        Mont.prototype.convertFrom = function convertFrom(num) {\n          var r = this.imod(num.mul(this.rinv));\n          r.red = null;\n          return r;\n        };\n        Mont.prototype.imul = function imul(a, b2) {\n          if (a.isZero() || b2.isZero()) {\n            a.words[0] = 0;\n            a.length = 1;\n            return a;\n          }\n          var t = a.imul(b2);\n          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n          var u = t.isub(c).iushrn(this.shift);\n          var res = u;\n          if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n          } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Mont.prototype.mul = function mul(a, b2) {\n          if (a.isZero() || b2.isZero())\n            return new BN(0)._forceRed(this);\n          var t = a.mul(b2);\n          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n          var u = t.isub(c).iushrn(this.shift);\n          var res = u;\n          if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n          } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Mont.prototype.invm = function invm(a) {\n          var res = this.imod(a._invmp(this.m).mul(this.r2));\n          return res._forceRed(this);\n        };\n      })(typeof module === \"undefined\" || module, exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+logger@5.8.0/node_modules/@ethersproject/logger/lib/_version.js\n  var require_version = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+logger@5.8.0/node_modules/@ethersproject/logger/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"logger/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+logger@5.8.0/node_modules/@ethersproject/logger/lib/index.js\n  var require_lib = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+logger@5.8.0/node_modules/@ethersproject/logger/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Logger = exports3.ErrorCode = exports3.LogLevel = void 0;\n      var _permanentCensorErrors = false;\n      var _censorErrors = false;\n      var LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\n      var _logLevel = LogLevels[\"default\"];\n      var _version_1 = require_version();\n      var _globalLogger = null;\n      function _checkNormalize() {\n        try {\n          var missing_1 = [];\n          [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function(form) {\n            try {\n              if (\"test\".normalize(form) !== \"test\") {\n                throw new Error(\"bad normalize\");\n              }\n              ;\n            } catch (error) {\n              missing_1.push(form);\n            }\n          });\n          if (missing_1.length) {\n            throw new Error(\"missing \" + missing_1.join(\", \"));\n          }\n          if (String.fromCharCode(233).normalize(\"NFD\") !== String.fromCharCode(101, 769)) {\n            throw new Error(\"broken implementation\");\n          }\n        } catch (error) {\n          return error.message;\n        }\n        return null;\n      }\n      var _normalizeError = _checkNormalize();\n      var LogLevel;\n      (function(LogLevel2) {\n        LogLevel2[\"DEBUG\"] = \"DEBUG\";\n        LogLevel2[\"INFO\"] = \"INFO\";\n        LogLevel2[\"WARNING\"] = \"WARNING\";\n        LogLevel2[\"ERROR\"] = \"ERROR\";\n        LogLevel2[\"OFF\"] = \"OFF\";\n      })(LogLevel = exports3.LogLevel || (exports3.LogLevel = {}));\n      var ErrorCode;\n      (function(ErrorCode2) {\n        ErrorCode2[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n        ErrorCode2[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n        ErrorCode2[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n        ErrorCode2[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n        ErrorCode2[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n        ErrorCode2[\"TIMEOUT\"] = \"TIMEOUT\";\n        ErrorCode2[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n        ErrorCode2[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n        ErrorCode2[\"MISSING_NEW\"] = \"MISSING_NEW\";\n        ErrorCode2[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n        ErrorCode2[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n        ErrorCode2[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n        ErrorCode2[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n        ErrorCode2[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n        ErrorCode2[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n        ErrorCode2[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n        ErrorCode2[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n        ErrorCode2[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n        ErrorCode2[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n      })(ErrorCode = exports3.ErrorCode || (exports3.ErrorCode = {}));\n      var HEX = \"0123456789abcdef\";\n      var Logger = (\n        /** @class */\n        function() {\n          function Logger2(version3) {\n            Object.defineProperty(this, \"version\", {\n              enumerable: true,\n              value: version3,\n              writable: false\n            });\n          }\n          Logger2.prototype._log = function(logLevel, args) {\n            var level = logLevel.toLowerCase();\n            if (LogLevels[level] == null) {\n              this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n            }\n            if (_logLevel > LogLevels[level]) {\n              return;\n            }\n            console.log.apply(console, args);\n          };\n          Logger2.prototype.debug = function() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            this._log(Logger2.levels.DEBUG, args);\n          };\n          Logger2.prototype.info = function() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            this._log(Logger2.levels.INFO, args);\n          };\n          Logger2.prototype.warn = function() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            this._log(Logger2.levels.WARNING, args);\n          };\n          Logger2.prototype.makeError = function(message, code, params) {\n            if (_censorErrors) {\n              return this.makeError(\"censored error\", code, {});\n            }\n            if (!code) {\n              code = Logger2.errors.UNKNOWN_ERROR;\n            }\n            if (!params) {\n              params = {};\n            }\n            var messageDetails = [];\n            Object.keys(params).forEach(function(key) {\n              var value = params[key];\n              try {\n                if (value instanceof Uint8Array) {\n                  var hex = \"\";\n                  for (var i = 0; i < value.length; i++) {\n                    hex += HEX[value[i] >> 4];\n                    hex += HEX[value[i] & 15];\n                  }\n                  messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                  messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n              } catch (error2) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n              }\n            });\n            messageDetails.push(\"code=\" + code);\n            messageDetails.push(\"version=\" + this.version);\n            var reason = message;\n            var url = \"\";\n            switch (code) {\n              case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                var fault = message;\n                switch (fault) {\n                  case \"overflow\":\n                  case \"underflow\":\n                  case \"division-by-zero\":\n                    url += \"-\" + fault;\n                    break;\n                  case \"negative-power\":\n                  case \"negative-width\":\n                    url += \"-unsupported\";\n                    break;\n                  case \"unbound-bitwise-result\":\n                    url += \"-unbound-result\";\n                    break;\n                }\n                break;\n              }\n              case ErrorCode.CALL_EXCEPTION:\n              case ErrorCode.INSUFFICIENT_FUNDS:\n              case ErrorCode.MISSING_NEW:\n              case ErrorCode.NONCE_EXPIRED:\n              case ErrorCode.REPLACEMENT_UNDERPRICED:\n              case ErrorCode.TRANSACTION_REPLACED:\n              case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n            }\n            if (url) {\n              message += \" [ See: https://links.ethers.org/v5-errors-\" + url + \" ]\";\n            }\n            if (messageDetails.length) {\n              message += \" (\" + messageDetails.join(\", \") + \")\";\n            }\n            var error = new Error(message);\n            error.reason = reason;\n            error.code = code;\n            Object.keys(params).forEach(function(key) {\n              error[key] = params[key];\n            });\n            return error;\n          };\n          Logger2.prototype.throwError = function(message, code, params) {\n            throw this.makeError(message, code, params);\n          };\n          Logger2.prototype.throwArgumentError = function(message, name, value) {\n            return this.throwError(message, Logger2.errors.INVALID_ARGUMENT, {\n              argument: name,\n              value\n            });\n          };\n          Logger2.prototype.assert = function(condition, message, code, params) {\n            if (!!condition) {\n              return;\n            }\n            this.throwError(message, code, params);\n          };\n          Logger2.prototype.assertArgument = function(condition, message, name, value) {\n            if (!!condition) {\n              return;\n            }\n            this.throwArgumentError(message, name, value);\n          };\n          Logger2.prototype.checkNormalize = function(message) {\n            if (message == null) {\n              message = \"platform missing String.prototype.normalize\";\n            }\n            if (_normalizeError) {\n              this.throwError(\"platform missing String.prototype.normalize\", Logger2.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\",\n                form: _normalizeError\n              });\n            }\n          };\n          Logger2.prototype.checkSafeUint53 = function(value, message) {\n            if (typeof value !== \"number\") {\n              return;\n            }\n            if (message == null) {\n              message = \"value not safe\";\n            }\n            if (value < 0 || value >= 9007199254740991) {\n              this.throwError(message, Logger2.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value\n              });\n            }\n            if (value % 1) {\n              this.throwError(message, Logger2.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value\n              });\n            }\n          };\n          Logger2.prototype.checkArgumentCount = function(count, expectedCount, message) {\n            if (message) {\n              message = \": \" + message;\n            } else {\n              message = \"\";\n            }\n            if (count < expectedCount) {\n              this.throwError(\"missing argument\" + message, Logger2.errors.MISSING_ARGUMENT, {\n                count,\n                expectedCount\n              });\n            }\n            if (count > expectedCount) {\n              this.throwError(\"too many arguments\" + message, Logger2.errors.UNEXPECTED_ARGUMENT, {\n                count,\n                expectedCount\n              });\n            }\n          };\n          Logger2.prototype.checkNew = function(target, kind) {\n            if (target === Object || target == null) {\n              this.throwError(\"missing new\", Logger2.errors.MISSING_NEW, { name: kind.name });\n            }\n          };\n          Logger2.prototype.checkAbstract = function(target, kind) {\n            if (target === kind) {\n              this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger2.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n            } else if (target === Object || target == null) {\n              this.throwError(\"missing new\", Logger2.errors.MISSING_NEW, { name: kind.name });\n            }\n          };\n          Logger2.globalLogger = function() {\n            if (!_globalLogger) {\n              _globalLogger = new Logger2(_version_1.version);\n            }\n            return _globalLogger;\n          };\n          Logger2.setCensorship = function(censorship, permanent) {\n            if (!censorship && permanent) {\n              this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger2.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n              });\n            }\n            if (_permanentCensorErrors) {\n              if (!censorship) {\n                return;\n              }\n              this.globalLogger().throwError(\"error censorship permanent\", Logger2.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n              });\n            }\n            _censorErrors = !!censorship;\n            _permanentCensorErrors = !!permanent;\n          };\n          Logger2.setLogLevel = function(logLevel) {\n            var level = LogLevels[logLevel.toLowerCase()];\n            if (level == null) {\n              Logger2.globalLogger().warn(\"invalid log level - \" + logLevel);\n              return;\n            }\n            _logLevel = level;\n          };\n          Logger2.from = function(version3) {\n            return new Logger2(version3);\n          };\n          Logger2.errors = ErrorCode;\n          Logger2.levels = LogLevel;\n          return Logger2;\n        }()\n      );\n      exports3.Logger = Logger;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bytes@5.8.0/node_modules/@ethersproject/bytes/lib/_version.js\n  var require_version2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bytes@5.8.0/node_modules/@ethersproject/bytes/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"bytes/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bytes@5.8.0/node_modules/@ethersproject/bytes/lib/index.js\n  var require_lib2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bytes@5.8.0/node_modules/@ethersproject/bytes/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.joinSignature = exports3.splitSignature = exports3.hexZeroPad = exports3.hexStripZeros = exports3.hexValue = exports3.hexConcat = exports3.hexDataSlice = exports3.hexDataLength = exports3.hexlify = exports3.isHexString = exports3.zeroPad = exports3.stripZeros = exports3.concat = exports3.arrayify = exports3.isBytes = exports3.isBytesLike = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version2();\n      var logger = new logger_1.Logger(_version_1.version);\n      function isHexable(value) {\n        return !!value.toHexString;\n      }\n      function addSlice(array) {\n        if (array.slice) {\n          return array;\n        }\n        array.slice = function() {\n          var args = Array.prototype.slice.call(arguments);\n          return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n        };\n        return array;\n      }\n      function isBytesLike2(value) {\n        return isHexString2(value) && !(value.length % 2) || isBytes(value);\n      }\n      exports3.isBytesLike = isBytesLike2;\n      function isInteger(value) {\n        return typeof value === \"number\" && value == value && value % 1 === 0;\n      }\n      function isBytes(value) {\n        if (value == null) {\n          return false;\n        }\n        if (value.constructor === Uint8Array) {\n          return true;\n        }\n        if (typeof value === \"string\") {\n          return false;\n        }\n        if (!isInteger(value.length) || value.length < 0) {\n          return false;\n        }\n        for (var i = 0; i < value.length; i++) {\n          var v = value[i];\n          if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n          }\n        }\n        return true;\n      }\n      exports3.isBytes = isBytes;\n      function arrayify(value, options) {\n        if (!options) {\n          options = {};\n        }\n        if (typeof value === \"number\") {\n          logger.checkSafeUint53(value, \"invalid arrayify value\");\n          var result = [];\n          while (value) {\n            result.unshift(value & 255);\n            value = parseInt(String(value / 256));\n          }\n          if (result.length === 0) {\n            result.push(0);\n          }\n          return addSlice(new Uint8Array(result));\n        }\n        if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n          value = \"0x\" + value;\n        }\n        if (isHexable(value)) {\n          value = value.toHexString();\n        }\n        if (isHexString2(value)) {\n          var hex = value.substring(2);\n          if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n              hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n              hex += \"0\";\n            } else {\n              logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n          }\n          var result = [];\n          for (var i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n          }\n          return addSlice(new Uint8Array(result));\n        }\n        if (isBytes(value)) {\n          return addSlice(new Uint8Array(value));\n        }\n        return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n      }\n      exports3.arrayify = arrayify;\n      function concat2(items) {\n        var objects = items.map(function(item) {\n          return arrayify(item);\n        });\n        var length = objects.reduce(function(accum, item) {\n          return accum + item.length;\n        }, 0);\n        var result = new Uint8Array(length);\n        objects.reduce(function(offset, object2) {\n          result.set(object2, offset);\n          return offset + object2.length;\n        }, 0);\n        return addSlice(result);\n      }\n      exports3.concat = concat2;\n      function stripZeros(value) {\n        var result = arrayify(value);\n        if (result.length === 0) {\n          return result;\n        }\n        var start = 0;\n        while (start < result.length && result[start] === 0) {\n          start++;\n        }\n        if (start) {\n          result = result.slice(start);\n        }\n        return result;\n      }\n      exports3.stripZeros = stripZeros;\n      function zeroPad2(value, length) {\n        value = arrayify(value);\n        if (value.length > length) {\n          logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n        }\n        var result = new Uint8Array(length);\n        result.set(value, length - value.length);\n        return addSlice(result);\n      }\n      exports3.zeroPad = zeroPad2;\n      function isHexString2(value, length) {\n        if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n          return false;\n        }\n        if (length && value.length !== 2 + 2 * length) {\n          return false;\n        }\n        return true;\n      }\n      exports3.isHexString = isHexString2;\n      var HexCharacters2 = \"0123456789abcdef\";\n      function hexlify2(value, options) {\n        if (!options) {\n          options = {};\n        }\n        if (typeof value === \"number\") {\n          logger.checkSafeUint53(value, \"invalid hexlify value\");\n          var hex = \"\";\n          while (value) {\n            hex = HexCharacters2[value & 15] + hex;\n            value = Math.floor(value / 16);\n          }\n          if (hex.length) {\n            if (hex.length % 2) {\n              hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n          }\n          return \"0x00\";\n        }\n        if (typeof value === \"bigint\") {\n          value = value.toString(16);\n          if (value.length % 2) {\n            return \"0x0\" + value;\n          }\n          return \"0x\" + value;\n        }\n        if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n          value = \"0x\" + value;\n        }\n        if (isHexable(value)) {\n          return value.toHexString();\n        }\n        if (isHexString2(value)) {\n          if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n              value = \"0x0\" + value.substring(2);\n            } else if (options.hexPad === \"right\") {\n              value += \"0\";\n            } else {\n              logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n          }\n          return value.toLowerCase();\n        }\n        if (isBytes(value)) {\n          var result = \"0x\";\n          for (var i = 0; i < value.length; i++) {\n            var v = value[i];\n            result += HexCharacters2[(v & 240) >> 4] + HexCharacters2[v & 15];\n          }\n          return result;\n        }\n        return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n      }\n      exports3.hexlify = hexlify2;\n      function hexDataLength(data) {\n        if (typeof data !== \"string\") {\n          data = hexlify2(data);\n        } else if (!isHexString2(data) || data.length % 2) {\n          return null;\n        }\n        return (data.length - 2) / 2;\n      }\n      exports3.hexDataLength = hexDataLength;\n      function hexDataSlice(data, offset, endOffset) {\n        if (typeof data !== \"string\") {\n          data = hexlify2(data);\n        } else if (!isHexString2(data) || data.length % 2) {\n          logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n        }\n        offset = 2 + 2 * offset;\n        if (endOffset != null) {\n          return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n        }\n        return \"0x\" + data.substring(offset);\n      }\n      exports3.hexDataSlice = hexDataSlice;\n      function hexConcat(items) {\n        var result = \"0x\";\n        items.forEach(function(item) {\n          result += hexlify2(item).substring(2);\n        });\n        return result;\n      }\n      exports3.hexConcat = hexConcat;\n      function hexValue(value) {\n        var trimmed = hexStripZeros(hexlify2(value, { hexPad: \"left\" }));\n        if (trimmed === \"0x\") {\n          return \"0x0\";\n        }\n        return trimmed;\n      }\n      exports3.hexValue = hexValue;\n      function hexStripZeros(value) {\n        if (typeof value !== \"string\") {\n          value = hexlify2(value);\n        }\n        if (!isHexString2(value)) {\n          logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n        }\n        value = value.substring(2);\n        var offset = 0;\n        while (offset < value.length && value[offset] === \"0\") {\n          offset++;\n        }\n        return \"0x\" + value.substring(offset);\n      }\n      exports3.hexStripZeros = hexStripZeros;\n      function hexZeroPad(value, length) {\n        if (typeof value !== \"string\") {\n          value = hexlify2(value);\n        } else if (!isHexString2(value)) {\n          logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n        }\n        if (value.length > 2 * length + 2) {\n          logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n        }\n        while (value.length < 2 * length + 2) {\n          value = \"0x0\" + value.substring(2);\n        }\n        return value;\n      }\n      exports3.hexZeroPad = hexZeroPad;\n      function splitSignature(signature) {\n        var result = {\n          r: \"0x\",\n          s: \"0x\",\n          _vs: \"0x\",\n          recoveryParam: 0,\n          v: 0,\n          yParityAndS: \"0x\",\n          compact: \"0x\"\n        };\n        if (isBytesLike2(signature)) {\n          var bytes2 = arrayify(signature);\n          if (bytes2.length === 64) {\n            result.v = 27 + (bytes2[32] >> 7);\n            bytes2[32] &= 127;\n            result.r = hexlify2(bytes2.slice(0, 32));\n            result.s = hexlify2(bytes2.slice(32, 64));\n          } else if (bytes2.length === 65) {\n            result.r = hexlify2(bytes2.slice(0, 32));\n            result.s = hexlify2(bytes2.slice(32, 64));\n            result.v = bytes2[64];\n          } else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n          }\n          if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n              result.v += 27;\n            } else {\n              logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n          }\n          result.recoveryParam = 1 - result.v % 2;\n          if (result.recoveryParam) {\n            bytes2[32] |= 128;\n          }\n          result._vs = hexlify2(bytes2.slice(32, 64));\n        } else {\n          result.r = signature.r;\n          result.s = signature.s;\n          result.v = signature.v;\n          result.recoveryParam = signature.recoveryParam;\n          result._vs = signature._vs;\n          if (result._vs != null) {\n            var vs_1 = zeroPad2(arrayify(result._vs), 32);\n            result._vs = hexlify2(vs_1);\n            var recoveryParam = vs_1[0] >= 128 ? 1 : 0;\n            if (result.recoveryParam == null) {\n              result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n              logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            vs_1[0] &= 127;\n            var s = hexlify2(vs_1);\n            if (result.s == null) {\n              result.s = s;\n            } else if (result.s !== s) {\n              logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n          }\n          if (result.recoveryParam == null) {\n            if (result.v == null) {\n              logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n              result.recoveryParam = result.v;\n            } else {\n              result.recoveryParam = 1 - result.v % 2;\n            }\n          } else {\n            if (result.v == null) {\n              result.v = 27 + result.recoveryParam;\n            } else {\n              var recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;\n              if (result.recoveryParam !== recId) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n              }\n            }\n          }\n          if (result.r == null || !isHexString2(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n          } else {\n            result.r = hexZeroPad(result.r, 32);\n          }\n          if (result.s == null || !isHexString2(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n          } else {\n            result.s = hexZeroPad(result.s, 32);\n          }\n          var vs = arrayify(result.s);\n          if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n          }\n          if (result.recoveryParam) {\n            vs[0] |= 128;\n          }\n          var _vs = hexlify2(vs);\n          if (result._vs) {\n            if (!isHexString2(result._vs)) {\n              logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n          }\n          if (result._vs == null) {\n            result._vs = _vs;\n          } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n          }\n        }\n        result.yParityAndS = result._vs;\n        result.compact = result.r + result.yParityAndS.substring(2);\n        return result;\n      }\n      exports3.splitSignature = splitSignature;\n      function joinSignature(signature) {\n        signature = splitSignature(signature);\n        return hexlify2(concat2([\n          signature.r,\n          signature.s,\n          signature.recoveryParam ? \"0x1c\" : \"0x1b\"\n        ]));\n      }\n      exports3.joinSignature = joinSignature;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/_version.js\n  var require_version3 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"bignumber/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/bignumber.js\n  var require_bignumber = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/bignumber.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3._base16To36 = exports3._base36To16 = exports3.BigNumber = exports3.isBigNumberish = void 0;\n      var bn_js_1 = __importDefault2(require_bn());\n      var BN = bn_js_1.default.BN;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version3();\n      var logger = new logger_1.Logger(_version_1.version);\n      var _constructorGuard = {};\n      var MAX_SAFE = 9007199254740991;\n      function isBigNumberish(value) {\n        return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || (0, bytes_1.isHexString)(value) || typeof value === \"bigint\" || (0, bytes_1.isBytes)(value));\n      }\n      exports3.isBigNumberish = isBigNumberish;\n      var _warnedToStringRadix = false;\n      var BigNumber = (\n        /** @class */\n        function() {\n          function BigNumber2(constructorGuard, hex) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot call constructor directly; use BigNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n              });\n            }\n            this._hex = hex;\n            this._isBigNumber = true;\n            Object.freeze(this);\n          }\n          BigNumber2.prototype.fromTwos = function(value) {\n            return toBigNumber(toBN(this).fromTwos(value));\n          };\n          BigNumber2.prototype.toTwos = function(value) {\n            return toBigNumber(toBN(this).toTwos(value));\n          };\n          BigNumber2.prototype.abs = function() {\n            if (this._hex[0] === \"-\") {\n              return BigNumber2.from(this._hex.substring(1));\n            }\n            return this;\n          };\n          BigNumber2.prototype.add = function(other) {\n            return toBigNumber(toBN(this).add(toBN(other)));\n          };\n          BigNumber2.prototype.sub = function(other) {\n            return toBigNumber(toBN(this).sub(toBN(other)));\n          };\n          BigNumber2.prototype.div = function(other) {\n            var o = BigNumber2.from(other);\n            if (o.isZero()) {\n              throwFault(\"division-by-zero\", \"div\");\n            }\n            return toBigNumber(toBN(this).div(toBN(other)));\n          };\n          BigNumber2.prototype.mul = function(other) {\n            return toBigNumber(toBN(this).mul(toBN(other)));\n          };\n          BigNumber2.prototype.mod = function(other) {\n            var value = toBN(other);\n            if (value.isNeg()) {\n              throwFault(\"division-by-zero\", \"mod\");\n            }\n            return toBigNumber(toBN(this).umod(value));\n          };\n          BigNumber2.prototype.pow = function(other) {\n            var value = toBN(other);\n            if (value.isNeg()) {\n              throwFault(\"negative-power\", \"pow\");\n            }\n            return toBigNumber(toBN(this).pow(value));\n          };\n          BigNumber2.prototype.and = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"and\");\n            }\n            return toBigNumber(toBN(this).and(value));\n          };\n          BigNumber2.prototype.or = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"or\");\n            }\n            return toBigNumber(toBN(this).or(value));\n          };\n          BigNumber2.prototype.xor = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"xor\");\n            }\n            return toBigNumber(toBN(this).xor(value));\n          };\n          BigNumber2.prototype.mask = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"mask\");\n            }\n            return toBigNumber(toBN(this).maskn(value));\n          };\n          BigNumber2.prototype.shl = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"shl\");\n            }\n            return toBigNumber(toBN(this).shln(value));\n          };\n          BigNumber2.prototype.shr = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"shr\");\n            }\n            return toBigNumber(toBN(this).shrn(value));\n          };\n          BigNumber2.prototype.eq = function(other) {\n            return toBN(this).eq(toBN(other));\n          };\n          BigNumber2.prototype.lt = function(other) {\n            return toBN(this).lt(toBN(other));\n          };\n          BigNumber2.prototype.lte = function(other) {\n            return toBN(this).lte(toBN(other));\n          };\n          BigNumber2.prototype.gt = function(other) {\n            return toBN(this).gt(toBN(other));\n          };\n          BigNumber2.prototype.gte = function(other) {\n            return toBN(this).gte(toBN(other));\n          };\n          BigNumber2.prototype.isNegative = function() {\n            return this._hex[0] === \"-\";\n          };\n          BigNumber2.prototype.isZero = function() {\n            return toBN(this).isZero();\n          };\n          BigNumber2.prototype.toNumber = function() {\n            try {\n              return toBN(this).toNumber();\n            } catch (error) {\n              throwFault(\"overflow\", \"toNumber\", this.toString());\n            }\n            return null;\n          };\n          BigNumber2.prototype.toBigInt = function() {\n            try {\n              return BigInt(this.toString());\n            } catch (e) {\n            }\n            return logger.throwError(\"this platform does not support BigInt\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              value: this.toString()\n            });\n          };\n          BigNumber2.prototype.toString = function() {\n            if (arguments.length > 0) {\n              if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                  _warnedToStringRadix = true;\n                  logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n              } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n              } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n              }\n            }\n            return toBN(this).toString(10);\n          };\n          BigNumber2.prototype.toHexString = function() {\n            return this._hex;\n          };\n          BigNumber2.prototype.toJSON = function(key) {\n            return { type: \"BigNumber\", hex: this.toHexString() };\n          };\n          BigNumber2.from = function(value) {\n            if (value instanceof BigNumber2) {\n              return value;\n            }\n            if (typeof value === \"string\") {\n              if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber2(_constructorGuard, toHex(value));\n              }\n              if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber2(_constructorGuard, toHex(new BN(value)));\n              }\n              return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n            }\n            if (typeof value === \"number\") {\n              if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n              }\n              if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n              }\n              return BigNumber2.from(String(value));\n            }\n            var anyValue = value;\n            if (typeof anyValue === \"bigint\") {\n              return BigNumber2.from(anyValue.toString());\n            }\n            if ((0, bytes_1.isBytes)(anyValue)) {\n              return BigNumber2.from((0, bytes_1.hexlify)(anyValue));\n            }\n            if (anyValue) {\n              if (anyValue.toHexString) {\n                var hex = anyValue.toHexString();\n                if (typeof hex === \"string\") {\n                  return BigNumber2.from(hex);\n                }\n              } else {\n                var hex = anyValue._hex;\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                  hex = anyValue.hex;\n                }\n                if (typeof hex === \"string\") {\n                  if ((0, bytes_1.isHexString)(hex) || hex[0] === \"-\" && (0, bytes_1.isHexString)(hex.substring(1))) {\n                    return BigNumber2.from(hex);\n                  }\n                }\n              }\n            }\n            return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n          };\n          BigNumber2.isBigNumber = function(value) {\n            return !!(value && value._isBigNumber);\n          };\n          return BigNumber2;\n        }()\n      );\n      exports3.BigNumber = BigNumber;\n      function toHex(value) {\n        if (typeof value !== \"string\") {\n          return toHex(value.toString(16));\n        }\n        if (value[0] === \"-\") {\n          value = value.substring(1);\n          if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n          }\n          value = toHex(value);\n          if (value === \"0x00\") {\n            return value;\n          }\n          return \"-\" + value;\n        }\n        if (value.substring(0, 2) !== \"0x\") {\n          value = \"0x\" + value;\n        }\n        if (value === \"0x\") {\n          return \"0x00\";\n        }\n        if (value.length % 2) {\n          value = \"0x0\" + value.substring(2);\n        }\n        while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n          value = \"0x\" + value.substring(4);\n        }\n        return value;\n      }\n      function toBigNumber(value) {\n        return BigNumber.from(toHex(value));\n      }\n      function toBN(value) {\n        var hex = BigNumber.from(value).toHexString();\n        if (hex[0] === \"-\") {\n          return new BN(\"-\" + hex.substring(3), 16);\n        }\n        return new BN(hex.substring(2), 16);\n      }\n      function throwFault(fault, operation, value) {\n        var params = { fault, operation };\n        if (value != null) {\n          params.value = value;\n        }\n        return logger.throwError(fault, logger_1.Logger.errors.NUMERIC_FAULT, params);\n      }\n      function _base36To16(value) {\n        return new BN(value, 36).toString(16);\n      }\n      exports3._base36To16 = _base36To16;\n      function _base16To36(value) {\n        return new BN(value, 16).toString(36);\n      }\n      exports3._base16To36 = _base16To36;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/fixednumber.js\n  var require_fixednumber = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/fixednumber.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.FixedNumber = exports3.FixedFormat = exports3.parseFixed = exports3.formatFixed = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version3();\n      var logger = new logger_1.Logger(_version_1.version);\n      var bignumber_1 = require_bignumber();\n      var _constructorGuard = {};\n      var Zero = bignumber_1.BigNumber.from(0);\n      var NegativeOne = bignumber_1.BigNumber.from(-1);\n      function throwFault(message, fault, operation, value) {\n        var params = { fault, operation };\n        if (value !== void 0) {\n          params.value = value;\n        }\n        return logger.throwError(message, logger_1.Logger.errors.NUMERIC_FAULT, params);\n      }\n      var zeros2 = \"0\";\n      while (zeros2.length < 256) {\n        zeros2 += zeros2;\n      }\n      function getMultiplier(decimals) {\n        if (typeof decimals !== \"number\") {\n          try {\n            decimals = bignumber_1.BigNumber.from(decimals).toNumber();\n          } catch (e) {\n          }\n        }\n        if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n          return \"1\" + zeros2.substring(0, decimals);\n        }\n        return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n      }\n      function formatFixed(value, decimals) {\n        if (decimals == null) {\n          decimals = 0;\n        }\n        var multiplier = getMultiplier(decimals);\n        value = bignumber_1.BigNumber.from(value);\n        var negative = value.lt(Zero);\n        if (negative) {\n          value = value.mul(NegativeOne);\n        }\n        var fraction = value.mod(multiplier).toString();\n        while (fraction.length < multiplier.length - 1) {\n          fraction = \"0\" + fraction;\n        }\n        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n        var whole = value.div(multiplier).toString();\n        if (multiplier.length === 1) {\n          value = whole;\n        } else {\n          value = whole + \".\" + fraction;\n        }\n        if (negative) {\n          value = \"-\" + value;\n        }\n        return value;\n      }\n      exports3.formatFixed = formatFixed;\n      function parseFixed(value, decimals) {\n        if (decimals == null) {\n          decimals = 0;\n        }\n        var multiplier = getMultiplier(decimals);\n        if (typeof value !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n          logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n        }\n        var negative = value.substring(0, 1) === \"-\";\n        if (negative) {\n          value = value.substring(1);\n        }\n        if (value === \".\") {\n          logger.throwArgumentError(\"missing value\", \"value\", value);\n        }\n        var comps = value.split(\".\");\n        if (comps.length > 2) {\n          logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n        }\n        var whole = comps[0], fraction = comps[1];\n        if (!whole) {\n          whole = \"0\";\n        }\n        if (!fraction) {\n          fraction = \"0\";\n        }\n        while (fraction[fraction.length - 1] === \"0\") {\n          fraction = fraction.substring(0, fraction.length - 1);\n        }\n        if (fraction.length > multiplier.length - 1) {\n          throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n        }\n        if (fraction === \"\") {\n          fraction = \"0\";\n        }\n        while (fraction.length < multiplier.length - 1) {\n          fraction += \"0\";\n        }\n        var wholeValue = bignumber_1.BigNumber.from(whole);\n        var fractionValue = bignumber_1.BigNumber.from(fraction);\n        var wei = wholeValue.mul(multiplier).add(fractionValue);\n        if (negative) {\n          wei = wei.mul(NegativeOne);\n        }\n        return wei;\n      }\n      exports3.parseFixed = parseFixed;\n      var FixedFormat = (\n        /** @class */\n        function() {\n          function FixedFormat2(constructorGuard, signed2, width, decimals) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n              });\n            }\n            this.signed = signed2;\n            this.width = width;\n            this.decimals = decimals;\n            this.name = (signed2 ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n            this._multiplier = getMultiplier(decimals);\n            Object.freeze(this);\n          }\n          FixedFormat2.from = function(value) {\n            if (value instanceof FixedFormat2) {\n              return value;\n            }\n            if (typeof value === \"number\") {\n              value = \"fixed128x\" + value;\n            }\n            var signed2 = true;\n            var width = 128;\n            var decimals = 18;\n            if (typeof value === \"string\") {\n              if (value === \"fixed\") {\n              } else if (value === \"ufixed\") {\n                signed2 = false;\n              } else {\n                var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                  logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed2 = match[1] !== \"u\";\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n              }\n            } else if (value) {\n              var check = function(key, type, defaultValue) {\n                if (value[key] == null) {\n                  return defaultValue;\n                }\n                if (typeof value[key] !== type) {\n                  logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n              };\n              signed2 = check(\"signed\", \"boolean\", signed2);\n              width = check(\"width\", \"number\", width);\n              decimals = check(\"decimals\", \"number\", decimals);\n            }\n            if (width % 8) {\n              logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n            }\n            if (decimals > 80) {\n              logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n            }\n            return new FixedFormat2(_constructorGuard, signed2, width, decimals);\n          };\n          return FixedFormat2;\n        }()\n      );\n      exports3.FixedFormat = FixedFormat;\n      var FixedNumber = (\n        /** @class */\n        function() {\n          function FixedNumber2(constructorGuard, hex, value, format) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n              });\n            }\n            this.format = format;\n            this._hex = hex;\n            this._value = value;\n            this._isFixedNumber = true;\n            Object.freeze(this);\n          }\n          FixedNumber2.prototype._checkFormat = function(other) {\n            if (this.format.name !== other.format.name) {\n              logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n            }\n          };\n          FixedNumber2.prototype.addUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.add(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.subUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.sub(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.mulUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.mul(b2).div(this.format._multiplier), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.divUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.mul(this.format._multiplier).div(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.floor = function() {\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            var result = FixedNumber2.from(comps[0], this.format);\n            var hasFraction = !comps[1].match(/^(0*)$/);\n            if (this.isNegative() && hasFraction) {\n              result = result.subUnsafe(ONE.toFormat(result.format));\n            }\n            return result;\n          };\n          FixedNumber2.prototype.ceiling = function() {\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            var result = FixedNumber2.from(comps[0], this.format);\n            var hasFraction = !comps[1].match(/^(0*)$/);\n            if (!this.isNegative() && hasFraction) {\n              result = result.addUnsafe(ONE.toFormat(result.format));\n            }\n            return result;\n          };\n          FixedNumber2.prototype.round = function(decimals) {\n            if (decimals == null) {\n              decimals = 0;\n            }\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            if (decimals < 0 || decimals > 80 || decimals % 1) {\n              logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n            }\n            if (comps[1].length <= decimals) {\n              return this;\n            }\n            var factor = FixedNumber2.from(\"1\" + zeros2.substring(0, decimals), this.format);\n            var bump = BUMP.toFormat(this.format);\n            return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n          };\n          FixedNumber2.prototype.isZero = function() {\n            return this._value === \"0.0\" || this._value === \"0\";\n          };\n          FixedNumber2.prototype.isNegative = function() {\n            return this._value[0] === \"-\";\n          };\n          FixedNumber2.prototype.toString = function() {\n            return this._value;\n          };\n          FixedNumber2.prototype.toHexString = function(width) {\n            if (width == null) {\n              return this._hex;\n            }\n            if (width % 8) {\n              logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n            }\n            var hex = bignumber_1.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n            return (0, bytes_1.hexZeroPad)(hex, width / 8);\n          };\n          FixedNumber2.prototype.toUnsafeFloat = function() {\n            return parseFloat(this.toString());\n          };\n          FixedNumber2.prototype.toFormat = function(format) {\n            return FixedNumber2.fromString(this._value, format);\n          };\n          FixedNumber2.fromValue = function(value, decimals, format) {\n            if (format == null && decimals != null && !(0, bignumber_1.isBigNumberish)(decimals)) {\n              format = decimals;\n              decimals = null;\n            }\n            if (decimals == null) {\n              decimals = 0;\n            }\n            if (format == null) {\n              format = \"fixed\";\n            }\n            return FixedNumber2.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n          };\n          FixedNumber2.fromString = function(value, format) {\n            if (format == null) {\n              format = \"fixed\";\n            }\n            var fixedFormat = FixedFormat.from(format);\n            var numeric = parseFixed(value, fixedFormat.decimals);\n            if (!fixedFormat.signed && numeric.lt(Zero)) {\n              throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n            }\n            var hex = null;\n            if (fixedFormat.signed) {\n              hex = numeric.toTwos(fixedFormat.width).toHexString();\n            } else {\n              hex = numeric.toHexString();\n              hex = (0, bytes_1.hexZeroPad)(hex, fixedFormat.width / 8);\n            }\n            var decimal = formatFixed(numeric, fixedFormat.decimals);\n            return new FixedNumber2(_constructorGuard, hex, decimal, fixedFormat);\n          };\n          FixedNumber2.fromBytes = function(value, format) {\n            if (format == null) {\n              format = \"fixed\";\n            }\n            var fixedFormat = FixedFormat.from(format);\n            if ((0, bytes_1.arrayify)(value).length > fixedFormat.width / 8) {\n              throw new Error(\"overflow\");\n            }\n            var numeric = bignumber_1.BigNumber.from(value);\n            if (fixedFormat.signed) {\n              numeric = numeric.fromTwos(fixedFormat.width);\n            }\n            var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n            var decimal = formatFixed(numeric, fixedFormat.decimals);\n            return new FixedNumber2(_constructorGuard, hex, decimal, fixedFormat);\n          };\n          FixedNumber2.from = function(value, format) {\n            if (typeof value === \"string\") {\n              return FixedNumber2.fromString(value, format);\n            }\n            if ((0, bytes_1.isBytes)(value)) {\n              return FixedNumber2.fromBytes(value, format);\n            }\n            try {\n              return FixedNumber2.fromValue(value, 0, format);\n            } catch (error) {\n              if (error.code !== logger_1.Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n              }\n            }\n            return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n          };\n          FixedNumber2.isFixedNumber = function(value) {\n            return !!(value && value._isFixedNumber);\n          };\n          return FixedNumber2;\n        }()\n      );\n      exports3.FixedNumber = FixedNumber;\n      var ONE = FixedNumber.from(1);\n      var BUMP = FixedNumber.from(\"0.5\");\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/index.js\n  var require_lib3 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.8.0/node_modules/@ethersproject/bignumber/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3._base36To16 = exports3._base16To36 = exports3.parseFixed = exports3.FixedNumber = exports3.FixedFormat = exports3.formatFixed = exports3.BigNumber = void 0;\n      var bignumber_1 = require_bignumber();\n      Object.defineProperty(exports3, \"BigNumber\", { enumerable: true, get: function() {\n        return bignumber_1.BigNumber;\n      } });\n      var fixednumber_1 = require_fixednumber();\n      Object.defineProperty(exports3, \"formatFixed\", { enumerable: true, get: function() {\n        return fixednumber_1.formatFixed;\n      } });\n      Object.defineProperty(exports3, \"FixedFormat\", { enumerable: true, get: function() {\n        return fixednumber_1.FixedFormat;\n      } });\n      Object.defineProperty(exports3, \"FixedNumber\", { enumerable: true, get: function() {\n        return fixednumber_1.FixedNumber;\n      } });\n      Object.defineProperty(exports3, \"parseFixed\", { enumerable: true, get: function() {\n        return fixednumber_1.parseFixed;\n      } });\n      var bignumber_2 = require_bignumber();\n      Object.defineProperty(exports3, \"_base16To36\", { enumerable: true, get: function() {\n        return bignumber_2._base16To36;\n      } });\n      Object.defineProperty(exports3, \"_base36To16\", { enumerable: true, get: function() {\n        return bignumber_2._base36To16;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+properties@5.8.0/node_modules/@ethersproject/properties/lib/_version.js\n  var require_version4 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+properties@5.8.0/node_modules/@ethersproject/properties/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"properties/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+properties@5.8.0/node_modules/@ethersproject/properties/lib/index.js\n  var require_lib4 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+properties@5.8.0/node_modules/@ethersproject/properties/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Description = exports3.deepCopy = exports3.shallowCopy = exports3.checkProperties = exports3.resolveProperties = exports3.getStatic = exports3.defineReadOnly = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version4();\n      var logger = new logger_1.Logger(_version_1.version);\n      function defineReadOnly(object2, name, value) {\n        Object.defineProperty(object2, name, {\n          enumerable: true,\n          value,\n          writable: false\n        });\n      }\n      exports3.defineReadOnly = defineReadOnly;\n      function getStatic(ctor, key) {\n        for (var i = 0; i < 32; i++) {\n          if (ctor[key]) {\n            return ctor[key];\n          }\n          if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n            break;\n          }\n          ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n        }\n        return null;\n      }\n      exports3.getStatic = getStatic;\n      function resolveProperties2(object2) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var promises, results;\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                promises = Object.keys(object2).map(function(key) {\n                  var value = object2[key];\n                  return Promise.resolve(value).then(function(v) {\n                    return { key, value: v };\n                  });\n                });\n                return [4, Promise.all(promises)];\n              case 1:\n                results = _a.sent();\n                return [2, results.reduce(function(accum, result) {\n                  accum[result.key] = result.value;\n                  return accum;\n                }, {})];\n            }\n          });\n        });\n      }\n      exports3.resolveProperties = resolveProperties2;\n      function checkProperties(object2, properties) {\n        if (!object2 || typeof object2 !== \"object\") {\n          logger.throwArgumentError(\"invalid object\", \"object\", object2);\n        }\n        Object.keys(object2).forEach(function(key) {\n          if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object2);\n          }\n        });\n      }\n      exports3.checkProperties = checkProperties;\n      function shallowCopy(object2) {\n        var result = {};\n        for (var key in object2) {\n          result[key] = object2[key];\n        }\n        return result;\n      }\n      exports3.shallowCopy = shallowCopy;\n      var opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n      function _isFrozen(object2) {\n        if (object2 === void 0 || object2 === null || opaque[typeof object2]) {\n          return true;\n        }\n        if (Array.isArray(object2) || typeof object2 === \"object\") {\n          if (!Object.isFrozen(object2)) {\n            return false;\n          }\n          var keys = Object.keys(object2);\n          for (var i = 0; i < keys.length; i++) {\n            var value = null;\n            try {\n              value = object2[keys[i]];\n            } catch (error) {\n              continue;\n            }\n            if (!_isFrozen(value)) {\n              return false;\n            }\n          }\n          return true;\n        }\n        return logger.throwArgumentError(\"Cannot deepCopy \" + typeof object2, \"object\", object2);\n      }\n      function _deepCopy(object2) {\n        if (_isFrozen(object2)) {\n          return object2;\n        }\n        if (Array.isArray(object2)) {\n          return Object.freeze(object2.map(function(item) {\n            return deepCopy2(item);\n          }));\n        }\n        if (typeof object2 === \"object\") {\n          var result = {};\n          for (var key in object2) {\n            var value = object2[key];\n            if (value === void 0) {\n              continue;\n            }\n            defineReadOnly(result, key, deepCopy2(value));\n          }\n          return result;\n        }\n        return logger.throwArgumentError(\"Cannot deepCopy \" + typeof object2, \"object\", object2);\n      }\n      function deepCopy2(object2) {\n        return _deepCopy(object2);\n      }\n      exports3.deepCopy = deepCopy2;\n      var Description = (\n        /** @class */\n        /* @__PURE__ */ function() {\n          function Description2(info) {\n            for (var key in info) {\n              this[key] = deepCopy2(info[key]);\n            }\n          }\n          return Description2;\n        }()\n      );\n      exports3.Description = Description;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/_version.js\n  var require_version5 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"abi/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/fragments.js\n  var require_fragments = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/fragments.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.ErrorFragment = exports3.FunctionFragment = exports3.ConstructorFragment = exports3.EventFragment = exports3.Fragment = exports3.ParamType = exports3.FormatTypes = void 0;\n      var bignumber_1 = require_lib3();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version5();\n      var logger = new logger_1.Logger(_version_1.version);\n      var _constructorGuard = {};\n      var ModifiersBytes = { calldata: true, memory: true, storage: true };\n      var ModifiersNest = { calldata: true, memory: true };\n      function checkModifier(type, name) {\n        if (type === \"bytes\" || type === \"string\") {\n          if (ModifiersBytes[name]) {\n            return true;\n          }\n        } else if (type === \"address\") {\n          if (name === \"payable\") {\n            return true;\n          }\n        } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n          if (ModifiersNest[name]) {\n            return true;\n          }\n        }\n        if (ModifiersBytes[name] || name === \"payable\") {\n          logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n        }\n        return false;\n      }\n      function parseParamType(param, allowIndexed) {\n        var originalParam = param;\n        function throwError2(i2) {\n          logger.throwArgumentError(\"unexpected character at position \" + i2, \"param\", param);\n        }\n        param = param.replace(/\\s/g, \" \");\n        function newNode(parent2) {\n          var node2 = { type: \"\", name: \"\", parent: parent2, state: { allowType: true } };\n          if (allowIndexed) {\n            node2.indexed = false;\n          }\n          return node2;\n        }\n        var parent = { type: \"\", name: \"\", state: { allowType: true } };\n        var node = parent;\n        for (var i = 0; i < param.length; i++) {\n          var c = param[i];\n          switch (c) {\n            case \"(\":\n              if (node.state.allowType && node.type === \"\") {\n                node.type = \"tuple\";\n              } else if (!node.state.allowParams) {\n                throwError2(i);\n              }\n              node.state.allowType = false;\n              node.type = verifyType(node.type);\n              node.components = [newNode(node)];\n              node = node.components[0];\n              break;\n            case \")\":\n              delete node.state;\n              if (node.name === \"indexed\") {\n                if (!allowIndexed) {\n                  throwError2(i);\n                }\n                node.indexed = true;\n                node.name = \"\";\n              }\n              if (checkModifier(node.type, node.name)) {\n                node.name = \"\";\n              }\n              node.type = verifyType(node.type);\n              var child = node;\n              node = node.parent;\n              if (!node) {\n                throwError2(i);\n              }\n              delete child.parent;\n              node.state.allowParams = false;\n              node.state.allowName = true;\n              node.state.allowArray = true;\n              break;\n            case \",\":\n              delete node.state;\n              if (node.name === \"indexed\") {\n                if (!allowIndexed) {\n                  throwError2(i);\n                }\n                node.indexed = true;\n                node.name = \"\";\n              }\n              if (checkModifier(node.type, node.name)) {\n                node.name = \"\";\n              }\n              node.type = verifyType(node.type);\n              var sibling = newNode(node.parent);\n              node.parent.components.push(sibling);\n              delete node.parent;\n              node = sibling;\n              break;\n            case \" \":\n              if (node.state.allowType) {\n                if (node.type !== \"\") {\n                  node.type = verifyType(node.type);\n                  delete node.state.allowType;\n                  node.state.allowName = true;\n                  node.state.allowParams = true;\n                }\n              }\n              if (node.state.allowName) {\n                if (node.name !== \"\") {\n                  if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                      throwError2(i);\n                    }\n                    if (node.indexed) {\n                      throwError2(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                  } else if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                  } else {\n                    node.state.allowName = false;\n                  }\n                }\n              }\n              break;\n            case \"[\":\n              if (!node.state.allowArray) {\n                throwError2(i);\n              }\n              node.type += c;\n              node.state.allowArray = false;\n              node.state.allowName = false;\n              node.state.readArray = true;\n              break;\n            case \"]\":\n              if (!node.state.readArray) {\n                throwError2(i);\n              }\n              node.type += c;\n              node.state.readArray = false;\n              node.state.allowArray = true;\n              node.state.allowName = true;\n              break;\n            default:\n              if (node.state.allowType) {\n                node.type += c;\n                node.state.allowParams = true;\n                node.state.allowArray = true;\n              } else if (node.state.allowName) {\n                node.name += c;\n                delete node.state.allowArray;\n              } else if (node.state.readArray) {\n                node.type += c;\n              } else {\n                throwError2(i);\n              }\n          }\n        }\n        if (node.parent) {\n          logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n        }\n        delete parent.state;\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError2(originalParam.length - 7);\n          }\n          if (node.indexed) {\n            throwError2(originalParam.length - 7);\n          }\n          node.indexed = true;\n          node.name = \"\";\n        } else if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n        parent.type = verifyType(parent.type);\n        return parent;\n      }\n      function populate2(object2, params) {\n        for (var key in params) {\n          (0, properties_1.defineReadOnly)(object2, key, params[key]);\n        }\n      }\n      exports3.FormatTypes = Object.freeze({\n        // Bare formatting, as is needed for computing a sighash of an event or function\n        sighash: \"sighash\",\n        // Human-Readable with Minimal spacing and without names (compact human-readable)\n        minimal: \"minimal\",\n        // Human-Readable with nice spacing, including all names\n        full: \"full\",\n        // JSON-format a la Solidity\n        json: \"json\"\n      });\n      var paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n      var ParamType2 = (\n        /** @class */\n        function() {\n          function ParamType3(constructorGuard, params) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"use fromString\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n              });\n            }\n            populate2(this, params);\n            var match = this.type.match(paramTypeArray);\n            if (match) {\n              populate2(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType3.fromObject({\n                  type: match[1],\n                  components: this.components\n                }),\n                baseType: \"array\"\n              });\n            } else {\n              populate2(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: this.components != null ? \"tuple\" : this.type\n              });\n            }\n            this._isParamType = true;\n            Object.freeze(this);\n          }\n          ParamType3.prototype.format = function(format) {\n            if (!format) {\n              format = exports3.FormatTypes.sighash;\n            }\n            if (!exports3.FormatTypes[format]) {\n              logger.throwArgumentError(\"invalid format type\", \"format\", format);\n            }\n            if (format === exports3.FormatTypes.json) {\n              var result_1 = {\n                type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n                name: this.name || void 0\n              };\n              if (typeof this.indexed === \"boolean\") {\n                result_1.indexed = this.indexed;\n              }\n              if (this.components) {\n                result_1.components = this.components.map(function(comp) {\n                  return JSON.parse(comp.format(format));\n                });\n              }\n              return JSON.stringify(result_1);\n            }\n            var result = \"\";\n            if (this.baseType === \"array\") {\n              result += this.arrayChildren.format(format);\n              result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n            } else {\n              if (this.baseType === \"tuple\") {\n                if (format !== exports3.FormatTypes.sighash) {\n                  result += this.type;\n                }\n                result += \"(\" + this.components.map(function(comp) {\n                  return comp.format(format);\n                }).join(format === exports3.FormatTypes.full ? \", \" : \",\") + \")\";\n              } else {\n                result += this.type;\n              }\n            }\n            if (format !== exports3.FormatTypes.sighash) {\n              if (this.indexed === true) {\n                result += \" indexed\";\n              }\n              if (format === exports3.FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n              }\n            }\n            return result;\n          };\n          ParamType3.from = function(value, allowIndexed) {\n            if (typeof value === \"string\") {\n              return ParamType3.fromString(value, allowIndexed);\n            }\n            return ParamType3.fromObject(value);\n          };\n          ParamType3.fromObject = function(value) {\n            if (ParamType3.isParamType(value)) {\n              return value;\n            }\n            return new ParamType3(_constructorGuard, {\n              name: value.name || null,\n              type: verifyType(value.type),\n              indexed: value.indexed == null ? null : !!value.indexed,\n              components: value.components ? value.components.map(ParamType3.fromObject) : null\n            });\n          };\n          ParamType3.fromString = function(value, allowIndexed) {\n            function ParamTypify(node) {\n              return ParamType3.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n              });\n            }\n            return ParamTypify(parseParamType(value, !!allowIndexed));\n          };\n          ParamType3.isParamType = function(value) {\n            return !!(value != null && value._isParamType);\n          };\n          return ParamType3;\n        }()\n      );\n      exports3.ParamType = ParamType2;\n      function parseParams(value, allowIndex) {\n        return splitNesting(value).map(function(param) {\n          return ParamType2.fromString(param, allowIndex);\n        });\n      }\n      var Fragment2 = (\n        /** @class */\n        function() {\n          function Fragment3(constructorGuard, params) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"use a static from method\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n              });\n            }\n            populate2(this, params);\n            this._isFragment = true;\n            Object.freeze(this);\n          }\n          Fragment3.from = function(value) {\n            if (Fragment3.isFragment(value)) {\n              return value;\n            }\n            if (typeof value === \"string\") {\n              return Fragment3.fromString(value);\n            }\n            return Fragment3.fromObject(value);\n          };\n          Fragment3.fromObject = function(value) {\n            if (Fragment3.isFragment(value)) {\n              return value;\n            }\n            switch (value.type) {\n              case \"function\":\n                return FunctionFragment2.fromObject(value);\n              case \"event\":\n                return EventFragment2.fromObject(value);\n              case \"constructor\":\n                return ConstructorFragment2.fromObject(value);\n              case \"error\":\n                return ErrorFragment2.fromObject(value);\n              case \"fallback\":\n              case \"receive\":\n                return null;\n            }\n            return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n          };\n          Fragment3.fromString = function(value) {\n            value = value.replace(/\\s/g, \" \");\n            value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n            value = value.trim();\n            if (value.split(\" \")[0] === \"event\") {\n              return EventFragment2.fromString(value.substring(5).trim());\n            } else if (value.split(\" \")[0] === \"function\") {\n              return FunctionFragment2.fromString(value.substring(8).trim());\n            } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n              return ConstructorFragment2.fromString(value.trim());\n            } else if (value.split(\" \")[0] === \"error\") {\n              return ErrorFragment2.fromString(value.substring(5).trim());\n            }\n            return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n          };\n          Fragment3.isFragment = function(value) {\n            return !!(value && value._isFragment);\n          };\n          return Fragment3;\n        }()\n      );\n      exports3.Fragment = Fragment2;\n      var EventFragment2 = (\n        /** @class */\n        function(_super) {\n          __extends2(EventFragment3, _super);\n          function EventFragment3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          EventFragment3.prototype.format = function(format) {\n            if (!format) {\n              format = exports3.FormatTypes.sighash;\n            }\n            if (!exports3.FormatTypes[format]) {\n              logger.throwArgumentError(\"invalid format type\", \"format\", format);\n            }\n            if (format === exports3.FormatTypes.json) {\n              return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map(function(input) {\n                  return JSON.parse(input.format(format));\n                })\n              });\n            }\n            var result = \"\";\n            if (format !== exports3.FormatTypes.sighash) {\n              result += \"event \";\n            }\n            result += this.name + \"(\" + this.inputs.map(function(input) {\n              return input.format(format);\n            }).join(format === exports3.FormatTypes.full ? \", \" : \",\") + \") \";\n            if (format !== exports3.FormatTypes.sighash) {\n              if (this.anonymous) {\n                result += \"anonymous \";\n              }\n            }\n            return result.trim();\n          };\n          EventFragment3.from = function(value) {\n            if (typeof value === \"string\") {\n              return EventFragment3.fromString(value);\n            }\n            return EventFragment3.fromObject(value);\n          };\n          EventFragment3.fromObject = function(value) {\n            if (EventFragment3.isEventFragment(value)) {\n              return value;\n            }\n            if (value.type !== \"event\") {\n              logger.throwArgumentError(\"invalid event object\", \"value\", value);\n            }\n            var params = {\n              name: verifyIdentifier(value.name),\n              anonymous: value.anonymous,\n              inputs: value.inputs ? value.inputs.map(ParamType2.fromObject) : [],\n              type: \"event\"\n            };\n            return new EventFragment3(_constructorGuard, params);\n          };\n          EventFragment3.fromString = function(value) {\n            var match = value.match(regexParen);\n            if (!match) {\n              logger.throwArgumentError(\"invalid event string\", \"value\", value);\n            }\n            var anonymous = false;\n            match[3].split(\" \").forEach(function(modifier) {\n              switch (modifier.trim()) {\n                case \"anonymous\":\n                  anonymous = true;\n                  break;\n                case \"\":\n                  break;\n                default:\n                  logger.warn(\"unknown modifier: \" + modifier);\n              }\n            });\n            return EventFragment3.fromObject({\n              name: match[1].trim(),\n              anonymous,\n              inputs: parseParams(match[2], true),\n              type: \"event\"\n            });\n          };\n          EventFragment3.isEventFragment = function(value) {\n            return value && value._isFragment && value.type === \"event\";\n          };\n          return EventFragment3;\n        }(Fragment2)\n      );\n      exports3.EventFragment = EventFragment2;\n      function parseGas(value, params) {\n        params.gas = null;\n        var comps = value.split(\"@\");\n        if (comps.length !== 1) {\n          if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n          }\n          if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n          }\n          params.gas = bignumber_1.BigNumber.from(comps[1]);\n          return comps[0];\n        }\n        return value;\n      }\n      function parseModifiers(value, params) {\n        params.constant = false;\n        params.payable = false;\n        params.stateMutability = \"nonpayable\";\n        value.split(\" \").forEach(function(modifier) {\n          switch (modifier.trim()) {\n            case \"constant\":\n              params.constant = true;\n              break;\n            case \"payable\":\n              params.payable = true;\n              params.stateMutability = \"payable\";\n              break;\n            case \"nonpayable\":\n              params.payable = false;\n              params.stateMutability = \"nonpayable\";\n              break;\n            case \"pure\":\n              params.constant = true;\n              params.stateMutability = \"pure\";\n              break;\n            case \"view\":\n              params.constant = true;\n              params.stateMutability = \"view\";\n              break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n              break;\n            default:\n              console.log(\"unknown modifier: \" + modifier);\n          }\n        });\n      }\n      function verifyState(value) {\n        var result = {\n          constant: false,\n          payable: true,\n          stateMutability: \"payable\"\n        };\n        if (value.stateMutability != null) {\n          result.stateMutability = value.stateMutability;\n          result.constant = result.stateMutability === \"view\" || result.stateMutability === \"pure\";\n          if (value.constant != null) {\n            if (!!value.constant !== result.constant) {\n              logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n          }\n          result.payable = result.stateMutability === \"payable\";\n          if (value.payable != null) {\n            if (!!value.payable !== result.payable) {\n              logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n          }\n        } else if (value.payable != null) {\n          result.payable = !!value.payable;\n          if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n          }\n          result.constant = !!value.constant;\n          if (result.constant) {\n            result.stateMutability = \"view\";\n          } else {\n            result.stateMutability = result.payable ? \"payable\" : \"nonpayable\";\n          }\n          if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n          }\n        } else if (value.constant != null) {\n          result.constant = !!value.constant;\n          result.payable = !result.constant;\n          result.stateMutability = result.constant ? \"view\" : \"payable\";\n        } else if (value.type !== \"constructor\") {\n          logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        return result;\n      }\n      var ConstructorFragment2 = (\n        /** @class */\n        function(_super) {\n          __extends2(ConstructorFragment3, _super);\n          function ConstructorFragment3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          ConstructorFragment3.prototype.format = function(format) {\n            if (!format) {\n              format = exports3.FormatTypes.sighash;\n            }\n            if (!exports3.FormatTypes[format]) {\n              logger.throwArgumentError(\"invalid format type\", \"format\", format);\n            }\n            if (format === exports3.FormatTypes.json) {\n              return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : void 0,\n                payable: this.payable,\n                gas: this.gas ? this.gas.toNumber() : void 0,\n                inputs: this.inputs.map(function(input) {\n                  return JSON.parse(input.format(format));\n                })\n              });\n            }\n            if (format === exports3.FormatTypes.sighash) {\n              logger.throwError(\"cannot format a constructor for sighash\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n              });\n            }\n            var result = \"constructor(\" + this.inputs.map(function(input) {\n              return input.format(format);\n            }).join(format === exports3.FormatTypes.full ? \", \" : \",\") + \") \";\n            if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n              result += this.stateMutability + \" \";\n            }\n            return result.trim();\n          };\n          ConstructorFragment3.from = function(value) {\n            if (typeof value === \"string\") {\n              return ConstructorFragment3.fromString(value);\n            }\n            return ConstructorFragment3.fromObject(value);\n          };\n          ConstructorFragment3.fromObject = function(value) {\n            if (ConstructorFragment3.isConstructorFragment(value)) {\n              return value;\n            }\n            if (value.type !== \"constructor\") {\n              logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n            }\n            var state = verifyState(value);\n            if (state.constant) {\n              logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n            }\n            var params = {\n              name: null,\n              type: value.type,\n              inputs: value.inputs ? value.inputs.map(ParamType2.fromObject) : [],\n              payable: state.payable,\n              stateMutability: state.stateMutability,\n              gas: value.gas ? bignumber_1.BigNumber.from(value.gas) : null\n            };\n            return new ConstructorFragment3(_constructorGuard, params);\n          };\n          ConstructorFragment3.fromString = function(value) {\n            var params = { type: \"constructor\" };\n            value = parseGas(value, params);\n            var parens = value.match(regexParen);\n            if (!parens || parens[1].trim() !== \"constructor\") {\n              logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n            }\n            params.inputs = parseParams(parens[2].trim(), false);\n            parseModifiers(parens[3].trim(), params);\n            return ConstructorFragment3.fromObject(params);\n          };\n          ConstructorFragment3.isConstructorFragment = function(value) {\n            return value && value._isFragment && value.type === \"constructor\";\n          };\n          return ConstructorFragment3;\n        }(Fragment2)\n      );\n      exports3.ConstructorFragment = ConstructorFragment2;\n      var FunctionFragment2 = (\n        /** @class */\n        function(_super) {\n          __extends2(FunctionFragment3, _super);\n          function FunctionFragment3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          FunctionFragment3.prototype.format = function(format) {\n            if (!format) {\n              format = exports3.FormatTypes.sighash;\n            }\n            if (!exports3.FormatTypes[format]) {\n              logger.throwArgumentError(\"invalid format type\", \"format\", format);\n            }\n            if (format === exports3.FormatTypes.json) {\n              return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : void 0,\n                payable: this.payable,\n                gas: this.gas ? this.gas.toNumber() : void 0,\n                inputs: this.inputs.map(function(input) {\n                  return JSON.parse(input.format(format));\n                }),\n                outputs: this.outputs.map(function(output2) {\n                  return JSON.parse(output2.format(format));\n                })\n              });\n            }\n            var result = \"\";\n            if (format !== exports3.FormatTypes.sighash) {\n              result += \"function \";\n            }\n            result += this.name + \"(\" + this.inputs.map(function(input) {\n              return input.format(format);\n            }).join(format === exports3.FormatTypes.full ? \", \" : \",\") + \") \";\n            if (format !== exports3.FormatTypes.sighash) {\n              if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                  result += this.stateMutability + \" \";\n                }\n              } else if (this.constant) {\n                result += \"view \";\n              }\n              if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(function(output2) {\n                  return output2.format(format);\n                }).join(\", \") + \") \";\n              }\n              if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n              }\n            }\n            return result.trim();\n          };\n          FunctionFragment3.from = function(value) {\n            if (typeof value === \"string\") {\n              return FunctionFragment3.fromString(value);\n            }\n            return FunctionFragment3.fromObject(value);\n          };\n          FunctionFragment3.fromObject = function(value) {\n            if (FunctionFragment3.isFunctionFragment(value)) {\n              return value;\n            }\n            if (value.type !== \"function\") {\n              logger.throwArgumentError(\"invalid function object\", \"value\", value);\n            }\n            var state = verifyState(value);\n            var params = {\n              type: value.type,\n              name: verifyIdentifier(value.name),\n              constant: state.constant,\n              inputs: value.inputs ? value.inputs.map(ParamType2.fromObject) : [],\n              outputs: value.outputs ? value.outputs.map(ParamType2.fromObject) : [],\n              payable: state.payable,\n              stateMutability: state.stateMutability,\n              gas: value.gas ? bignumber_1.BigNumber.from(value.gas) : null\n            };\n            return new FunctionFragment3(_constructorGuard, params);\n          };\n          FunctionFragment3.fromString = function(value) {\n            var params = { type: \"function\" };\n            value = parseGas(value, params);\n            var comps = value.split(\" returns \");\n            if (comps.length > 2) {\n              logger.throwArgumentError(\"invalid function string\", \"value\", value);\n            }\n            var parens = comps[0].match(regexParen);\n            if (!parens) {\n              logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n            }\n            params.name = parens[1].trim();\n            if (params.name) {\n              verifyIdentifier(params.name);\n            }\n            params.inputs = parseParams(parens[2], false);\n            parseModifiers(parens[3].trim(), params);\n            if (comps.length > 1) {\n              var returns = comps[1].match(regexParen);\n              if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n              }\n              params.outputs = parseParams(returns[2], false);\n            } else {\n              params.outputs = [];\n            }\n            return FunctionFragment3.fromObject(params);\n          };\n          FunctionFragment3.isFunctionFragment = function(value) {\n            return value && value._isFragment && value.type === \"function\";\n          };\n          return FunctionFragment3;\n        }(ConstructorFragment2)\n      );\n      exports3.FunctionFragment = FunctionFragment2;\n      function checkForbidden(fragment) {\n        var sig = fragment.format();\n        if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n          logger.throwArgumentError(\"cannot specify user defined \" + sig + \" error\", \"fragment\", fragment);\n        }\n        return fragment;\n      }\n      var ErrorFragment2 = (\n        /** @class */\n        function(_super) {\n          __extends2(ErrorFragment3, _super);\n          function ErrorFragment3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          ErrorFragment3.prototype.format = function(format) {\n            if (!format) {\n              format = exports3.FormatTypes.sighash;\n            }\n            if (!exports3.FormatTypes[format]) {\n              logger.throwArgumentError(\"invalid format type\", \"format\", format);\n            }\n            if (format === exports3.FormatTypes.json) {\n              return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map(function(input) {\n                  return JSON.parse(input.format(format));\n                })\n              });\n            }\n            var result = \"\";\n            if (format !== exports3.FormatTypes.sighash) {\n              result += \"error \";\n            }\n            result += this.name + \"(\" + this.inputs.map(function(input) {\n              return input.format(format);\n            }).join(format === exports3.FormatTypes.full ? \", \" : \",\") + \") \";\n            return result.trim();\n          };\n          ErrorFragment3.from = function(value) {\n            if (typeof value === \"string\") {\n              return ErrorFragment3.fromString(value);\n            }\n            return ErrorFragment3.fromObject(value);\n          };\n          ErrorFragment3.fromObject = function(value) {\n            if (ErrorFragment3.isErrorFragment(value)) {\n              return value;\n            }\n            if (value.type !== \"error\") {\n              logger.throwArgumentError(\"invalid error object\", \"value\", value);\n            }\n            var params = {\n              type: value.type,\n              name: verifyIdentifier(value.name),\n              inputs: value.inputs ? value.inputs.map(ParamType2.fromObject) : []\n            };\n            return checkForbidden(new ErrorFragment3(_constructorGuard, params));\n          };\n          ErrorFragment3.fromString = function(value) {\n            var params = { type: \"error\" };\n            var parens = value.match(regexParen);\n            if (!parens) {\n              logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n            }\n            params.name = parens[1].trim();\n            if (params.name) {\n              verifyIdentifier(params.name);\n            }\n            params.inputs = parseParams(parens[2], false);\n            return checkForbidden(ErrorFragment3.fromObject(params));\n          };\n          ErrorFragment3.isErrorFragment = function(value) {\n            return value && value._isFragment && value.type === \"error\";\n          };\n          return ErrorFragment3;\n        }(Fragment2)\n      );\n      exports3.ErrorFragment = ErrorFragment2;\n      function verifyType(type) {\n        if (type.match(/^uint($|[^1-9])/)) {\n          type = \"uint256\" + type.substring(4);\n        } else if (type.match(/^int($|[^1-9])/)) {\n          type = \"int256\" + type.substring(3);\n        }\n        return type;\n      }\n      var regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\n      function verifyIdentifier(value) {\n        if (!value || !value.match(regexIdentifier)) {\n          logger.throwArgumentError('invalid identifier \"' + value + '\"', \"value\", value);\n        }\n        return value;\n      }\n      var regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n      function splitNesting(value) {\n        value = value.trim();\n        var result = [];\n        var accum = \"\";\n        var depth = 0;\n        for (var offset = 0; offset < value.length; offset++) {\n          var c = value[offset];\n          if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n          } else {\n            accum += c;\n            if (c === \"(\") {\n              depth++;\n            } else if (c === \")\") {\n              depth--;\n              if (depth === -1) {\n                logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n              }\n            }\n          }\n        }\n        if (accum) {\n          result.push(accum);\n        }\n        return result;\n      }\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/abstract-coder.js\n  var require_abstract_coder = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/abstract-coder.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Reader = exports3.Writer = exports3.Coder = exports3.checkResultErrors = void 0;\n      var bytes_1 = require_lib2();\n      var bignumber_1 = require_lib3();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version5();\n      var logger = new logger_1.Logger(_version_1.version);\n      function checkResultErrors2(result) {\n        var errors = [];\n        var checkErrors = function(path, object2) {\n          if (!Array.isArray(object2)) {\n            return;\n          }\n          for (var key in object2) {\n            var childPath = path.slice();\n            childPath.push(key);\n            try {\n              checkErrors(childPath, object2[key]);\n            } catch (error) {\n              errors.push({ path: childPath, error });\n            }\n          }\n        };\n        checkErrors([], result);\n        return errors;\n      }\n      exports3.checkResultErrors = checkResultErrors2;\n      var Coder2 = (\n        /** @class */\n        function() {\n          function Coder3(name, type, localName, dynamic) {\n            this.name = name;\n            this.type = type;\n            this.localName = localName;\n            this.dynamic = dynamic;\n          }\n          Coder3.prototype._throwError = function(message, value) {\n            logger.throwArgumentError(message, this.localName, value);\n          };\n          return Coder3;\n        }()\n      );\n      exports3.Coder = Coder2;\n      var Writer2 = (\n        /** @class */\n        function() {\n          function Writer3(wordSize) {\n            (0, properties_1.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n            this._data = [];\n            this._dataLength = 0;\n            this._padding = new Uint8Array(wordSize);\n          }\n          Object.defineProperty(Writer3.prototype, \"data\", {\n            get: function() {\n              return (0, bytes_1.hexConcat)(this._data);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Writer3.prototype, \"length\", {\n            get: function() {\n              return this._dataLength;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Writer3.prototype._writeData = function(data) {\n            this._data.push(data);\n            this._dataLength += data.length;\n            return data.length;\n          };\n          Writer3.prototype.appendWriter = function(writer) {\n            return this._writeData((0, bytes_1.concat)(writer._data));\n          };\n          Writer3.prototype.writeBytes = function(value) {\n            var bytes2 = (0, bytes_1.arrayify)(value);\n            var paddingOffset = bytes2.length % this.wordSize;\n            if (paddingOffset) {\n              bytes2 = (0, bytes_1.concat)([bytes2, this._padding.slice(paddingOffset)]);\n            }\n            return this._writeData(bytes2);\n          };\n          Writer3.prototype._getValue = function(value) {\n            var bytes2 = (0, bytes_1.arrayify)(bignumber_1.BigNumber.from(value));\n            if (bytes2.length > this.wordSize) {\n              logger.throwError(\"value out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes2.length\n              });\n            }\n            if (bytes2.length % this.wordSize) {\n              bytes2 = (0, bytes_1.concat)([this._padding.slice(bytes2.length % this.wordSize), bytes2]);\n            }\n            return bytes2;\n          };\n          Writer3.prototype.writeValue = function(value) {\n            return this._writeData(this._getValue(value));\n          };\n          Writer3.prototype.writeUpdatableValue = function() {\n            var _this = this;\n            var offset = this._data.length;\n            this._data.push(this._padding);\n            this._dataLength += this.wordSize;\n            return function(value) {\n              _this._data[offset] = _this._getValue(value);\n            };\n          };\n          return Writer3;\n        }()\n      );\n      exports3.Writer = Writer2;\n      var Reader2 = (\n        /** @class */\n        function() {\n          function Reader3(data, wordSize, coerceFunc, allowLoose) {\n            (0, properties_1.defineReadOnly)(this, \"_data\", (0, bytes_1.arrayify)(data));\n            (0, properties_1.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n            (0, properties_1.defineReadOnly)(this, \"_coerceFunc\", coerceFunc);\n            (0, properties_1.defineReadOnly)(this, \"allowLoose\", allowLoose);\n            this._offset = 0;\n          }\n          Object.defineProperty(Reader3.prototype, \"data\", {\n            get: function() {\n              return (0, bytes_1.hexlify)(this._data);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Reader3.prototype, \"consumed\", {\n            get: function() {\n              return this._offset;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Reader3.coerce = function(name, value) {\n            var match = name.match(\"^u?int([0-9]+)$\");\n            if (match && parseInt(match[1]) <= 48) {\n              value = value.toNumber();\n            }\n            return value;\n          };\n          Reader3.prototype.coerce = function(name, value) {\n            if (this._coerceFunc) {\n              return this._coerceFunc(name, value);\n            }\n            return Reader3.coerce(name, value);\n          };\n          Reader3.prototype._peekBytes = function(offset, length, loose) {\n            var alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n            if (this._offset + alignedLength > this._data.length) {\n              if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n              } else {\n                logger.throwError(\"data out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n                  length: this._data.length,\n                  offset: this._offset + alignedLength\n                });\n              }\n            }\n            return this._data.slice(this._offset, this._offset + alignedLength);\n          };\n          Reader3.prototype.subReader = function(offset) {\n            return new Reader3(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n          };\n          Reader3.prototype.readBytes = function(length, loose) {\n            var bytes2 = this._peekBytes(0, length, !!loose);\n            this._offset += bytes2.length;\n            return bytes2.slice(0, length);\n          };\n          Reader3.prototype.readValue = function() {\n            return bignumber_1.BigNumber.from(this.readBytes(this.wordSize));\n          };\n          return Reader3;\n        }()\n      );\n      exports3.Reader = Reader2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/js-sha3@0.8.0/node_modules/js-sha3/src/sha3.js\n  var require_sha3 = __commonJS({\n    \"../../../node_modules/.pnpm/js-sha3@0.8.0/node_modules/js-sha3/src/sha3.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function() {\n        \"use strict\";\n        var INPUT_ERROR = \"input is invalid type\";\n        var FINALIZE_ERROR = \"finalize already called\";\n        var WINDOW = typeof window === \"object\";\n        var root = WINDOW ? window : {};\n        if (root.JS_SHA3_NO_WINDOW) {\n          WINDOW = false;\n        }\n        var WEB_WORKER = !WINDOW && typeof self === \"object\";\n        var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process_exports === \"object\" && process_exports.versions && process_exports.versions.node;\n        if (NODE_JS) {\n          root = global;\n        } else if (WEB_WORKER) {\n          root = self;\n        }\n        var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === \"object\" && module.exports;\n        var AMD = typeof define === \"function\" && define.amd;\n        var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== \"undefined\";\n        var HEX_CHARS = \"0123456789abcdef\".split(\"\");\n        var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n        var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n        var KECCAK_PADDING = [1, 256, 65536, 16777216];\n        var PADDING = [6, 1536, 393216, 100663296];\n        var SHIFT = [0, 8, 16, 24];\n        var RC = [\n          1,\n          0,\n          32898,\n          0,\n          32906,\n          2147483648,\n          2147516416,\n          2147483648,\n          32907,\n          0,\n          2147483649,\n          0,\n          2147516545,\n          2147483648,\n          32777,\n          2147483648,\n          138,\n          0,\n          136,\n          0,\n          2147516425,\n          0,\n          2147483658,\n          0,\n          2147516555,\n          0,\n          139,\n          2147483648,\n          32905,\n          2147483648,\n          32771,\n          2147483648,\n          32770,\n          2147483648,\n          128,\n          2147483648,\n          32778,\n          0,\n          2147483658,\n          2147483648,\n          2147516545,\n          2147483648,\n          32896,\n          2147483648,\n          2147483649,\n          0,\n          2147516424,\n          2147483648\n        ];\n        var BITS = [224, 256, 384, 512];\n        var SHAKE_BITS = [128, 256];\n        var OUTPUT_TYPES = [\"hex\", \"buffer\", \"arrayBuffer\", \"array\", \"digest\"];\n        var CSHAKE_BYTEPAD = {\n          \"128\": 168,\n          \"256\": 136\n        };\n        if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n          Array.isArray = function(obj) {\n            return Object.prototype.toString.call(obj) === \"[object Array]\";\n          };\n        }\n        if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n          ArrayBuffer.isView = function(obj) {\n            return typeof obj === \"object\" && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n          };\n        }\n        var createOutputMethod = function(bits2, padding2, outputType) {\n          return function(message) {\n            return new Keccak2(bits2, padding2, bits2).update(message)[outputType]();\n          };\n        };\n        var createShakeOutputMethod = function(bits2, padding2, outputType) {\n          return function(message, outputBits) {\n            return new Keccak2(bits2, padding2, outputBits).update(message)[outputType]();\n          };\n        };\n        var createCshakeOutputMethod = function(bits2, padding2, outputType) {\n          return function(message, outputBits, n2, s) {\n            return methods[\"cshake\" + bits2].update(message, outputBits, n2, s)[outputType]();\n          };\n        };\n        var createKmacOutputMethod = function(bits2, padding2, outputType) {\n          return function(key, message, outputBits, s) {\n            return methods[\"kmac\" + bits2].update(key, message, outputBits, s)[outputType]();\n          };\n        };\n        var createOutputMethods = function(method, createMethod2, bits2, padding2) {\n          for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {\n            var type = OUTPUT_TYPES[i2];\n            method[type] = createMethod2(bits2, padding2, type);\n          }\n          return method;\n        };\n        var createMethod = function(bits2, padding2) {\n          var method = createOutputMethod(bits2, padding2, \"hex\");\n          method.create = function() {\n            return new Keccak2(bits2, padding2, bits2);\n          };\n          method.update = function(message) {\n            return method.create().update(message);\n          };\n          return createOutputMethods(method, createOutputMethod, bits2, padding2);\n        };\n        var createShakeMethod = function(bits2, padding2) {\n          var method = createShakeOutputMethod(bits2, padding2, \"hex\");\n          method.create = function(outputBits) {\n            return new Keccak2(bits2, padding2, outputBits);\n          };\n          method.update = function(message, outputBits) {\n            return method.create(outputBits).update(message);\n          };\n          return createOutputMethods(method, createShakeOutputMethod, bits2, padding2);\n        };\n        var createCshakeMethod = function(bits2, padding2) {\n          var w = CSHAKE_BYTEPAD[bits2];\n          var method = createCshakeOutputMethod(bits2, padding2, \"hex\");\n          method.create = function(outputBits, n2, s) {\n            if (!n2 && !s) {\n              return methods[\"shake\" + bits2].create(outputBits);\n            } else {\n              return new Keccak2(bits2, padding2, outputBits).bytepad([n2, s], w);\n            }\n          };\n          method.update = function(message, outputBits, n2, s) {\n            return method.create(outputBits, n2, s).update(message);\n          };\n          return createOutputMethods(method, createCshakeOutputMethod, bits2, padding2);\n        };\n        var createKmacMethod = function(bits2, padding2) {\n          var w = CSHAKE_BYTEPAD[bits2];\n          var method = createKmacOutputMethod(bits2, padding2, \"hex\");\n          method.create = function(key, outputBits, s) {\n            return new Kmac(bits2, padding2, outputBits).bytepad([\"KMAC\", s], w).bytepad([key], w);\n          };\n          method.update = function(key, message, outputBits, s) {\n            return method.create(key, outputBits, s).update(message);\n          };\n          return createOutputMethods(method, createKmacOutputMethod, bits2, padding2);\n        };\n        var algorithms = [\n          { name: \"keccak\", padding: KECCAK_PADDING, bits: BITS, createMethod },\n          { name: \"sha3\", padding: PADDING, bits: BITS, createMethod },\n          { name: \"shake\", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n          { name: \"cshake\", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n          { name: \"kmac\", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n        ];\n        var methods = {}, methodNames = [];\n        for (var i = 0; i < algorithms.length; ++i) {\n          var algorithm = algorithms[i];\n          var bits = algorithm.bits;\n          for (var j = 0; j < bits.length; ++j) {\n            var methodName = algorithm.name + \"_\" + bits[j];\n            methodNames.push(methodName);\n            methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n            if (algorithm.name !== \"sha3\") {\n              var newMethodName = algorithm.name + bits[j];\n              methodNames.push(newMethodName);\n              methods[newMethodName] = methods[methodName];\n            }\n          }\n        }\n        function Keccak2(bits2, padding2, outputBits) {\n          this.blocks = [];\n          this.s = [];\n          this.padding = padding2;\n          this.outputBits = outputBits;\n          this.reset = true;\n          this.finalized = false;\n          this.block = 0;\n          this.start = 0;\n          this.blockCount = 1600 - (bits2 << 1) >> 5;\n          this.byteCount = this.blockCount << 2;\n          this.outputBlocks = outputBits >> 5;\n          this.extraBytes = (outputBits & 31) >> 3;\n          for (var i2 = 0; i2 < 50; ++i2) {\n            this.s[i2] = 0;\n          }\n        }\n        Keccak2.prototype.update = function(message) {\n          if (this.finalized) {\n            throw new Error(FINALIZE_ERROR);\n          }\n          var notString, type = typeof message;\n          if (type !== \"string\") {\n            if (type === \"object\") {\n              if (message === null) {\n                throw new Error(INPUT_ERROR);\n              } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n              } else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                  throw new Error(INPUT_ERROR);\n                }\n              }\n            } else {\n              throw new Error(INPUT_ERROR);\n            }\n            notString = true;\n          }\n          var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s, i2, code;\n          while (index < length) {\n            if (this.reset) {\n              this.reset = false;\n              blocks[0] = this.block;\n              for (i2 = 1; i2 < blockCount + 1; ++i2) {\n                blocks[i2] = 0;\n              }\n            }\n            if (notString) {\n              for (i2 = this.start; index < length && i2 < byteCount; ++index) {\n                blocks[i2 >> 2] |= message[index] << SHIFT[i2++ & 3];\n              }\n            } else {\n              for (i2 = this.start; index < length && i2 < byteCount; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 128) {\n                  blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];\n                } else if (code < 2048) {\n                  blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];\n                } else if (code < 55296 || code >= 57344) {\n                  blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];\n                } else {\n                  code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);\n                  blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];\n                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];\n                }\n              }\n            }\n            this.lastByteIndex = i2;\n            if (i2 >= byteCount) {\n              this.start = i2 - byteCount;\n              this.block = blocks[blockCount];\n              for (i2 = 0; i2 < blockCount; ++i2) {\n                s[i2] ^= blocks[i2];\n              }\n              f(s);\n              this.reset = true;\n            } else {\n              this.start = i2;\n            }\n          }\n          return this;\n        };\n        Keccak2.prototype.encode = function(x, right) {\n          var o = x & 255, n2 = 1;\n          var bytes2 = [o];\n          x = x >> 8;\n          o = x & 255;\n          while (o > 0) {\n            bytes2.unshift(o);\n            x = x >> 8;\n            o = x & 255;\n            ++n2;\n          }\n          if (right) {\n            bytes2.push(n2);\n          } else {\n            bytes2.unshift(n2);\n          }\n          this.update(bytes2);\n          return bytes2.length;\n        };\n        Keccak2.prototype.encodeString = function(str) {\n          var notString, type = typeof str;\n          if (type !== \"string\") {\n            if (type === \"object\") {\n              if (str === null) {\n                throw new Error(INPUT_ERROR);\n              } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n                str = new Uint8Array(str);\n              } else if (!Array.isArray(str)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                  throw new Error(INPUT_ERROR);\n                }\n              }\n            } else {\n              throw new Error(INPUT_ERROR);\n            }\n            notString = true;\n          }\n          var bytes2 = 0, length = str.length;\n          if (notString) {\n            bytes2 = length;\n          } else {\n            for (var i2 = 0; i2 < str.length; ++i2) {\n              var code = str.charCodeAt(i2);\n              if (code < 128) {\n                bytes2 += 1;\n              } else if (code < 2048) {\n                bytes2 += 2;\n              } else if (code < 55296 || code >= 57344) {\n                bytes2 += 3;\n              } else {\n                code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);\n                bytes2 += 4;\n              }\n            }\n          }\n          bytes2 += this.encode(bytes2 * 8);\n          this.update(str);\n          return bytes2;\n        };\n        Keccak2.prototype.bytepad = function(strs, w) {\n          var bytes2 = this.encode(w);\n          for (var i2 = 0; i2 < strs.length; ++i2) {\n            bytes2 += this.encodeString(strs[i2]);\n          }\n          var paddingBytes = w - bytes2 % w;\n          var zeros2 = [];\n          zeros2.length = paddingBytes;\n          this.update(zeros2);\n          return this;\n        };\n        Keccak2.prototype.finalize = function() {\n          if (this.finalized) {\n            return;\n          }\n          this.finalized = true;\n          var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n          blocks[i2 >> 2] |= this.padding[i2 & 3];\n          if (this.lastByteIndex === this.byteCount) {\n            blocks[0] = blocks[blockCount];\n            for (i2 = 1; i2 < blockCount + 1; ++i2) {\n              blocks[i2] = 0;\n            }\n          }\n          blocks[blockCount - 1] |= 2147483648;\n          for (i2 = 0; i2 < blockCount; ++i2) {\n            s[i2] ^= blocks[i2];\n          }\n          f(s);\n        };\n        Keccak2.prototype.toString = Keccak2.prototype.hex = function() {\n          this.finalize();\n          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;\n          var hex = \"\", block;\n          while (j2 < outputBlocks) {\n            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {\n              block = s[i2];\n              hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];\n            }\n            if (j2 % blockCount === 0) {\n              f(s);\n              i2 = 0;\n            }\n          }\n          if (extraBytes) {\n            block = s[i2];\n            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];\n            if (extraBytes > 1) {\n              hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];\n            }\n            if (extraBytes > 2) {\n              hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];\n            }\n          }\n          return hex;\n        };\n        Keccak2.prototype.arrayBuffer = function() {\n          this.finalize();\n          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;\n          var bytes2 = this.outputBits >> 3;\n          var buffer;\n          if (extraBytes) {\n            buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n          } else {\n            buffer = new ArrayBuffer(bytes2);\n          }\n          var array = new Uint32Array(buffer);\n          while (j2 < outputBlocks) {\n            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {\n              array[j2] = s[i2];\n            }\n            if (j2 % blockCount === 0) {\n              f(s);\n            }\n          }\n          if (extraBytes) {\n            array[i2] = s[i2];\n            buffer = buffer.slice(0, bytes2);\n          }\n          return buffer;\n        };\n        Keccak2.prototype.buffer = Keccak2.prototype.arrayBuffer;\n        Keccak2.prototype.digest = Keccak2.prototype.array = function() {\n          this.finalize();\n          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;\n          var array = [], offset, block;\n          while (j2 < outputBlocks) {\n            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {\n              offset = j2 << 2;\n              block = s[i2];\n              array[offset] = block & 255;\n              array[offset + 1] = block >> 8 & 255;\n              array[offset + 2] = block >> 16 & 255;\n              array[offset + 3] = block >> 24 & 255;\n            }\n            if (j2 % blockCount === 0) {\n              f(s);\n            }\n          }\n          if (extraBytes) {\n            offset = j2 << 2;\n            block = s[i2];\n            array[offset] = block & 255;\n            if (extraBytes > 1) {\n              array[offset + 1] = block >> 8 & 255;\n            }\n            if (extraBytes > 2) {\n              array[offset + 2] = block >> 16 & 255;\n            }\n          }\n          return array;\n        };\n        function Kmac(bits2, padding2, outputBits) {\n          Keccak2.call(this, bits2, padding2, outputBits);\n        }\n        Kmac.prototype = new Keccak2();\n        Kmac.prototype.finalize = function() {\n          this.encode(this.outputBits, true);\n          return Keccak2.prototype.finalize.call(this);\n        };\n        var f = function(s) {\n          var h, l, n2, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n          for (n2 = 0; n2 < 48; n2 += 2) {\n            c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n            c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n            c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n            c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n            c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n            c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n            c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n            c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n            c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n            c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n            h = c8 ^ (c2 << 1 | c3 >>> 31);\n            l = c9 ^ (c3 << 1 | c2 >>> 31);\n            s[0] ^= h;\n            s[1] ^= l;\n            s[10] ^= h;\n            s[11] ^= l;\n            s[20] ^= h;\n            s[21] ^= l;\n            s[30] ^= h;\n            s[31] ^= l;\n            s[40] ^= h;\n            s[41] ^= l;\n            h = c0 ^ (c4 << 1 | c5 >>> 31);\n            l = c1 ^ (c5 << 1 | c4 >>> 31);\n            s[2] ^= h;\n            s[3] ^= l;\n            s[12] ^= h;\n            s[13] ^= l;\n            s[22] ^= h;\n            s[23] ^= l;\n            s[32] ^= h;\n            s[33] ^= l;\n            s[42] ^= h;\n            s[43] ^= l;\n            h = c2 ^ (c6 << 1 | c7 >>> 31);\n            l = c3 ^ (c7 << 1 | c6 >>> 31);\n            s[4] ^= h;\n            s[5] ^= l;\n            s[14] ^= h;\n            s[15] ^= l;\n            s[24] ^= h;\n            s[25] ^= l;\n            s[34] ^= h;\n            s[35] ^= l;\n            s[44] ^= h;\n            s[45] ^= l;\n            h = c4 ^ (c8 << 1 | c9 >>> 31);\n            l = c5 ^ (c9 << 1 | c8 >>> 31);\n            s[6] ^= h;\n            s[7] ^= l;\n            s[16] ^= h;\n            s[17] ^= l;\n            s[26] ^= h;\n            s[27] ^= l;\n            s[36] ^= h;\n            s[37] ^= l;\n            s[46] ^= h;\n            s[47] ^= l;\n            h = c6 ^ (c0 << 1 | c1 >>> 31);\n            l = c7 ^ (c1 << 1 | c0 >>> 31);\n            s[8] ^= h;\n            s[9] ^= l;\n            s[18] ^= h;\n            s[19] ^= l;\n            s[28] ^= h;\n            s[29] ^= l;\n            s[38] ^= h;\n            s[39] ^= l;\n            s[48] ^= h;\n            s[49] ^= l;\n            b0 = s[0];\n            b1 = s[1];\n            b32 = s[11] << 4 | s[10] >>> 28;\n            b33 = s[10] << 4 | s[11] >>> 28;\n            b14 = s[20] << 3 | s[21] >>> 29;\n            b15 = s[21] << 3 | s[20] >>> 29;\n            b46 = s[31] << 9 | s[30] >>> 23;\n            b47 = s[30] << 9 | s[31] >>> 23;\n            b28 = s[40] << 18 | s[41] >>> 14;\n            b29 = s[41] << 18 | s[40] >>> 14;\n            b20 = s[2] << 1 | s[3] >>> 31;\n            b21 = s[3] << 1 | s[2] >>> 31;\n            b2 = s[13] << 12 | s[12] >>> 20;\n            b3 = s[12] << 12 | s[13] >>> 20;\n            b34 = s[22] << 10 | s[23] >>> 22;\n            b35 = s[23] << 10 | s[22] >>> 22;\n            b16 = s[33] << 13 | s[32] >>> 19;\n            b17 = s[32] << 13 | s[33] >>> 19;\n            b48 = s[42] << 2 | s[43] >>> 30;\n            b49 = s[43] << 2 | s[42] >>> 30;\n            b40 = s[5] << 30 | s[4] >>> 2;\n            b41 = s[4] << 30 | s[5] >>> 2;\n            b22 = s[14] << 6 | s[15] >>> 26;\n            b23 = s[15] << 6 | s[14] >>> 26;\n            b4 = s[25] << 11 | s[24] >>> 21;\n            b5 = s[24] << 11 | s[25] >>> 21;\n            b36 = s[34] << 15 | s[35] >>> 17;\n            b37 = s[35] << 15 | s[34] >>> 17;\n            b18 = s[45] << 29 | s[44] >>> 3;\n            b19 = s[44] << 29 | s[45] >>> 3;\n            b10 = s[6] << 28 | s[7] >>> 4;\n            b11 = s[7] << 28 | s[6] >>> 4;\n            b42 = s[17] << 23 | s[16] >>> 9;\n            b43 = s[16] << 23 | s[17] >>> 9;\n            b24 = s[26] << 25 | s[27] >>> 7;\n            b25 = s[27] << 25 | s[26] >>> 7;\n            b6 = s[36] << 21 | s[37] >>> 11;\n            b7 = s[37] << 21 | s[36] >>> 11;\n            b38 = s[47] << 24 | s[46] >>> 8;\n            b39 = s[46] << 24 | s[47] >>> 8;\n            b30 = s[8] << 27 | s[9] >>> 5;\n            b31 = s[9] << 27 | s[8] >>> 5;\n            b12 = s[18] << 20 | s[19] >>> 12;\n            b13 = s[19] << 20 | s[18] >>> 12;\n            b44 = s[29] << 7 | s[28] >>> 25;\n            b45 = s[28] << 7 | s[29] >>> 25;\n            b26 = s[38] << 8 | s[39] >>> 24;\n            b27 = s[39] << 8 | s[38] >>> 24;\n            b8 = s[48] << 14 | s[49] >>> 18;\n            b9 = s[49] << 14 | s[48] >>> 18;\n            s[0] = b0 ^ ~b2 & b4;\n            s[1] = b1 ^ ~b3 & b5;\n            s[10] = b10 ^ ~b12 & b14;\n            s[11] = b11 ^ ~b13 & b15;\n            s[20] = b20 ^ ~b22 & b24;\n            s[21] = b21 ^ ~b23 & b25;\n            s[30] = b30 ^ ~b32 & b34;\n            s[31] = b31 ^ ~b33 & b35;\n            s[40] = b40 ^ ~b42 & b44;\n            s[41] = b41 ^ ~b43 & b45;\n            s[2] = b2 ^ ~b4 & b6;\n            s[3] = b3 ^ ~b5 & b7;\n            s[12] = b12 ^ ~b14 & b16;\n            s[13] = b13 ^ ~b15 & b17;\n            s[22] = b22 ^ ~b24 & b26;\n            s[23] = b23 ^ ~b25 & b27;\n            s[32] = b32 ^ ~b34 & b36;\n            s[33] = b33 ^ ~b35 & b37;\n            s[42] = b42 ^ ~b44 & b46;\n            s[43] = b43 ^ ~b45 & b47;\n            s[4] = b4 ^ ~b6 & b8;\n            s[5] = b5 ^ ~b7 & b9;\n            s[14] = b14 ^ ~b16 & b18;\n            s[15] = b15 ^ ~b17 & b19;\n            s[24] = b24 ^ ~b26 & b28;\n            s[25] = b25 ^ ~b27 & b29;\n            s[34] = b34 ^ ~b36 & b38;\n            s[35] = b35 ^ ~b37 & b39;\n            s[44] = b44 ^ ~b46 & b48;\n            s[45] = b45 ^ ~b47 & b49;\n            s[6] = b6 ^ ~b8 & b0;\n            s[7] = b7 ^ ~b9 & b1;\n            s[16] = b16 ^ ~b18 & b10;\n            s[17] = b17 ^ ~b19 & b11;\n            s[26] = b26 ^ ~b28 & b20;\n            s[27] = b27 ^ ~b29 & b21;\n            s[36] = b36 ^ ~b38 & b30;\n            s[37] = b37 ^ ~b39 & b31;\n            s[46] = b46 ^ ~b48 & b40;\n            s[47] = b47 ^ ~b49 & b41;\n            s[8] = b8 ^ ~b0 & b2;\n            s[9] = b9 ^ ~b1 & b3;\n            s[18] = b18 ^ ~b10 & b12;\n            s[19] = b19 ^ ~b11 & b13;\n            s[28] = b28 ^ ~b20 & b22;\n            s[29] = b29 ^ ~b21 & b23;\n            s[38] = b38 ^ ~b30 & b32;\n            s[39] = b39 ^ ~b31 & b33;\n            s[48] = b48 ^ ~b40 & b42;\n            s[49] = b49 ^ ~b41 & b43;\n            s[0] ^= RC[n2];\n            s[1] ^= RC[n2 + 1];\n          }\n        };\n        if (COMMON_JS) {\n          module.exports = methods;\n        } else {\n          for (i = 0; i < methodNames.length; ++i) {\n            root[methodNames[i]] = methods[methodNames[i]];\n          }\n          if (AMD) {\n            define(function() {\n              return methods;\n            });\n          }\n        }\n      })();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+keccak256@5.8.0/node_modules/@ethersproject/keccak256/lib/index.js\n  var require_lib5 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+keccak256@5.8.0/node_modules/@ethersproject/keccak256/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.keccak256 = void 0;\n      var js_sha3_1 = __importDefault2(require_sha3());\n      var bytes_1 = require_lib2();\n      function keccak2562(data) {\n        return \"0x\" + js_sha3_1.default.keccak_256((0, bytes_1.arrayify)(data));\n      }\n      exports3.keccak256 = keccak2562;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+rlp@5.8.0/node_modules/@ethersproject/rlp/lib/_version.js\n  var require_version6 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+rlp@5.8.0/node_modules/@ethersproject/rlp/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"rlp/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+rlp@5.8.0/node_modules/@ethersproject/rlp/lib/index.js\n  var require_lib6 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+rlp@5.8.0/node_modules/@ethersproject/rlp/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.decode = exports3.encode = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version6();\n      var logger = new logger_1.Logger(_version_1.version);\n      function arrayifyInteger2(value) {\n        var result = [];\n        while (value) {\n          result.unshift(value & 255);\n          value >>= 8;\n        }\n        return result;\n      }\n      function unarrayifyInteger2(data, offset, length) {\n        var result = 0;\n        for (var i = 0; i < length; i++) {\n          result = result * 256 + data[offset + i];\n        }\n        return result;\n      }\n      function _encode2(object2) {\n        if (Array.isArray(object2)) {\n          var payload_1 = [];\n          object2.forEach(function(child) {\n            payload_1 = payload_1.concat(_encode2(child));\n          });\n          if (payload_1.length <= 55) {\n            payload_1.unshift(192 + payload_1.length);\n            return payload_1;\n          }\n          var length_1 = arrayifyInteger2(payload_1.length);\n          length_1.unshift(247 + length_1.length);\n          return length_1.concat(payload_1);\n        }\n        if (!(0, bytes_1.isBytesLike)(object2)) {\n          logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object2);\n        }\n        var data = Array.prototype.slice.call((0, bytes_1.arrayify)(object2));\n        if (data.length === 1 && data[0] <= 127) {\n          return data;\n        } else if (data.length <= 55) {\n          data.unshift(128 + data.length);\n          return data;\n        }\n        var length = arrayifyInteger2(data.length);\n        length.unshift(183 + length.length);\n        return length.concat(data);\n      }\n      function encode(object2) {\n        return (0, bytes_1.hexlify)(_encode2(object2));\n      }\n      exports3.encode = encode;\n      function _decodeChildren2(data, offset, childOffset, length) {\n        var result = [];\n        while (childOffset < offset + 1 + length) {\n          var decoded = _decode2(data, childOffset);\n          result.push(decoded.result);\n          childOffset += decoded.consumed;\n          if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n        }\n        return { consumed: 1 + length, result };\n      }\n      function _decode2(data, offset) {\n        if (data.length === 0) {\n          logger.throwError(\"data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        if (data[offset] >= 248) {\n          var lengthLength = data[offset] - 247;\n          if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          var length_2 = unarrayifyInteger2(data, offset + 1, lengthLength);\n          if (offset + 1 + lengthLength + length_2 > data.length) {\n            logger.throwError(\"data long segment too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          return _decodeChildren2(data, offset, offset + 1 + lengthLength, lengthLength + length_2);\n        } else if (data[offset] >= 192) {\n          var length_3 = data[offset] - 192;\n          if (offset + 1 + length_3 > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          return _decodeChildren2(data, offset, offset + 1, length_3);\n        } else if (data[offset] >= 184) {\n          var lengthLength = data[offset] - 183;\n          if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          var length_4 = unarrayifyInteger2(data, offset + 1, lengthLength);\n          if (offset + 1 + lengthLength + length_4 > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          var result = (0, bytes_1.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length_4));\n          return { consumed: 1 + lengthLength + length_4, result };\n        } else if (data[offset] >= 128) {\n          var length_5 = data[offset] - 128;\n          if (offset + 1 + length_5 > data.length) {\n            logger.throwError(\"data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n          }\n          var result = (0, bytes_1.hexlify)(data.slice(offset + 1, offset + 1 + length_5));\n          return { consumed: 1 + length_5, result };\n        }\n        return { consumed: 1, result: (0, bytes_1.hexlify)(data[offset]) };\n      }\n      function decode(data) {\n        var bytes2 = (0, bytes_1.arrayify)(data);\n        var decoded = _decode2(bytes2, 0);\n        if (decoded.consumed !== bytes2.length) {\n          logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n        }\n        return decoded.result;\n      }\n      exports3.decode = decode;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+address@5.8.0/node_modules/@ethersproject/address/lib/_version.js\n  var require_version7 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+address@5.8.0/node_modules/@ethersproject/address/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"address/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+address@5.8.0/node_modules/@ethersproject/address/lib/index.js\n  var require_lib7 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+address@5.8.0/node_modules/@ethersproject/address/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getCreate2Address = exports3.getContractAddress = exports3.getIcapAddress = exports3.isAddress = exports3.getAddress = void 0;\n      var bytes_1 = require_lib2();\n      var bignumber_1 = require_lib3();\n      var keccak256_1 = require_lib5();\n      var rlp_1 = require_lib6();\n      var logger_1 = require_lib();\n      var _version_1 = require_version7();\n      var logger = new logger_1.Logger(_version_1.version);\n      function getChecksumAddress2(address) {\n        if (!(0, bytes_1.isHexString)(address, 20)) {\n          logger.throwArgumentError(\"invalid address\", \"address\", address);\n        }\n        address = address.toLowerCase();\n        var chars = address.substring(2).split(\"\");\n        var expanded = new Uint8Array(40);\n        for (var i2 = 0; i2 < 40; i2++) {\n          expanded[i2] = chars[i2].charCodeAt(0);\n        }\n        var hashed = (0, bytes_1.arrayify)((0, keccak256_1.keccak256)(expanded));\n        for (var i2 = 0; i2 < 40; i2 += 2) {\n          if (hashed[i2 >> 1] >> 4 >= 8) {\n            chars[i2] = chars[i2].toUpperCase();\n          }\n          if ((hashed[i2 >> 1] & 15) >= 8) {\n            chars[i2 + 1] = chars[i2 + 1].toUpperCase();\n          }\n        }\n        return \"0x\" + chars.join(\"\");\n      }\n      var MAX_SAFE_INTEGER = 9007199254740991;\n      function log10(x) {\n        if (Math.log10) {\n          return Math.log10(x);\n        }\n        return Math.log(x) / Math.LN10;\n      }\n      var ibanLookup2 = {};\n      for (i = 0; i < 10; i++) {\n        ibanLookup2[String(i)] = String(i);\n      }\n      var i;\n      for (i = 0; i < 26; i++) {\n        ibanLookup2[String.fromCharCode(65 + i)] = String(10 + i);\n      }\n      var i;\n      var safeDigits2 = Math.floor(log10(MAX_SAFE_INTEGER));\n      function ibanChecksum2(address) {\n        address = address.toUpperCase();\n        address = address.substring(4) + address.substring(0, 2) + \"00\";\n        var expanded = address.split(\"\").map(function(c) {\n          return ibanLookup2[c];\n        }).join(\"\");\n        while (expanded.length >= safeDigits2) {\n          var block = expanded.substring(0, safeDigits2);\n          expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n        }\n        var checksum = String(98 - parseInt(expanded, 10) % 97);\n        while (checksum.length < 2) {\n          checksum = \"0\" + checksum;\n        }\n        return checksum;\n      }\n      function getAddress2(address) {\n        var result = null;\n        if (typeof address !== \"string\") {\n          logger.throwArgumentError(\"invalid address\", \"address\", address);\n        }\n        if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n          if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n          }\n          result = getChecksumAddress2(address);\n          if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n          }\n        } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n          if (address.substring(2, 4) !== ibanChecksum2(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n          }\n          result = (0, bignumber_1._base36To16)(address.substring(4));\n          while (result.length < 40) {\n            result = \"0\" + result;\n          }\n          result = getChecksumAddress2(\"0x\" + result);\n        } else {\n          logger.throwArgumentError(\"invalid address\", \"address\", address);\n        }\n        return result;\n      }\n      exports3.getAddress = getAddress2;\n      function isAddress2(address) {\n        try {\n          getAddress2(address);\n          return true;\n        } catch (error) {\n        }\n        return false;\n      }\n      exports3.isAddress = isAddress2;\n      function getIcapAddress2(address) {\n        var base36 = (0, bignumber_1._base16To36)(getAddress2(address).substring(2)).toUpperCase();\n        while (base36.length < 30) {\n          base36 = \"0\" + base36;\n        }\n        return \"XE\" + ibanChecksum2(\"XE00\" + base36) + base36;\n      }\n      exports3.getIcapAddress = getIcapAddress2;\n      function getContractAddress(transaction) {\n        var from = null;\n        try {\n          from = getAddress2(transaction.from);\n        } catch (error) {\n          logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n        }\n        var nonce = (0, bytes_1.stripZeros)((0, bytes_1.arrayify)(bignumber_1.BigNumber.from(transaction.nonce).toHexString()));\n        return getAddress2((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, rlp_1.encode)([from, nonce])), 12));\n      }\n      exports3.getContractAddress = getContractAddress;\n      function getCreate2Address2(from, salt, initCodeHash) {\n        if ((0, bytes_1.hexDataLength)(salt) !== 32) {\n          logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n        }\n        if ((0, bytes_1.hexDataLength)(initCodeHash) !== 32) {\n          logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n        }\n        return getAddress2((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, bytes_1.concat)([\"0xff\", getAddress2(from), salt, initCodeHash])), 12));\n      }\n      exports3.getCreate2Address = getCreate2Address2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/address.js\n  var require_address = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/address.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.AddressCoder = void 0;\n      var address_1 = require_lib7();\n      var bytes_1 = require_lib2();\n      var abstract_coder_1 = require_abstract_coder();\n      var AddressCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(AddressCoder3, _super);\n          function AddressCoder3(localName) {\n            return _super.call(this, \"address\", \"address\", localName, false) || this;\n          }\n          AddressCoder3.prototype.defaultValue = function() {\n            return \"0x0000000000000000000000000000000000000000\";\n          };\n          AddressCoder3.prototype.encode = function(writer, value) {\n            try {\n              value = (0, address_1.getAddress)(value);\n            } catch (error) {\n              this._throwError(error.message, value);\n            }\n            return writer.writeValue(value);\n          };\n          AddressCoder3.prototype.decode = function(reader) {\n            return (0, address_1.getAddress)((0, bytes_1.hexZeroPad)(reader.readValue().toHexString(), 20));\n          };\n          return AddressCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.AddressCoder = AddressCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/anonymous.js\n  var require_anonymous = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/anonymous.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.AnonymousCoder = void 0;\n      var abstract_coder_1 = require_abstract_coder();\n      var AnonymousCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(AnonymousCoder3, _super);\n          function AnonymousCoder3(coder) {\n            var _this = _super.call(this, coder.name, coder.type, void 0, coder.dynamic) || this;\n            _this.coder = coder;\n            return _this;\n          }\n          AnonymousCoder3.prototype.defaultValue = function() {\n            return this.coder.defaultValue();\n          };\n          AnonymousCoder3.prototype.encode = function(writer, value) {\n            return this.coder.encode(writer, value);\n          };\n          AnonymousCoder3.prototype.decode = function(reader) {\n            return this.coder.decode(reader);\n          };\n          return AnonymousCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.AnonymousCoder = AnonymousCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/array.js\n  var require_array = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/array.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.ArrayCoder = exports3.unpack = exports3.pack = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version5();\n      var logger = new logger_1.Logger(_version_1.version);\n      var abstract_coder_1 = require_abstract_coder();\n      var anonymous_1 = require_anonymous();\n      function pack2(writer, coders, values) {\n        var arrayValues = null;\n        if (Array.isArray(values)) {\n          arrayValues = values;\n        } else if (values && typeof values === \"object\") {\n          var unique_1 = {};\n          arrayValues = coders.map(function(coder) {\n            var name = coder.localName;\n            if (!name) {\n              logger.throwError(\"cannot encode object for signature with missing names\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                argument: \"values\",\n                coder,\n                value: values\n              });\n            }\n            if (unique_1[name]) {\n              logger.throwError(\"cannot encode object for signature with duplicate names\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                argument: \"values\",\n                coder,\n                value: values\n              });\n            }\n            unique_1[name] = true;\n            return values[name];\n          });\n        } else {\n          logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n        }\n        if (coders.length !== arrayValues.length) {\n          logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n        }\n        var staticWriter = new abstract_coder_1.Writer(writer.wordSize);\n        var dynamicWriter = new abstract_coder_1.Writer(writer.wordSize);\n        var updateFuncs = [];\n        coders.forEach(function(coder, index) {\n          var value = arrayValues[index];\n          if (coder.dynamic) {\n            var dynamicOffset_1 = dynamicWriter.length;\n            coder.encode(dynamicWriter, value);\n            var updateFunc_1 = staticWriter.writeUpdatableValue();\n            updateFuncs.push(function(baseOffset) {\n              updateFunc_1(baseOffset + dynamicOffset_1);\n            });\n          } else {\n            coder.encode(staticWriter, value);\n          }\n        });\n        updateFuncs.forEach(function(func) {\n          func(staticWriter.length);\n        });\n        var length = writer.appendWriter(staticWriter);\n        length += writer.appendWriter(dynamicWriter);\n        return length;\n      }\n      exports3.pack = pack2;\n      function unpack2(reader, coders) {\n        var values = [];\n        var baseReader = reader.subReader(0);\n        coders.forEach(function(coder) {\n          var value = null;\n          if (coder.dynamic) {\n            var offset = reader.readValue();\n            var offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n              value = coder.decode(offsetReader);\n            } catch (error) {\n              if (error.code === logger_1.Logger.errors.BUFFER_OVERRUN) {\n                throw error;\n              }\n              value = error;\n              value.baseType = coder.name;\n              value.name = coder.localName;\n              value.type = coder.type;\n            }\n          } else {\n            try {\n              value = coder.decode(reader);\n            } catch (error) {\n              if (error.code === logger_1.Logger.errors.BUFFER_OVERRUN) {\n                throw error;\n              }\n              value = error;\n              value.baseType = coder.name;\n              value.name = coder.localName;\n              value.type = coder.type;\n            }\n          }\n          if (value != void 0) {\n            values.push(value);\n          }\n        });\n        var uniqueNames = coders.reduce(function(accum, coder) {\n          var name = coder.localName;\n          if (name) {\n            if (!accum[name]) {\n              accum[name] = 0;\n            }\n            accum[name]++;\n          }\n          return accum;\n        }, {});\n        coders.forEach(function(coder, index) {\n          var name = coder.localName;\n          if (!name || uniqueNames[name] !== 1) {\n            return;\n          }\n          if (name === \"length\") {\n            name = \"_length\";\n          }\n          if (values[name] != null) {\n            return;\n          }\n          var value = values[index];\n          if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n              enumerable: true,\n              get: function() {\n                throw value;\n              }\n            });\n          } else {\n            values[name] = value;\n          }\n        });\n        var _loop_1 = function(i2) {\n          var value = values[i2];\n          if (value instanceof Error) {\n            Object.defineProperty(values, i2, {\n              enumerable: true,\n              get: function() {\n                throw value;\n              }\n            });\n          }\n        };\n        for (var i = 0; i < values.length; i++) {\n          _loop_1(i);\n        }\n        return Object.freeze(values);\n      }\n      exports3.unpack = unpack2;\n      var ArrayCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(ArrayCoder3, _super);\n          function ArrayCoder3(coder, length, localName) {\n            var _this = this;\n            var type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n            var dynamic = length === -1 || coder.dynamic;\n            _this = _super.call(this, \"array\", type, localName, dynamic) || this;\n            _this.coder = coder;\n            _this.length = length;\n            return _this;\n          }\n          ArrayCoder3.prototype.defaultValue = function() {\n            var defaultChild = this.coder.defaultValue();\n            var result = [];\n            for (var i = 0; i < this.length; i++) {\n              result.push(defaultChild);\n            }\n            return result;\n          };\n          ArrayCoder3.prototype.encode = function(writer, value) {\n            if (!Array.isArray(value)) {\n              this._throwError(\"expected array value\", value);\n            }\n            var count = this.length;\n            if (count === -1) {\n              count = value.length;\n              writer.writeValue(value.length);\n            }\n            logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n            var coders = [];\n            for (var i = 0; i < value.length; i++) {\n              coders.push(this.coder);\n            }\n            return pack2(writer, coders, value);\n          };\n          ArrayCoder3.prototype.decode = function(reader) {\n            var count = this.length;\n            if (count === -1) {\n              count = reader.readValue().toNumber();\n              if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n                  length: reader._data.length,\n                  count\n                });\n              }\n            }\n            var coders = [];\n            for (var i = 0; i < count; i++) {\n              coders.push(new anonymous_1.AnonymousCoder(this.coder));\n            }\n            return reader.coerce(this.name, unpack2(reader, coders));\n          };\n          return ArrayCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.ArrayCoder = ArrayCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/boolean.js\n  var require_boolean = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/boolean.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.BooleanCoder = void 0;\n      var abstract_coder_1 = require_abstract_coder();\n      var BooleanCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(BooleanCoder3, _super);\n          function BooleanCoder3(localName) {\n            return _super.call(this, \"bool\", \"bool\", localName, false) || this;\n          }\n          BooleanCoder3.prototype.defaultValue = function() {\n            return false;\n          };\n          BooleanCoder3.prototype.encode = function(writer, value) {\n            return writer.writeValue(value ? 1 : 0);\n          };\n          BooleanCoder3.prototype.decode = function(reader) {\n            return reader.coerce(this.type, !reader.readValue().isZero());\n          };\n          return BooleanCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.BooleanCoder = BooleanCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/bytes.js\n  var require_bytes = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/bytes.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.BytesCoder = exports3.DynamicBytesCoder = void 0;\n      var bytes_1 = require_lib2();\n      var abstract_coder_1 = require_abstract_coder();\n      var DynamicBytesCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(DynamicBytesCoder3, _super);\n          function DynamicBytesCoder3(type, localName) {\n            return _super.call(this, type, type, localName, true) || this;\n          }\n          DynamicBytesCoder3.prototype.defaultValue = function() {\n            return \"0x\";\n          };\n          DynamicBytesCoder3.prototype.encode = function(writer, value) {\n            value = (0, bytes_1.arrayify)(value);\n            var length = writer.writeValue(value.length);\n            length += writer.writeBytes(value);\n            return length;\n          };\n          DynamicBytesCoder3.prototype.decode = function(reader) {\n            return reader.readBytes(reader.readValue().toNumber(), true);\n          };\n          return DynamicBytesCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.DynamicBytesCoder = DynamicBytesCoder2;\n      var BytesCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(BytesCoder3, _super);\n          function BytesCoder3(localName) {\n            return _super.call(this, \"bytes\", localName) || this;\n          }\n          BytesCoder3.prototype.decode = function(reader) {\n            return reader.coerce(this.name, (0, bytes_1.hexlify)(_super.prototype.decode.call(this, reader)));\n          };\n          return BytesCoder3;\n        }(DynamicBytesCoder2)\n      );\n      exports3.BytesCoder = BytesCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/fixed-bytes.js\n  var require_fixed_bytes = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/fixed-bytes.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.FixedBytesCoder = void 0;\n      var bytes_1 = require_lib2();\n      var abstract_coder_1 = require_abstract_coder();\n      var FixedBytesCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(FixedBytesCoder3, _super);\n          function FixedBytesCoder3(size, localName) {\n            var _this = this;\n            var name = \"bytes\" + String(size);\n            _this = _super.call(this, name, name, localName, false) || this;\n            _this.size = size;\n            return _this;\n          }\n          FixedBytesCoder3.prototype.defaultValue = function() {\n            return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n          };\n          FixedBytesCoder3.prototype.encode = function(writer, value) {\n            var data = (0, bytes_1.arrayify)(value);\n            if (data.length !== this.size) {\n              this._throwError(\"incorrect data length\", value);\n            }\n            return writer.writeBytes(data);\n          };\n          FixedBytesCoder3.prototype.decode = function(reader) {\n            return reader.coerce(this.name, (0, bytes_1.hexlify)(reader.readBytes(this.size)));\n          };\n          return FixedBytesCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.FixedBytesCoder = FixedBytesCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/null.js\n  var require_null = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/null.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.NullCoder = void 0;\n      var abstract_coder_1 = require_abstract_coder();\n      var NullCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(NullCoder3, _super);\n          function NullCoder3(localName) {\n            return _super.call(this, \"null\", \"\", localName, false) || this;\n          }\n          NullCoder3.prototype.defaultValue = function() {\n            return null;\n          };\n          NullCoder3.prototype.encode = function(writer, value) {\n            if (value != null) {\n              this._throwError(\"not null\", value);\n            }\n            return writer.writeBytes([]);\n          };\n          NullCoder3.prototype.decode = function(reader) {\n            reader.readBytes(0);\n            return reader.coerce(this.name, null);\n          };\n          return NullCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.NullCoder = NullCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/addresses.js\n  var require_addresses = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/addresses.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.AddressZero = void 0;\n      exports3.AddressZero = \"0x0000000000000000000000000000000000000000\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/bignumbers.js\n  var require_bignumbers = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/bignumbers.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.MaxInt256 = exports3.MinInt256 = exports3.MaxUint256 = exports3.WeiPerEther = exports3.Two = exports3.One = exports3.Zero = exports3.NegativeOne = void 0;\n      var bignumber_1 = require_lib3();\n      var NegativeOne = /* @__PURE__ */ bignumber_1.BigNumber.from(-1);\n      exports3.NegativeOne = NegativeOne;\n      var Zero = /* @__PURE__ */ bignumber_1.BigNumber.from(0);\n      exports3.Zero = Zero;\n      var One = /* @__PURE__ */ bignumber_1.BigNumber.from(1);\n      exports3.One = One;\n      var Two = /* @__PURE__ */ bignumber_1.BigNumber.from(2);\n      exports3.Two = Two;\n      var WeiPerEther = /* @__PURE__ */ bignumber_1.BigNumber.from(\"1000000000000000000\");\n      exports3.WeiPerEther = WeiPerEther;\n      var MaxUint256 = /* @__PURE__ */ bignumber_1.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      exports3.MaxUint256 = MaxUint256;\n      var MinInt256 = /* @__PURE__ */ bignumber_1.BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\");\n      exports3.MinInt256 = MinInt256;\n      var MaxInt256 = /* @__PURE__ */ bignumber_1.BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      exports3.MaxInt256 = MaxInt256;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/hashes.js\n  var require_hashes = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/hashes.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.HashZero = void 0;\n      exports3.HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/strings.js\n  var require_strings = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/strings.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.EtherSymbol = void 0;\n      exports3.EtherSymbol = \"\\u039E\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/index.js\n  var require_lib8 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+constants@5.8.0/node_modules/@ethersproject/constants/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.EtherSymbol = exports3.HashZero = exports3.MaxInt256 = exports3.MinInt256 = exports3.MaxUint256 = exports3.WeiPerEther = exports3.Two = exports3.One = exports3.Zero = exports3.NegativeOne = exports3.AddressZero = void 0;\n      var addresses_1 = require_addresses();\n      Object.defineProperty(exports3, \"AddressZero\", { enumerable: true, get: function() {\n        return addresses_1.AddressZero;\n      } });\n      var bignumbers_1 = require_bignumbers();\n      Object.defineProperty(exports3, \"NegativeOne\", { enumerable: true, get: function() {\n        return bignumbers_1.NegativeOne;\n      } });\n      Object.defineProperty(exports3, \"Zero\", { enumerable: true, get: function() {\n        return bignumbers_1.Zero;\n      } });\n      Object.defineProperty(exports3, \"One\", { enumerable: true, get: function() {\n        return bignumbers_1.One;\n      } });\n      Object.defineProperty(exports3, \"Two\", { enumerable: true, get: function() {\n        return bignumbers_1.Two;\n      } });\n      Object.defineProperty(exports3, \"WeiPerEther\", { enumerable: true, get: function() {\n        return bignumbers_1.WeiPerEther;\n      } });\n      Object.defineProperty(exports3, \"MaxUint256\", { enumerable: true, get: function() {\n        return bignumbers_1.MaxUint256;\n      } });\n      Object.defineProperty(exports3, \"MinInt256\", { enumerable: true, get: function() {\n        return bignumbers_1.MinInt256;\n      } });\n      Object.defineProperty(exports3, \"MaxInt256\", { enumerable: true, get: function() {\n        return bignumbers_1.MaxInt256;\n      } });\n      var hashes_1 = require_hashes();\n      Object.defineProperty(exports3, \"HashZero\", { enumerable: true, get: function() {\n        return hashes_1.HashZero;\n      } });\n      var strings_1 = require_strings();\n      Object.defineProperty(exports3, \"EtherSymbol\", { enumerable: true, get: function() {\n        return strings_1.EtherSymbol;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/number.js\n  var require_number = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/number.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.NumberCoder = void 0;\n      var bignumber_1 = require_lib3();\n      var constants_1 = require_lib8();\n      var abstract_coder_1 = require_abstract_coder();\n      var NumberCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(NumberCoder3, _super);\n          function NumberCoder3(size, signed2, localName) {\n            var _this = this;\n            var name = (signed2 ? \"int\" : \"uint\") + size * 8;\n            _this = _super.call(this, name, name, localName, false) || this;\n            _this.size = size;\n            _this.signed = signed2;\n            return _this;\n          }\n          NumberCoder3.prototype.defaultValue = function() {\n            return 0;\n          };\n          NumberCoder3.prototype.encode = function(writer, value) {\n            var v = bignumber_1.BigNumber.from(value);\n            var maxUintValue = constants_1.MaxUint256.mask(writer.wordSize * 8);\n            if (this.signed) {\n              var bounds = maxUintValue.mask(this.size * 8 - 1);\n              if (v.gt(bounds) || v.lt(bounds.add(constants_1.One).mul(constants_1.NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n              }\n            } else if (v.lt(constants_1.Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n              this._throwError(\"value out-of-bounds\", value);\n            }\n            v = v.toTwos(this.size * 8).mask(this.size * 8);\n            if (this.signed) {\n              v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n            }\n            return writer.writeValue(v);\n          };\n          NumberCoder3.prototype.decode = function(reader) {\n            var value = reader.readValue().mask(this.size * 8);\n            if (this.signed) {\n              value = value.fromTwos(this.size * 8);\n            }\n            return reader.coerce(this.name, value);\n          };\n          return NumberCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.NumberCoder = NumberCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/_version.js\n  var require_version8 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"strings/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/utf8.js\n  var require_utf8 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/utf8.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.toUtf8CodePoints = exports3.toUtf8String = exports3._toUtf8String = exports3._toEscapedUtf8String = exports3.toUtf8Bytes = exports3.Utf8ErrorFuncs = exports3.Utf8ErrorReason = exports3.UnicodeNormalizationForm = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version8();\n      var logger = new logger_1.Logger(_version_1.version);\n      var UnicodeNormalizationForm;\n      (function(UnicodeNormalizationForm2) {\n        UnicodeNormalizationForm2[\"current\"] = \"\";\n        UnicodeNormalizationForm2[\"NFC\"] = \"NFC\";\n        UnicodeNormalizationForm2[\"NFD\"] = \"NFD\";\n        UnicodeNormalizationForm2[\"NFKC\"] = \"NFKC\";\n        UnicodeNormalizationForm2[\"NFKD\"] = \"NFKD\";\n      })(UnicodeNormalizationForm = exports3.UnicodeNormalizationForm || (exports3.UnicodeNormalizationForm = {}));\n      var Utf8ErrorReason;\n      (function(Utf8ErrorReason2) {\n        Utf8ErrorReason2[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n        Utf8ErrorReason2[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n        Utf8ErrorReason2[\"OVERRUN\"] = \"string overrun\";\n        Utf8ErrorReason2[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n        Utf8ErrorReason2[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n        Utf8ErrorReason2[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n        Utf8ErrorReason2[\"OVERLONG\"] = \"overlong representation\";\n      })(Utf8ErrorReason = exports3.Utf8ErrorReason || (exports3.Utf8ErrorReason = {}));\n      function errorFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        return logger.throwArgumentError(\"invalid codepoint at offset \" + offset + \"; \" + reason, \"bytes\", bytes2);\n      }\n      function ignoreFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n          var i = 0;\n          for (var o = offset + 1; o < bytes2.length; o++) {\n            if (bytes2[o] >> 6 !== 2) {\n              break;\n            }\n            i++;\n          }\n          return i;\n        }\n        if (reason === Utf8ErrorReason.OVERRUN) {\n          return bytes2.length - offset - 1;\n        }\n        return 0;\n      }\n      function replaceFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        if (reason === Utf8ErrorReason.OVERLONG) {\n          output2.push(badCodepoint);\n          return 0;\n        }\n        output2.push(65533);\n        return ignoreFunc2(reason, offset, bytes2, output2, badCodepoint);\n      }\n      exports3.Utf8ErrorFuncs = Object.freeze({\n        error: errorFunc2,\n        ignore: ignoreFunc2,\n        replace: replaceFunc2\n      });\n      function getUtf8CodePoints2(bytes2, onError) {\n        if (onError == null) {\n          onError = exports3.Utf8ErrorFuncs.error;\n        }\n        bytes2 = (0, bytes_1.arrayify)(bytes2);\n        var result = [];\n        var i = 0;\n        while (i < bytes2.length) {\n          var c = bytes2[i++];\n          if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n          }\n          var extraLength = null;\n          var overlongMask = null;\n          if ((c & 224) === 192) {\n            extraLength = 1;\n            overlongMask = 127;\n          } else if ((c & 240) === 224) {\n            extraLength = 2;\n            overlongMask = 2047;\n          } else if ((c & 248) === 240) {\n            extraLength = 3;\n            overlongMask = 65535;\n          } else {\n            if ((c & 192) === 128) {\n              i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes2, result);\n            } else {\n              i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes2, result);\n            }\n            continue;\n          }\n          if (i - 1 + extraLength >= bytes2.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes2, result);\n            continue;\n          }\n          var res = c & (1 << 8 - extraLength - 1) - 1;\n          for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes2[i];\n            if ((nextChar & 192) != 128) {\n              i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes2, result);\n              res = null;\n              break;\n            }\n            ;\n            res = res << 6 | nextChar & 63;\n            i++;\n          }\n          if (res === null) {\n            continue;\n          }\n          if (res > 1114111) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          if (res >= 55296 && res <= 57343) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          result.push(res);\n        }\n        return result;\n      }\n      function toUtf8Bytes2(str, form) {\n        if (form === void 0) {\n          form = UnicodeNormalizationForm.current;\n        }\n        if (form != UnicodeNormalizationForm.current) {\n          logger.checkNormalize();\n          str = str.normalize(form);\n        }\n        var result = [];\n        for (var i = 0; i < str.length; i++) {\n          var c = str.charCodeAt(i);\n          if (c < 128) {\n            result.push(c);\n          } else if (c < 2048) {\n            result.push(c >> 6 | 192);\n            result.push(c & 63 | 128);\n          } else if ((c & 64512) == 55296) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 64512) !== 56320) {\n              throw new Error(\"invalid utf-8 string\");\n            }\n            var pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);\n            result.push(pair >> 18 | 240);\n            result.push(pair >> 12 & 63 | 128);\n            result.push(pair >> 6 & 63 | 128);\n            result.push(pair & 63 | 128);\n          } else {\n            result.push(c >> 12 | 224);\n            result.push(c >> 6 & 63 | 128);\n            result.push(c & 63 | 128);\n          }\n        }\n        return (0, bytes_1.arrayify)(result);\n      }\n      exports3.toUtf8Bytes = toUtf8Bytes2;\n      function escapeChar(value) {\n        var hex = \"0000\" + value.toString(16);\n        return \"\\\\u\" + hex.substring(hex.length - 4);\n      }\n      function _toEscapedUtf8String(bytes2, onError) {\n        return '\"' + getUtf8CodePoints2(bytes2, onError).map(function(codePoint) {\n          if (codePoint < 256) {\n            switch (codePoint) {\n              case 8:\n                return \"\\\\b\";\n              case 9:\n                return \"\\\\t\";\n              case 10:\n                return \"\\\\n\";\n              case 13:\n                return \"\\\\r\";\n              case 34:\n                return '\\\\\"';\n              case 92:\n                return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n              return String.fromCharCode(codePoint);\n            }\n          }\n          if (codePoint <= 65535) {\n            return escapeChar(codePoint);\n          }\n          codePoint -= 65536;\n          return escapeChar((codePoint >> 10 & 1023) + 55296) + escapeChar((codePoint & 1023) + 56320);\n        }).join(\"\") + '\"';\n      }\n      exports3._toEscapedUtf8String = _toEscapedUtf8String;\n      function _toUtf8String2(codePoints) {\n        return codePoints.map(function(codePoint) {\n          if (codePoint <= 65535) {\n            return String.fromCharCode(codePoint);\n          }\n          codePoint -= 65536;\n          return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);\n        }).join(\"\");\n      }\n      exports3._toUtf8String = _toUtf8String2;\n      function toUtf8String2(bytes2, onError) {\n        return _toUtf8String2(getUtf8CodePoints2(bytes2, onError));\n      }\n      exports3.toUtf8String = toUtf8String2;\n      function toUtf8CodePoints2(str, form) {\n        if (form === void 0) {\n          form = UnicodeNormalizationForm.current;\n        }\n        return getUtf8CodePoints2(toUtf8Bytes2(str, form));\n      }\n      exports3.toUtf8CodePoints = toUtf8CodePoints2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/bytes32.js\n  var require_bytes32 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/bytes32.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.parseBytes32String = exports3.formatBytes32String = void 0;\n      var constants_1 = require_lib8();\n      var bytes_1 = require_lib2();\n      var utf8_1 = require_utf8();\n      function formatBytes32String(text) {\n        var bytes2 = (0, utf8_1.toUtf8Bytes)(text);\n        if (bytes2.length > 31) {\n          throw new Error(\"bytes32 string must be less than 32 bytes\");\n        }\n        return (0, bytes_1.hexlify)((0, bytes_1.concat)([bytes2, constants_1.HashZero]).slice(0, 32));\n      }\n      exports3.formatBytes32String = formatBytes32String;\n      function parseBytes32String(bytes2) {\n        var data = (0, bytes_1.arrayify)(bytes2);\n        if (data.length !== 32) {\n          throw new Error(\"invalid bytes32 - not 32 bytes long\");\n        }\n        if (data[31] !== 0) {\n          throw new Error(\"invalid bytes32 string - no null terminator\");\n        }\n        var length = 31;\n        while (data[length - 1] === 0) {\n          length--;\n        }\n        return (0, utf8_1.toUtf8String)(data.slice(0, length));\n      }\n      exports3.parseBytes32String = parseBytes32String;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/idna.js\n  var require_idna = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/idna.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.nameprep = exports3._nameprepTableC = exports3._nameprepTableB2 = exports3._nameprepTableA1 = void 0;\n      var utf8_1 = require_utf8();\n      function bytes2(data) {\n        if (data.length % 4 !== 0) {\n          throw new Error(\"bad data\");\n        }\n        var result = [];\n        for (var i = 0; i < data.length; i += 4) {\n          result.push(parseInt(data.substring(i, i + 4), 16));\n        }\n        return result;\n      }\n      function createTable(data, func) {\n        if (!func) {\n          func = function(value) {\n            return [parseInt(value, 16)];\n          };\n        }\n        var lo = 0;\n        var result = {};\n        data.split(\",\").forEach(function(pair) {\n          var comps = pair.split(\":\");\n          lo += parseInt(comps[0], 16);\n          result[lo] = func(comps[1]);\n        });\n        return result;\n      }\n      function createRangeTable(data) {\n        var hi = 0;\n        return data.split(\",\").map(function(v) {\n          var comps = v.split(\"-\");\n          if (comps.length === 1) {\n            comps[1] = \"0\";\n          } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n          }\n          var lo = hi + parseInt(comps[0], 16);\n          hi = parseInt(comps[1], 16);\n          return { l: lo, h: hi };\n        });\n      }\n      function matchMap(value, ranges) {\n        var lo = 0;\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i];\n          lo += range.l;\n          if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n              continue;\n            }\n            return range;\n          }\n        }\n        return null;\n      }\n      var Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n      var Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(function(v) {\n        return parseInt(v, 16);\n      });\n      var Table_B_2_ranges = [\n        { h: 25, s: 32, l: 65 },\n        { h: 30, s: 32, e: [23], l: 127 },\n        { h: 54, s: 1, e: [48], l: 64, d: 2 },\n        { h: 14, s: 1, l: 57, d: 2 },\n        { h: 44, s: 1, l: 17, d: 2 },\n        { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n        { h: 16, s: 1, l: 68, d: 2 },\n        { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n        { h: 26, s: 32, e: [17], l: 435 },\n        { h: 22, s: 1, l: 71, d: 2 },\n        { h: 15, s: 80, l: 40 },\n        { h: 31, s: 32, l: 16 },\n        { h: 32, s: 1, l: 80, d: 2 },\n        { h: 52, s: 1, l: 42, d: 2 },\n        { h: 12, s: 1, l: 55, d: 2 },\n        { h: 40, s: 1, e: [38], l: 15, d: 2 },\n        { h: 14, s: 1, l: 48, d: 2 },\n        { h: 37, s: 48, l: 49 },\n        { h: 148, s: 1, l: 6351, d: 2 },\n        { h: 88, s: 1, l: 160, d: 2 },\n        { h: 15, s: 16, l: 704 },\n        { h: 25, s: 26, l: 854 },\n        { h: 25, s: 32, l: 55915 },\n        { h: 37, s: 40, l: 1247 },\n        { h: 25, s: -119711, l: 53248 },\n        { h: 25, s: -119763, l: 52 },\n        { h: 25, s: -119815, l: 52 },\n        { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n        { h: 25, s: -119919, l: 52 },\n        { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n        { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n        { h: 25, s: -120075, l: 52 },\n        { h: 25, s: -120127, l: 52 },\n        { h: 25, s: -120179, l: 52 },\n        { h: 25, s: -120231, l: 52 },\n        { h: 25, s: -120283, l: 52 },\n        { h: 25, s: -120335, l: 52 },\n        { h: 24, s: -119543, e: [17], l: 56 },\n        { h: 24, s: -119601, e: [17], l: 58 },\n        { h: 24, s: -119659, e: [17], l: 58 },\n        { h: 24, s: -119717, e: [17], l: 58 },\n        { h: 24, s: -119775, e: [17], l: 58 }\n      ];\n      var Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\n      var Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\n      var Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n      var Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n      function flatten2(values) {\n        return values.reduce(function(accum, value) {\n          value.forEach(function(value2) {\n            accum.push(value2);\n          });\n          return accum;\n        }, []);\n      }\n      function _nameprepTableA1(codepoint) {\n        return !!matchMap(codepoint, Table_A_1_ranges);\n      }\n      exports3._nameprepTableA1 = _nameprepTableA1;\n      function _nameprepTableB2(codepoint) {\n        var range = matchMap(codepoint, Table_B_2_ranges);\n        if (range) {\n          return [codepoint + range.s];\n        }\n        var codes = Table_B_2_lut_abs[codepoint];\n        if (codes) {\n          return codes;\n        }\n        var shift = Table_B_2_lut_rel[codepoint];\n        if (shift) {\n          return [codepoint + shift[0]];\n        }\n        var complex = Table_B_2_complex[codepoint];\n        if (complex) {\n          return complex;\n        }\n        return null;\n      }\n      exports3._nameprepTableB2 = _nameprepTableB2;\n      function _nameprepTableC(codepoint) {\n        return !!matchMap(codepoint, Table_C_ranges);\n      }\n      exports3._nameprepTableC = _nameprepTableC;\n      function nameprep(value) {\n        if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n          return value.toLowerCase();\n        }\n        var codes = (0, utf8_1.toUtf8CodePoints)(value);\n        codes = flatten2(codes.map(function(code) {\n          if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n          }\n          if (code >= 65024 && code <= 65039) {\n            return [];\n          }\n          var codesTableB2 = _nameprepTableB2(code);\n          if (codesTableB2) {\n            return codesTableB2;\n          }\n          return [code];\n        }));\n        codes = (0, utf8_1.toUtf8CodePoints)((0, utf8_1._toUtf8String)(codes), utf8_1.UnicodeNormalizationForm.NFKC);\n        codes.forEach(function(code) {\n          if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n          }\n        });\n        codes.forEach(function(code) {\n          if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n          }\n        });\n        var name = (0, utf8_1._toUtf8String)(codes);\n        if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n          throw new Error(\"invalid hyphen\");\n        }\n        return name;\n      }\n      exports3.nameprep = nameprep;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/index.js\n  var require_lib9 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.8.0/node_modules/@ethersproject/strings/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.nameprep = exports3.parseBytes32String = exports3.formatBytes32String = exports3.UnicodeNormalizationForm = exports3.Utf8ErrorReason = exports3.Utf8ErrorFuncs = exports3.toUtf8String = exports3.toUtf8CodePoints = exports3.toUtf8Bytes = exports3._toEscapedUtf8String = void 0;\n      var bytes32_1 = require_bytes32();\n      Object.defineProperty(exports3, \"formatBytes32String\", { enumerable: true, get: function() {\n        return bytes32_1.formatBytes32String;\n      } });\n      Object.defineProperty(exports3, \"parseBytes32String\", { enumerable: true, get: function() {\n        return bytes32_1.parseBytes32String;\n      } });\n      var idna_1 = require_idna();\n      Object.defineProperty(exports3, \"nameprep\", { enumerable: true, get: function() {\n        return idna_1.nameprep;\n      } });\n      var utf8_1 = require_utf8();\n      Object.defineProperty(exports3, \"_toEscapedUtf8String\", { enumerable: true, get: function() {\n        return utf8_1._toEscapedUtf8String;\n      } });\n      Object.defineProperty(exports3, \"toUtf8Bytes\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8Bytes;\n      } });\n      Object.defineProperty(exports3, \"toUtf8CodePoints\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8CodePoints;\n      } });\n      Object.defineProperty(exports3, \"toUtf8String\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8String;\n      } });\n      Object.defineProperty(exports3, \"UnicodeNormalizationForm\", { enumerable: true, get: function() {\n        return utf8_1.UnicodeNormalizationForm;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorFuncs\", { enumerable: true, get: function() {\n        return utf8_1.Utf8ErrorFuncs;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorReason\", { enumerable: true, get: function() {\n        return utf8_1.Utf8ErrorReason;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/string.js\n  var require_string = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/string.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.StringCoder = void 0;\n      var strings_1 = require_lib9();\n      var bytes_1 = require_bytes();\n      var StringCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(StringCoder3, _super);\n          function StringCoder3(localName) {\n            return _super.call(this, \"string\", localName) || this;\n          }\n          StringCoder3.prototype.defaultValue = function() {\n            return \"\";\n          };\n          StringCoder3.prototype.encode = function(writer, value) {\n            return _super.prototype.encode.call(this, writer, (0, strings_1.toUtf8Bytes)(value));\n          };\n          StringCoder3.prototype.decode = function(reader) {\n            return (0, strings_1.toUtf8String)(_super.prototype.decode.call(this, reader));\n          };\n          return StringCoder3;\n        }(bytes_1.DynamicBytesCoder)\n      );\n      exports3.StringCoder = StringCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/tuple.js\n  var require_tuple = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/coders/tuple.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.TupleCoder = void 0;\n      var abstract_coder_1 = require_abstract_coder();\n      var array_1 = require_array();\n      var TupleCoder2 = (\n        /** @class */\n        function(_super) {\n          __extends2(TupleCoder3, _super);\n          function TupleCoder3(coders, localName) {\n            var _this = this;\n            var dynamic = false;\n            var types = [];\n            coders.forEach(function(coder) {\n              if (coder.dynamic) {\n                dynamic = true;\n              }\n              types.push(coder.type);\n            });\n            var type = \"tuple(\" + types.join(\",\") + \")\";\n            _this = _super.call(this, \"tuple\", type, localName, dynamic) || this;\n            _this.coders = coders;\n            return _this;\n          }\n          TupleCoder3.prototype.defaultValue = function() {\n            var values = [];\n            this.coders.forEach(function(coder) {\n              values.push(coder.defaultValue());\n            });\n            var uniqueNames = this.coders.reduce(function(accum, coder) {\n              var name = coder.localName;\n              if (name) {\n                if (!accum[name]) {\n                  accum[name] = 0;\n                }\n                accum[name]++;\n              }\n              return accum;\n            }, {});\n            this.coders.forEach(function(coder, index) {\n              var name = coder.localName;\n              if (!name || uniqueNames[name] !== 1) {\n                return;\n              }\n              if (name === \"length\") {\n                name = \"_length\";\n              }\n              if (values[name] != null) {\n                return;\n              }\n              values[name] = values[index];\n            });\n            return Object.freeze(values);\n          };\n          TupleCoder3.prototype.encode = function(writer, value) {\n            return (0, array_1.pack)(writer, this.coders, value);\n          };\n          TupleCoder3.prototype.decode = function(reader) {\n            return reader.coerce(this.name, (0, array_1.unpack)(reader, this.coders));\n          };\n          return TupleCoder3;\n        }(abstract_coder_1.Coder)\n      );\n      exports3.TupleCoder = TupleCoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/abi-coder.js\n  var require_abi_coder = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/abi-coder.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.defaultAbiCoder = exports3.AbiCoder = void 0;\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version5();\n      var logger = new logger_1.Logger(_version_1.version);\n      var abstract_coder_1 = require_abstract_coder();\n      var address_1 = require_address();\n      var array_1 = require_array();\n      var boolean_1 = require_boolean();\n      var bytes_2 = require_bytes();\n      var fixed_bytes_1 = require_fixed_bytes();\n      var null_1 = require_null();\n      var number_1 = require_number();\n      var string_1 = require_string();\n      var tuple_1 = require_tuple();\n      var fragments_1 = require_fragments();\n      var paramTypeBytes2 = new RegExp(/^bytes([0-9]*)$/);\n      var paramTypeNumber2 = new RegExp(/^(u?int)([0-9]*)$/);\n      var AbiCoder2 = (\n        /** @class */\n        function() {\n          function AbiCoder3(coerceFunc) {\n            (0, properties_1.defineReadOnly)(this, \"coerceFunc\", coerceFunc || null);\n          }\n          AbiCoder3.prototype._getCoder = function(param) {\n            var _this = this;\n            switch (param.baseType) {\n              case \"address\":\n                return new address_1.AddressCoder(param.name);\n              case \"bool\":\n                return new boolean_1.BooleanCoder(param.name);\n              case \"string\":\n                return new string_1.StringCoder(param.name);\n              case \"bytes\":\n                return new bytes_2.BytesCoder(param.name);\n              case \"array\":\n                return new array_1.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n              case \"tuple\":\n                return new tuple_1.TupleCoder((param.components || []).map(function(component) {\n                  return _this._getCoder(component);\n                }), param.name);\n              case \"\":\n                return new null_1.NullCoder(param.name);\n            }\n            var match = param.type.match(paramTypeNumber2);\n            if (match) {\n              var size = parseInt(match[2] || \"256\");\n              if (size === 0 || size > 256 || size % 8 !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n              }\n              return new number_1.NumberCoder(size / 8, match[1] === \"int\", param.name);\n            }\n            match = param.type.match(paramTypeBytes2);\n            if (match) {\n              var size = parseInt(match[1]);\n              if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n              }\n              return new fixed_bytes_1.FixedBytesCoder(size, param.name);\n            }\n            return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n          };\n          AbiCoder3.prototype._getWordSize = function() {\n            return 32;\n          };\n          AbiCoder3.prototype._getReader = function(data, allowLoose) {\n            return new abstract_coder_1.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n          };\n          AbiCoder3.prototype._getWriter = function() {\n            return new abstract_coder_1.Writer(this._getWordSize());\n          };\n          AbiCoder3.prototype.getDefaultValue = function(types) {\n            var _this = this;\n            var coders = types.map(function(type) {\n              return _this._getCoder(fragments_1.ParamType.from(type));\n            });\n            var coder = new tuple_1.TupleCoder(coders, \"_\");\n            return coder.defaultValue();\n          };\n          AbiCoder3.prototype.encode = function(types, values) {\n            var _this = this;\n            if (types.length !== values.length) {\n              logger.throwError(\"types/values length mismatch\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types, values }\n              });\n            }\n            var coders = types.map(function(type) {\n              return _this._getCoder(fragments_1.ParamType.from(type));\n            });\n            var coder = new tuple_1.TupleCoder(coders, \"_\");\n            var writer = this._getWriter();\n            coder.encode(writer, values);\n            return writer.data;\n          };\n          AbiCoder3.prototype.decode = function(types, data, loose) {\n            var _this = this;\n            var coders = types.map(function(type) {\n              return _this._getCoder(fragments_1.ParamType.from(type));\n            });\n            var coder = new tuple_1.TupleCoder(coders, \"_\");\n            return coder.decode(this._getReader((0, bytes_1.arrayify)(data), loose));\n          };\n          return AbiCoder3;\n        }()\n      );\n      exports3.AbiCoder = AbiCoder2;\n      exports3.defaultAbiCoder = new AbiCoder2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/id.js\n  var require_id = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/id.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.id = void 0;\n      var keccak256_1 = require_lib5();\n      var strings_1 = require_lib9();\n      function id2(text) {\n        return (0, keccak256_1.keccak256)((0, strings_1.toUtf8Bytes)(text));\n      }\n      exports3.id = id2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/_version.js\n  var require_version9 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"hash/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+base64@5.8.0/node_modules/@ethersproject/base64/lib/browser-base64.js\n  var require_browser_base64 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+base64@5.8.0/node_modules/@ethersproject/base64/lib/browser-base64.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.encode = exports3.decode = void 0;\n      var bytes_1 = require_lib2();\n      function decode(textData) {\n        textData = atob(textData);\n        var data = [];\n        for (var i = 0; i < textData.length; i++) {\n          data.push(textData.charCodeAt(i));\n        }\n        return (0, bytes_1.arrayify)(data);\n      }\n      exports3.decode = decode;\n      function encode(data) {\n        data = (0, bytes_1.arrayify)(data);\n        var textData = \"\";\n        for (var i = 0; i < data.length; i++) {\n          textData += String.fromCharCode(data[i]);\n        }\n        return btoa(textData);\n      }\n      exports3.encode = encode;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+base64@5.8.0/node_modules/@ethersproject/base64/lib/index.js\n  var require_lib10 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+base64@5.8.0/node_modules/@ethersproject/base64/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.encode = exports3.decode = void 0;\n      var base64_1 = require_browser_base64();\n      Object.defineProperty(exports3, \"decode\", { enumerable: true, get: function() {\n        return base64_1.decode;\n      } });\n      Object.defineProperty(exports3, \"encode\", { enumerable: true, get: function() {\n        return base64_1.encode;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js\n  var require_decoder = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.read_emoji_trie = exports3.read_zero_terminated_array = exports3.read_mapped_map = exports3.read_member_array = exports3.signed = exports3.read_compressed_payload = exports3.read_payload = exports3.decode_arithmetic = void 0;\n      function flat(array, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        var result = [];\n        var forEach = result.forEach;\n        var flatDeep = function(arr, depth2) {\n          forEach.call(arr, function(val) {\n            if (depth2 > 0 && Array.isArray(val)) {\n              flatDeep(val, depth2 - 1);\n            } else {\n              result.push(val);\n            }\n          });\n        };\n        flatDeep(array, depth);\n        return result;\n      }\n      function fromEntries(array) {\n        var result = {};\n        for (var i = 0; i < array.length; i++) {\n          var value = array[i];\n          result[value[0]] = value[1];\n        }\n        return result;\n      }\n      function decode_arithmetic2(bytes2) {\n        var pos = 0;\n        function u16() {\n          return bytes2[pos++] << 8 | bytes2[pos++];\n        }\n        var symbol_count = u16();\n        var total = 1;\n        var acc = [0, 1];\n        for (var i = 1; i < symbol_count; i++) {\n          acc.push(total += u16());\n        }\n        var skip = u16();\n        var pos_payload = pos;\n        pos += skip;\n        var read_width = 0;\n        var read_buffer = 0;\n        function read_bit() {\n          if (read_width == 0) {\n            read_buffer = read_buffer << 8 | bytes2[pos++];\n            read_width = 8;\n          }\n          return read_buffer >> --read_width & 1;\n        }\n        var N = 31;\n        var FULL = Math.pow(2, N);\n        var HALF = FULL >>> 1;\n        var QRTR = HALF >> 1;\n        var MASK = FULL - 1;\n        var register = 0;\n        for (var i = 0; i < N; i++)\n          register = register << 1 | read_bit();\n        var symbols = [];\n        var low = 0;\n        var range = FULL;\n        while (true) {\n          var value = Math.floor(((register - low + 1) * total - 1) / range);\n          var start = 0;\n          var end = symbol_count;\n          while (end - start > 1) {\n            var mid = start + end >>> 1;\n            if (value < acc[mid]) {\n              end = mid;\n            } else {\n              start = mid;\n            }\n          }\n          if (start == 0)\n            break;\n          symbols.push(start);\n          var a = low + Math.floor(range * acc[start] / total);\n          var b2 = low + Math.floor(range * acc[start + 1] / total) - 1;\n          while (((a ^ b2) & HALF) == 0) {\n            register = register << 1 & MASK | read_bit();\n            a = a << 1 & MASK;\n            b2 = b2 << 1 & MASK | 1;\n          }\n          while (a & ~b2 & QRTR) {\n            register = register & HALF | register << 1 & MASK >>> 1 | read_bit();\n            a = a << 1 ^ HALF;\n            b2 = (b2 ^ HALF) << 1 | HALF | 1;\n          }\n          low = a;\n          range = 1 + b2 - a;\n        }\n        var offset = symbol_count - 4;\n        return symbols.map(function(x) {\n          switch (x - offset) {\n            case 3:\n              return offset + 65792 + (bytes2[pos_payload++] << 16 | bytes2[pos_payload++] << 8 | bytes2[pos_payload++]);\n            case 2:\n              return offset + 256 + (bytes2[pos_payload++] << 8 | bytes2[pos_payload++]);\n            case 1:\n              return offset + bytes2[pos_payload++];\n            default:\n              return x - 1;\n          }\n        });\n      }\n      exports3.decode_arithmetic = decode_arithmetic2;\n      function read_payload2(v) {\n        var pos = 0;\n        return function() {\n          return v[pos++];\n        };\n      }\n      exports3.read_payload = read_payload2;\n      function read_compressed_payload2(bytes2) {\n        return read_payload2(decode_arithmetic2(bytes2));\n      }\n      exports3.read_compressed_payload = read_compressed_payload2;\n      function signed2(i) {\n        return i & 1 ? ~i >> 1 : i >> 1;\n      }\n      exports3.signed = signed2;\n      function read_counts(n2, next) {\n        var v = Array(n2);\n        for (var i = 0; i < n2; i++)\n          v[i] = 1 + next();\n        return v;\n      }\n      function read_ascending(n2, next) {\n        var v = Array(n2);\n        for (var i = 0, x = -1; i < n2; i++)\n          v[i] = x += 1 + next();\n        return v;\n      }\n      function read_deltas2(n2, next) {\n        var v = Array(n2);\n        for (var i = 0, x = 0; i < n2; i++)\n          v[i] = x += signed2(next());\n        return v;\n      }\n      function read_member_array(next, lookup) {\n        var v = read_ascending(next(), next);\n        var n2 = next();\n        var vX = read_ascending(n2, next);\n        var vN = read_counts(n2, next);\n        for (var i = 0; i < n2; i++) {\n          for (var j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n          }\n        }\n        return lookup ? v.map(function(x) {\n          return lookup[x];\n        }) : v;\n      }\n      exports3.read_member_array = read_member_array;\n      function read_mapped_map(next) {\n        var ret = [];\n        while (true) {\n          var w = next();\n          if (w == 0)\n            break;\n          ret.push(read_linear_table2(w, next));\n        }\n        while (true) {\n          var w = next() - 1;\n          if (w < 0)\n            break;\n          ret.push(read_replacement_table2(w, next));\n        }\n        return fromEntries(flat(ret));\n      }\n      exports3.read_mapped_map = read_mapped_map;\n      function read_zero_terminated_array(next) {\n        var v = [];\n        while (true) {\n          var i = next();\n          if (i == 0)\n            break;\n          v.push(i);\n        }\n        return v;\n      }\n      exports3.read_zero_terminated_array = read_zero_terminated_array;\n      function read_transposed2(n2, w, next) {\n        var m = Array(n2).fill(void 0).map(function() {\n          return [];\n        });\n        for (var i = 0; i < w; i++) {\n          read_deltas2(n2, next).forEach(function(x, j) {\n            return m[j].push(x);\n          });\n        }\n        return m;\n      }\n      function read_linear_table2(w, next) {\n        var dx = 1 + next();\n        var dy = next();\n        var vN = read_zero_terminated_array(next);\n        var m = read_transposed2(vN.length, 1 + w, next);\n        return flat(m.map(function(v, i) {\n          var x = v[0], ys = v.slice(1);\n          return Array(vN[i]).fill(void 0).map(function(_, j) {\n            var j_dy = j * dy;\n            return [x + j * dx, ys.map(function(y) {\n              return y + j_dy;\n            })];\n          });\n        }));\n      }\n      function read_replacement_table2(w, next) {\n        var n2 = 1 + next();\n        var m = read_transposed2(n2, 1 + w, next);\n        return m.map(function(v) {\n          return [v[0], v.slice(1)];\n        });\n      }\n      function read_emoji_trie(next) {\n        var sorted = read_member_array(next).sort(function(a, b2) {\n          return a - b2;\n        });\n        return read();\n        function read() {\n          var branches = [];\n          while (true) {\n            var keys = read_member_array(next, sorted);\n            if (keys.length == 0)\n              break;\n            branches.push({ set: new Set(keys), node: read() });\n          }\n          branches.sort(function(a, b2) {\n            return b2.set.size - a.set.size;\n          });\n          var temp = next();\n          var valid = temp % 3;\n          temp = temp / 3 | 0;\n          var fe0f = !!(temp & 1);\n          temp >>= 1;\n          var save = temp == 1;\n          var check = temp == 2;\n          return { branches, valid, fe0f, save, check };\n        }\n      }\n      exports3.read_emoji_trie = read_emoji_trie;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/include.js\n  var require_include = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/include.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getData = void 0;\n      var base64_1 = require_lib10();\n      var decoder_js_1 = require_decoder();\n      function getData() {\n        return (0, decoder_js_1.read_compressed_payload)((0, base64_1.decode)(\"AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA==\"));\n      }\n      exports3.getData = getData;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/lib.js\n  var require_lib11 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/ens-normalize/lib.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.ens_normalize = exports3.ens_normalize_post_check = void 0;\n      var strings_1 = require_lib9();\n      var include_js_1 = require_include();\n      var r = (0, include_js_1.getData)();\n      var decoder_js_1 = require_decoder();\n      var VALID2 = new Set((0, decoder_js_1.read_member_array)(r));\n      var IGNORED2 = new Set((0, decoder_js_1.read_member_array)(r));\n      var MAPPED2 = (0, decoder_js_1.read_mapped_map)(r);\n      var EMOJI_ROOT2 = (0, decoder_js_1.read_emoji_trie)(r);\n      var HYPHEN2 = 45;\n      var UNDERSCORE = 95;\n      function explode_cp2(name) {\n        return (0, strings_1.toUtf8CodePoints)(name);\n      }\n      function filter_fe0f2(cps) {\n        return cps.filter(function(cp) {\n          return cp != 65039;\n        });\n      }\n      function ens_normalize_post_check(name) {\n        for (var _i = 0, _a = name.split(\".\"); _i < _a.length; _i++) {\n          var label = _a[_i];\n          var cps = explode_cp2(label);\n          try {\n            for (var i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n              if (cps[i] !== UNDERSCORE) {\n                throw new Error(\"underscore only allowed at start\");\n              }\n            }\n            if (cps.length >= 4 && cps.every(function(cp) {\n              return cp < 128;\n            }) && cps[2] === HYPHEN2 && cps[3] === HYPHEN2) {\n              throw new Error(\"invalid label extension\");\n            }\n          } catch (err) {\n            throw new Error('Invalid label \"' + label + '\": ' + err.message);\n          }\n        }\n        return name;\n      }\n      exports3.ens_normalize_post_check = ens_normalize_post_check;\n      function ens_normalize2(name) {\n        return ens_normalize_post_check(normalize(name, filter_fe0f2));\n      }\n      exports3.ens_normalize = ens_normalize2;\n      function normalize(name, emoji_filter) {\n        var input = explode_cp2(name).reverse();\n        var output2 = [];\n        while (input.length) {\n          var emoji = consume_emoji_reversed2(input);\n          if (emoji) {\n            output2.push.apply(output2, emoji_filter(emoji));\n            continue;\n          }\n          var cp = input.pop();\n          if (VALID2.has(cp)) {\n            output2.push(cp);\n            continue;\n          }\n          if (IGNORED2.has(cp)) {\n            continue;\n          }\n          var cps = MAPPED2[cp];\n          if (cps) {\n            output2.push.apply(output2, cps);\n            continue;\n          }\n          throw new Error(\"Disallowed codepoint: 0x\" + cp.toString(16).toUpperCase());\n        }\n        return ens_normalize_post_check(nfc2(String.fromCodePoint.apply(String, output2)));\n      }\n      function nfc2(s) {\n        return s.normalize(\"NFC\");\n      }\n      function consume_emoji_reversed2(cps, eaten) {\n        var _a;\n        var node = EMOJI_ROOT2;\n        var emoji;\n        var saved;\n        var stack = [];\n        var pos = cps.length;\n        if (eaten)\n          eaten.length = 0;\n        var _loop_1 = function() {\n          var cp = cps[--pos];\n          node = (_a = node.branches.find(function(x) {\n            return x.set.has(cp);\n          })) === null || _a === void 0 ? void 0 : _a.node;\n          if (!node)\n            return \"break\";\n          if (node.save) {\n            saved = cp;\n          } else if (node.check) {\n            if (cp === saved)\n              return \"break\";\n          }\n          stack.push(cp);\n          if (node.fe0f) {\n            stack.push(65039);\n            if (pos > 0 && cps[pos - 1] == 65039)\n              pos--;\n          }\n          if (node.valid) {\n            emoji = stack.slice();\n            if (node.valid == 2)\n              emoji.splice(1, 1);\n            if (eaten)\n              eaten.push.apply(eaten, cps.slice(pos).reverse());\n            cps.length = pos;\n          }\n        };\n        while (pos) {\n          var state_1 = _loop_1();\n          if (state_1 === \"break\")\n            break;\n        }\n        return emoji;\n      }\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/namehash.js\n  var require_namehash = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/namehash.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.dnsEncode = exports3.namehash = exports3.isValidName = exports3.ensNormalize = void 0;\n      var bytes_1 = require_lib2();\n      var strings_1 = require_lib9();\n      var keccak256_1 = require_lib5();\n      var logger_1 = require_lib();\n      var _version_1 = require_version9();\n      var logger = new logger_1.Logger(_version_1.version);\n      var lib_1 = require_lib11();\n      var Zeros2 = new Uint8Array(32);\n      Zeros2.fill(0);\n      function checkComponent2(comp) {\n        if (comp.length === 0) {\n          throw new Error(\"invalid ENS name; empty component\");\n        }\n        return comp;\n      }\n      function ensNameSplit2(name) {\n        var bytes2 = (0, strings_1.toUtf8Bytes)((0, lib_1.ens_normalize)(name));\n        var comps = [];\n        if (name.length === 0) {\n          return comps;\n        }\n        var last = 0;\n        for (var i = 0; i < bytes2.length; i++) {\n          var d = bytes2[i];\n          if (d === 46) {\n            comps.push(checkComponent2(bytes2.slice(last, i)));\n            last = i + 1;\n          }\n        }\n        if (last >= bytes2.length) {\n          throw new Error(\"invalid ENS name; empty component\");\n        }\n        comps.push(checkComponent2(bytes2.slice(last)));\n        return comps;\n      }\n      function ensNormalize2(name) {\n        return ensNameSplit2(name).map(function(comp) {\n          return (0, strings_1.toUtf8String)(comp);\n        }).join(\".\");\n      }\n      exports3.ensNormalize = ensNormalize2;\n      function isValidName2(name) {\n        try {\n          return ensNameSplit2(name).length !== 0;\n        } catch (error) {\n        }\n        return false;\n      }\n      exports3.isValidName = isValidName2;\n      function namehash2(name) {\n        if (typeof name !== \"string\") {\n          logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n        }\n        var result = Zeros2;\n        var comps = ensNameSplit2(name);\n        while (comps.length) {\n          result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(comps.pop())]));\n        }\n        return (0, bytes_1.hexlify)(result);\n      }\n      exports3.namehash = namehash2;\n      function dnsEncode2(name) {\n        return (0, bytes_1.hexlify)((0, bytes_1.concat)(ensNameSplit2(name).map(function(comp) {\n          if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n          }\n          var bytes2 = new Uint8Array(comp.length + 1);\n          bytes2.set(comp, 1);\n          bytes2[0] = bytes2.length - 1;\n          return bytes2;\n        }))) + \"00\";\n      }\n      exports3.dnsEncode = dnsEncode2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/message.js\n  var require_message = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/message.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.hashMessage = exports3.messagePrefix = void 0;\n      var bytes_1 = require_lib2();\n      var keccak256_1 = require_lib5();\n      var strings_1 = require_lib9();\n      exports3.messagePrefix = \"\u0019Ethereum Signed Message:\\n\";\n      function hashMessage(message) {\n        if (typeof message === \"string\") {\n          message = (0, strings_1.toUtf8Bytes)(message);\n        }\n        return (0, keccak256_1.keccak256)((0, bytes_1.concat)([\n          (0, strings_1.toUtf8Bytes)(exports3.messagePrefix),\n          (0, strings_1.toUtf8Bytes)(String(message.length)),\n          message\n        ]));\n      }\n      exports3.hashMessage = hashMessage;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/typed-data.js\n  var require_typed_data = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/typed-data.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.TypedDataEncoder = void 0;\n      var address_1 = require_lib7();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var keccak256_1 = require_lib5();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version9();\n      var logger = new logger_1.Logger(_version_1.version);\n      var id_1 = require_id();\n      var padding2 = new Uint8Array(32);\n      padding2.fill(0);\n      var NegativeOne = bignumber_1.BigNumber.from(-1);\n      var Zero = bignumber_1.BigNumber.from(0);\n      var One = bignumber_1.BigNumber.from(1);\n      var MaxUint256 = bignumber_1.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      function hexPadRight2(value) {\n        var bytes2 = (0, bytes_1.arrayify)(value);\n        var padOffset = bytes2.length % 32;\n        if (padOffset) {\n          return (0, bytes_1.hexConcat)([bytes2, padding2.slice(padOffset)]);\n        }\n        return (0, bytes_1.hexlify)(bytes2);\n      }\n      var hexTrue2 = (0, bytes_1.hexZeroPad)(One.toHexString(), 32);\n      var hexFalse2 = (0, bytes_1.hexZeroPad)(Zero.toHexString(), 32);\n      var domainFieldTypes2 = {\n        name: \"string\",\n        version: \"string\",\n        chainId: \"uint256\",\n        verifyingContract: \"address\",\n        salt: \"bytes32\"\n      };\n      var domainFieldNames2 = [\n        \"name\",\n        \"version\",\n        \"chainId\",\n        \"verifyingContract\",\n        \"salt\"\n      ];\n      function checkString2(key) {\n        return function(value) {\n          if (typeof value !== \"string\") {\n            logger.throwArgumentError(\"invalid domain value for \" + JSON.stringify(key), \"domain.\" + key, value);\n          }\n          return value;\n        };\n      }\n      var domainChecks2 = {\n        name: checkString2(\"name\"),\n        version: checkString2(\"version\"),\n        chainId: function(value) {\n          try {\n            return bignumber_1.BigNumber.from(value).toString();\n          } catch (error) {\n          }\n          return logger.throwArgumentError('invalid domain value for \"chainId\"', \"domain.chainId\", value);\n        },\n        verifyingContract: function(value) {\n          try {\n            return (0, address_1.getAddress)(value).toLowerCase();\n          } catch (error) {\n          }\n          return logger.throwArgumentError('invalid domain value \"verifyingContract\"', \"domain.verifyingContract\", value);\n        },\n        salt: function(value) {\n          try {\n            var bytes2 = (0, bytes_1.arrayify)(value);\n            if (bytes2.length !== 32) {\n              throw new Error(\"bad length\");\n            }\n            return (0, bytes_1.hexlify)(bytes2);\n          } catch (error) {\n          }\n          return logger.throwArgumentError('invalid domain value \"salt\"', \"domain.salt\", value);\n        }\n      };\n      function getBaseEncoder2(type) {\n        {\n          var match = type.match(/^(u?)int(\\d*)$/);\n          if (match) {\n            var signed2 = match[1] === \"\";\n            var width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n              logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            var boundsUpper_1 = MaxUint256.mask(signed2 ? width - 1 : width);\n            var boundsLower_1 = signed2 ? boundsUpper_1.add(One).mul(NegativeOne) : Zero;\n            return function(value) {\n              var v = bignumber_1.BigNumber.from(value);\n              if (v.lt(boundsLower_1) || v.gt(boundsUpper_1)) {\n                logger.throwArgumentError(\"value out-of-bounds for \" + type, \"value\", value);\n              }\n              return (0, bytes_1.hexZeroPad)(v.toTwos(256).toHexString(), 32);\n            };\n          }\n        }\n        {\n          var match = type.match(/^bytes(\\d+)$/);\n          if (match) {\n            var width_1 = parseInt(match[1]);\n            if (width_1 === 0 || width_1 > 32 || match[1] !== String(width_1)) {\n              logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function(value) {\n              var bytes2 = (0, bytes_1.arrayify)(value);\n              if (bytes2.length !== width_1) {\n                logger.throwArgumentError(\"invalid length for \" + type, \"value\", value);\n              }\n              return hexPadRight2(value);\n            };\n          }\n        }\n        switch (type) {\n          case \"address\":\n            return function(value) {\n              return (0, bytes_1.hexZeroPad)((0, address_1.getAddress)(value), 32);\n            };\n          case \"bool\":\n            return function(value) {\n              return !value ? hexFalse2 : hexTrue2;\n            };\n          case \"bytes\":\n            return function(value) {\n              return (0, keccak256_1.keccak256)(value);\n            };\n          case \"string\":\n            return function(value) {\n              return (0, id_1.id)(value);\n            };\n        }\n        return null;\n      }\n      function encodeType2(name, fields) {\n        return name + \"(\" + fields.map(function(_a) {\n          var name2 = _a.name, type = _a.type;\n          return type + \" \" + name2;\n        }).join(\",\") + \")\";\n      }\n      var TypedDataEncoder2 = (\n        /** @class */\n        function() {\n          function TypedDataEncoder3(types) {\n            (0, properties_1.defineReadOnly)(this, \"types\", Object.freeze((0, properties_1.deepCopy)(types)));\n            (0, properties_1.defineReadOnly)(this, \"_encoderCache\", {});\n            (0, properties_1.defineReadOnly)(this, \"_types\", {});\n            var links = {};\n            var parents = {};\n            var subtypes = {};\n            Object.keys(types).forEach(function(type) {\n              links[type] = {};\n              parents[type] = [];\n              subtypes[type] = {};\n            });\n            var _loop_1 = function(name_12) {\n              var uniqueNames = {};\n              types[name_12].forEach(function(field) {\n                if (uniqueNames[field.name]) {\n                  logger.throwArgumentError(\"duplicate variable name \" + JSON.stringify(field.name) + \" in \" + JSON.stringify(name_12), \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                var baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name_12) {\n                  logger.throwArgumentError(\"circular type reference to \" + JSON.stringify(baseType), \"types\", types);\n                }\n                var encoder = getBaseEncoder2(baseType);\n                if (encoder) {\n                  return;\n                }\n                if (!parents[baseType]) {\n                  logger.throwArgumentError(\"unknown type \" + JSON.stringify(baseType), \"types\", types);\n                }\n                parents[baseType].push(name_12);\n                links[name_12][baseType] = true;\n              });\n            };\n            for (var name_1 in types) {\n              _loop_1(name_1);\n            }\n            var primaryTypes = Object.keys(parents).filter(function(n2) {\n              return parents[n2].length === 0;\n            });\n            if (primaryTypes.length === 0) {\n              logger.throwArgumentError(\"missing primary type\", \"types\", types);\n            } else if (primaryTypes.length > 1) {\n              logger.throwArgumentError(\"ambiguous primary types or unused types: \" + primaryTypes.map(function(t) {\n                return JSON.stringify(t);\n              }).join(\", \"), \"types\", types);\n            }\n            (0, properties_1.defineReadOnly)(this, \"primaryType\", primaryTypes[0]);\n            function checkCircular(type, found) {\n              if (found[type]) {\n                logger.throwArgumentError(\"circular type reference to \" + JSON.stringify(type), \"types\", types);\n              }\n              found[type] = true;\n              Object.keys(links[type]).forEach(function(child) {\n                if (!parents[child]) {\n                  return;\n                }\n                checkCircular(child, found);\n                Object.keys(found).forEach(function(subtype) {\n                  subtypes[subtype][child] = true;\n                });\n              });\n              delete found[type];\n            }\n            checkCircular(this.primaryType, {});\n            for (var name_2 in subtypes) {\n              var st = Object.keys(subtypes[name_2]);\n              st.sort();\n              this._types[name_2] = encodeType2(name_2, types[name_2]) + st.map(function(t) {\n                return encodeType2(t, types[t]);\n              }).join(\"\");\n            }\n          }\n          TypedDataEncoder3.prototype.getEncoder = function(type) {\n            var encoder = this._encoderCache[type];\n            if (!encoder) {\n              encoder = this._encoderCache[type] = this._getEncoder(type);\n            }\n            return encoder;\n          };\n          TypedDataEncoder3.prototype._getEncoder = function(type) {\n            var _this = this;\n            {\n              var encoder = getBaseEncoder2(type);\n              if (encoder) {\n                return encoder;\n              }\n            }\n            var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n            if (match) {\n              var subtype_1 = match[1];\n              var subEncoder_1 = this.getEncoder(subtype_1);\n              var length_1 = parseInt(match[3]);\n              return function(value) {\n                if (length_1 >= 0 && value.length !== length_1) {\n                  logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                var result = value.map(subEncoder_1);\n                if (_this._types[subtype_1]) {\n                  result = result.map(keccak256_1.keccak256);\n                }\n                return (0, keccak256_1.keccak256)((0, bytes_1.hexConcat)(result));\n              };\n            }\n            var fields = this.types[type];\n            if (fields) {\n              var encodedType_1 = (0, id_1.id)(this._types[type]);\n              return function(value) {\n                var values = fields.map(function(_a) {\n                  var name = _a.name, type2 = _a.type;\n                  var result = _this.getEncoder(type2)(value[name]);\n                  if (_this._types[type2]) {\n                    return (0, keccak256_1.keccak256)(result);\n                  }\n                  return result;\n                });\n                values.unshift(encodedType_1);\n                return (0, bytes_1.hexConcat)(values);\n              };\n            }\n            return logger.throwArgumentError(\"unknown type: \" + type, \"type\", type);\n          };\n          TypedDataEncoder3.prototype.encodeType = function(name) {\n            var result = this._types[name];\n            if (!result) {\n              logger.throwArgumentError(\"unknown type: \" + JSON.stringify(name), \"name\", name);\n            }\n            return result;\n          };\n          TypedDataEncoder3.prototype.encodeData = function(type, value) {\n            return this.getEncoder(type)(value);\n          };\n          TypedDataEncoder3.prototype.hashStruct = function(name, value) {\n            return (0, keccak256_1.keccak256)(this.encodeData(name, value));\n          };\n          TypedDataEncoder3.prototype.encode = function(value) {\n            return this.encodeData(this.primaryType, value);\n          };\n          TypedDataEncoder3.prototype.hash = function(value) {\n            return this.hashStruct(this.primaryType, value);\n          };\n          TypedDataEncoder3.prototype._visit = function(type, value, callback) {\n            var _this = this;\n            {\n              var encoder = getBaseEncoder2(type);\n              if (encoder) {\n                return callback(type, value);\n              }\n            }\n            var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n            if (match) {\n              var subtype_2 = match[1];\n              var length_2 = parseInt(match[3]);\n              if (length_2 >= 0 && value.length !== length_2) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n              }\n              return value.map(function(v) {\n                return _this._visit(subtype_2, v, callback);\n              });\n            }\n            var fields = this.types[type];\n            if (fields) {\n              return fields.reduce(function(accum, _a) {\n                var name = _a.name, type2 = _a.type;\n                accum[name] = _this._visit(type2, value[name], callback);\n                return accum;\n              }, {});\n            }\n            return logger.throwArgumentError(\"unknown type: \" + type, \"type\", type);\n          };\n          TypedDataEncoder3.prototype.visit = function(value, callback) {\n            return this._visit(this.primaryType, value, callback);\n          };\n          TypedDataEncoder3.from = function(types) {\n            return new TypedDataEncoder3(types);\n          };\n          TypedDataEncoder3.getPrimaryType = function(types) {\n            return TypedDataEncoder3.from(types).primaryType;\n          };\n          TypedDataEncoder3.hashStruct = function(name, types, value) {\n            return TypedDataEncoder3.from(types).hashStruct(name, value);\n          };\n          TypedDataEncoder3.hashDomain = function(domain2) {\n            var domainFields = [];\n            for (var name_3 in domain2) {\n              var type = domainFieldTypes2[name_3];\n              if (!type) {\n                logger.throwArgumentError(\"invalid typed-data domain key: \" + JSON.stringify(name_3), \"domain\", domain2);\n              }\n              domainFields.push({ name: name_3, type });\n            }\n            domainFields.sort(function(a, b2) {\n              return domainFieldNames2.indexOf(a.name) - domainFieldNames2.indexOf(b2.name);\n            });\n            return TypedDataEncoder3.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain2);\n          };\n          TypedDataEncoder3.encode = function(domain2, types, value) {\n            return (0, bytes_1.hexConcat)([\n              \"0x1901\",\n              TypedDataEncoder3.hashDomain(domain2),\n              TypedDataEncoder3.from(types).hash(value)\n            ]);\n          };\n          TypedDataEncoder3.hash = function(domain2, types, value) {\n            return (0, keccak256_1.keccak256)(TypedDataEncoder3.encode(domain2, types, value));\n          };\n          TypedDataEncoder3.resolveNames = function(domain2, types, value, resolveName) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var ensCache, encoder, _a, _b, _i, name_4, _c, _d;\n              return __generator2(this, function(_e) {\n                switch (_e.label) {\n                  case 0:\n                    domain2 = (0, properties_1.shallowCopy)(domain2);\n                    ensCache = {};\n                    if (domain2.verifyingContract && !(0, bytes_1.isHexString)(domain2.verifyingContract, 20)) {\n                      ensCache[domain2.verifyingContract] = \"0x\";\n                    }\n                    encoder = TypedDataEncoder3.from(types);\n                    encoder.visit(value, function(type, value2) {\n                      if (type === \"address\" && !(0, bytes_1.isHexString)(value2, 20)) {\n                        ensCache[value2] = \"0x\";\n                      }\n                      return value2;\n                    });\n                    _a = [];\n                    for (_b in ensCache)\n                      _a.push(_b);\n                    _i = 0;\n                    _e.label = 1;\n                  case 1:\n                    if (!(_i < _a.length))\n                      return [3, 4];\n                    name_4 = _a[_i];\n                    _c = ensCache;\n                    _d = name_4;\n                    return [4, resolveName(name_4)];\n                  case 2:\n                    _c[_d] = _e.sent();\n                    _e.label = 3;\n                  case 3:\n                    _i++;\n                    return [3, 1];\n                  case 4:\n                    if (domain2.verifyingContract && ensCache[domain2.verifyingContract]) {\n                      domain2.verifyingContract = ensCache[domain2.verifyingContract];\n                    }\n                    value = encoder.visit(value, function(type, value2) {\n                      if (type === \"address\" && ensCache[value2]) {\n                        return ensCache[value2];\n                      }\n                      return value2;\n                    });\n                    return [2, { domain: domain2, value }];\n                }\n              });\n            });\n          };\n          TypedDataEncoder3.getPayload = function(domain2, types, value) {\n            TypedDataEncoder3.hashDomain(domain2);\n            var domainValues = {};\n            var domainTypes = [];\n            domainFieldNames2.forEach(function(name) {\n              var value2 = domain2[name];\n              if (value2 == null) {\n                return;\n              }\n              domainValues[name] = domainChecks2[name](value2);\n              domainTypes.push({ name, type: domainFieldTypes2[name] });\n            });\n            var encoder = TypedDataEncoder3.from(types);\n            var typesWithDomain = (0, properties_1.shallowCopy)(types);\n            if (typesWithDomain.EIP712Domain) {\n              logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n            } else {\n              typesWithDomain.EIP712Domain = domainTypes;\n            }\n            encoder.encode(value);\n            return {\n              types: typesWithDomain,\n              domain: domainValues,\n              primaryType: encoder.primaryType,\n              message: encoder.visit(value, function(type, value2) {\n                if (type.match(/^bytes(\\d*)/)) {\n                  return (0, bytes_1.hexlify)((0, bytes_1.arrayify)(value2));\n                }\n                if (type.match(/^u?int/)) {\n                  return bignumber_1.BigNumber.from(value2).toString();\n                }\n                switch (type) {\n                  case \"address\":\n                    return value2.toLowerCase();\n                  case \"bool\":\n                    return !!value2;\n                  case \"string\":\n                    if (typeof value2 !== \"string\") {\n                      logger.throwArgumentError(\"invalid string\", \"value\", value2);\n                    }\n                    return value2;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n              })\n            };\n          };\n          return TypedDataEncoder3;\n        }()\n      );\n      exports3.TypedDataEncoder = TypedDataEncoder2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/index.js\n  var require_lib12 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hash@5.8.0/node_modules/@ethersproject/hash/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3._TypedDataEncoder = exports3.hashMessage = exports3.messagePrefix = exports3.ensNormalize = exports3.isValidName = exports3.namehash = exports3.dnsEncode = exports3.id = void 0;\n      var id_1 = require_id();\n      Object.defineProperty(exports3, \"id\", { enumerable: true, get: function() {\n        return id_1.id;\n      } });\n      var namehash_1 = require_namehash();\n      Object.defineProperty(exports3, \"dnsEncode\", { enumerable: true, get: function() {\n        return namehash_1.dnsEncode;\n      } });\n      Object.defineProperty(exports3, \"isValidName\", { enumerable: true, get: function() {\n        return namehash_1.isValidName;\n      } });\n      Object.defineProperty(exports3, \"namehash\", { enumerable: true, get: function() {\n        return namehash_1.namehash;\n      } });\n      var message_1 = require_message();\n      Object.defineProperty(exports3, \"hashMessage\", { enumerable: true, get: function() {\n        return message_1.hashMessage;\n      } });\n      Object.defineProperty(exports3, \"messagePrefix\", { enumerable: true, get: function() {\n        return message_1.messagePrefix;\n      } });\n      var namehash_2 = require_namehash();\n      Object.defineProperty(exports3, \"ensNormalize\", { enumerable: true, get: function() {\n        return namehash_2.ensNormalize;\n      } });\n      var typed_data_1 = require_typed_data();\n      Object.defineProperty(exports3, \"_TypedDataEncoder\", { enumerable: true, get: function() {\n        return typed_data_1.TypedDataEncoder;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/interface.js\n  var require_interface = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/interface.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Interface = exports3.Indexed = exports3.ErrorDescription = exports3.TransactionDescription = exports3.LogDescription = exports3.checkResultErrors = void 0;\n      var address_1 = require_lib7();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var hash_1 = require_lib12();\n      var keccak256_1 = require_lib5();\n      var properties_1 = require_lib4();\n      var abi_coder_1 = require_abi_coder();\n      var abstract_coder_1 = require_abstract_coder();\n      Object.defineProperty(exports3, \"checkResultErrors\", { enumerable: true, get: function() {\n        return abstract_coder_1.checkResultErrors;\n      } });\n      var fragments_1 = require_fragments();\n      var logger_1 = require_lib();\n      var _version_1 = require_version5();\n      var logger = new logger_1.Logger(_version_1.version);\n      var LogDescription2 = (\n        /** @class */\n        function(_super) {\n          __extends2(LogDescription3, _super);\n          function LogDescription3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          return LogDescription3;\n        }(properties_1.Description)\n      );\n      exports3.LogDescription = LogDescription2;\n      var TransactionDescription2 = (\n        /** @class */\n        function(_super) {\n          __extends2(TransactionDescription3, _super);\n          function TransactionDescription3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          return TransactionDescription3;\n        }(properties_1.Description)\n      );\n      exports3.TransactionDescription = TransactionDescription2;\n      var ErrorDescription2 = (\n        /** @class */\n        function(_super) {\n          __extends2(ErrorDescription3, _super);\n          function ErrorDescription3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          return ErrorDescription3;\n        }(properties_1.Description)\n      );\n      exports3.ErrorDescription = ErrorDescription2;\n      var Indexed2 = (\n        /** @class */\n        function(_super) {\n          __extends2(Indexed3, _super);\n          function Indexed3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          Indexed3.isIndexed = function(value) {\n            return !!(value && value._isIndexed);\n          };\n          return Indexed3;\n        }(properties_1.Description)\n      );\n      exports3.Indexed = Indexed2;\n      var BuiltinErrors2 = {\n        \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n        \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n      };\n      function wrapAccessError(property, error) {\n        var wrap = new Error(\"deferred error during ABI decoding triggered accessing \" + property);\n        wrap.error = error;\n        return wrap;\n      }\n      var Interface2 = (\n        /** @class */\n        function() {\n          function Interface3(fragments) {\n            var _newTarget = this.constructor;\n            var _this = this;\n            var abi = [];\n            if (typeof fragments === \"string\") {\n              abi = JSON.parse(fragments);\n            } else {\n              abi = fragments;\n            }\n            (0, properties_1.defineReadOnly)(this, \"fragments\", abi.map(function(fragment) {\n              return fragments_1.Fragment.from(fragment);\n            }).filter(function(fragment) {\n              return fragment != null;\n            }));\n            (0, properties_1.defineReadOnly)(this, \"_abiCoder\", (0, properties_1.getStatic)(_newTarget, \"getAbiCoder\")());\n            (0, properties_1.defineReadOnly)(this, \"functions\", {});\n            (0, properties_1.defineReadOnly)(this, \"errors\", {});\n            (0, properties_1.defineReadOnly)(this, \"events\", {});\n            (0, properties_1.defineReadOnly)(this, \"structs\", {});\n            this.fragments.forEach(function(fragment) {\n              var bucket = null;\n              switch (fragment.type) {\n                case \"constructor\":\n                  if (_this.deploy) {\n                    logger.warn(\"duplicate definition - constructor\");\n                    return;\n                  }\n                  (0, properties_1.defineReadOnly)(_this, \"deploy\", fragment);\n                  return;\n                case \"function\":\n                  bucket = _this.functions;\n                  break;\n                case \"event\":\n                  bucket = _this.events;\n                  break;\n                case \"error\":\n                  bucket = _this.errors;\n                  break;\n                default:\n                  return;\n              }\n              var signature = fragment.format();\n              if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n              }\n              bucket[signature] = fragment;\n            });\n            if (!this.deploy) {\n              (0, properties_1.defineReadOnly)(this, \"deploy\", fragments_1.ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n              }));\n            }\n            (0, properties_1.defineReadOnly)(this, \"_isInterface\", true);\n          }\n          Interface3.prototype.format = function(format) {\n            if (!format) {\n              format = fragments_1.FormatTypes.full;\n            }\n            if (format === fragments_1.FormatTypes.sighash) {\n              logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n            }\n            var abi = this.fragments.map(function(fragment) {\n              return fragment.format(format);\n            });\n            if (format === fragments_1.FormatTypes.json) {\n              return JSON.stringify(abi.map(function(j) {\n                return JSON.parse(j);\n              }));\n            }\n            return abi;\n          };\n          Interface3.getAbiCoder = function() {\n            return abi_coder_1.defaultAbiCoder;\n          };\n          Interface3.getAddress = function(address) {\n            return (0, address_1.getAddress)(address);\n          };\n          Interface3.getSighash = function(fragment) {\n            return (0, bytes_1.hexDataSlice)((0, hash_1.id)(fragment.format()), 0, 4);\n          };\n          Interface3.getEventTopic = function(eventFragment) {\n            return (0, hash_1.id)(eventFragment.format());\n          };\n          Interface3.prototype.getFunction = function(nameOrSignatureOrSighash) {\n            if ((0, bytes_1.isHexString)(nameOrSignatureOrSighash)) {\n              for (var name_1 in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name_1)) {\n                  return this.functions[name_1];\n                }\n              }\n              logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n            }\n            if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n              var name_2 = nameOrSignatureOrSighash.trim();\n              var matching = Object.keys(this.functions).filter(function(f) {\n                return f.split(\n                  \"(\"\n                  /* fix:) */\n                )[0] === name_2;\n              });\n              if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name_2);\n              } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name_2);\n              }\n              return this.functions[matching[0]];\n            }\n            var result = this.functions[fragments_1.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n            if (!result) {\n              logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n            }\n            return result;\n          };\n          Interface3.prototype.getEvent = function(nameOrSignatureOrTopic) {\n            if ((0, bytes_1.isHexString)(nameOrSignatureOrTopic)) {\n              var topichash = nameOrSignatureOrTopic.toLowerCase();\n              for (var name_3 in this.events) {\n                if (topichash === this.getEventTopic(name_3)) {\n                  return this.events[name_3];\n                }\n              }\n              logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n            }\n            if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n              var name_4 = nameOrSignatureOrTopic.trim();\n              var matching = Object.keys(this.events).filter(function(f) {\n                return f.split(\n                  \"(\"\n                  /* fix:) */\n                )[0] === name_4;\n              });\n              if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name_4);\n              } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name_4);\n              }\n              return this.events[matching[0]];\n            }\n            var result = this.events[fragments_1.EventFragment.fromString(nameOrSignatureOrTopic).format()];\n            if (!result) {\n              logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n            }\n            return result;\n          };\n          Interface3.prototype.getError = function(nameOrSignatureOrSighash) {\n            if ((0, bytes_1.isHexString)(nameOrSignatureOrSighash)) {\n              var getSighash = (0, properties_1.getStatic)(this.constructor, \"getSighash\");\n              for (var name_5 in this.errors) {\n                var error = this.errors[name_5];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                  return this.errors[name_5];\n                }\n              }\n              logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n            }\n            if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n              var name_6 = nameOrSignatureOrSighash.trim();\n              var matching = Object.keys(this.errors).filter(function(f) {\n                return f.split(\n                  \"(\"\n                  /* fix:) */\n                )[0] === name_6;\n              });\n              if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name_6);\n              } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name_6);\n              }\n              return this.errors[matching[0]];\n            }\n            var result = this.errors[fragments_1.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n            if (!result) {\n              logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n            }\n            return result;\n          };\n          Interface3.prototype.getSighash = function(fragment) {\n            if (typeof fragment === \"string\") {\n              try {\n                fragment = this.getFunction(fragment);\n              } catch (error) {\n                try {\n                  fragment = this.getError(fragment);\n                } catch (_) {\n                  throw error;\n                }\n              }\n            }\n            return (0, properties_1.getStatic)(this.constructor, \"getSighash\")(fragment);\n          };\n          Interface3.prototype.getEventTopic = function(eventFragment) {\n            if (typeof eventFragment === \"string\") {\n              eventFragment = this.getEvent(eventFragment);\n            }\n            return (0, properties_1.getStatic)(this.constructor, \"getEventTopic\")(eventFragment);\n          };\n          Interface3.prototype._decodeParams = function(params, data) {\n            return this._abiCoder.decode(params, data);\n          };\n          Interface3.prototype._encodeParams = function(params, values) {\n            return this._abiCoder.encode(params, values);\n          };\n          Interface3.prototype.encodeDeploy = function(values) {\n            return this._encodeParams(this.deploy.inputs, values || []);\n          };\n          Interface3.prototype.decodeErrorResult = function(fragment, data) {\n            if (typeof fragment === \"string\") {\n              fragment = this.getError(fragment);\n            }\n            var bytes2 = (0, bytes_1.arrayify)(data);\n            if ((0, bytes_1.hexlify)(bytes2.slice(0, 4)) !== this.getSighash(fragment)) {\n              logger.throwArgumentError(\"data signature does not match error \" + fragment.name + \".\", \"data\", (0, bytes_1.hexlify)(bytes2));\n            }\n            return this._decodeParams(fragment.inputs, bytes2.slice(4));\n          };\n          Interface3.prototype.encodeErrorResult = function(fragment, values) {\n            if (typeof fragment === \"string\") {\n              fragment = this.getError(fragment);\n            }\n            return (0, bytes_1.hexlify)((0, bytes_1.concat)([\n              this.getSighash(fragment),\n              this._encodeParams(fragment.inputs, values || [])\n            ]));\n          };\n          Interface3.prototype.decodeFunctionData = function(functionFragment, data) {\n            if (typeof functionFragment === \"string\") {\n              functionFragment = this.getFunction(functionFragment);\n            }\n            var bytes2 = (0, bytes_1.arrayify)(data);\n            if ((0, bytes_1.hexlify)(bytes2.slice(0, 4)) !== this.getSighash(functionFragment)) {\n              logger.throwArgumentError(\"data signature does not match function \" + functionFragment.name + \".\", \"data\", (0, bytes_1.hexlify)(bytes2));\n            }\n            return this._decodeParams(functionFragment.inputs, bytes2.slice(4));\n          };\n          Interface3.prototype.encodeFunctionData = function(functionFragment, values) {\n            if (typeof functionFragment === \"string\") {\n              functionFragment = this.getFunction(functionFragment);\n            }\n            return (0, bytes_1.hexlify)((0, bytes_1.concat)([\n              this.getSighash(functionFragment),\n              this._encodeParams(functionFragment.inputs, values || [])\n            ]));\n          };\n          Interface3.prototype.decodeFunctionResult = function(functionFragment, data) {\n            if (typeof functionFragment === \"string\") {\n              functionFragment = this.getFunction(functionFragment);\n            }\n            var bytes2 = (0, bytes_1.arrayify)(data);\n            var reason = null;\n            var message = \"\";\n            var errorArgs = null;\n            var errorName = null;\n            var errorSignature = null;\n            switch (bytes2.length % this._abiCoder._getWordSize()) {\n              case 0:\n                try {\n                  return this._abiCoder.decode(functionFragment.outputs, bytes2);\n                } catch (error2) {\n                }\n                break;\n              case 4: {\n                var selector = (0, bytes_1.hexlify)(bytes2.slice(0, 4));\n                var builtin = BuiltinErrors2[selector];\n                if (builtin) {\n                  errorArgs = this._abiCoder.decode(builtin.inputs, bytes2.slice(4));\n                  errorName = builtin.name;\n                  errorSignature = builtin.signature;\n                  if (builtin.reason) {\n                    reason = errorArgs[0];\n                  }\n                  if (errorName === \"Error\") {\n                    message = \"; VM Exception while processing transaction: reverted with reason string \" + JSON.stringify(errorArgs[0]);\n                  } else if (errorName === \"Panic\") {\n                    message = \"; VM Exception while processing transaction: reverted with panic code \" + errorArgs[0];\n                  }\n                } else {\n                  try {\n                    var error = this.getError(selector);\n                    errorArgs = this._abiCoder.decode(error.inputs, bytes2.slice(4));\n                    errorName = error.name;\n                    errorSignature = error.format();\n                  } catch (error2) {\n                  }\n                }\n                break;\n              }\n            }\n            return logger.throwError(\"call revert exception\" + message, logger_1.Logger.errors.CALL_EXCEPTION, {\n              method: functionFragment.format(),\n              data: (0, bytes_1.hexlify)(data),\n              errorArgs,\n              errorName,\n              errorSignature,\n              reason\n            });\n          };\n          Interface3.prototype.encodeFunctionResult = function(functionFragment, values) {\n            if (typeof functionFragment === \"string\") {\n              functionFragment = this.getFunction(functionFragment);\n            }\n            return (0, bytes_1.hexlify)(this._abiCoder.encode(functionFragment.outputs, values || []));\n          };\n          Interface3.prototype.encodeFilterTopics = function(eventFragment, values) {\n            var _this = this;\n            if (typeof eventFragment === \"string\") {\n              eventFragment = this.getEvent(eventFragment);\n            }\n            if (values.length > eventFragment.inputs.length) {\n              logger.throwError(\"too many arguments for \" + eventFragment.format(), logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n              });\n            }\n            var topics = [];\n            if (!eventFragment.anonymous) {\n              topics.push(this.getEventTopic(eventFragment));\n            }\n            var encodeTopic = function(param, value) {\n              if (param.type === \"string\") {\n                return (0, hash_1.id)(value);\n              } else if (param.type === \"bytes\") {\n                return (0, keccak256_1.keccak256)((0, bytes_1.hexlify)(value));\n              }\n              if (param.type === \"bool\" && typeof value === \"boolean\") {\n                value = value ? \"0x01\" : \"0x00\";\n              }\n              if (param.type.match(/^u?int/)) {\n                value = bignumber_1.BigNumber.from(value).toHexString();\n              }\n              if (param.type === \"address\") {\n                _this._abiCoder.encode([\"address\"], [value]);\n              }\n              return (0, bytes_1.hexZeroPad)((0, bytes_1.hexlify)(value), 32);\n            };\n            values.forEach(function(value, index) {\n              var param = eventFragment.inputs[index];\n              if (!param.indexed) {\n                if (value != null) {\n                  logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n                }\n                return;\n              }\n              if (value == null) {\n                topics.push(null);\n              } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n              } else if (Array.isArray(value)) {\n                topics.push(value.map(function(value2) {\n                  return encodeTopic(param, value2);\n                }));\n              } else {\n                topics.push(encodeTopic(param, value));\n              }\n            });\n            while (topics.length && topics[topics.length - 1] === null) {\n              topics.pop();\n            }\n            return topics;\n          };\n          Interface3.prototype.encodeEventLog = function(eventFragment, values) {\n            var _this = this;\n            if (typeof eventFragment === \"string\") {\n              eventFragment = this.getEvent(eventFragment);\n            }\n            var topics = [];\n            var dataTypes = [];\n            var dataValues = [];\n            if (!eventFragment.anonymous) {\n              topics.push(this.getEventTopic(eventFragment));\n            }\n            if (values.length !== eventFragment.inputs.length) {\n              logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n            }\n            eventFragment.inputs.forEach(function(param, index) {\n              var value = values[index];\n              if (param.indexed) {\n                if (param.type === \"string\") {\n                  topics.push((0, hash_1.id)(value));\n                } else if (param.type === \"bytes\") {\n                  topics.push((0, keccak256_1.keccak256)(value));\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                  throw new Error(\"not implemented\");\n                } else {\n                  topics.push(_this._abiCoder.encode([param.type], [value]));\n                }\n              } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n              }\n            });\n            return {\n              data: this._abiCoder.encode(dataTypes, dataValues),\n              topics\n            };\n          };\n          Interface3.prototype.decodeEventLog = function(eventFragment, data, topics) {\n            if (typeof eventFragment === \"string\") {\n              eventFragment = this.getEvent(eventFragment);\n            }\n            if (topics != null && !eventFragment.anonymous) {\n              var topicHash = this.getEventTopic(eventFragment);\n              if (!(0, bytes_1.isHexString)(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", logger_1.Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n              }\n              topics = topics.slice(1);\n            }\n            var indexed = [];\n            var nonIndexed = [];\n            var dynamic = [];\n            eventFragment.inputs.forEach(function(param, index) {\n              if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                  indexed.push(fragments_1.ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                  dynamic.push(true);\n                } else {\n                  indexed.push(param);\n                  dynamic.push(false);\n                }\n              } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n              }\n            });\n            var resultIndexed = topics != null ? this._abiCoder.decode(indexed, (0, bytes_1.concat)(topics)) : null;\n            var resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n            var result = [];\n            var nonIndexedIndex = 0, indexedIndex = 0;\n            eventFragment.inputs.forEach(function(param, index) {\n              if (param.indexed) {\n                if (resultIndexed == null) {\n                  result[index] = new Indexed2({ _isIndexed: true, hash: null });\n                } else if (dynamic[index]) {\n                  result[index] = new Indexed2({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                } else {\n                  try {\n                    result[index] = resultIndexed[indexedIndex++];\n                  } catch (error) {\n                    result[index] = error;\n                  }\n                }\n              } else {\n                try {\n                  result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                  result[index] = error;\n                }\n              }\n              if (param.name && result[param.name] == null) {\n                var value_1 = result[index];\n                if (value_1 instanceof Error) {\n                  Object.defineProperty(result, param.name, {\n                    enumerable: true,\n                    get: function() {\n                      throw wrapAccessError(\"property \" + JSON.stringify(param.name), value_1);\n                    }\n                  });\n                } else {\n                  result[param.name] = value_1;\n                }\n              }\n            });\n            var _loop_1 = function(i2) {\n              var value = result[i2];\n              if (value instanceof Error) {\n                Object.defineProperty(result, i2, {\n                  enumerable: true,\n                  get: function() {\n                    throw wrapAccessError(\"index \" + i2, value);\n                  }\n                });\n              }\n            };\n            for (var i = 0; i < result.length; i++) {\n              _loop_1(i);\n            }\n            return Object.freeze(result);\n          };\n          Interface3.prototype.parseTransaction = function(tx) {\n            var fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n            if (!fragment) {\n              return null;\n            }\n            return new TransactionDescription2({\n              args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n              functionFragment: fragment,\n              name: fragment.name,\n              signature: fragment.format(),\n              sighash: this.getSighash(fragment),\n              value: bignumber_1.BigNumber.from(tx.value || \"0\")\n            });\n          };\n          Interface3.prototype.parseLog = function(log) {\n            var fragment = this.getEvent(log.topics[0]);\n            if (!fragment || fragment.anonymous) {\n              return null;\n            }\n            return new LogDescription2({\n              eventFragment: fragment,\n              name: fragment.name,\n              signature: fragment.format(),\n              topic: this.getEventTopic(fragment),\n              args: this.decodeEventLog(fragment, log.data, log.topics)\n            });\n          };\n          Interface3.prototype.parseError = function(data) {\n            var hexData = (0, bytes_1.hexlify)(data);\n            var fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n            if (!fragment) {\n              return null;\n            }\n            return new ErrorDescription2({\n              args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n              errorFragment: fragment,\n              name: fragment.name,\n              signature: fragment.format(),\n              sighash: this.getSighash(fragment)\n            });\n          };\n          Interface3.isInterface = function(value) {\n            return !!(value && value._isInterface);\n          };\n          return Interface3;\n        }()\n      );\n      exports3.Interface = Interface2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/index.js\n  var require_lib13 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abi@5.8.0/node_modules/@ethersproject/abi/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.TransactionDescription = exports3.LogDescription = exports3.checkResultErrors = exports3.Indexed = exports3.Interface = exports3.defaultAbiCoder = exports3.AbiCoder = exports3.FormatTypes = exports3.ParamType = exports3.FunctionFragment = exports3.Fragment = exports3.EventFragment = exports3.ErrorFragment = exports3.ConstructorFragment = void 0;\n      var fragments_1 = require_fragments();\n      Object.defineProperty(exports3, \"ConstructorFragment\", { enumerable: true, get: function() {\n        return fragments_1.ConstructorFragment;\n      } });\n      Object.defineProperty(exports3, \"ErrorFragment\", { enumerable: true, get: function() {\n        return fragments_1.ErrorFragment;\n      } });\n      Object.defineProperty(exports3, \"EventFragment\", { enumerable: true, get: function() {\n        return fragments_1.EventFragment;\n      } });\n      Object.defineProperty(exports3, \"FormatTypes\", { enumerable: true, get: function() {\n        return fragments_1.FormatTypes;\n      } });\n      Object.defineProperty(exports3, \"Fragment\", { enumerable: true, get: function() {\n        return fragments_1.Fragment;\n      } });\n      Object.defineProperty(exports3, \"FunctionFragment\", { enumerable: true, get: function() {\n        return fragments_1.FunctionFragment;\n      } });\n      Object.defineProperty(exports3, \"ParamType\", { enumerable: true, get: function() {\n        return fragments_1.ParamType;\n      } });\n      var abi_coder_1 = require_abi_coder();\n      Object.defineProperty(exports3, \"AbiCoder\", { enumerable: true, get: function() {\n        return abi_coder_1.AbiCoder;\n      } });\n      Object.defineProperty(exports3, \"defaultAbiCoder\", { enumerable: true, get: function() {\n        return abi_coder_1.defaultAbiCoder;\n      } });\n      var interface_1 = require_interface();\n      Object.defineProperty(exports3, \"checkResultErrors\", { enumerable: true, get: function() {\n        return interface_1.checkResultErrors;\n      } });\n      Object.defineProperty(exports3, \"Indexed\", { enumerable: true, get: function() {\n        return interface_1.Indexed;\n      } });\n      Object.defineProperty(exports3, \"Interface\", { enumerable: true, get: function() {\n        return interface_1.Interface;\n      } });\n      Object.defineProperty(exports3, \"LogDescription\", { enumerable: true, get: function() {\n        return interface_1.LogDescription;\n      } });\n      Object.defineProperty(exports3, \"TransactionDescription\", { enumerable: true, get: function() {\n        return interface_1.TransactionDescription;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abstract-provider@5.8.0/node_modules/@ethersproject/abstract-provider/lib/_version.js\n  var require_version10 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abstract-provider@5.8.0/node_modules/@ethersproject/abstract-provider/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"abstract-provider/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abstract-provider@5.8.0/node_modules/@ethersproject/abstract-provider/lib/index.js\n  var require_lib14 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abstract-provider@5.8.0/node_modules/@ethersproject/abstract-provider/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Provider = exports3.TransactionOrderForkEvent = exports3.TransactionForkEvent = exports3.BlockForkEvent = exports3.ForkEvent = void 0;\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version10();\n      var logger = new logger_1.Logger(_version_1.version);\n      var ForkEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(ForkEvent2, _super);\n          function ForkEvent2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          ForkEvent2.isForkEvent = function(value) {\n            return !!(value && value._isForkEvent);\n          };\n          return ForkEvent2;\n        }(properties_1.Description)\n      );\n      exports3.ForkEvent = ForkEvent;\n      var BlockForkEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(BlockForkEvent2, _super);\n          function BlockForkEvent2(blockHash, expiry) {\n            var _this = this;\n            if (!(0, bytes_1.isHexString)(blockHash, 32)) {\n              logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n            }\n            _this = _super.call(this, {\n              _isForkEvent: true,\n              _isBlockForkEvent: true,\n              expiry: expiry || 0,\n              blockHash\n            }) || this;\n            return _this;\n          }\n          return BlockForkEvent2;\n        }(ForkEvent)\n      );\n      exports3.BlockForkEvent = BlockForkEvent;\n      var TransactionForkEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(TransactionForkEvent2, _super);\n          function TransactionForkEvent2(hash2, expiry) {\n            var _this = this;\n            if (!(0, bytes_1.isHexString)(hash2, 32)) {\n              logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash2);\n            }\n            _this = _super.call(this, {\n              _isForkEvent: true,\n              _isTransactionForkEvent: true,\n              expiry: expiry || 0,\n              hash: hash2\n            }) || this;\n            return _this;\n          }\n          return TransactionForkEvent2;\n        }(ForkEvent)\n      );\n      exports3.TransactionForkEvent = TransactionForkEvent;\n      var TransactionOrderForkEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(TransactionOrderForkEvent2, _super);\n          function TransactionOrderForkEvent2(beforeHash, afterHash, expiry) {\n            var _this = this;\n            if (!(0, bytes_1.isHexString)(beforeHash, 32)) {\n              logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n            }\n            if (!(0, bytes_1.isHexString)(afterHash, 32)) {\n              logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n            }\n            _this = _super.call(this, {\n              _isForkEvent: true,\n              _isTransactionOrderForkEvent: true,\n              expiry: expiry || 0,\n              beforeHash,\n              afterHash\n            }) || this;\n            return _this;\n          }\n          return TransactionOrderForkEvent2;\n        }(ForkEvent)\n      );\n      exports3.TransactionOrderForkEvent = TransactionOrderForkEvent;\n      var Provider = (\n        /** @class */\n        function() {\n          function Provider2() {\n            var _newTarget = this.constructor;\n            logger.checkAbstract(_newTarget, Provider2);\n            (0, properties_1.defineReadOnly)(this, \"_isProvider\", true);\n          }\n          Provider2.prototype.getFeeData = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var _a, block, gasPrice, lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4, (0, properties_1.resolveProperties)({\n                      block: this.getBlock(\"latest\"),\n                      gasPrice: this.getGasPrice().catch(function(error) {\n                        return null;\n                      })\n                    })];\n                  case 1:\n                    _a = _b.sent(), block = _a.block, gasPrice = _a.gasPrice;\n                    lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n                    if (block && block.baseFeePerGas) {\n                      lastBaseFeePerGas = block.baseFeePerGas;\n                      maxPriorityFeePerGas = bignumber_1.BigNumber.from(\"1500000000\");\n                      maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n                    }\n                    return [2, { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice }];\n                }\n              });\n            });\n          };\n          Provider2.prototype.addListener = function(eventName, listener) {\n            return this.on(eventName, listener);\n          };\n          Provider2.prototype.removeListener = function(eventName, listener) {\n            return this.off(eventName, listener);\n          };\n          Provider2.isProvider = function(value) {\n            return !!(value && value._isProvider);\n          };\n          return Provider2;\n        }()\n      );\n      exports3.Provider = Provider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/lib/_version.js\n  var require_version11 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"abstract-signer/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/lib/index.js\n  var require_lib15 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+abstract-signer@5.8.0/node_modules/@ethersproject/abstract-signer/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.VoidSigner = exports3.Signer = void 0;\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version11();\n      var logger = new logger_1.Logger(_version_1.version);\n      var allowedTransactionKeys = [\n        \"accessList\",\n        \"ccipReadEnabled\",\n        \"chainId\",\n        \"customData\",\n        \"data\",\n        \"from\",\n        \"gasLimit\",\n        \"gasPrice\",\n        \"maxFeePerGas\",\n        \"maxPriorityFeePerGas\",\n        \"nonce\",\n        \"to\",\n        \"type\",\n        \"value\"\n      ];\n      var forwardErrors = [\n        logger_1.Logger.errors.INSUFFICIENT_FUNDS,\n        logger_1.Logger.errors.NONCE_EXPIRED,\n        logger_1.Logger.errors.REPLACEMENT_UNDERPRICED\n      ];\n      var Signer = (\n        /** @class */\n        function() {\n          function Signer2() {\n            var _newTarget = this.constructor;\n            logger.checkAbstract(_newTarget, Signer2);\n            (0, properties_1.defineReadOnly)(this, \"_isSigner\", true);\n          }\n          Signer2.prototype.getBalance = function(blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"getBalance\");\n                    return [4, this.provider.getBalance(this.getAddress(), blockTag)];\n                  case 1:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.getTransactionCount = function(blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"getTransactionCount\");\n                    return [4, this.provider.getTransactionCount(this.getAddress(), blockTag)];\n                  case 1:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.estimateGas = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"estimateGas\");\n                    return [4, (0, properties_1.resolveProperties)(this.checkTransaction(transaction))];\n                  case 1:\n                    tx = _a.sent();\n                    return [4, this.provider.estimateGas(tx)];\n                  case 2:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.call = function(transaction, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"call\");\n                    return [4, (0, properties_1.resolveProperties)(this.checkTransaction(transaction))];\n                  case 1:\n                    tx = _a.sent();\n                    return [4, this.provider.call(tx, blockTag)];\n                  case 2:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.sendTransaction = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx, signedTx;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"sendTransaction\");\n                    return [4, this.populateTransaction(transaction)];\n                  case 1:\n                    tx = _a.sent();\n                    return [4, this.signTransaction(tx)];\n                  case 2:\n                    signedTx = _a.sent();\n                    return [4, this.provider.sendTransaction(signedTx)];\n                  case 3:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.getChainId = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var network;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"getChainId\");\n                    return [4, this.provider.getNetwork()];\n                  case 1:\n                    network = _a.sent();\n                    return [2, network.chainId];\n                }\n              });\n            });\n          };\n          Signer2.prototype.getGasPrice = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"getGasPrice\");\n                    return [4, this.provider.getGasPrice()];\n                  case 1:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.getFeeData = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"getFeeData\");\n                    return [4, this.provider.getFeeData()];\n                  case 1:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.resolveName = function(name) {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    this._checkProvider(\"resolveName\");\n                    return [4, this.provider.resolveName(name)];\n                  case 1:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype.checkTransaction = function(transaction) {\n            for (var key in transaction) {\n              if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n              }\n            }\n            var tx = (0, properties_1.shallowCopy)(transaction);\n            if (tx.from == null) {\n              tx.from = this.getAddress();\n            } else {\n              tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n              ]).then(function(result) {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                  logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n              });\n            }\n            return tx;\n          };\n          Signer2.prototype.populateTransaction = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx, hasEip1559, feeData, gasPrice;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, (0, properties_1.resolveProperties)(this.checkTransaction(transaction))];\n                  case 1:\n                    tx = _a.sent();\n                    if (tx.to != null) {\n                      tx.to = Promise.resolve(tx.to).then(function(to) {\n                        return __awaiter2(_this, void 0, void 0, function() {\n                          var address;\n                          return __generator2(this, function(_a2) {\n                            switch (_a2.label) {\n                              case 0:\n                                if (to == null) {\n                                  return [2, null];\n                                }\n                                return [4, this.resolveName(to)];\n                              case 1:\n                                address = _a2.sent();\n                                if (address == null) {\n                                  logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                                }\n                                return [2, address];\n                            }\n                          });\n                        });\n                      });\n                      tx.to.catch(function(error) {\n                      });\n                    }\n                    hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;\n                    if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                      logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n                    } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                      logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n                    }\n                    if (!((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)))\n                      return [3, 2];\n                    tx.type = 2;\n                    return [3, 5];\n                  case 2:\n                    if (!(tx.type === 0 || tx.type === 1))\n                      return [3, 3];\n                    if (tx.gasPrice == null) {\n                      tx.gasPrice = this.getGasPrice();\n                    }\n                    return [3, 5];\n                  case 3:\n                    return [4, this.getFeeData()];\n                  case 4:\n                    feeData = _a.sent();\n                    if (tx.type == null) {\n                      if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                          gasPrice = tx.gasPrice;\n                          delete tx.gasPrice;\n                          tx.maxFeePerGas = gasPrice;\n                          tx.maxPriorityFeePerGas = gasPrice;\n                        } else {\n                          if (tx.maxFeePerGas == null) {\n                            tx.maxFeePerGas = feeData.maxFeePerGas;\n                          }\n                          if (tx.maxPriorityFeePerGas == null) {\n                            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                          }\n                        }\n                      } else if (feeData.gasPrice != null) {\n                        if (hasEip1559) {\n                          logger.throwError(\"network does not support EIP-1559\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                          });\n                        }\n                        if (tx.gasPrice == null) {\n                          tx.gasPrice = feeData.gasPrice;\n                        }\n                        tx.type = 0;\n                      } else {\n                        logger.throwError(\"failed to get consistent fee data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                          operation: \"signer.getFeeData\"\n                        });\n                      }\n                    } else if (tx.type === 2) {\n                      if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                      }\n                      if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                      }\n                    }\n                    _a.label = 5;\n                  case 5:\n                    if (tx.nonce == null) {\n                      tx.nonce = this.getTransactionCount(\"pending\");\n                    }\n                    if (tx.gasLimit == null) {\n                      tx.gasLimit = this.estimateGas(tx).catch(function(error) {\n                        if (forwardErrors.indexOf(error.code) >= 0) {\n                          throw error;\n                        }\n                        return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                          error,\n                          tx\n                        });\n                      });\n                    }\n                    if (tx.chainId == null) {\n                      tx.chainId = this.getChainId();\n                    } else {\n                      tx.chainId = Promise.all([\n                        Promise.resolve(tx.chainId),\n                        this.getChainId()\n                      ]).then(function(results) {\n                        if (results[1] !== 0 && results[0] !== results[1]) {\n                          logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                        }\n                        return results[0];\n                      });\n                    }\n                    return [4, (0, properties_1.resolveProperties)(tx)];\n                  case 6:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          Signer2.prototype._checkProvider = function(operation) {\n            if (!this.provider) {\n              logger.throwError(\"missing provider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: operation || \"_checkProvider\"\n              });\n            }\n          };\n          Signer2.isSigner = function(value) {\n            return !!(value && value._isSigner);\n          };\n          return Signer2;\n        }()\n      );\n      exports3.Signer = Signer;\n      var VoidSigner2 = (\n        /** @class */\n        function(_super) {\n          __extends2(VoidSigner3, _super);\n          function VoidSigner3(address, provider) {\n            var _this = _super.call(this) || this;\n            (0, properties_1.defineReadOnly)(_this, \"address\", address);\n            (0, properties_1.defineReadOnly)(_this, \"provider\", provider || null);\n            return _this;\n          }\n          VoidSigner3.prototype.getAddress = function() {\n            return Promise.resolve(this.address);\n          };\n          VoidSigner3.prototype._fail = function(message, operation) {\n            return Promise.resolve().then(function() {\n              logger.throwError(message, logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation });\n            });\n          };\n          VoidSigner3.prototype.signMessage = function(message) {\n            return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n          };\n          VoidSigner3.prototype.signTransaction = function(transaction) {\n            return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n          };\n          VoidSigner3.prototype._signTypedData = function(domain2, types, value) {\n            return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n          };\n          VoidSigner3.prototype.connect = function(provider) {\n            return new VoidSigner3(this.address, provider);\n          };\n          return VoidSigner3;\n        }(Signer)\n      );\n      exports3.VoidSigner = VoidSigner2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/package.json\n  var require_package = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/package.json\"(exports3, module) {\n      module.exports = {\n        name: \"elliptic\",\n        version: \"6.6.1\",\n        description: \"EC cryptography\",\n        main: \"lib/elliptic.js\",\n        files: [\n          \"lib\"\n        ],\n        scripts: {\n          lint: \"eslint lib test\",\n          \"lint:fix\": \"npm run lint -- --fix\",\n          unit: \"istanbul test _mocha --reporter=spec test/index.js\",\n          test: \"npm run lint && npm run unit\",\n          version: \"grunt dist && git add dist/\"\n        },\n        repository: {\n          type: \"git\",\n          url: \"git@github.com:indutny/elliptic\"\n        },\n        keywords: [\n          \"EC\",\n          \"Elliptic\",\n          \"curve\",\n          \"Cryptography\"\n        ],\n        author: \"Fedor Indutny <fedor@indutny.com>\",\n        license: \"MIT\",\n        bugs: {\n          url: \"https://github.com/indutny/elliptic/issues\"\n        },\n        homepage: \"https://github.com/indutny/elliptic\",\n        devDependencies: {\n          brfs: \"^2.0.2\",\n          coveralls: \"^3.1.0\",\n          eslint: \"^7.6.0\",\n          grunt: \"^1.2.1\",\n          \"grunt-browserify\": \"^5.3.0\",\n          \"grunt-cli\": \"^1.3.2\",\n          \"grunt-contrib-connect\": \"^3.0.0\",\n          \"grunt-contrib-copy\": \"^1.0.0\",\n          \"grunt-contrib-uglify\": \"^5.0.0\",\n          \"grunt-mocha-istanbul\": \"^5.0.2\",\n          \"grunt-saucelabs\": \"^9.0.1\",\n          istanbul: \"^0.4.5\",\n          mocha: \"^8.0.1\"\n        },\n        dependencies: {\n          \"bn.js\": \"^4.11.9\",\n          brorand: \"^1.1.0\",\n          \"hash.js\": \"^1.0.0\",\n          \"hmac-drbg\": \"^1.0.1\",\n          inherits: \"^2.0.4\",\n          \"minimalistic-assert\": \"^1.0.1\",\n          \"minimalistic-crypto-utils\": \"^1.0.1\"\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/bn.js@4.12.2/node_modules/bn.js/lib/bn.js\n  var require_bn2 = __commonJS({\n    \"../../../node_modules/.pnpm/bn.js@4.12.2/node_modules/bn.js/lib/bn.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(module2, exports4) {\n        \"use strict\";\n        function assert3(val, msg) {\n          if (!val)\n            throw new Error(msg || \"Assertion failed\");\n        }\n        function inherits(ctor, superCtor) {\n          ctor.super_ = superCtor;\n          var TempCtor = function() {\n          };\n          TempCtor.prototype = superCtor.prototype;\n          ctor.prototype = new TempCtor();\n          ctor.prototype.constructor = ctor;\n        }\n        function BN(number2, base, endian) {\n          if (BN.isBN(number2)) {\n            return number2;\n          }\n          this.negative = 0;\n          this.words = null;\n          this.length = 0;\n          this.red = null;\n          if (number2 !== null) {\n            if (base === \"le\" || base === \"be\") {\n              endian = base;\n              base = 10;\n            }\n            this._init(number2 || 0, base || 10, endian || \"be\");\n          }\n        }\n        if (typeof module2 === \"object\") {\n          module2.exports = BN;\n        } else {\n          exports4.BN = BN;\n        }\n        BN.BN = BN;\n        BN.wordSize = 26;\n        var Buffer3;\n        try {\n          if (typeof window !== \"undefined\" && typeof window.Buffer !== \"undefined\") {\n            Buffer3 = window.Buffer;\n          } else {\n            Buffer3 = (init_buffer(), __toCommonJS(buffer_exports)).Buffer;\n          }\n        } catch (e) {\n        }\n        BN.isBN = function isBN(num) {\n          if (num instanceof BN) {\n            return true;\n          }\n          return num !== null && typeof num === \"object\" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n        };\n        BN.max = function max(left, right) {\n          if (left.cmp(right) > 0)\n            return left;\n          return right;\n        };\n        BN.min = function min(left, right) {\n          if (left.cmp(right) < 0)\n            return left;\n          return right;\n        };\n        BN.prototype._init = function init2(number2, base, endian) {\n          if (typeof number2 === \"number\") {\n            return this._initNumber(number2, base, endian);\n          }\n          if (typeof number2 === \"object\") {\n            return this._initArray(number2, base, endian);\n          }\n          if (base === \"hex\") {\n            base = 16;\n          }\n          assert3(base === (base | 0) && base >= 2 && base <= 36);\n          number2 = number2.toString().replace(/\\s+/g, \"\");\n          var start = 0;\n          if (number2[0] === \"-\") {\n            start++;\n            this.negative = 1;\n          }\n          if (start < number2.length) {\n            if (base === 16) {\n              this._parseHex(number2, start, endian);\n            } else {\n              this._parseBase(number2, base, start);\n              if (endian === \"le\") {\n                this._initArray(this.toArray(), base, endian);\n              }\n            }\n          }\n        };\n        BN.prototype._initNumber = function _initNumber(number2, base, endian) {\n          if (number2 < 0) {\n            this.negative = 1;\n            number2 = -number2;\n          }\n          if (number2 < 67108864) {\n            this.words = [number2 & 67108863];\n            this.length = 1;\n          } else if (number2 < 4503599627370496) {\n            this.words = [\n              number2 & 67108863,\n              number2 / 67108864 & 67108863\n            ];\n            this.length = 2;\n          } else {\n            assert3(number2 < 9007199254740992);\n            this.words = [\n              number2 & 67108863,\n              number2 / 67108864 & 67108863,\n              1\n            ];\n            this.length = 3;\n          }\n          if (endian !== \"le\")\n            return;\n          this._initArray(this.toArray(), base, endian);\n        };\n        BN.prototype._initArray = function _initArray(number2, base, endian) {\n          assert3(typeof number2.length === \"number\");\n          if (number2.length <= 0) {\n            this.words = [0];\n            this.length = 1;\n            return this;\n          }\n          this.length = Math.ceil(number2.length / 3);\n          this.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n          }\n          var j, w;\n          var off2 = 0;\n          if (endian === \"be\") {\n            for (i = number2.length - 1, j = 0; i >= 0; i -= 3) {\n              w = number2[i] | number2[i - 1] << 8 | number2[i - 2] << 16;\n              this.words[j] |= w << off2 & 67108863;\n              this.words[j + 1] = w >>> 26 - off2 & 67108863;\n              off2 += 24;\n              if (off2 >= 26) {\n                off2 -= 26;\n                j++;\n              }\n            }\n          } else if (endian === \"le\") {\n            for (i = 0, j = 0; i < number2.length; i += 3) {\n              w = number2[i] | number2[i + 1] << 8 | number2[i + 2] << 16;\n              this.words[j] |= w << off2 & 67108863;\n              this.words[j + 1] = w >>> 26 - off2 & 67108863;\n              off2 += 24;\n              if (off2 >= 26) {\n                off2 -= 26;\n                j++;\n              }\n            }\n          }\n          return this.strip();\n        };\n        function parseHex4Bits(string, index) {\n          var c = string.charCodeAt(index);\n          if (c >= 65 && c <= 70) {\n            return c - 55;\n          } else if (c >= 97 && c <= 102) {\n            return c - 87;\n          } else {\n            return c - 48 & 15;\n          }\n        }\n        function parseHexByte(string, lowerBound, index) {\n          var r = parseHex4Bits(string, index);\n          if (index - 1 >= lowerBound) {\n            r |= parseHex4Bits(string, index - 1) << 4;\n          }\n          return r;\n        }\n        BN.prototype._parseHex = function _parseHex(number2, start, endian) {\n          this.length = Math.ceil((number2.length - start) / 6);\n          this.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n          }\n          var off2 = 0;\n          var j = 0;\n          var w;\n          if (endian === \"be\") {\n            for (i = number2.length - 1; i >= start; i -= 2) {\n              w = parseHexByte(number2, start, i) << off2;\n              this.words[j] |= w & 67108863;\n              if (off2 >= 18) {\n                off2 -= 18;\n                j += 1;\n                this.words[j] |= w >>> 26;\n              } else {\n                off2 += 8;\n              }\n            }\n          } else {\n            var parseLength = number2.length - start;\n            for (i = parseLength % 2 === 0 ? start + 1 : start; i < number2.length; i += 2) {\n              w = parseHexByte(number2, start, i) << off2;\n              this.words[j] |= w & 67108863;\n              if (off2 >= 18) {\n                off2 -= 18;\n                j += 1;\n                this.words[j] |= w >>> 26;\n              } else {\n                off2 += 8;\n              }\n            }\n          }\n          this.strip();\n        };\n        function parseBase(str, start, end, mul) {\n          var r = 0;\n          var len = Math.min(str.length, end);\n          for (var i = start; i < len; i++) {\n            var c = str.charCodeAt(i) - 48;\n            r *= mul;\n            if (c >= 49) {\n              r += c - 49 + 10;\n            } else if (c >= 17) {\n              r += c - 17 + 10;\n            } else {\n              r += c;\n            }\n          }\n          return r;\n        }\n        BN.prototype._parseBase = function _parseBase(number2, base, start) {\n          this.words = [0];\n          this.length = 1;\n          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {\n            limbLen++;\n          }\n          limbLen--;\n          limbPow = limbPow / base | 0;\n          var total = number2.length - start;\n          var mod2 = total % limbLen;\n          var end = Math.min(total, total - mod2) + start;\n          var word = 0;\n          for (var i = start; i < end; i += limbLen) {\n            word = parseBase(number2, i, i + limbLen, base);\n            this.imuln(limbPow);\n            if (this.words[0] + word < 67108864) {\n              this.words[0] += word;\n            } else {\n              this._iaddn(word);\n            }\n          }\n          if (mod2 !== 0) {\n            var pow3 = 1;\n            word = parseBase(number2, i, number2.length, base);\n            for (i = 0; i < mod2; i++) {\n              pow3 *= base;\n            }\n            this.imuln(pow3);\n            if (this.words[0] + word < 67108864) {\n              this.words[0] += word;\n            } else {\n              this._iaddn(word);\n            }\n          }\n          this.strip();\n        };\n        BN.prototype.copy = function copy4(dest) {\n          dest.words = new Array(this.length);\n          for (var i = 0; i < this.length; i++) {\n            dest.words[i] = this.words[i];\n          }\n          dest.length = this.length;\n          dest.negative = this.negative;\n          dest.red = this.red;\n        };\n        BN.prototype.clone = function clone() {\n          var r = new BN(null);\n          this.copy(r);\n          return r;\n        };\n        BN.prototype._expand = function _expand(size) {\n          while (this.length < size) {\n            this.words[this.length++] = 0;\n          }\n          return this;\n        };\n        BN.prototype.strip = function strip() {\n          while (this.length > 1 && this.words[this.length - 1] === 0) {\n            this.length--;\n          }\n          return this._normSign();\n        };\n        BN.prototype._normSign = function _normSign() {\n          if (this.length === 1 && this.words[0] === 0) {\n            this.negative = 0;\n          }\n          return this;\n        };\n        BN.prototype.inspect = function inspect() {\n          return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n        };\n        var zeros2 = [\n          \"\",\n          \"0\",\n          \"00\",\n          \"000\",\n          \"0000\",\n          \"00000\",\n          \"000000\",\n          \"0000000\",\n          \"00000000\",\n          \"000000000\",\n          \"0000000000\",\n          \"00000000000\",\n          \"000000000000\",\n          \"0000000000000\",\n          \"00000000000000\",\n          \"000000000000000\",\n          \"0000000000000000\",\n          \"00000000000000000\",\n          \"000000000000000000\",\n          \"0000000000000000000\",\n          \"00000000000000000000\",\n          \"000000000000000000000\",\n          \"0000000000000000000000\",\n          \"00000000000000000000000\",\n          \"000000000000000000000000\",\n          \"0000000000000000000000000\"\n        ];\n        var groupSizes = [\n          0,\n          0,\n          25,\n          16,\n          12,\n          11,\n          10,\n          9,\n          8,\n          8,\n          7,\n          7,\n          7,\n          7,\n          6,\n          6,\n          6,\n          6,\n          6,\n          6,\n          6,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5,\n          5\n        ];\n        var groupBases = [\n          0,\n          0,\n          33554432,\n          43046721,\n          16777216,\n          48828125,\n          60466176,\n          40353607,\n          16777216,\n          43046721,\n          1e7,\n          19487171,\n          35831808,\n          62748517,\n          7529536,\n          11390625,\n          16777216,\n          24137569,\n          34012224,\n          47045881,\n          64e6,\n          4084101,\n          5153632,\n          6436343,\n          7962624,\n          9765625,\n          11881376,\n          14348907,\n          17210368,\n          20511149,\n          243e5,\n          28629151,\n          33554432,\n          39135393,\n          45435424,\n          52521875,\n          60466176\n        ];\n        BN.prototype.toString = function toString(base, padding2) {\n          base = base || 10;\n          padding2 = padding2 | 0 || 1;\n          var out;\n          if (base === 16 || base === \"hex\") {\n            out = \"\";\n            var off2 = 0;\n            var carry = 0;\n            for (var i = 0; i < this.length; i++) {\n              var w = this.words[i];\n              var word = ((w << off2 | carry) & 16777215).toString(16);\n              carry = w >>> 24 - off2 & 16777215;\n              off2 += 2;\n              if (off2 >= 26) {\n                off2 -= 26;\n                i--;\n              }\n              if (carry !== 0 || i !== this.length - 1) {\n                out = zeros2[6 - word.length] + word + out;\n              } else {\n                out = word + out;\n              }\n            }\n            if (carry !== 0) {\n              out = carry.toString(16) + out;\n            }\n            while (out.length % padding2 !== 0) {\n              out = \"0\" + out;\n            }\n            if (this.negative !== 0) {\n              out = \"-\" + out;\n            }\n            return out;\n          }\n          if (base === (base | 0) && base >= 2 && base <= 36) {\n            var groupSize = groupSizes[base];\n            var groupBase = groupBases[base];\n            out = \"\";\n            var c = this.clone();\n            c.negative = 0;\n            while (!c.isZero()) {\n              var r = c.modn(groupBase).toString(base);\n              c = c.idivn(groupBase);\n              if (!c.isZero()) {\n                out = zeros2[groupSize - r.length] + r + out;\n              } else {\n                out = r + out;\n              }\n            }\n            if (this.isZero()) {\n              out = \"0\" + out;\n            }\n            while (out.length % padding2 !== 0) {\n              out = \"0\" + out;\n            }\n            if (this.negative !== 0) {\n              out = \"-\" + out;\n            }\n            return out;\n          }\n          assert3(false, \"Base should be between 2 and 36\");\n        };\n        BN.prototype.toNumber = function toNumber2() {\n          var ret = this.words[0];\n          if (this.length === 2) {\n            ret += this.words[1] * 67108864;\n          } else if (this.length === 3 && this.words[2] === 1) {\n            ret += 4503599627370496 + this.words[1] * 67108864;\n          } else if (this.length > 2) {\n            assert3(false, \"Number can only safely store up to 53 bits\");\n          }\n          return this.negative !== 0 ? -ret : ret;\n        };\n        BN.prototype.toJSON = function toJSON() {\n          return this.toString(16);\n        };\n        BN.prototype.toBuffer = function toBuffer(endian, length) {\n          assert3(typeof Buffer3 !== \"undefined\");\n          return this.toArrayLike(Buffer3, endian, length);\n        };\n        BN.prototype.toArray = function toArray(endian, length) {\n          return this.toArrayLike(Array, endian, length);\n        };\n        BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n          var byteLength = this.byteLength();\n          var reqLength = length || Math.max(1, byteLength);\n          assert3(byteLength <= reqLength, \"byte array longer than desired length\");\n          assert3(reqLength > 0, \"Requested array length <= 0\");\n          this.strip();\n          var littleEndian = endian === \"le\";\n          var res = new ArrayType(reqLength);\n          var b2, i;\n          var q = this.clone();\n          if (!littleEndian) {\n            for (i = 0; i < reqLength - byteLength; i++) {\n              res[i] = 0;\n            }\n            for (i = 0; !q.isZero(); i++) {\n              b2 = q.andln(255);\n              q.iushrn(8);\n              res[reqLength - i - 1] = b2;\n            }\n          } else {\n            for (i = 0; !q.isZero(); i++) {\n              b2 = q.andln(255);\n              q.iushrn(8);\n              res[i] = b2;\n            }\n            for (; i < reqLength; i++) {\n              res[i] = 0;\n            }\n          }\n          return res;\n        };\n        if (Math.clz32) {\n          BN.prototype._countBits = function _countBits(w) {\n            return 32 - Math.clz32(w);\n          };\n        } else {\n          BN.prototype._countBits = function _countBits(w) {\n            var t = w;\n            var r = 0;\n            if (t >= 4096) {\n              r += 13;\n              t >>>= 13;\n            }\n            if (t >= 64) {\n              r += 7;\n              t >>>= 7;\n            }\n            if (t >= 8) {\n              r += 4;\n              t >>>= 4;\n            }\n            if (t >= 2) {\n              r += 2;\n              t >>>= 2;\n            }\n            return r + t;\n          };\n        }\n        BN.prototype._zeroBits = function _zeroBits(w) {\n          if (w === 0)\n            return 26;\n          var t = w;\n          var r = 0;\n          if ((t & 8191) === 0) {\n            r += 13;\n            t >>>= 13;\n          }\n          if ((t & 127) === 0) {\n            r += 7;\n            t >>>= 7;\n          }\n          if ((t & 15) === 0) {\n            r += 4;\n            t >>>= 4;\n          }\n          if ((t & 3) === 0) {\n            r += 2;\n            t >>>= 2;\n          }\n          if ((t & 1) === 0) {\n            r++;\n          }\n          return r;\n        };\n        BN.prototype.bitLength = function bitLength() {\n          var w = this.words[this.length - 1];\n          var hi = this._countBits(w);\n          return (this.length - 1) * 26 + hi;\n        };\n        function toBitArray(num) {\n          var w = new Array(num.bitLength());\n          for (var bit = 0; bit < w.length; bit++) {\n            var off2 = bit / 26 | 0;\n            var wbit = bit % 26;\n            w[bit] = (num.words[off2] & 1 << wbit) >>> wbit;\n          }\n          return w;\n        }\n        BN.prototype.zeroBits = function zeroBits() {\n          if (this.isZero())\n            return 0;\n          var r = 0;\n          for (var i = 0; i < this.length; i++) {\n            var b2 = this._zeroBits(this.words[i]);\n            r += b2;\n            if (b2 !== 26)\n              break;\n          }\n          return r;\n        };\n        BN.prototype.byteLength = function byteLength() {\n          return Math.ceil(this.bitLength() / 8);\n        };\n        BN.prototype.toTwos = function toTwos2(width) {\n          if (this.negative !== 0) {\n            return this.abs().inotn(width).iaddn(1);\n          }\n          return this.clone();\n        };\n        BN.prototype.fromTwos = function fromTwos2(width) {\n          if (this.testn(width - 1)) {\n            return this.notn(width).iaddn(1).ineg();\n          }\n          return this.clone();\n        };\n        BN.prototype.isNeg = function isNeg() {\n          return this.negative !== 0;\n        };\n        BN.prototype.neg = function neg() {\n          return this.clone().ineg();\n        };\n        BN.prototype.ineg = function ineg() {\n          if (!this.isZero()) {\n            this.negative ^= 1;\n          }\n          return this;\n        };\n        BN.prototype.iuor = function iuor(num) {\n          while (this.length < num.length) {\n            this.words[this.length++] = 0;\n          }\n          for (var i = 0; i < num.length; i++) {\n            this.words[i] = this.words[i] | num.words[i];\n          }\n          return this.strip();\n        };\n        BN.prototype.ior = function ior(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuor(num);\n        };\n        BN.prototype.or = function or(num) {\n          if (this.length > num.length)\n            return this.clone().ior(num);\n          return num.clone().ior(this);\n        };\n        BN.prototype.uor = function uor(num) {\n          if (this.length > num.length)\n            return this.clone().iuor(num);\n          return num.clone().iuor(this);\n        };\n        BN.prototype.iuand = function iuand(num) {\n          var b2;\n          if (this.length > num.length) {\n            b2 = num;\n          } else {\n            b2 = this;\n          }\n          for (var i = 0; i < b2.length; i++) {\n            this.words[i] = this.words[i] & num.words[i];\n          }\n          this.length = b2.length;\n          return this.strip();\n        };\n        BN.prototype.iand = function iand(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuand(num);\n        };\n        BN.prototype.and = function and(num) {\n          if (this.length > num.length)\n            return this.clone().iand(num);\n          return num.clone().iand(this);\n        };\n        BN.prototype.uand = function uand(num) {\n          if (this.length > num.length)\n            return this.clone().iuand(num);\n          return num.clone().iuand(this);\n        };\n        BN.prototype.iuxor = function iuxor(num) {\n          var a;\n          var b2;\n          if (this.length > num.length) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          for (var i = 0; i < b2.length; i++) {\n            this.words[i] = a.words[i] ^ b2.words[i];\n          }\n          if (this !== a) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          this.length = a.length;\n          return this.strip();\n        };\n        BN.prototype.ixor = function ixor(num) {\n          assert3((this.negative | num.negative) === 0);\n          return this.iuxor(num);\n        };\n        BN.prototype.xor = function xor(num) {\n          if (this.length > num.length)\n            return this.clone().ixor(num);\n          return num.clone().ixor(this);\n        };\n        BN.prototype.uxor = function uxor(num) {\n          if (this.length > num.length)\n            return this.clone().iuxor(num);\n          return num.clone().iuxor(this);\n        };\n        BN.prototype.inotn = function inotn(width) {\n          assert3(typeof width === \"number\" && width >= 0);\n          var bytesNeeded = Math.ceil(width / 26) | 0;\n          var bitsLeft = width % 26;\n          this._expand(bytesNeeded);\n          if (bitsLeft > 0) {\n            bytesNeeded--;\n          }\n          for (var i = 0; i < bytesNeeded; i++) {\n            this.words[i] = ~this.words[i] & 67108863;\n          }\n          if (bitsLeft > 0) {\n            this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;\n          }\n          return this.strip();\n        };\n        BN.prototype.notn = function notn(width) {\n          return this.clone().inotn(width);\n        };\n        BN.prototype.setn = function setn(bit, val) {\n          assert3(typeof bit === \"number\" && bit >= 0);\n          var off2 = bit / 26 | 0;\n          var wbit = bit % 26;\n          this._expand(off2 + 1);\n          if (val) {\n            this.words[off2] = this.words[off2] | 1 << wbit;\n          } else {\n            this.words[off2] = this.words[off2] & ~(1 << wbit);\n          }\n          return this.strip();\n        };\n        BN.prototype.iadd = function iadd(num) {\n          var r;\n          if (this.negative !== 0 && num.negative === 0) {\n            this.negative = 0;\n            r = this.isub(num);\n            this.negative ^= 1;\n            return this._normSign();\n          } else if (this.negative === 0 && num.negative !== 0) {\n            num.negative = 0;\n            r = this.isub(num);\n            num.negative = 1;\n            return r._normSign();\n          }\n          var a, b2;\n          if (this.length > num.length) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          var carry = 0;\n          for (var i = 0; i < b2.length; i++) {\n            r = (a.words[i] | 0) + (b2.words[i] | 0) + carry;\n            this.words[i] = r & 67108863;\n            carry = r >>> 26;\n          }\n          for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            this.words[i] = r & 67108863;\n            carry = r >>> 26;\n          }\n          this.length = a.length;\n          if (carry !== 0) {\n            this.words[this.length] = carry;\n            this.length++;\n          } else if (a !== this) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          return this;\n        };\n        BN.prototype.add = function add2(num) {\n          var res;\n          if (num.negative !== 0 && this.negative === 0) {\n            num.negative = 0;\n            res = this.sub(num);\n            num.negative ^= 1;\n            return res;\n          } else if (num.negative === 0 && this.negative !== 0) {\n            this.negative = 0;\n            res = num.sub(this);\n            this.negative = 1;\n            return res;\n          }\n          if (this.length > num.length)\n            return this.clone().iadd(num);\n          return num.clone().iadd(this);\n        };\n        BN.prototype.isub = function isub(num) {\n          if (num.negative !== 0) {\n            num.negative = 0;\n            var r = this.iadd(num);\n            num.negative = 1;\n            return r._normSign();\n          } else if (this.negative !== 0) {\n            this.negative = 0;\n            this.iadd(num);\n            this.negative = 1;\n            return this._normSign();\n          }\n          var cmp = this.cmp(num);\n          if (cmp === 0) {\n            this.negative = 0;\n            this.length = 1;\n            this.words[0] = 0;\n            return this;\n          }\n          var a, b2;\n          if (cmp > 0) {\n            a = this;\n            b2 = num;\n          } else {\n            a = num;\n            b2 = this;\n          }\n          var carry = 0;\n          for (var i = 0; i < b2.length; i++) {\n            r = (a.words[i] | 0) - (b2.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 67108863;\n          }\n          for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 67108863;\n          }\n          if (carry === 0 && i < a.length && a !== this) {\n            for (; i < a.length; i++) {\n              this.words[i] = a.words[i];\n            }\n          }\n          this.length = Math.max(this.length, i);\n          if (a !== this) {\n            this.negative = 1;\n          }\n          return this.strip();\n        };\n        BN.prototype.sub = function sub(num) {\n          return this.clone().isub(num);\n        };\n        function smallMulTo(self2, num, out) {\n          out.negative = num.negative ^ self2.negative;\n          var len = self2.length + num.length | 0;\n          out.length = len;\n          len = len - 1 | 0;\n          var a = self2.words[0] | 0;\n          var b2 = num.words[0] | 0;\n          var r = a * b2;\n          var lo = r & 67108863;\n          var carry = r / 67108864 | 0;\n          out.words[0] = lo;\n          for (var k = 1; k < len; k++) {\n            var ncarry = carry >>> 26;\n            var rword = carry & 67108863;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {\n              var i = k - j | 0;\n              a = self2.words[i] | 0;\n              b2 = num.words[j] | 0;\n              r = a * b2 + rword;\n              ncarry += r / 67108864 | 0;\n              rword = r & 67108863;\n            }\n            out.words[k] = rword | 0;\n            carry = ncarry | 0;\n          }\n          if (carry !== 0) {\n            out.words[k] = carry | 0;\n          } else {\n            out.length--;\n          }\n          return out.strip();\n        }\n        var comb10MulTo = function comb10MulTo2(self2, num, out) {\n          var a = self2.words;\n          var b2 = num.words;\n          var o = out.words;\n          var c = 0;\n          var lo;\n          var mid;\n          var hi;\n          var a0 = a[0] | 0;\n          var al0 = a0 & 8191;\n          var ah0 = a0 >>> 13;\n          var a1 = a[1] | 0;\n          var al1 = a1 & 8191;\n          var ah1 = a1 >>> 13;\n          var a2 = a[2] | 0;\n          var al2 = a2 & 8191;\n          var ah2 = a2 >>> 13;\n          var a3 = a[3] | 0;\n          var al3 = a3 & 8191;\n          var ah3 = a3 >>> 13;\n          var a4 = a[4] | 0;\n          var al4 = a4 & 8191;\n          var ah4 = a4 >>> 13;\n          var a5 = a[5] | 0;\n          var al5 = a5 & 8191;\n          var ah5 = a5 >>> 13;\n          var a6 = a[6] | 0;\n          var al6 = a6 & 8191;\n          var ah6 = a6 >>> 13;\n          var a7 = a[7] | 0;\n          var al7 = a7 & 8191;\n          var ah7 = a7 >>> 13;\n          var a8 = a[8] | 0;\n          var al8 = a8 & 8191;\n          var ah8 = a8 >>> 13;\n          var a9 = a[9] | 0;\n          var al9 = a9 & 8191;\n          var ah9 = a9 >>> 13;\n          var b0 = b2[0] | 0;\n          var bl0 = b0 & 8191;\n          var bh0 = b0 >>> 13;\n          var b1 = b2[1] | 0;\n          var bl1 = b1 & 8191;\n          var bh1 = b1 >>> 13;\n          var b22 = b2[2] | 0;\n          var bl2 = b22 & 8191;\n          var bh2 = b22 >>> 13;\n          var b3 = b2[3] | 0;\n          var bl3 = b3 & 8191;\n          var bh3 = b3 >>> 13;\n          var b4 = b2[4] | 0;\n          var bl4 = b4 & 8191;\n          var bh4 = b4 >>> 13;\n          var b5 = b2[5] | 0;\n          var bl5 = b5 & 8191;\n          var bh5 = b5 >>> 13;\n          var b6 = b2[6] | 0;\n          var bl6 = b6 & 8191;\n          var bh6 = b6 >>> 13;\n          var b7 = b2[7] | 0;\n          var bl7 = b7 & 8191;\n          var bh7 = b7 >>> 13;\n          var b8 = b2[8] | 0;\n          var bl8 = b8 & 8191;\n          var bh8 = b8 >>> 13;\n          var b9 = b2[9] | 0;\n          var bl9 = b9 & 8191;\n          var bh9 = b9 >>> 13;\n          out.negative = self2.negative ^ num.negative;\n          out.length = 19;\n          lo = Math.imul(al0, bl0);\n          mid = Math.imul(al0, bh0);\n          mid = mid + Math.imul(ah0, bl0) | 0;\n          hi = Math.imul(ah0, bh0);\n          var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n          w0 &= 67108863;\n          lo = Math.imul(al1, bl0);\n          mid = Math.imul(al1, bh0);\n          mid = mid + Math.imul(ah1, bl0) | 0;\n          hi = Math.imul(ah1, bh0);\n          lo = lo + Math.imul(al0, bl1) | 0;\n          mid = mid + Math.imul(al0, bh1) | 0;\n          mid = mid + Math.imul(ah0, bl1) | 0;\n          hi = hi + Math.imul(ah0, bh1) | 0;\n          var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n          w1 &= 67108863;\n          lo = Math.imul(al2, bl0);\n          mid = Math.imul(al2, bh0);\n          mid = mid + Math.imul(ah2, bl0) | 0;\n          hi = Math.imul(ah2, bh0);\n          lo = lo + Math.imul(al1, bl1) | 0;\n          mid = mid + Math.imul(al1, bh1) | 0;\n          mid = mid + Math.imul(ah1, bl1) | 0;\n          hi = hi + Math.imul(ah1, bh1) | 0;\n          lo = lo + Math.imul(al0, bl2) | 0;\n          mid = mid + Math.imul(al0, bh2) | 0;\n          mid = mid + Math.imul(ah0, bl2) | 0;\n          hi = hi + Math.imul(ah0, bh2) | 0;\n          var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n          w2 &= 67108863;\n          lo = Math.imul(al3, bl0);\n          mid = Math.imul(al3, bh0);\n          mid = mid + Math.imul(ah3, bl0) | 0;\n          hi = Math.imul(ah3, bh0);\n          lo = lo + Math.imul(al2, bl1) | 0;\n          mid = mid + Math.imul(al2, bh1) | 0;\n          mid = mid + Math.imul(ah2, bl1) | 0;\n          hi = hi + Math.imul(ah2, bh1) | 0;\n          lo = lo + Math.imul(al1, bl2) | 0;\n          mid = mid + Math.imul(al1, bh2) | 0;\n          mid = mid + Math.imul(ah1, bl2) | 0;\n          hi = hi + Math.imul(ah1, bh2) | 0;\n          lo = lo + Math.imul(al0, bl3) | 0;\n          mid = mid + Math.imul(al0, bh3) | 0;\n          mid = mid + Math.imul(ah0, bl3) | 0;\n          hi = hi + Math.imul(ah0, bh3) | 0;\n          var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n          w3 &= 67108863;\n          lo = Math.imul(al4, bl0);\n          mid = Math.imul(al4, bh0);\n          mid = mid + Math.imul(ah4, bl0) | 0;\n          hi = Math.imul(ah4, bh0);\n          lo = lo + Math.imul(al3, bl1) | 0;\n          mid = mid + Math.imul(al3, bh1) | 0;\n          mid = mid + Math.imul(ah3, bl1) | 0;\n          hi = hi + Math.imul(ah3, bh1) | 0;\n          lo = lo + Math.imul(al2, bl2) | 0;\n          mid = mid + Math.imul(al2, bh2) | 0;\n          mid = mid + Math.imul(ah2, bl2) | 0;\n          hi = hi + Math.imul(ah2, bh2) | 0;\n          lo = lo + Math.imul(al1, bl3) | 0;\n          mid = mid + Math.imul(al1, bh3) | 0;\n          mid = mid + Math.imul(ah1, bl3) | 0;\n          hi = hi + Math.imul(ah1, bh3) | 0;\n          lo = lo + Math.imul(al0, bl4) | 0;\n          mid = mid + Math.imul(al0, bh4) | 0;\n          mid = mid + Math.imul(ah0, bl4) | 0;\n          hi = hi + Math.imul(ah0, bh4) | 0;\n          var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n          w4 &= 67108863;\n          lo = Math.imul(al5, bl0);\n          mid = Math.imul(al5, bh0);\n          mid = mid + Math.imul(ah5, bl0) | 0;\n          hi = Math.imul(ah5, bh0);\n          lo = lo + Math.imul(al4, bl1) | 0;\n          mid = mid + Math.imul(al4, bh1) | 0;\n          mid = mid + Math.imul(ah4, bl1) | 0;\n          hi = hi + Math.imul(ah4, bh1) | 0;\n          lo = lo + Math.imul(al3, bl2) | 0;\n          mid = mid + Math.imul(al3, bh2) | 0;\n          mid = mid + Math.imul(ah3, bl2) | 0;\n          hi = hi + Math.imul(ah3, bh2) | 0;\n          lo = lo + Math.imul(al2, bl3) | 0;\n          mid = mid + Math.imul(al2, bh3) | 0;\n          mid = mid + Math.imul(ah2, bl3) | 0;\n          hi = hi + Math.imul(ah2, bh3) | 0;\n          lo = lo + Math.imul(al1, bl4) | 0;\n          mid = mid + Math.imul(al1, bh4) | 0;\n          mid = mid + Math.imul(ah1, bl4) | 0;\n          hi = hi + Math.imul(ah1, bh4) | 0;\n          lo = lo + Math.imul(al0, bl5) | 0;\n          mid = mid + Math.imul(al0, bh5) | 0;\n          mid = mid + Math.imul(ah0, bl5) | 0;\n          hi = hi + Math.imul(ah0, bh5) | 0;\n          var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n          w5 &= 67108863;\n          lo = Math.imul(al6, bl0);\n          mid = Math.imul(al6, bh0);\n          mid = mid + Math.imul(ah6, bl0) | 0;\n          hi = Math.imul(ah6, bh0);\n          lo = lo + Math.imul(al5, bl1) | 0;\n          mid = mid + Math.imul(al5, bh1) | 0;\n          mid = mid + Math.imul(ah5, bl1) | 0;\n          hi = hi + Math.imul(ah5, bh1) | 0;\n          lo = lo + Math.imul(al4, bl2) | 0;\n          mid = mid + Math.imul(al4, bh2) | 0;\n          mid = mid + Math.imul(ah4, bl2) | 0;\n          hi = hi + Math.imul(ah4, bh2) | 0;\n          lo = lo + Math.imul(al3, bl3) | 0;\n          mid = mid + Math.imul(al3, bh3) | 0;\n          mid = mid + Math.imul(ah3, bl3) | 0;\n          hi = hi + Math.imul(ah3, bh3) | 0;\n          lo = lo + Math.imul(al2, bl4) | 0;\n          mid = mid + Math.imul(al2, bh4) | 0;\n          mid = mid + Math.imul(ah2, bl4) | 0;\n          hi = hi + Math.imul(ah2, bh4) | 0;\n          lo = lo + Math.imul(al1, bl5) | 0;\n          mid = mid + Math.imul(al1, bh5) | 0;\n          mid = mid + Math.imul(ah1, bl5) | 0;\n          hi = hi + Math.imul(ah1, bh5) | 0;\n          lo = lo + Math.imul(al0, bl6) | 0;\n          mid = mid + Math.imul(al0, bh6) | 0;\n          mid = mid + Math.imul(ah0, bl6) | 0;\n          hi = hi + Math.imul(ah0, bh6) | 0;\n          var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n          w6 &= 67108863;\n          lo = Math.imul(al7, bl0);\n          mid = Math.imul(al7, bh0);\n          mid = mid + Math.imul(ah7, bl0) | 0;\n          hi = Math.imul(ah7, bh0);\n          lo = lo + Math.imul(al6, bl1) | 0;\n          mid = mid + Math.imul(al6, bh1) | 0;\n          mid = mid + Math.imul(ah6, bl1) | 0;\n          hi = hi + Math.imul(ah6, bh1) | 0;\n          lo = lo + Math.imul(al5, bl2) | 0;\n          mid = mid + Math.imul(al5, bh2) | 0;\n          mid = mid + Math.imul(ah5, bl2) | 0;\n          hi = hi + Math.imul(ah5, bh2) | 0;\n          lo = lo + Math.imul(al4, bl3) | 0;\n          mid = mid + Math.imul(al4, bh3) | 0;\n          mid = mid + Math.imul(ah4, bl3) | 0;\n          hi = hi + Math.imul(ah4, bh3) | 0;\n          lo = lo + Math.imul(al3, bl4) | 0;\n          mid = mid + Math.imul(al3, bh4) | 0;\n          mid = mid + Math.imul(ah3, bl4) | 0;\n          hi = hi + Math.imul(ah3, bh4) | 0;\n          lo = lo + Math.imul(al2, bl5) | 0;\n          mid = mid + Math.imul(al2, bh5) | 0;\n          mid = mid + Math.imul(ah2, bl5) | 0;\n          hi = hi + Math.imul(ah2, bh5) | 0;\n          lo = lo + Math.imul(al1, bl6) | 0;\n          mid = mid + Math.imul(al1, bh6) | 0;\n          mid = mid + Math.imul(ah1, bl6) | 0;\n          hi = hi + Math.imul(ah1, bh6) | 0;\n          lo = lo + Math.imul(al0, bl7) | 0;\n          mid = mid + Math.imul(al0, bh7) | 0;\n          mid = mid + Math.imul(ah0, bl7) | 0;\n          hi = hi + Math.imul(ah0, bh7) | 0;\n          var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n          w7 &= 67108863;\n          lo = Math.imul(al8, bl0);\n          mid = Math.imul(al8, bh0);\n          mid = mid + Math.imul(ah8, bl0) | 0;\n          hi = Math.imul(ah8, bh0);\n          lo = lo + Math.imul(al7, bl1) | 0;\n          mid = mid + Math.imul(al7, bh1) | 0;\n          mid = mid + Math.imul(ah7, bl1) | 0;\n          hi = hi + Math.imul(ah7, bh1) | 0;\n          lo = lo + Math.imul(al6, bl2) | 0;\n          mid = mid + Math.imul(al6, bh2) | 0;\n          mid = mid + Math.imul(ah6, bl2) | 0;\n          hi = hi + Math.imul(ah6, bh2) | 0;\n          lo = lo + Math.imul(al5, bl3) | 0;\n          mid = mid + Math.imul(al5, bh3) | 0;\n          mid = mid + Math.imul(ah5, bl3) | 0;\n          hi = hi + Math.imul(ah5, bh3) | 0;\n          lo = lo + Math.imul(al4, bl4) | 0;\n          mid = mid + Math.imul(al4, bh4) | 0;\n          mid = mid + Math.imul(ah4, bl4) | 0;\n          hi = hi + Math.imul(ah4, bh4) | 0;\n          lo = lo + Math.imul(al3, bl5) | 0;\n          mid = mid + Math.imul(al3, bh5) | 0;\n          mid = mid + Math.imul(ah3, bl5) | 0;\n          hi = hi + Math.imul(ah3, bh5) | 0;\n          lo = lo + Math.imul(al2, bl6) | 0;\n          mid = mid + Math.imul(al2, bh6) | 0;\n          mid = mid + Math.imul(ah2, bl6) | 0;\n          hi = hi + Math.imul(ah2, bh6) | 0;\n          lo = lo + Math.imul(al1, bl7) | 0;\n          mid = mid + Math.imul(al1, bh7) | 0;\n          mid = mid + Math.imul(ah1, bl7) | 0;\n          hi = hi + Math.imul(ah1, bh7) | 0;\n          lo = lo + Math.imul(al0, bl8) | 0;\n          mid = mid + Math.imul(al0, bh8) | 0;\n          mid = mid + Math.imul(ah0, bl8) | 0;\n          hi = hi + Math.imul(ah0, bh8) | 0;\n          var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n          w8 &= 67108863;\n          lo = Math.imul(al9, bl0);\n          mid = Math.imul(al9, bh0);\n          mid = mid + Math.imul(ah9, bl0) | 0;\n          hi = Math.imul(ah9, bh0);\n          lo = lo + Math.imul(al8, bl1) | 0;\n          mid = mid + Math.imul(al8, bh1) | 0;\n          mid = mid + Math.imul(ah8, bl1) | 0;\n          hi = hi + Math.imul(ah8, bh1) | 0;\n          lo = lo + Math.imul(al7, bl2) | 0;\n          mid = mid + Math.imul(al7, bh2) | 0;\n          mid = mid + Math.imul(ah7, bl2) | 0;\n          hi = hi + Math.imul(ah7, bh2) | 0;\n          lo = lo + Math.imul(al6, bl3) | 0;\n          mid = mid + Math.imul(al6, bh3) | 0;\n          mid = mid + Math.imul(ah6, bl3) | 0;\n          hi = hi + Math.imul(ah6, bh3) | 0;\n          lo = lo + Math.imul(al5, bl4) | 0;\n          mid = mid + Math.imul(al5, bh4) | 0;\n          mid = mid + Math.imul(ah5, bl4) | 0;\n          hi = hi + Math.imul(ah5, bh4) | 0;\n          lo = lo + Math.imul(al4, bl5) | 0;\n          mid = mid + Math.imul(al4, bh5) | 0;\n          mid = mid + Math.imul(ah4, bl5) | 0;\n          hi = hi + Math.imul(ah4, bh5) | 0;\n          lo = lo + Math.imul(al3, bl6) | 0;\n          mid = mid + Math.imul(al3, bh6) | 0;\n          mid = mid + Math.imul(ah3, bl6) | 0;\n          hi = hi + Math.imul(ah3, bh6) | 0;\n          lo = lo + Math.imul(al2, bl7) | 0;\n          mid = mid + Math.imul(al2, bh7) | 0;\n          mid = mid + Math.imul(ah2, bl7) | 0;\n          hi = hi + Math.imul(ah2, bh7) | 0;\n          lo = lo + Math.imul(al1, bl8) | 0;\n          mid = mid + Math.imul(al1, bh8) | 0;\n          mid = mid + Math.imul(ah1, bl8) | 0;\n          hi = hi + Math.imul(ah1, bh8) | 0;\n          lo = lo + Math.imul(al0, bl9) | 0;\n          mid = mid + Math.imul(al0, bh9) | 0;\n          mid = mid + Math.imul(ah0, bl9) | 0;\n          hi = hi + Math.imul(ah0, bh9) | 0;\n          var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n          w9 &= 67108863;\n          lo = Math.imul(al9, bl1);\n          mid = Math.imul(al9, bh1);\n          mid = mid + Math.imul(ah9, bl1) | 0;\n          hi = Math.imul(ah9, bh1);\n          lo = lo + Math.imul(al8, bl2) | 0;\n          mid = mid + Math.imul(al8, bh2) | 0;\n          mid = mid + Math.imul(ah8, bl2) | 0;\n          hi = hi + Math.imul(ah8, bh2) | 0;\n          lo = lo + Math.imul(al7, bl3) | 0;\n          mid = mid + Math.imul(al7, bh3) | 0;\n          mid = mid + Math.imul(ah7, bl3) | 0;\n          hi = hi + Math.imul(ah7, bh3) | 0;\n          lo = lo + Math.imul(al6, bl4) | 0;\n          mid = mid + Math.imul(al6, bh4) | 0;\n          mid = mid + Math.imul(ah6, bl4) | 0;\n          hi = hi + Math.imul(ah6, bh4) | 0;\n          lo = lo + Math.imul(al5, bl5) | 0;\n          mid = mid + Math.imul(al5, bh5) | 0;\n          mid = mid + Math.imul(ah5, bl5) | 0;\n          hi = hi + Math.imul(ah5, bh5) | 0;\n          lo = lo + Math.imul(al4, bl6) | 0;\n          mid = mid + Math.imul(al4, bh6) | 0;\n          mid = mid + Math.imul(ah4, bl6) | 0;\n          hi = hi + Math.imul(ah4, bh6) | 0;\n          lo = lo + Math.imul(al3, bl7) | 0;\n          mid = mid + Math.imul(al3, bh7) | 0;\n          mid = mid + Math.imul(ah3, bl7) | 0;\n          hi = hi + Math.imul(ah3, bh7) | 0;\n          lo = lo + Math.imul(al2, bl8) | 0;\n          mid = mid + Math.imul(al2, bh8) | 0;\n          mid = mid + Math.imul(ah2, bl8) | 0;\n          hi = hi + Math.imul(ah2, bh8) | 0;\n          lo = lo + Math.imul(al1, bl9) | 0;\n          mid = mid + Math.imul(al1, bh9) | 0;\n          mid = mid + Math.imul(ah1, bl9) | 0;\n          hi = hi + Math.imul(ah1, bh9) | 0;\n          var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n          w10 &= 67108863;\n          lo = Math.imul(al9, bl2);\n          mid = Math.imul(al9, bh2);\n          mid = mid + Math.imul(ah9, bl2) | 0;\n          hi = Math.imul(ah9, bh2);\n          lo = lo + Math.imul(al8, bl3) | 0;\n          mid = mid + Math.imul(al8, bh3) | 0;\n          mid = mid + Math.imul(ah8, bl3) | 0;\n          hi = hi + Math.imul(ah8, bh3) | 0;\n          lo = lo + Math.imul(al7, bl4) | 0;\n          mid = mid + Math.imul(al7, bh4) | 0;\n          mid = mid + Math.imul(ah7, bl4) | 0;\n          hi = hi + Math.imul(ah7, bh4) | 0;\n          lo = lo + Math.imul(al6, bl5) | 0;\n          mid = mid + Math.imul(al6, bh5) | 0;\n          mid = mid + Math.imul(ah6, bl5) | 0;\n          hi = hi + Math.imul(ah6, bh5) | 0;\n          lo = lo + Math.imul(al5, bl6) | 0;\n          mid = mid + Math.imul(al5, bh6) | 0;\n          mid = mid + Math.imul(ah5, bl6) | 0;\n          hi = hi + Math.imul(ah5, bh6) | 0;\n          lo = lo + Math.imul(al4, bl7) | 0;\n          mid = mid + Math.imul(al4, bh7) | 0;\n          mid = mid + Math.imul(ah4, bl7) | 0;\n          hi = hi + Math.imul(ah4, bh7) | 0;\n          lo = lo + Math.imul(al3, bl8) | 0;\n          mid = mid + Math.imul(al3, bh8) | 0;\n          mid = mid + Math.imul(ah3, bl8) | 0;\n          hi = hi + Math.imul(ah3, bh8) | 0;\n          lo = lo + Math.imul(al2, bl9) | 0;\n          mid = mid + Math.imul(al2, bh9) | 0;\n          mid = mid + Math.imul(ah2, bl9) | 0;\n          hi = hi + Math.imul(ah2, bh9) | 0;\n          var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n          w11 &= 67108863;\n          lo = Math.imul(al9, bl3);\n          mid = Math.imul(al9, bh3);\n          mid = mid + Math.imul(ah9, bl3) | 0;\n          hi = Math.imul(ah9, bh3);\n          lo = lo + Math.imul(al8, bl4) | 0;\n          mid = mid + Math.imul(al8, bh4) | 0;\n          mid = mid + Math.imul(ah8, bl4) | 0;\n          hi = hi + Math.imul(ah8, bh4) | 0;\n          lo = lo + Math.imul(al7, bl5) | 0;\n          mid = mid + Math.imul(al7, bh5) | 0;\n          mid = mid + Math.imul(ah7, bl5) | 0;\n          hi = hi + Math.imul(ah7, bh5) | 0;\n          lo = lo + Math.imul(al6, bl6) | 0;\n          mid = mid + Math.imul(al6, bh6) | 0;\n          mid = mid + Math.imul(ah6, bl6) | 0;\n          hi = hi + Math.imul(ah6, bh6) | 0;\n          lo = lo + Math.imul(al5, bl7) | 0;\n          mid = mid + Math.imul(al5, bh7) | 0;\n          mid = mid + Math.imul(ah5, bl7) | 0;\n          hi = hi + Math.imul(ah5, bh7) | 0;\n          lo = lo + Math.imul(al4, bl8) | 0;\n          mid = mid + Math.imul(al4, bh8) | 0;\n          mid = mid + Math.imul(ah4, bl8) | 0;\n          hi = hi + Math.imul(ah4, bh8) | 0;\n          lo = lo + Math.imul(al3, bl9) | 0;\n          mid = mid + Math.imul(al3, bh9) | 0;\n          mid = mid + Math.imul(ah3, bl9) | 0;\n          hi = hi + Math.imul(ah3, bh9) | 0;\n          var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n          w12 &= 67108863;\n          lo = Math.imul(al9, bl4);\n          mid = Math.imul(al9, bh4);\n          mid = mid + Math.imul(ah9, bl4) | 0;\n          hi = Math.imul(ah9, bh4);\n          lo = lo + Math.imul(al8, bl5) | 0;\n          mid = mid + Math.imul(al8, bh5) | 0;\n          mid = mid + Math.imul(ah8, bl5) | 0;\n          hi = hi + Math.imul(ah8, bh5) | 0;\n          lo = lo + Math.imul(al7, bl6) | 0;\n          mid = mid + Math.imul(al7, bh6) | 0;\n          mid = mid + Math.imul(ah7, bl6) | 0;\n          hi = hi + Math.imul(ah7, bh6) | 0;\n          lo = lo + Math.imul(al6, bl7) | 0;\n          mid = mid + Math.imul(al6, bh7) | 0;\n          mid = mid + Math.imul(ah6, bl7) | 0;\n          hi = hi + Math.imul(ah6, bh7) | 0;\n          lo = lo + Math.imul(al5, bl8) | 0;\n          mid = mid + Math.imul(al5, bh8) | 0;\n          mid = mid + Math.imul(ah5, bl8) | 0;\n          hi = hi + Math.imul(ah5, bh8) | 0;\n          lo = lo + Math.imul(al4, bl9) | 0;\n          mid = mid + Math.imul(al4, bh9) | 0;\n          mid = mid + Math.imul(ah4, bl9) | 0;\n          hi = hi + Math.imul(ah4, bh9) | 0;\n          var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n          w13 &= 67108863;\n          lo = Math.imul(al9, bl5);\n          mid = Math.imul(al9, bh5);\n          mid = mid + Math.imul(ah9, bl5) | 0;\n          hi = Math.imul(ah9, bh5);\n          lo = lo + Math.imul(al8, bl6) | 0;\n          mid = mid + Math.imul(al8, bh6) | 0;\n          mid = mid + Math.imul(ah8, bl6) | 0;\n          hi = hi + Math.imul(ah8, bh6) | 0;\n          lo = lo + Math.imul(al7, bl7) | 0;\n          mid = mid + Math.imul(al7, bh7) | 0;\n          mid = mid + Math.imul(ah7, bl7) | 0;\n          hi = hi + Math.imul(ah7, bh7) | 0;\n          lo = lo + Math.imul(al6, bl8) | 0;\n          mid = mid + Math.imul(al6, bh8) | 0;\n          mid = mid + Math.imul(ah6, bl8) | 0;\n          hi = hi + Math.imul(ah6, bh8) | 0;\n          lo = lo + Math.imul(al5, bl9) | 0;\n          mid = mid + Math.imul(al5, bh9) | 0;\n          mid = mid + Math.imul(ah5, bl9) | 0;\n          hi = hi + Math.imul(ah5, bh9) | 0;\n          var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n          w14 &= 67108863;\n          lo = Math.imul(al9, bl6);\n          mid = Math.imul(al9, bh6);\n          mid = mid + Math.imul(ah9, bl6) | 0;\n          hi = Math.imul(ah9, bh6);\n          lo = lo + Math.imul(al8, bl7) | 0;\n          mid = mid + Math.imul(al8, bh7) | 0;\n          mid = mid + Math.imul(ah8, bl7) | 0;\n          hi = hi + Math.imul(ah8, bh7) | 0;\n          lo = lo + Math.imul(al7, bl8) | 0;\n          mid = mid + Math.imul(al7, bh8) | 0;\n          mid = mid + Math.imul(ah7, bl8) | 0;\n          hi = hi + Math.imul(ah7, bh8) | 0;\n          lo = lo + Math.imul(al6, bl9) | 0;\n          mid = mid + Math.imul(al6, bh9) | 0;\n          mid = mid + Math.imul(ah6, bl9) | 0;\n          hi = hi + Math.imul(ah6, bh9) | 0;\n          var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n          w15 &= 67108863;\n          lo = Math.imul(al9, bl7);\n          mid = Math.imul(al9, bh7);\n          mid = mid + Math.imul(ah9, bl7) | 0;\n          hi = Math.imul(ah9, bh7);\n          lo = lo + Math.imul(al8, bl8) | 0;\n          mid = mid + Math.imul(al8, bh8) | 0;\n          mid = mid + Math.imul(ah8, bl8) | 0;\n          hi = hi + Math.imul(ah8, bh8) | 0;\n          lo = lo + Math.imul(al7, bl9) | 0;\n          mid = mid + Math.imul(al7, bh9) | 0;\n          mid = mid + Math.imul(ah7, bl9) | 0;\n          hi = hi + Math.imul(ah7, bh9) | 0;\n          var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n          w16 &= 67108863;\n          lo = Math.imul(al9, bl8);\n          mid = Math.imul(al9, bh8);\n          mid = mid + Math.imul(ah9, bl8) | 0;\n          hi = Math.imul(ah9, bh8);\n          lo = lo + Math.imul(al8, bl9) | 0;\n          mid = mid + Math.imul(al8, bh9) | 0;\n          mid = mid + Math.imul(ah8, bl9) | 0;\n          hi = hi + Math.imul(ah8, bh9) | 0;\n          var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n          w17 &= 67108863;\n          lo = Math.imul(al9, bl9);\n          mid = Math.imul(al9, bh9);\n          mid = mid + Math.imul(ah9, bl9) | 0;\n          hi = Math.imul(ah9, bh9);\n          var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n          c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n          w18 &= 67108863;\n          o[0] = w0;\n          o[1] = w1;\n          o[2] = w2;\n          o[3] = w3;\n          o[4] = w4;\n          o[5] = w5;\n          o[6] = w6;\n          o[7] = w7;\n          o[8] = w8;\n          o[9] = w9;\n          o[10] = w10;\n          o[11] = w11;\n          o[12] = w12;\n          o[13] = w13;\n          o[14] = w14;\n          o[15] = w15;\n          o[16] = w16;\n          o[17] = w17;\n          o[18] = w18;\n          if (c !== 0) {\n            o[19] = c;\n            out.length++;\n          }\n          return out;\n        };\n        if (!Math.imul) {\n          comb10MulTo = smallMulTo;\n        }\n        function bigMulTo(self2, num, out) {\n          out.negative = num.negative ^ self2.negative;\n          out.length = self2.length + num.length;\n          var carry = 0;\n          var hncarry = 0;\n          for (var k = 0; k < out.length - 1; k++) {\n            var ncarry = hncarry;\n            hncarry = 0;\n            var rword = carry & 67108863;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {\n              var i = k - j;\n              var a = self2.words[i] | 0;\n              var b2 = num.words[j] | 0;\n              var r = a * b2;\n              var lo = r & 67108863;\n              ncarry = ncarry + (r / 67108864 | 0) | 0;\n              lo = lo + rword | 0;\n              rword = lo & 67108863;\n              ncarry = ncarry + (lo >>> 26) | 0;\n              hncarry += ncarry >>> 26;\n              ncarry &= 67108863;\n            }\n            out.words[k] = rword;\n            carry = ncarry;\n            ncarry = hncarry;\n          }\n          if (carry !== 0) {\n            out.words[k] = carry;\n          } else {\n            out.length--;\n          }\n          return out.strip();\n        }\n        function jumboMulTo(self2, num, out) {\n          var fftm = new FFTM();\n          return fftm.mulp(self2, num, out);\n        }\n        BN.prototype.mulTo = function mulTo(num, out) {\n          var res;\n          var len = this.length + num.length;\n          if (this.length === 10 && num.length === 10) {\n            res = comb10MulTo(this, num, out);\n          } else if (len < 63) {\n            res = smallMulTo(this, num, out);\n          } else if (len < 1024) {\n            res = bigMulTo(this, num, out);\n          } else {\n            res = jumboMulTo(this, num, out);\n          }\n          return res;\n        };\n        function FFTM(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n        FFTM.prototype.makeRBT = function makeRBT(N) {\n          var t = new Array(N);\n          var l = BN.prototype._countBits(N) - 1;\n          for (var i = 0; i < N; i++) {\n            t[i] = this.revBin(i, l, N);\n          }\n          return t;\n        };\n        FFTM.prototype.revBin = function revBin(x, l, N) {\n          if (x === 0 || x === N - 1)\n            return x;\n          var rb = 0;\n          for (var i = 0; i < l; i++) {\n            rb |= (x & 1) << l - i - 1;\n            x >>= 1;\n          }\n          return rb;\n        };\n        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n          for (var i = 0; i < N; i++) {\n            rtws[i] = rws[rbt[i]];\n            itws[i] = iws[rbt[i]];\n          }\n        };\n        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n          this.permute(rbt, rws, iws, rtws, itws, N);\n          for (var s = 1; s < N; s <<= 1) {\n            var l = s << 1;\n            var rtwdf = Math.cos(2 * Math.PI / l);\n            var itwdf = Math.sin(2 * Math.PI / l);\n            for (var p = 0; p < N; p += l) {\n              var rtwdf_ = rtwdf;\n              var itwdf_ = itwdf;\n              for (var j = 0; j < s; j++) {\n                var re = rtws[p + j];\n                var ie = itws[p + j];\n                var ro = rtws[p + j + s];\n                var io = itws[p + j + s];\n                var rx = rtwdf_ * ro - itwdf_ * io;\n                io = rtwdf_ * io + itwdf_ * ro;\n                ro = rx;\n                rtws[p + j] = re + ro;\n                itws[p + j] = ie + io;\n                rtws[p + j + s] = re - ro;\n                itws[p + j + s] = ie - io;\n                if (j !== l) {\n                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n                  rtwdf_ = rx;\n                }\n              }\n            }\n          }\n        };\n        FFTM.prototype.guessLen13b = function guessLen13b(n2, m) {\n          var N = Math.max(m, n2) | 1;\n          var odd = N & 1;\n          var i = 0;\n          for (N = N / 2 | 0; N; N = N >>> 1) {\n            i++;\n          }\n          return 1 << i + 1 + odd;\n        };\n        FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n          if (N <= 1)\n            return;\n          for (var i = 0; i < N / 2; i++) {\n            var t = rws[i];\n            rws[i] = rws[N - i - 1];\n            rws[N - i - 1] = t;\n            t = iws[i];\n            iws[i] = -iws[N - i - 1];\n            iws[N - i - 1] = -t;\n          }\n        };\n        FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n          var carry = 0;\n          for (var i = 0; i < N / 2; i++) {\n            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;\n            ws[i] = w & 67108863;\n            if (w < 67108864) {\n              carry = 0;\n            } else {\n              carry = w / 67108864 | 0;\n            }\n          }\n          return ws;\n        };\n        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n          var carry = 0;\n          for (var i = 0; i < len; i++) {\n            carry = carry + (ws[i] | 0);\n            rws[2 * i] = carry & 8191;\n            carry = carry >>> 13;\n            rws[2 * i + 1] = carry & 8191;\n            carry = carry >>> 13;\n          }\n          for (i = 2 * len; i < N; ++i) {\n            rws[i] = 0;\n          }\n          assert3(carry === 0);\n          assert3((carry & ~8191) === 0);\n        };\n        FFTM.prototype.stub = function stub(N) {\n          var ph = new Array(N);\n          for (var i = 0; i < N; i++) {\n            ph[i] = 0;\n          }\n          return ph;\n        };\n        FFTM.prototype.mulp = function mulp(x, y, out) {\n          var N = 2 * this.guessLen13b(x.length, y.length);\n          var rbt = this.makeRBT(N);\n          var _ = this.stub(N);\n          var rws = new Array(N);\n          var rwst = new Array(N);\n          var iwst = new Array(N);\n          var nrws = new Array(N);\n          var nrwst = new Array(N);\n          var niwst = new Array(N);\n          var rmws = out.words;\n          rmws.length = N;\n          this.convert13b(x.words, x.length, rws, N);\n          this.convert13b(y.words, y.length, nrws, N);\n          this.transform(rws, _, rwst, iwst, N, rbt);\n          this.transform(nrws, _, nrwst, niwst, N, rbt);\n          for (var i = 0; i < N; i++) {\n            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n            rwst[i] = rx;\n          }\n          this.conjugate(rwst, iwst, N);\n          this.transform(rwst, iwst, rmws, _, N, rbt);\n          this.conjugate(rmws, _, N);\n          this.normalize13b(rmws, N);\n          out.negative = x.negative ^ y.negative;\n          out.length = x.length + y.length;\n          return out.strip();\n        };\n        BN.prototype.mul = function mul(num) {\n          var out = new BN(null);\n          out.words = new Array(this.length + num.length);\n          return this.mulTo(num, out);\n        };\n        BN.prototype.mulf = function mulf(num) {\n          var out = new BN(null);\n          out.words = new Array(this.length + num.length);\n          return jumboMulTo(this, num, out);\n        };\n        BN.prototype.imul = function imul(num) {\n          return this.clone().mulTo(num, this);\n        };\n        BN.prototype.imuln = function imuln(num) {\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          var carry = 0;\n          for (var i = 0; i < this.length; i++) {\n            var w = (this.words[i] | 0) * num;\n            var lo = (w & 67108863) + (carry & 67108863);\n            carry >>= 26;\n            carry += w / 67108864 | 0;\n            carry += lo >>> 26;\n            this.words[i] = lo & 67108863;\n          }\n          if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n          }\n          this.length = num === 0 ? 1 : this.length;\n          return this;\n        };\n        BN.prototype.muln = function muln(num) {\n          return this.clone().imuln(num);\n        };\n        BN.prototype.sqr = function sqr() {\n          return this.mul(this);\n        };\n        BN.prototype.isqr = function isqr() {\n          return this.imul(this.clone());\n        };\n        BN.prototype.pow = function pow3(num) {\n          var w = toBitArray(num);\n          if (w.length === 0)\n            return new BN(1);\n          var res = this;\n          for (var i = 0; i < w.length; i++, res = res.sqr()) {\n            if (w[i] !== 0)\n              break;\n          }\n          if (++i < w.length) {\n            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n              if (w[i] === 0)\n                continue;\n              res = res.mul(q);\n            }\n          }\n          return res;\n        };\n        BN.prototype.iushln = function iushln(bits) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var r = bits % 26;\n          var s = (bits - r) / 26;\n          var carryMask = 67108863 >>> 26 - r << 26 - r;\n          var i;\n          if (r !== 0) {\n            var carry = 0;\n            for (i = 0; i < this.length; i++) {\n              var newCarry = this.words[i] & carryMask;\n              var c = (this.words[i] | 0) - newCarry << r;\n              this.words[i] = c | carry;\n              carry = newCarry >>> 26 - r;\n            }\n            if (carry) {\n              this.words[i] = carry;\n              this.length++;\n            }\n          }\n          if (s !== 0) {\n            for (i = this.length - 1; i >= 0; i--) {\n              this.words[i + s] = this.words[i];\n            }\n            for (i = 0; i < s; i++) {\n              this.words[i] = 0;\n            }\n            this.length += s;\n          }\n          return this.strip();\n        };\n        BN.prototype.ishln = function ishln(bits) {\n          assert3(this.negative === 0);\n          return this.iushln(bits);\n        };\n        BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var h;\n          if (hint) {\n            h = (hint - hint % 26) / 26;\n          } else {\n            h = 0;\n          }\n          var r = bits % 26;\n          var s = Math.min((bits - r) / 26, this.length);\n          var mask2 = 67108863 ^ 67108863 >>> r << r;\n          var maskedWords = extended;\n          h -= s;\n          h = Math.max(0, h);\n          if (maskedWords) {\n            for (var i = 0; i < s; i++) {\n              maskedWords.words[i] = this.words[i];\n            }\n            maskedWords.length = s;\n          }\n          if (s === 0) {\n          } else if (this.length > s) {\n            this.length -= s;\n            for (i = 0; i < this.length; i++) {\n              this.words[i] = this.words[i + s];\n            }\n          } else {\n            this.words[0] = 0;\n            this.length = 1;\n          }\n          var carry = 0;\n          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n            var word = this.words[i] | 0;\n            this.words[i] = carry << 26 - r | word >>> r;\n            carry = word & mask2;\n          }\n          if (maskedWords && carry !== 0) {\n            maskedWords.words[maskedWords.length++] = carry;\n          }\n          if (this.length === 0) {\n            this.words[0] = 0;\n            this.length = 1;\n          }\n          return this.strip();\n        };\n        BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n          assert3(this.negative === 0);\n          return this.iushrn(bits, hint, extended);\n        };\n        BN.prototype.shln = function shln(bits) {\n          return this.clone().ishln(bits);\n        };\n        BN.prototype.ushln = function ushln(bits) {\n          return this.clone().iushln(bits);\n        };\n        BN.prototype.shrn = function shrn(bits) {\n          return this.clone().ishrn(bits);\n        };\n        BN.prototype.ushrn = function ushrn(bits) {\n          return this.clone().iushrn(bits);\n        };\n        BN.prototype.testn = function testn(bit) {\n          assert3(typeof bit === \"number\" && bit >= 0);\n          var r = bit % 26;\n          var s = (bit - r) / 26;\n          var q = 1 << r;\n          if (this.length <= s)\n            return false;\n          var w = this.words[s];\n          return !!(w & q);\n        };\n        BN.prototype.imaskn = function imaskn(bits) {\n          assert3(typeof bits === \"number\" && bits >= 0);\n          var r = bits % 26;\n          var s = (bits - r) / 26;\n          assert3(this.negative === 0, \"imaskn works only with positive numbers\");\n          if (this.length <= s) {\n            return this;\n          }\n          if (r !== 0) {\n            s++;\n          }\n          this.length = Math.min(s, this.length);\n          if (r !== 0) {\n            var mask2 = 67108863 ^ 67108863 >>> r << r;\n            this.words[this.length - 1] &= mask2;\n          }\n          return this.strip();\n        };\n        BN.prototype.maskn = function maskn(bits) {\n          return this.clone().imaskn(bits);\n        };\n        BN.prototype.iaddn = function iaddn(num) {\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          if (num < 0)\n            return this.isubn(-num);\n          if (this.negative !== 0) {\n            if (this.length === 1 && (this.words[0] | 0) < num) {\n              this.words[0] = num - (this.words[0] | 0);\n              this.negative = 0;\n              return this;\n            }\n            this.negative = 0;\n            this.isubn(num);\n            this.negative = 1;\n            return this;\n          }\n          return this._iaddn(num);\n        };\n        BN.prototype._iaddn = function _iaddn(num) {\n          this.words[0] += num;\n          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {\n            this.words[i] -= 67108864;\n            if (i === this.length - 1) {\n              this.words[i + 1] = 1;\n            } else {\n              this.words[i + 1]++;\n            }\n          }\n          this.length = Math.max(this.length, i + 1);\n          return this;\n        };\n        BN.prototype.isubn = function isubn(num) {\n          assert3(typeof num === \"number\");\n          assert3(num < 67108864);\n          if (num < 0)\n            return this.iaddn(-num);\n          if (this.negative !== 0) {\n            this.negative = 0;\n            this.iaddn(num);\n            this.negative = 1;\n            return this;\n          }\n          this.words[0] -= num;\n          if (this.length === 1 && this.words[0] < 0) {\n            this.words[0] = -this.words[0];\n            this.negative = 1;\n          } else {\n            for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n              this.words[i] += 67108864;\n              this.words[i + 1] -= 1;\n            }\n          }\n          return this.strip();\n        };\n        BN.prototype.addn = function addn(num) {\n          return this.clone().iaddn(num);\n        };\n        BN.prototype.subn = function subn(num) {\n          return this.clone().isubn(num);\n        };\n        BN.prototype.iabs = function iabs() {\n          this.negative = 0;\n          return this;\n        };\n        BN.prototype.abs = function abs() {\n          return this.clone().iabs();\n        };\n        BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n          var len = num.length + shift;\n          var i;\n          this._expand(len);\n          var w;\n          var carry = 0;\n          for (i = 0; i < num.length; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            var right = (num.words[i] | 0) * mul;\n            w -= right & 67108863;\n            carry = (w >> 26) - (right / 67108864 | 0);\n            this.words[i + shift] = w & 67108863;\n          }\n          for (; i < this.length - shift; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            carry = w >> 26;\n            this.words[i + shift] = w & 67108863;\n          }\n          if (carry === 0)\n            return this.strip();\n          assert3(carry === -1);\n          carry = 0;\n          for (i = 0; i < this.length; i++) {\n            w = -(this.words[i] | 0) + carry;\n            carry = w >> 26;\n            this.words[i] = w & 67108863;\n          }\n          this.negative = 1;\n          return this.strip();\n        };\n        BN.prototype._wordDiv = function _wordDiv(num, mode) {\n          var shift = this.length - num.length;\n          var a = this.clone();\n          var b2 = num;\n          var bhi = b2.words[b2.length - 1] | 0;\n          var bhiBits = this._countBits(bhi);\n          shift = 26 - bhiBits;\n          if (shift !== 0) {\n            b2 = b2.ushln(shift);\n            a.iushln(shift);\n            bhi = b2.words[b2.length - 1] | 0;\n          }\n          var m = a.length - b2.length;\n          var q;\n          if (mode !== \"mod\") {\n            q = new BN(null);\n            q.length = m + 1;\n            q.words = new Array(q.length);\n            for (var i = 0; i < q.length; i++) {\n              q.words[i] = 0;\n            }\n          }\n          var diff = a.clone()._ishlnsubmul(b2, 1, m);\n          if (diff.negative === 0) {\n            a = diff;\n            if (q) {\n              q.words[m] = 1;\n            }\n          }\n          for (var j = m - 1; j >= 0; j--) {\n            var qj = (a.words[b2.length + j] | 0) * 67108864 + (a.words[b2.length + j - 1] | 0);\n            qj = Math.min(qj / bhi | 0, 67108863);\n            a._ishlnsubmul(b2, qj, j);\n            while (a.negative !== 0) {\n              qj--;\n              a.negative = 0;\n              a._ishlnsubmul(b2, 1, j);\n              if (!a.isZero()) {\n                a.negative ^= 1;\n              }\n            }\n            if (q) {\n              q.words[j] = qj;\n            }\n          }\n          if (q) {\n            q.strip();\n          }\n          a.strip();\n          if (mode !== \"div\" && shift !== 0) {\n            a.iushrn(shift);\n          }\n          return {\n            div: q || null,\n            mod: a\n          };\n        };\n        BN.prototype.divmod = function divmod(num, mode, positive) {\n          assert3(!num.isZero());\n          if (this.isZero()) {\n            return {\n              div: new BN(0),\n              mod: new BN(0)\n            };\n          }\n          var div, mod2, res;\n          if (this.negative !== 0 && num.negative === 0) {\n            res = this.neg().divmod(num, mode);\n            if (mode !== \"mod\") {\n              div = res.div.neg();\n            }\n            if (mode !== \"div\") {\n              mod2 = res.mod.neg();\n              if (positive && mod2.negative !== 0) {\n                mod2.iadd(num);\n              }\n            }\n            return {\n              div,\n              mod: mod2\n            };\n          }\n          if (this.negative === 0 && num.negative !== 0) {\n            res = this.divmod(num.neg(), mode);\n            if (mode !== \"mod\") {\n              div = res.div.neg();\n            }\n            return {\n              div,\n              mod: res.mod\n            };\n          }\n          if ((this.negative & num.negative) !== 0) {\n            res = this.neg().divmod(num.neg(), mode);\n            if (mode !== \"div\") {\n              mod2 = res.mod.neg();\n              if (positive && mod2.negative !== 0) {\n                mod2.isub(num);\n              }\n            }\n            return {\n              div: res.div,\n              mod: mod2\n            };\n          }\n          if (num.length > this.length || this.cmp(num) < 0) {\n            return {\n              div: new BN(0),\n              mod: this\n            };\n          }\n          if (num.length === 1) {\n            if (mode === \"div\") {\n              return {\n                div: this.divn(num.words[0]),\n                mod: null\n              };\n            }\n            if (mode === \"mod\") {\n              return {\n                div: null,\n                mod: new BN(this.modn(num.words[0]))\n              };\n            }\n            return {\n              div: this.divn(num.words[0]),\n              mod: new BN(this.modn(num.words[0]))\n            };\n          }\n          return this._wordDiv(num, mode);\n        };\n        BN.prototype.div = function div(num) {\n          return this.divmod(num, \"div\", false).div;\n        };\n        BN.prototype.mod = function mod2(num) {\n          return this.divmod(num, \"mod\", false).mod;\n        };\n        BN.prototype.umod = function umod(num) {\n          return this.divmod(num, \"mod\", true).mod;\n        };\n        BN.prototype.divRound = function divRound(num) {\n          var dm = this.divmod(num);\n          if (dm.mod.isZero())\n            return dm.div;\n          var mod2 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n          var half = num.ushrn(1);\n          var r2 = num.andln(1);\n          var cmp = mod2.cmp(half);\n          if (cmp < 0 || r2 === 1 && cmp === 0)\n            return dm.div;\n          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n        };\n        BN.prototype.modn = function modn(num) {\n          assert3(num <= 67108863);\n          var p = (1 << 26) % num;\n          var acc = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            acc = (p * acc + (this.words[i] | 0)) % num;\n          }\n          return acc;\n        };\n        BN.prototype.idivn = function idivn(num) {\n          assert3(num <= 67108863);\n          var carry = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            var w = (this.words[i] | 0) + carry * 67108864;\n            this.words[i] = w / num | 0;\n            carry = w % num;\n          }\n          return this.strip();\n        };\n        BN.prototype.divn = function divn(num) {\n          return this.clone().idivn(num);\n        };\n        BN.prototype.egcd = function egcd(p) {\n          assert3(p.negative === 0);\n          assert3(!p.isZero());\n          var x = this;\n          var y = p.clone();\n          if (x.negative !== 0) {\n            x = x.umod(p);\n          } else {\n            x = x.clone();\n          }\n          var A = new BN(1);\n          var B = new BN(0);\n          var C = new BN(0);\n          var D = new BN(1);\n          var g = 0;\n          while (x.isEven() && y.isEven()) {\n            x.iushrn(1);\n            y.iushrn(1);\n            ++g;\n          }\n          var yp = y.clone();\n          var xp = x.clone();\n          while (!x.isZero()) {\n            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)\n              ;\n            if (i > 0) {\n              x.iushrn(i);\n              while (i-- > 0) {\n                if (A.isOdd() || B.isOdd()) {\n                  A.iadd(yp);\n                  B.isub(xp);\n                }\n                A.iushrn(1);\n                B.iushrn(1);\n              }\n            }\n            for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)\n              ;\n            if (j > 0) {\n              y.iushrn(j);\n              while (j-- > 0) {\n                if (C.isOdd() || D.isOdd()) {\n                  C.iadd(yp);\n                  D.isub(xp);\n                }\n                C.iushrn(1);\n                D.iushrn(1);\n              }\n            }\n            if (x.cmp(y) >= 0) {\n              x.isub(y);\n              A.isub(C);\n              B.isub(D);\n            } else {\n              y.isub(x);\n              C.isub(A);\n              D.isub(B);\n            }\n          }\n          return {\n            a: C,\n            b: D,\n            gcd: y.iushln(g)\n          };\n        };\n        BN.prototype._invmp = function _invmp(p) {\n          assert3(p.negative === 0);\n          assert3(!p.isZero());\n          var a = this;\n          var b2 = p.clone();\n          if (a.negative !== 0) {\n            a = a.umod(p);\n          } else {\n            a = a.clone();\n          }\n          var x1 = new BN(1);\n          var x2 = new BN(0);\n          var delta = b2.clone();\n          while (a.cmpn(1) > 0 && b2.cmpn(1) > 0) {\n            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)\n              ;\n            if (i > 0) {\n              a.iushrn(i);\n              while (i-- > 0) {\n                if (x1.isOdd()) {\n                  x1.iadd(delta);\n                }\n                x1.iushrn(1);\n              }\n            }\n            for (var j = 0, jm = 1; (b2.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)\n              ;\n            if (j > 0) {\n              b2.iushrn(j);\n              while (j-- > 0) {\n                if (x2.isOdd()) {\n                  x2.iadd(delta);\n                }\n                x2.iushrn(1);\n              }\n            }\n            if (a.cmp(b2) >= 0) {\n              a.isub(b2);\n              x1.isub(x2);\n            } else {\n              b2.isub(a);\n              x2.isub(x1);\n            }\n          }\n          var res;\n          if (a.cmpn(1) === 0) {\n            res = x1;\n          } else {\n            res = x2;\n          }\n          if (res.cmpn(0) < 0) {\n            res.iadd(p);\n          }\n          return res;\n        };\n        BN.prototype.gcd = function gcd(num) {\n          if (this.isZero())\n            return num.abs();\n          if (num.isZero())\n            return this.abs();\n          var a = this.clone();\n          var b2 = num.clone();\n          a.negative = 0;\n          b2.negative = 0;\n          for (var shift = 0; a.isEven() && b2.isEven(); shift++) {\n            a.iushrn(1);\n            b2.iushrn(1);\n          }\n          do {\n            while (a.isEven()) {\n              a.iushrn(1);\n            }\n            while (b2.isEven()) {\n              b2.iushrn(1);\n            }\n            var r = a.cmp(b2);\n            if (r < 0) {\n              var t = a;\n              a = b2;\n              b2 = t;\n            } else if (r === 0 || b2.cmpn(1) === 0) {\n              break;\n            }\n            a.isub(b2);\n          } while (true);\n          return b2.iushln(shift);\n        };\n        BN.prototype.invm = function invm(num) {\n          return this.egcd(num).a.umod(num);\n        };\n        BN.prototype.isEven = function isEven() {\n          return (this.words[0] & 1) === 0;\n        };\n        BN.prototype.isOdd = function isOdd() {\n          return (this.words[0] & 1) === 1;\n        };\n        BN.prototype.andln = function andln(num) {\n          return this.words[0] & num;\n        };\n        BN.prototype.bincn = function bincn(bit) {\n          assert3(typeof bit === \"number\");\n          var r = bit % 26;\n          var s = (bit - r) / 26;\n          var q = 1 << r;\n          if (this.length <= s) {\n            this._expand(s + 1);\n            this.words[s] |= q;\n            return this;\n          }\n          var carry = q;\n          for (var i = s; carry !== 0 && i < this.length; i++) {\n            var w = this.words[i] | 0;\n            w += carry;\n            carry = w >>> 26;\n            w &= 67108863;\n            this.words[i] = w;\n          }\n          if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n          }\n          return this;\n        };\n        BN.prototype.isZero = function isZero() {\n          return this.length === 1 && this.words[0] === 0;\n        };\n        BN.prototype.cmpn = function cmpn(num) {\n          var negative = num < 0;\n          if (this.negative !== 0 && !negative)\n            return -1;\n          if (this.negative === 0 && negative)\n            return 1;\n          this.strip();\n          var res;\n          if (this.length > 1) {\n            res = 1;\n          } else {\n            if (negative) {\n              num = -num;\n            }\n            assert3(num <= 67108863, \"Number is too big\");\n            var w = this.words[0] | 0;\n            res = w === num ? 0 : w < num ? -1 : 1;\n          }\n          if (this.negative !== 0)\n            return -res | 0;\n          return res;\n        };\n        BN.prototype.cmp = function cmp(num) {\n          if (this.negative !== 0 && num.negative === 0)\n            return -1;\n          if (this.negative === 0 && num.negative !== 0)\n            return 1;\n          var res = this.ucmp(num);\n          if (this.negative !== 0)\n            return -res | 0;\n          return res;\n        };\n        BN.prototype.ucmp = function ucmp(num) {\n          if (this.length > num.length)\n            return 1;\n          if (this.length < num.length)\n            return -1;\n          var res = 0;\n          for (var i = this.length - 1; i >= 0; i--) {\n            var a = this.words[i] | 0;\n            var b2 = num.words[i] | 0;\n            if (a === b2)\n              continue;\n            if (a < b2) {\n              res = -1;\n            } else if (a > b2) {\n              res = 1;\n            }\n            break;\n          }\n          return res;\n        };\n        BN.prototype.gtn = function gtn(num) {\n          return this.cmpn(num) === 1;\n        };\n        BN.prototype.gt = function gt(num) {\n          return this.cmp(num) === 1;\n        };\n        BN.prototype.gten = function gten(num) {\n          return this.cmpn(num) >= 0;\n        };\n        BN.prototype.gte = function gte(num) {\n          return this.cmp(num) >= 0;\n        };\n        BN.prototype.ltn = function ltn(num) {\n          return this.cmpn(num) === -1;\n        };\n        BN.prototype.lt = function lt(num) {\n          return this.cmp(num) === -1;\n        };\n        BN.prototype.lten = function lten(num) {\n          return this.cmpn(num) <= 0;\n        };\n        BN.prototype.lte = function lte(num) {\n          return this.cmp(num) <= 0;\n        };\n        BN.prototype.eqn = function eqn(num) {\n          return this.cmpn(num) === 0;\n        };\n        BN.prototype.eq = function eq(num) {\n          return this.cmp(num) === 0;\n        };\n        BN.red = function red(num) {\n          return new Red(num);\n        };\n        BN.prototype.toRed = function toRed(ctx) {\n          assert3(!this.red, \"Already a number in reduction context\");\n          assert3(this.negative === 0, \"red works only with positives\");\n          return ctx.convertTo(this)._forceRed(ctx);\n        };\n        BN.prototype.fromRed = function fromRed() {\n          assert3(this.red, \"fromRed works only with numbers in reduction context\");\n          return this.red.convertFrom(this);\n        };\n        BN.prototype._forceRed = function _forceRed(ctx) {\n          this.red = ctx;\n          return this;\n        };\n        BN.prototype.forceRed = function forceRed(ctx) {\n          assert3(!this.red, \"Already a number in reduction context\");\n          return this._forceRed(ctx);\n        };\n        BN.prototype.redAdd = function redAdd(num) {\n          assert3(this.red, \"redAdd works only with red numbers\");\n          return this.red.add(this, num);\n        };\n        BN.prototype.redIAdd = function redIAdd(num) {\n          assert3(this.red, \"redIAdd works only with red numbers\");\n          return this.red.iadd(this, num);\n        };\n        BN.prototype.redSub = function redSub(num) {\n          assert3(this.red, \"redSub works only with red numbers\");\n          return this.red.sub(this, num);\n        };\n        BN.prototype.redISub = function redISub(num) {\n          assert3(this.red, \"redISub works only with red numbers\");\n          return this.red.isub(this, num);\n        };\n        BN.prototype.redShl = function redShl(num) {\n          assert3(this.red, \"redShl works only with red numbers\");\n          return this.red.shl(this, num);\n        };\n        BN.prototype.redMul = function redMul(num) {\n          assert3(this.red, \"redMul works only with red numbers\");\n          this.red._verify2(this, num);\n          return this.red.mul(this, num);\n        };\n        BN.prototype.redIMul = function redIMul(num) {\n          assert3(this.red, \"redMul works only with red numbers\");\n          this.red._verify2(this, num);\n          return this.red.imul(this, num);\n        };\n        BN.prototype.redSqr = function redSqr() {\n          assert3(this.red, \"redSqr works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.sqr(this);\n        };\n        BN.prototype.redISqr = function redISqr() {\n          assert3(this.red, \"redISqr works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.isqr(this);\n        };\n        BN.prototype.redSqrt = function redSqrt() {\n          assert3(this.red, \"redSqrt works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.sqrt(this);\n        };\n        BN.prototype.redInvm = function redInvm() {\n          assert3(this.red, \"redInvm works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.invm(this);\n        };\n        BN.prototype.redNeg = function redNeg() {\n          assert3(this.red, \"redNeg works only with red numbers\");\n          this.red._verify1(this);\n          return this.red.neg(this);\n        };\n        BN.prototype.redPow = function redPow(num) {\n          assert3(this.red && !num.red, \"redPow(normalNum)\");\n          this.red._verify1(this);\n          return this.red.pow(this, num);\n        };\n        var primes = {\n          k256: null,\n          p224: null,\n          p192: null,\n          p25519: null\n        };\n        function MPrime(name, p) {\n          this.name = name;\n          this.p = new BN(p, 16);\n          this.n = this.p.bitLength();\n          this.k = new BN(1).iushln(this.n).isub(this.p);\n          this.tmp = this._tmp();\n        }\n        MPrime.prototype._tmp = function _tmp() {\n          var tmp = new BN(null);\n          tmp.words = new Array(Math.ceil(this.n / 13));\n          return tmp;\n        };\n        MPrime.prototype.ireduce = function ireduce(num) {\n          var r = num;\n          var rlen;\n          do {\n            this.split(r, this.tmp);\n            r = this.imulK(r);\n            r = r.iadd(this.tmp);\n            rlen = r.bitLength();\n          } while (rlen > this.n);\n          var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n          if (cmp === 0) {\n            r.words[0] = 0;\n            r.length = 1;\n          } else if (cmp > 0) {\n            r.isub(this.p);\n          } else {\n            if (r.strip !== void 0) {\n              r.strip();\n            } else {\n              r._strip();\n            }\n          }\n          return r;\n        };\n        MPrime.prototype.split = function split3(input, out) {\n          input.iushrn(this.n, 0, out);\n        };\n        MPrime.prototype.imulK = function imulK(num) {\n          return num.imul(this.k);\n        };\n        function K256() {\n          MPrime.call(\n            this,\n            \"k256\",\n            \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n          );\n        }\n        inherits(K256, MPrime);\n        K256.prototype.split = function split3(input, output2) {\n          var mask2 = 4194303;\n          var outLen = Math.min(input.length, 9);\n          for (var i = 0; i < outLen; i++) {\n            output2.words[i] = input.words[i];\n          }\n          output2.length = outLen;\n          if (input.length <= 9) {\n            input.words[0] = 0;\n            input.length = 1;\n            return;\n          }\n          var prev = input.words[9];\n          output2.words[output2.length++] = prev & mask2;\n          for (i = 10; i < input.length; i++) {\n            var next = input.words[i] | 0;\n            input.words[i - 10] = (next & mask2) << 4 | prev >>> 22;\n            prev = next;\n          }\n          prev >>>= 22;\n          input.words[i - 10] = prev;\n          if (prev === 0 && input.length > 10) {\n            input.length -= 10;\n          } else {\n            input.length -= 9;\n          }\n        };\n        K256.prototype.imulK = function imulK(num) {\n          num.words[num.length] = 0;\n          num.words[num.length + 1] = 0;\n          num.length += 2;\n          var lo = 0;\n          for (var i = 0; i < num.length; i++) {\n            var w = num.words[i] | 0;\n            lo += w * 977;\n            num.words[i] = lo & 67108863;\n            lo = w * 64 + (lo / 67108864 | 0);\n          }\n          if (num.words[num.length - 1] === 0) {\n            num.length--;\n            if (num.words[num.length - 1] === 0) {\n              num.length--;\n            }\n          }\n          return num;\n        };\n        function P224() {\n          MPrime.call(\n            this,\n            \"p224\",\n            \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n          );\n        }\n        inherits(P224, MPrime);\n        function P192() {\n          MPrime.call(\n            this,\n            \"p192\",\n            \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n          );\n        }\n        inherits(P192, MPrime);\n        function P25519() {\n          MPrime.call(\n            this,\n            \"25519\",\n            \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n          );\n        }\n        inherits(P25519, MPrime);\n        P25519.prototype.imulK = function imulK(num) {\n          var carry = 0;\n          for (var i = 0; i < num.length; i++) {\n            var hi = (num.words[i] | 0) * 19 + carry;\n            var lo = hi & 67108863;\n            hi >>>= 26;\n            num.words[i] = lo;\n            carry = hi;\n          }\n          if (carry !== 0) {\n            num.words[num.length++] = carry;\n          }\n          return num;\n        };\n        BN._prime = function prime(name) {\n          if (primes[name])\n            return primes[name];\n          var prime2;\n          if (name === \"k256\") {\n            prime2 = new K256();\n          } else if (name === \"p224\") {\n            prime2 = new P224();\n          } else if (name === \"p192\") {\n            prime2 = new P192();\n          } else if (name === \"p25519\") {\n            prime2 = new P25519();\n          } else {\n            throw new Error(\"Unknown prime \" + name);\n          }\n          primes[name] = prime2;\n          return prime2;\n        };\n        function Red(m) {\n          if (typeof m === \"string\") {\n            var prime = BN._prime(m);\n            this.m = prime.p;\n            this.prime = prime;\n          } else {\n            assert3(m.gtn(1), \"modulus must be greater than 1\");\n            this.m = m;\n            this.prime = null;\n          }\n        }\n        Red.prototype._verify1 = function _verify1(a) {\n          assert3(a.negative === 0, \"red works only with positives\");\n          assert3(a.red, \"red works only with red numbers\");\n        };\n        Red.prototype._verify2 = function _verify2(a, b2) {\n          assert3((a.negative | b2.negative) === 0, \"red works only with positives\");\n          assert3(\n            a.red && a.red === b2.red,\n            \"red works only with red numbers\"\n          );\n        };\n        Red.prototype.imod = function imod(a) {\n          if (this.prime)\n            return this.prime.ireduce(a)._forceRed(this);\n          return a.umod(this.m)._forceRed(this);\n        };\n        Red.prototype.neg = function neg(a) {\n          if (a.isZero()) {\n            return a.clone();\n          }\n          return this.m.sub(a)._forceRed(this);\n        };\n        Red.prototype.add = function add2(a, b2) {\n          this._verify2(a, b2);\n          var res = a.add(b2);\n          if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Red.prototype.iadd = function iadd(a, b2) {\n          this._verify2(a, b2);\n          var res = a.iadd(b2);\n          if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n          }\n          return res;\n        };\n        Red.prototype.sub = function sub(a, b2) {\n          this._verify2(a, b2);\n          var res = a.sub(b2);\n          if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Red.prototype.isub = function isub(a, b2) {\n          this._verify2(a, b2);\n          var res = a.isub(b2);\n          if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n          }\n          return res;\n        };\n        Red.prototype.shl = function shl(a, num) {\n          this._verify1(a);\n          return this.imod(a.ushln(num));\n        };\n        Red.prototype.imul = function imul(a, b2) {\n          this._verify2(a, b2);\n          return this.imod(a.imul(b2));\n        };\n        Red.prototype.mul = function mul(a, b2) {\n          this._verify2(a, b2);\n          return this.imod(a.mul(b2));\n        };\n        Red.prototype.isqr = function isqr(a) {\n          return this.imul(a, a.clone());\n        };\n        Red.prototype.sqr = function sqr(a) {\n          return this.mul(a, a);\n        };\n        Red.prototype.sqrt = function sqrt(a) {\n          if (a.isZero())\n            return a.clone();\n          var mod3 = this.m.andln(3);\n          assert3(mod3 % 2 === 1);\n          if (mod3 === 3) {\n            var pow3 = this.m.add(new BN(1)).iushrn(2);\n            return this.pow(a, pow3);\n          }\n          var q = this.m.subn(1);\n          var s = 0;\n          while (!q.isZero() && q.andln(1) === 0) {\n            s++;\n            q.iushrn(1);\n          }\n          assert3(!q.isZero());\n          var one = new BN(1).toRed(this);\n          var nOne = one.redNeg();\n          var lpow = this.m.subn(1).iushrn(1);\n          var z = this.m.bitLength();\n          z = new BN(2 * z * z).toRed(this);\n          while (this.pow(z, lpow).cmp(nOne) !== 0) {\n            z.redIAdd(nOne);\n          }\n          var c = this.pow(z, q);\n          var r = this.pow(a, q.addn(1).iushrn(1));\n          var t = this.pow(a, q);\n          var m = s;\n          while (t.cmp(one) !== 0) {\n            var tmp = t;\n            for (var i = 0; tmp.cmp(one) !== 0; i++) {\n              tmp = tmp.redSqr();\n            }\n            assert3(i < m);\n            var b2 = this.pow(c, new BN(1).iushln(m - i - 1));\n            r = r.redMul(b2);\n            c = b2.redSqr();\n            t = t.redMul(c);\n            m = i;\n          }\n          return r;\n        };\n        Red.prototype.invm = function invm(a) {\n          var inv = a._invmp(this.m);\n          if (inv.negative !== 0) {\n            inv.negative = 0;\n            return this.imod(inv).redNeg();\n          } else {\n            return this.imod(inv);\n          }\n        };\n        Red.prototype.pow = function pow3(a, num) {\n          if (num.isZero())\n            return new BN(1).toRed(this);\n          if (num.cmpn(1) === 0)\n            return a.clone();\n          var windowSize = 4;\n          var wnd = new Array(1 << windowSize);\n          wnd[0] = new BN(1).toRed(this);\n          wnd[1] = a;\n          for (var i = 2; i < wnd.length; i++) {\n            wnd[i] = this.mul(wnd[i - 1], a);\n          }\n          var res = wnd[0];\n          var current = 0;\n          var currentLen = 0;\n          var start = num.bitLength() % 26;\n          if (start === 0) {\n            start = 26;\n          }\n          for (i = num.length - 1; i >= 0; i--) {\n            var word = num.words[i];\n            for (var j = start - 1; j >= 0; j--) {\n              var bit = word >> j & 1;\n              if (res !== wnd[0]) {\n                res = this.sqr(res);\n              }\n              if (bit === 0 && current === 0) {\n                currentLen = 0;\n                continue;\n              }\n              current <<= 1;\n              current |= bit;\n              currentLen++;\n              if (currentLen !== windowSize && (i !== 0 || j !== 0))\n                continue;\n              res = this.mul(res, wnd[current]);\n              currentLen = 0;\n              current = 0;\n            }\n            start = 26;\n          }\n          return res;\n        };\n        Red.prototype.convertTo = function convertTo(num) {\n          var r = num.umod(this.m);\n          return r === num ? r.clone() : r;\n        };\n        Red.prototype.convertFrom = function convertFrom(num) {\n          var res = num.clone();\n          res.red = null;\n          return res;\n        };\n        BN.mont = function mont(num) {\n          return new Mont(num);\n        };\n        function Mont(m) {\n          Red.call(this, m);\n          this.shift = this.m.bitLength();\n          if (this.shift % 26 !== 0) {\n            this.shift += 26 - this.shift % 26;\n          }\n          this.r = new BN(1).iushln(this.shift);\n          this.r2 = this.imod(this.r.sqr());\n          this.rinv = this.r._invmp(this.m);\n          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n          this.minv = this.minv.umod(this.r);\n          this.minv = this.r.sub(this.minv);\n        }\n        inherits(Mont, Red);\n        Mont.prototype.convertTo = function convertTo(num) {\n          return this.imod(num.ushln(this.shift));\n        };\n        Mont.prototype.convertFrom = function convertFrom(num) {\n          var r = this.imod(num.mul(this.rinv));\n          r.red = null;\n          return r;\n        };\n        Mont.prototype.imul = function imul(a, b2) {\n          if (a.isZero() || b2.isZero()) {\n            a.words[0] = 0;\n            a.length = 1;\n            return a;\n          }\n          var t = a.imul(b2);\n          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n          var u = t.isub(c).iushrn(this.shift);\n          var res = u;\n          if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n          } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Mont.prototype.mul = function mul(a, b2) {\n          if (a.isZero() || b2.isZero())\n            return new BN(0)._forceRed(this);\n          var t = a.mul(b2);\n          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n          var u = t.isub(c).iushrn(this.shift);\n          var res = u;\n          if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n          } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n          }\n          return res._forceRed(this);\n        };\n        Mont.prototype.invm = function invm(a) {\n          var res = this.imod(a._invmp(this.m).mul(this.r2));\n          return res._forceRed(this);\n        };\n      })(typeof module === \"undefined\" || module, exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js\n  var require_minimalistic_assert = __commonJS({\n    \"../../../node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      module.exports = assert3;\n      function assert3(val, msg) {\n        if (!val)\n          throw new Error(msg || \"Assertion failed\");\n      }\n      assert3.equal = function assertEqual(l, r, msg) {\n        if (l != r)\n          throw new Error(msg || \"Assertion failed: \" + l + \" != \" + r);\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/minimalistic-crypto-utils@1.0.1/node_modules/minimalistic-crypto-utils/lib/utils.js\n  var require_utils = __commonJS({\n    \"../../../node_modules/.pnpm/minimalistic-crypto-utils@1.0.1/node_modules/minimalistic-crypto-utils/lib/utils.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = exports3;\n      function toArray(msg, enc) {\n        if (Array.isArray(msg))\n          return msg.slice();\n        if (!msg)\n          return [];\n        var res = [];\n        if (typeof msg !== \"string\") {\n          for (var i = 0; i < msg.length; i++)\n            res[i] = msg[i] | 0;\n          return res;\n        }\n        if (enc === \"hex\") {\n          msg = msg.replace(/[^a-z0-9]+/ig, \"\");\n          if (msg.length % 2 !== 0)\n            msg = \"0\" + msg;\n          for (var i = 0; i < msg.length; i += 2)\n            res.push(parseInt(msg[i] + msg[i + 1], 16));\n        } else {\n          for (var i = 0; i < msg.length; i++) {\n            var c = msg.charCodeAt(i);\n            var hi = c >> 8;\n            var lo = c & 255;\n            if (hi)\n              res.push(hi, lo);\n            else\n              res.push(lo);\n          }\n        }\n        return res;\n      }\n      utils.toArray = toArray;\n      function zero2(word) {\n        if (word.length === 1)\n          return \"0\" + word;\n        else\n          return word;\n      }\n      utils.zero2 = zero2;\n      function toHex(msg) {\n        var res = \"\";\n        for (var i = 0; i < msg.length; i++)\n          res += zero2(msg[i].toString(16));\n        return res;\n      }\n      utils.toHex = toHex;\n      utils.encode = function encode(arr, enc) {\n        if (enc === \"hex\")\n          return toHex(arr);\n        else\n          return arr;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/utils.js\n  var require_utils2 = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/utils.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = exports3;\n      var BN = require_bn2();\n      var minAssert = require_minimalistic_assert();\n      var minUtils = require_utils();\n      utils.assert = minAssert;\n      utils.toArray = minUtils.toArray;\n      utils.zero2 = minUtils.zero2;\n      utils.toHex = minUtils.toHex;\n      utils.encode = minUtils.encode;\n      function getNAF(num, w, bits) {\n        var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n        var i;\n        for (i = 0; i < naf.length; i += 1) {\n          naf[i] = 0;\n        }\n        var ws = 1 << w + 1;\n        var k = num.clone();\n        for (i = 0; i < naf.length; i++) {\n          var z;\n          var mod2 = k.andln(ws - 1);\n          if (k.isOdd()) {\n            if (mod2 > (ws >> 1) - 1)\n              z = (ws >> 1) - mod2;\n            else\n              z = mod2;\n            k.isubn(z);\n          } else {\n            z = 0;\n          }\n          naf[i] = z;\n          k.iushrn(1);\n        }\n        return naf;\n      }\n      utils.getNAF = getNAF;\n      function getJSF(k1, k2) {\n        var jsf = [\n          [],\n          []\n        ];\n        k1 = k1.clone();\n        k2 = k2.clone();\n        var d1 = 0;\n        var d2 = 0;\n        var m8;\n        while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n          var m14 = k1.andln(3) + d1 & 3;\n          var m24 = k2.andln(3) + d2 & 3;\n          if (m14 === 3)\n            m14 = -1;\n          if (m24 === 3)\n            m24 = -1;\n          var u1;\n          if ((m14 & 1) === 0) {\n            u1 = 0;\n          } else {\n            m8 = k1.andln(7) + d1 & 7;\n            if ((m8 === 3 || m8 === 5) && m24 === 2)\n              u1 = -m14;\n            else\n              u1 = m14;\n          }\n          jsf[0].push(u1);\n          var u2;\n          if ((m24 & 1) === 0) {\n            u2 = 0;\n          } else {\n            m8 = k2.andln(7) + d2 & 7;\n            if ((m8 === 3 || m8 === 5) && m14 === 2)\n              u2 = -m24;\n            else\n              u2 = m24;\n          }\n          jsf[1].push(u2);\n          if (2 * d1 === u1 + 1)\n            d1 = 1 - d1;\n          if (2 * d2 === u2 + 1)\n            d2 = 1 - d2;\n          k1.iushrn(1);\n          k2.iushrn(1);\n        }\n        return jsf;\n      }\n      utils.getJSF = getJSF;\n      function cachedProperty(obj, name, computer) {\n        var key = \"_\" + name;\n        obj.prototype[name] = function cachedProperty2() {\n          return this[key] !== void 0 ? this[key] : this[key] = computer.call(this);\n        };\n      }\n      utils.cachedProperty = cachedProperty;\n      function parseBytes(bytes2) {\n        return typeof bytes2 === \"string\" ? utils.toArray(bytes2, \"hex\") : bytes2;\n      }\n      utils.parseBytes = parseBytes;\n      function intFromLE(bytes2) {\n        return new BN(bytes2, \"hex\", \"le\");\n      }\n      utils.intFromLE = intFromLE;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/empty.js\n  var empty_exports = {};\n  __export(empty_exports, {\n    default: () => empty_default\n  });\n  var empty_default;\n  var init_empty = __esm({\n    \"../../../node_modules/.pnpm/esbuild-plugin-polyfill-node@0.3.0_esbuild@0.19.12/node_modules/esbuild-plugin-polyfill-node/polyfills/empty.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      empty_default = {};\n    }\n  });\n\n  // ../../../node_modules/.pnpm/brorand@1.1.0/node_modules/brorand/index.js\n  var require_brorand = __commonJS({\n    \"../../../node_modules/.pnpm/brorand@1.1.0/node_modules/brorand/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var r;\n      module.exports = function rand(len) {\n        if (!r)\n          r = new Rand(null);\n        return r.generate(len);\n      };\n      function Rand(rand) {\n        this.rand = rand;\n      }\n      module.exports.Rand = Rand;\n      Rand.prototype.generate = function generate(len) {\n        return this._rand(len);\n      };\n      Rand.prototype._rand = function _rand(n2) {\n        if (this.rand.getBytes)\n          return this.rand.getBytes(n2);\n        var res = new Uint8Array(n2);\n        for (var i = 0; i < res.length; i++)\n          res[i] = this.rand.getByte();\n        return res;\n      };\n      if (typeof self === \"object\") {\n        if (self.crypto && self.crypto.getRandomValues) {\n          Rand.prototype._rand = function _rand(n2) {\n            var arr = new Uint8Array(n2);\n            self.crypto.getRandomValues(arr);\n            return arr;\n          };\n        } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n          Rand.prototype._rand = function _rand(n2) {\n            var arr = new Uint8Array(n2);\n            self.msCrypto.getRandomValues(arr);\n            return arr;\n          };\n        } else if (typeof window === \"object\") {\n          Rand.prototype._rand = function() {\n            throw new Error(\"Not implemented yet\");\n          };\n        }\n      } else {\n        try {\n          crypto3 = (init_empty(), __toCommonJS(empty_exports));\n          if (typeof crypto3.randomBytes !== \"function\")\n            throw new Error(\"Not supported\");\n          Rand.prototype._rand = function _rand(n2) {\n            return crypto3.randomBytes(n2);\n          };\n        } catch (e) {\n        }\n      }\n      var crypto3;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/base.js\n  var require_base = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/base.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var utils = require_utils2();\n      var getNAF = utils.getNAF;\n      var getJSF = utils.getJSF;\n      var assert3 = utils.assert;\n      function BaseCurve(type, conf) {\n        this.type = type;\n        this.p = new BN(conf.p, 16);\n        this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n        this.zero = new BN(0).toRed(this.red);\n        this.one = new BN(1).toRed(this.red);\n        this.two = new BN(2).toRed(this.red);\n        this.n = conf.n && new BN(conf.n, 16);\n        this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n        this._wnafT1 = new Array(4);\n        this._wnafT2 = new Array(4);\n        this._wnafT3 = new Array(4);\n        this._wnafT4 = new Array(4);\n        this._bitLength = this.n ? this.n.bitLength() : 0;\n        var adjustCount = this.n && this.p.div(this.n);\n        if (!adjustCount || adjustCount.cmpn(100) > 0) {\n          this.redN = null;\n        } else {\n          this._maxwellTrick = true;\n          this.redN = this.n.toRed(this.red);\n        }\n      }\n      module.exports = BaseCurve;\n      BaseCurve.prototype.point = function point() {\n        throw new Error(\"Not implemented\");\n      };\n      BaseCurve.prototype.validate = function validate() {\n        throw new Error(\"Not implemented\");\n      };\n      BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n        assert3(p.precomputed);\n        var doubles = p._getDoubles();\n        var naf = getNAF(k, 1, this._bitLength);\n        var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n        I /= 3;\n        var repr = [];\n        var j;\n        var nafW;\n        for (j = 0; j < naf.length; j += doubles.step) {\n          nafW = 0;\n          for (var l = j + doubles.step - 1; l >= j; l--)\n            nafW = (nafW << 1) + naf[l];\n          repr.push(nafW);\n        }\n        var a = this.jpoint(null, null, null);\n        var b2 = this.jpoint(null, null, null);\n        for (var i = I; i > 0; i--) {\n          for (j = 0; j < repr.length; j++) {\n            nafW = repr[j];\n            if (nafW === i)\n              b2 = b2.mixedAdd(doubles.points[j]);\n            else if (nafW === -i)\n              b2 = b2.mixedAdd(doubles.points[j].neg());\n          }\n          a = a.add(b2);\n        }\n        return a.toP();\n      };\n      BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n        var w = 4;\n        var nafPoints = p._getNAFPoints(w);\n        w = nafPoints.wnd;\n        var wnd = nafPoints.points;\n        var naf = getNAF(k, w, this._bitLength);\n        var acc = this.jpoint(null, null, null);\n        for (var i = naf.length - 1; i >= 0; i--) {\n          for (var l = 0; i >= 0 && naf[i] === 0; i--)\n            l++;\n          if (i >= 0)\n            l++;\n          acc = acc.dblp(l);\n          if (i < 0)\n            break;\n          var z = naf[i];\n          assert3(z !== 0);\n          if (p.type === \"affine\") {\n            if (z > 0)\n              acc = acc.mixedAdd(wnd[z - 1 >> 1]);\n            else\n              acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n          } else {\n            if (z > 0)\n              acc = acc.add(wnd[z - 1 >> 1]);\n            else\n              acc = acc.add(wnd[-z - 1 >> 1].neg());\n          }\n        }\n        return p.type === \"affine\" ? acc.toP() : acc;\n      };\n      BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n        var wndWidth = this._wnafT1;\n        var wnd = this._wnafT2;\n        var naf = this._wnafT3;\n        var max = 0;\n        var i;\n        var j;\n        var p;\n        for (i = 0; i < len; i++) {\n          p = points[i];\n          var nafPoints = p._getNAFPoints(defW);\n          wndWidth[i] = nafPoints.wnd;\n          wnd[i] = nafPoints.points;\n        }\n        for (i = len - 1; i >= 1; i -= 2) {\n          var a = i - 1;\n          var b2 = i;\n          if (wndWidth[a] !== 1 || wndWidth[b2] !== 1) {\n            naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n            naf[b2] = getNAF(coeffs[b2], wndWidth[b2], this._bitLength);\n            max = Math.max(naf[a].length, max);\n            max = Math.max(naf[b2].length, max);\n            continue;\n          }\n          var comb = [\n            points[a],\n            /* 1 */\n            null,\n            /* 3 */\n            null,\n            /* 5 */\n            points[b2]\n            /* 7 */\n          ];\n          if (points[a].y.cmp(points[b2].y) === 0) {\n            comb[1] = points[a].add(points[b2]);\n            comb[2] = points[a].toJ().mixedAdd(points[b2].neg());\n          } else if (points[a].y.cmp(points[b2].y.redNeg()) === 0) {\n            comb[1] = points[a].toJ().mixedAdd(points[b2]);\n            comb[2] = points[a].add(points[b2].neg());\n          } else {\n            comb[1] = points[a].toJ().mixedAdd(points[b2]);\n            comb[2] = points[a].toJ().mixedAdd(points[b2].neg());\n          }\n          var index = [\n            -3,\n            /* -1 -1 */\n            -1,\n            /* -1 0 */\n            -5,\n            /* -1 1 */\n            -7,\n            /* 0 -1 */\n            0,\n            /* 0 0 */\n            7,\n            /* 0 1 */\n            5,\n            /* 1 -1 */\n            1,\n            /* 1 0 */\n            3\n            /* 1 1 */\n          ];\n          var jsf = getJSF(coeffs[a], coeffs[b2]);\n          max = Math.max(jsf[0].length, max);\n          naf[a] = new Array(max);\n          naf[b2] = new Array(max);\n          for (j = 0; j < max; j++) {\n            var ja = jsf[0][j] | 0;\n            var jb = jsf[1][j] | 0;\n            naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n            naf[b2][j] = 0;\n            wnd[a] = comb;\n          }\n        }\n        var acc = this.jpoint(null, null, null);\n        var tmp = this._wnafT4;\n        for (i = max; i >= 0; i--) {\n          var k = 0;\n          while (i >= 0) {\n            var zero = true;\n            for (j = 0; j < len; j++) {\n              tmp[j] = naf[j][i] | 0;\n              if (tmp[j] !== 0)\n                zero = false;\n            }\n            if (!zero)\n              break;\n            k++;\n            i--;\n          }\n          if (i >= 0)\n            k++;\n          acc = acc.dblp(k);\n          if (i < 0)\n            break;\n          for (j = 0; j < len; j++) {\n            var z = tmp[j];\n            p;\n            if (z === 0)\n              continue;\n            else if (z > 0)\n              p = wnd[j][z - 1 >> 1];\n            else if (z < 0)\n              p = wnd[j][-z - 1 >> 1].neg();\n            if (p.type === \"affine\")\n              acc = acc.mixedAdd(p);\n            else\n              acc = acc.add(p);\n          }\n        }\n        for (i = 0; i < len; i++)\n          wnd[i] = null;\n        if (jacobianResult)\n          return acc;\n        else\n          return acc.toP();\n      };\n      function BasePoint(curve, type) {\n        this.curve = curve;\n        this.type = type;\n        this.precomputed = null;\n      }\n      BaseCurve.BasePoint = BasePoint;\n      BasePoint.prototype.eq = function eq() {\n        throw new Error(\"Not implemented\");\n      };\n      BasePoint.prototype.validate = function validate() {\n        return this.curve.validate(this);\n      };\n      BaseCurve.prototype.decodePoint = function decodePoint(bytes2, enc) {\n        bytes2 = utils.toArray(bytes2, enc);\n        var len = this.p.byteLength();\n        if ((bytes2[0] === 4 || bytes2[0] === 6 || bytes2[0] === 7) && bytes2.length - 1 === 2 * len) {\n          if (bytes2[0] === 6)\n            assert3(bytes2[bytes2.length - 1] % 2 === 0);\n          else if (bytes2[0] === 7)\n            assert3(bytes2[bytes2.length - 1] % 2 === 1);\n          var res = this.point(\n            bytes2.slice(1, 1 + len),\n            bytes2.slice(1 + len, 1 + 2 * len)\n          );\n          return res;\n        } else if ((bytes2[0] === 2 || bytes2[0] === 3) && bytes2.length - 1 === len) {\n          return this.pointFromX(bytes2.slice(1, 1 + len), bytes2[0] === 3);\n        }\n        throw new Error(\"Unknown point format\");\n      };\n      BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n        return this.encode(enc, true);\n      };\n      BasePoint.prototype._encode = function _encode2(compact) {\n        var len = this.curve.p.byteLength();\n        var x = this.getX().toArray(\"be\", len);\n        if (compact)\n          return [this.getY().isEven() ? 2 : 3].concat(x);\n        return [4].concat(x, this.getY().toArray(\"be\", len));\n      };\n      BasePoint.prototype.encode = function encode(enc, compact) {\n        return utils.encode(this._encode(compact), enc);\n      };\n      BasePoint.prototype.precompute = function precompute(power) {\n        if (this.precomputed)\n          return this;\n        var precomputed = {\n          doubles: null,\n          naf: null,\n          beta: null\n        };\n        precomputed.naf = this._getNAFPoints(8);\n        precomputed.doubles = this._getDoubles(4, power);\n        precomputed.beta = this._getBeta();\n        this.precomputed = precomputed;\n        return this;\n      };\n      BasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n        if (!this.precomputed)\n          return false;\n        var doubles = this.precomputed.doubles;\n        if (!doubles)\n          return false;\n        return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n      };\n      BasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n        if (this.precomputed && this.precomputed.doubles)\n          return this.precomputed.doubles;\n        var doubles = [this];\n        var acc = this;\n        for (var i = 0; i < power; i += step) {\n          for (var j = 0; j < step; j++)\n            acc = acc.dbl();\n          doubles.push(acc);\n        }\n        return {\n          step,\n          points: doubles\n        };\n      };\n      BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n        if (this.precomputed && this.precomputed.naf)\n          return this.precomputed.naf;\n        var res = [this];\n        var max = (1 << wnd) - 1;\n        var dbl = max === 1 ? null : this.dbl();\n        for (var i = 1; i < max; i++)\n          res[i] = res[i - 1].add(dbl);\n        return {\n          wnd,\n          points: res\n        };\n      };\n      BasePoint.prototype._getBeta = function _getBeta() {\n        return null;\n      };\n      BasePoint.prototype.dblp = function dblp(k) {\n        var r = this;\n        for (var i = 0; i < k; i++)\n          r = r.dbl();\n        return r;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js\n  var require_inherits_browser = __commonJS({\n    \"../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      if (typeof Object.create === \"function\") {\n        module.exports = function inherits(ctor, superCtor) {\n          if (superCtor) {\n            ctor.super_ = superCtor;\n            ctor.prototype = Object.create(superCtor.prototype, {\n              constructor: {\n                value: ctor,\n                enumerable: false,\n                writable: true,\n                configurable: true\n              }\n            });\n          }\n        };\n      } else {\n        module.exports = function inherits(ctor, superCtor) {\n          if (superCtor) {\n            ctor.super_ = superCtor;\n            var TempCtor = function() {\n            };\n            TempCtor.prototype = superCtor.prototype;\n            ctor.prototype = new TempCtor();\n            ctor.prototype.constructor = ctor;\n          }\n        };\n      }\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/short.js\n  var require_short = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/short.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils2();\n      var BN = require_bn2();\n      var inherits = require_inherits_browser();\n      var Base = require_base();\n      var assert3 = utils.assert;\n      function ShortCurve(conf) {\n        Base.call(this, \"short\", conf);\n        this.a = new BN(conf.a, 16).toRed(this.red);\n        this.b = new BN(conf.b, 16).toRed(this.red);\n        this.tinv = this.two.redInvm();\n        this.zeroA = this.a.fromRed().cmpn(0) === 0;\n        this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n        this.endo = this._getEndomorphism(conf);\n        this._endoWnafT1 = new Array(4);\n        this._endoWnafT2 = new Array(4);\n      }\n      inherits(ShortCurve, Base);\n      module.exports = ShortCurve;\n      ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n        if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n          return;\n        var beta;\n        var lambda;\n        if (conf.beta) {\n          beta = new BN(conf.beta, 16).toRed(this.red);\n        } else {\n          var betas = this._getEndoRoots(this.p);\n          beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n          beta = beta.toRed(this.red);\n        }\n        if (conf.lambda) {\n          lambda = new BN(conf.lambda, 16);\n        } else {\n          var lambdas = this._getEndoRoots(this.n);\n          if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n            lambda = lambdas[0];\n          } else {\n            lambda = lambdas[1];\n            assert3(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n          }\n        }\n        var basis;\n        if (conf.basis) {\n          basis = conf.basis.map(function(vec) {\n            return {\n              a: new BN(vec.a, 16),\n              b: new BN(vec.b, 16)\n            };\n          });\n        } else {\n          basis = this._getEndoBasis(lambda);\n        }\n        return {\n          beta,\n          lambda,\n          basis\n        };\n      };\n      ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n        var red = num === this.p ? this.red : BN.mont(num);\n        var tinv = new BN(2).toRed(red).redInvm();\n        var ntinv = tinv.redNeg();\n        var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n        var l1 = ntinv.redAdd(s).fromRed();\n        var l2 = ntinv.redSub(s).fromRed();\n        return [l1, l2];\n      };\n      ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n        var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n        var u = lambda;\n        var v = this.n.clone();\n        var x1 = new BN(1);\n        var y1 = new BN(0);\n        var x2 = new BN(0);\n        var y2 = new BN(1);\n        var a0;\n        var b0;\n        var a1;\n        var b1;\n        var a2;\n        var b2;\n        var prevR;\n        var i = 0;\n        var r;\n        var x;\n        while (u.cmpn(0) !== 0) {\n          var q = v.div(u);\n          r = v.sub(q.mul(u));\n          x = x2.sub(q.mul(x1));\n          var y = y2.sub(q.mul(y1));\n          if (!a1 && r.cmp(aprxSqrt) < 0) {\n            a0 = prevR.neg();\n            b0 = x1;\n            a1 = r.neg();\n            b1 = x;\n          } else if (a1 && ++i === 2) {\n            break;\n          }\n          prevR = r;\n          v = u;\n          u = r;\n          x2 = x1;\n          x1 = x;\n          y2 = y1;\n          y1 = y;\n        }\n        a2 = r.neg();\n        b2 = x;\n        var len1 = a1.sqr().add(b1.sqr());\n        var len2 = a2.sqr().add(b2.sqr());\n        if (len2.cmp(len1) >= 0) {\n          a2 = a0;\n          b2 = b0;\n        }\n        if (a1.negative) {\n          a1 = a1.neg();\n          b1 = b1.neg();\n        }\n        if (a2.negative) {\n          a2 = a2.neg();\n          b2 = b2.neg();\n        }\n        return [\n          { a: a1, b: b1 },\n          { a: a2, b: b2 }\n        ];\n      };\n      ShortCurve.prototype._endoSplit = function _endoSplit(k) {\n        var basis = this.endo.basis;\n        var v1 = basis[0];\n        var v2 = basis[1];\n        var c1 = v2.b.mul(k).divRound(this.n);\n        var c2 = v1.b.neg().mul(k).divRound(this.n);\n        var p1 = c1.mul(v1.a);\n        var p2 = c2.mul(v2.a);\n        var q1 = c1.mul(v1.b);\n        var q2 = c2.mul(v2.b);\n        var k1 = k.sub(p1).sub(p2);\n        var k2 = q1.add(q2).neg();\n        return { k1, k2 };\n      };\n      ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n        x = new BN(x, 16);\n        if (!x.red)\n          x = x.toRed(this.red);\n        var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n        var y = y2.redSqrt();\n        if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n          throw new Error(\"invalid point\");\n        var isOdd = y.fromRed().isOdd();\n        if (odd && !isOdd || !odd && isOdd)\n          y = y.redNeg();\n        return this.point(x, y);\n      };\n      ShortCurve.prototype.validate = function validate(point) {\n        if (point.inf)\n          return true;\n        var x = point.x;\n        var y = point.y;\n        var ax = this.a.redMul(x);\n        var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n        return y.redSqr().redISub(rhs).cmpn(0) === 0;\n      };\n      ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n        var npoints = this._endoWnafT1;\n        var ncoeffs = this._endoWnafT2;\n        for (var i = 0; i < points.length; i++) {\n          var split3 = this._endoSplit(coeffs[i]);\n          var p = points[i];\n          var beta = p._getBeta();\n          if (split3.k1.negative) {\n            split3.k1.ineg();\n            p = p.neg(true);\n          }\n          if (split3.k2.negative) {\n            split3.k2.ineg();\n            beta = beta.neg(true);\n          }\n          npoints[i * 2] = p;\n          npoints[i * 2 + 1] = beta;\n          ncoeffs[i * 2] = split3.k1;\n          ncoeffs[i * 2 + 1] = split3.k2;\n        }\n        var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n        for (var j = 0; j < i * 2; j++) {\n          npoints[j] = null;\n          ncoeffs[j] = null;\n        }\n        return res;\n      };\n      function Point2(curve, x, y, isRed) {\n        Base.BasePoint.call(this, curve, \"affine\");\n        if (x === null && y === null) {\n          this.x = null;\n          this.y = null;\n          this.inf = true;\n        } else {\n          this.x = new BN(x, 16);\n          this.y = new BN(y, 16);\n          if (isRed) {\n            this.x.forceRed(this.curve.red);\n            this.y.forceRed(this.curve.red);\n          }\n          if (!this.x.red)\n            this.x = this.x.toRed(this.curve.red);\n          if (!this.y.red)\n            this.y = this.y.toRed(this.curve.red);\n          this.inf = false;\n        }\n      }\n      inherits(Point2, Base.BasePoint);\n      ShortCurve.prototype.point = function point(x, y, isRed) {\n        return new Point2(this, x, y, isRed);\n      };\n      ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n        return Point2.fromJSON(this, obj, red);\n      };\n      Point2.prototype._getBeta = function _getBeta() {\n        if (!this.curve.endo)\n          return;\n        var pre = this.precomputed;\n        if (pre && pre.beta)\n          return pre.beta;\n        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n        if (pre) {\n          var curve = this.curve;\n          var endoMul = function(p) {\n            return curve.point(p.x.redMul(curve.endo.beta), p.y);\n          };\n          pre.beta = beta;\n          beta.precomputed = {\n            beta: null,\n            naf: pre.naf && {\n              wnd: pre.naf.wnd,\n              points: pre.naf.points.map(endoMul)\n            },\n            doubles: pre.doubles && {\n              step: pre.doubles.step,\n              points: pre.doubles.points.map(endoMul)\n            }\n          };\n        }\n        return beta;\n      };\n      Point2.prototype.toJSON = function toJSON() {\n        if (!this.precomputed)\n          return [this.x, this.y];\n        return [this.x, this.y, this.precomputed && {\n          doubles: this.precomputed.doubles && {\n            step: this.precomputed.doubles.step,\n            points: this.precomputed.doubles.points.slice(1)\n          },\n          naf: this.precomputed.naf && {\n            wnd: this.precomputed.naf.wnd,\n            points: this.precomputed.naf.points.slice(1)\n          }\n        }];\n      };\n      Point2.fromJSON = function fromJSON(curve, obj, red) {\n        if (typeof obj === \"string\")\n          obj = JSON.parse(obj);\n        var res = curve.point(obj[0], obj[1], red);\n        if (!obj[2])\n          return res;\n        function obj2point(obj2) {\n          return curve.point(obj2[0], obj2[1], red);\n        }\n        var pre = obj[2];\n        res.precomputed = {\n          beta: null,\n          doubles: pre.doubles && {\n            step: pre.doubles.step,\n            points: [res].concat(pre.doubles.points.map(obj2point))\n          },\n          naf: pre.naf && {\n            wnd: pre.naf.wnd,\n            points: [res].concat(pre.naf.points.map(obj2point))\n          }\n        };\n        return res;\n      };\n      Point2.prototype.inspect = function inspect() {\n        if (this.isInfinity())\n          return \"<EC Point Infinity>\";\n        return \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n      };\n      Point2.prototype.isInfinity = function isInfinity() {\n        return this.inf;\n      };\n      Point2.prototype.add = function add2(p) {\n        if (this.inf)\n          return p;\n        if (p.inf)\n          return this;\n        if (this.eq(p))\n          return this.dbl();\n        if (this.neg().eq(p))\n          return this.curve.point(null, null);\n        if (this.x.cmp(p.x) === 0)\n          return this.curve.point(null, null);\n        var c = this.y.redSub(p.y);\n        if (c.cmpn(0) !== 0)\n          c = c.redMul(this.x.redSub(p.x).redInvm());\n        var nx = c.redSqr().redISub(this.x).redISub(p.x);\n        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n        return this.curve.point(nx, ny);\n      };\n      Point2.prototype.dbl = function dbl() {\n        if (this.inf)\n          return this;\n        var ys1 = this.y.redAdd(this.y);\n        if (ys1.cmpn(0) === 0)\n          return this.curve.point(null, null);\n        var a = this.curve.a;\n        var x2 = this.x.redSqr();\n        var dyinv = ys1.redInvm();\n        var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n        var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n        return this.curve.point(nx, ny);\n      };\n      Point2.prototype.getX = function getX() {\n        return this.x.fromRed();\n      };\n      Point2.prototype.getY = function getY() {\n        return this.y.fromRed();\n      };\n      Point2.prototype.mul = function mul(k) {\n        k = new BN(k, 16);\n        if (this.isInfinity())\n          return this;\n        else if (this._hasDoubles(k))\n          return this.curve._fixedNafMul(this, k);\n        else if (this.curve.endo)\n          return this.curve._endoWnafMulAdd([this], [k]);\n        else\n          return this.curve._wnafMul(this, k);\n      };\n      Point2.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n        var points = [this, p2];\n        var coeffs = [k1, k2];\n        if (this.curve.endo)\n          return this.curve._endoWnafMulAdd(points, coeffs);\n        else\n          return this.curve._wnafMulAdd(1, points, coeffs, 2);\n      };\n      Point2.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n        var points = [this, p2];\n        var coeffs = [k1, k2];\n        if (this.curve.endo)\n          return this.curve._endoWnafMulAdd(points, coeffs, true);\n        else\n          return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n      };\n      Point2.prototype.eq = function eq(p) {\n        return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n      };\n      Point2.prototype.neg = function neg(_precompute) {\n        if (this.inf)\n          return this;\n        var res = this.curve.point(this.x, this.y.redNeg());\n        if (_precompute && this.precomputed) {\n          var pre = this.precomputed;\n          var negate = function(p) {\n            return p.neg();\n          };\n          res.precomputed = {\n            naf: pre.naf && {\n              wnd: pre.naf.wnd,\n              points: pre.naf.points.map(negate)\n            },\n            doubles: pre.doubles && {\n              step: pre.doubles.step,\n              points: pre.doubles.points.map(negate)\n            }\n          };\n        }\n        return res;\n      };\n      Point2.prototype.toJ = function toJ() {\n        if (this.inf)\n          return this.curve.jpoint(null, null, null);\n        var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n        return res;\n      };\n      function JPoint(curve, x, y, z) {\n        Base.BasePoint.call(this, curve, \"jacobian\");\n        if (x === null && y === null && z === null) {\n          this.x = this.curve.one;\n          this.y = this.curve.one;\n          this.z = new BN(0);\n        } else {\n          this.x = new BN(x, 16);\n          this.y = new BN(y, 16);\n          this.z = new BN(z, 16);\n        }\n        if (!this.x.red)\n          this.x = this.x.toRed(this.curve.red);\n        if (!this.y.red)\n          this.y = this.y.toRed(this.curve.red);\n        if (!this.z.red)\n          this.z = this.z.toRed(this.curve.red);\n        this.zOne = this.z === this.curve.one;\n      }\n      inherits(JPoint, Base.BasePoint);\n      ShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n        return new JPoint(this, x, y, z);\n      };\n      JPoint.prototype.toP = function toP() {\n        if (this.isInfinity())\n          return this.curve.point(null, null);\n        var zinv = this.z.redInvm();\n        var zinv2 = zinv.redSqr();\n        var ax = this.x.redMul(zinv2);\n        var ay = this.y.redMul(zinv2).redMul(zinv);\n        return this.curve.point(ax, ay);\n      };\n      JPoint.prototype.neg = function neg() {\n        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n      };\n      JPoint.prototype.add = function add2(p) {\n        if (this.isInfinity())\n          return p;\n        if (p.isInfinity())\n          return this;\n        var pz2 = p.z.redSqr();\n        var z2 = this.z.redSqr();\n        var u1 = this.x.redMul(pz2);\n        var u2 = p.x.redMul(z2);\n        var s1 = this.y.redMul(pz2.redMul(p.z));\n        var s2 = p.y.redMul(z2.redMul(this.z));\n        var h = u1.redSub(u2);\n        var r = s1.redSub(s2);\n        if (h.cmpn(0) === 0) {\n          if (r.cmpn(0) !== 0)\n            return this.curve.jpoint(null, null, null);\n          else\n            return this.dbl();\n        }\n        var h2 = h.redSqr();\n        var h3 = h2.redMul(h);\n        var v = u1.redMul(h2);\n        var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n        var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n        var nz = this.z.redMul(p.z).redMul(h);\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype.mixedAdd = function mixedAdd(p) {\n        if (this.isInfinity())\n          return p.toJ();\n        if (p.isInfinity())\n          return this;\n        var z2 = this.z.redSqr();\n        var u1 = this.x;\n        var u2 = p.x.redMul(z2);\n        var s1 = this.y;\n        var s2 = p.y.redMul(z2).redMul(this.z);\n        var h = u1.redSub(u2);\n        var r = s1.redSub(s2);\n        if (h.cmpn(0) === 0) {\n          if (r.cmpn(0) !== 0)\n            return this.curve.jpoint(null, null, null);\n          else\n            return this.dbl();\n        }\n        var h2 = h.redSqr();\n        var h3 = h2.redMul(h);\n        var v = u1.redMul(h2);\n        var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n        var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n        var nz = this.z.redMul(h);\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype.dblp = function dblp(pow3) {\n        if (pow3 === 0)\n          return this;\n        if (this.isInfinity())\n          return this;\n        if (!pow3)\n          return this.dbl();\n        var i;\n        if (this.curve.zeroA || this.curve.threeA) {\n          var r = this;\n          for (i = 0; i < pow3; i++)\n            r = r.dbl();\n          return r;\n        }\n        var a = this.curve.a;\n        var tinv = this.curve.tinv;\n        var jx = this.x;\n        var jy = this.y;\n        var jz = this.z;\n        var jz4 = jz.redSqr().redSqr();\n        var jyd = jy.redAdd(jy);\n        for (i = 0; i < pow3; i++) {\n          var jx2 = jx.redSqr();\n          var jyd2 = jyd.redSqr();\n          var jyd4 = jyd2.redSqr();\n          var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n          var t1 = jx.redMul(jyd2);\n          var nx = c.redSqr().redISub(t1.redAdd(t1));\n          var t2 = t1.redISub(nx);\n          var dny = c.redMul(t2);\n          dny = dny.redIAdd(dny).redISub(jyd4);\n          var nz = jyd.redMul(jz);\n          if (i + 1 < pow3)\n            jz4 = jz4.redMul(jyd4);\n          jx = nx;\n          jz = nz;\n          jyd = dny;\n        }\n        return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n      };\n      JPoint.prototype.dbl = function dbl() {\n        if (this.isInfinity())\n          return this;\n        if (this.curve.zeroA)\n          return this._zeroDbl();\n        else if (this.curve.threeA)\n          return this._threeDbl();\n        else\n          return this._dbl();\n      };\n      JPoint.prototype._zeroDbl = function _zeroDbl() {\n        var nx;\n        var ny;\n        var nz;\n        if (this.zOne) {\n          var xx = this.x.redSqr();\n          var yy = this.y.redSqr();\n          var yyyy = yy.redSqr();\n          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n          s = s.redIAdd(s);\n          var m = xx.redAdd(xx).redIAdd(xx);\n          var t = m.redSqr().redISub(s).redISub(s);\n          var yyyy8 = yyyy.redIAdd(yyyy);\n          yyyy8 = yyyy8.redIAdd(yyyy8);\n          yyyy8 = yyyy8.redIAdd(yyyy8);\n          nx = t;\n          ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n          nz = this.y.redAdd(this.y);\n        } else {\n          var a = this.x.redSqr();\n          var b2 = this.y.redSqr();\n          var c = b2.redSqr();\n          var d = this.x.redAdd(b2).redSqr().redISub(a).redISub(c);\n          d = d.redIAdd(d);\n          var e = a.redAdd(a).redIAdd(a);\n          var f = e.redSqr();\n          var c8 = c.redIAdd(c);\n          c8 = c8.redIAdd(c8);\n          c8 = c8.redIAdd(c8);\n          nx = f.redISub(d).redISub(d);\n          ny = e.redMul(d.redISub(nx)).redISub(c8);\n          nz = this.y.redMul(this.z);\n          nz = nz.redIAdd(nz);\n        }\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype._threeDbl = function _threeDbl() {\n        var nx;\n        var ny;\n        var nz;\n        if (this.zOne) {\n          var xx = this.x.redSqr();\n          var yy = this.y.redSqr();\n          var yyyy = yy.redSqr();\n          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n          s = s.redIAdd(s);\n          var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n          var t = m.redSqr().redISub(s).redISub(s);\n          nx = t;\n          var yyyy8 = yyyy.redIAdd(yyyy);\n          yyyy8 = yyyy8.redIAdd(yyyy8);\n          yyyy8 = yyyy8.redIAdd(yyyy8);\n          ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n          nz = this.y.redAdd(this.y);\n        } else {\n          var delta = this.z.redSqr();\n          var gamma = this.y.redSqr();\n          var beta = this.x.redMul(gamma);\n          var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n          alpha = alpha.redAdd(alpha).redIAdd(alpha);\n          var beta4 = beta.redIAdd(beta);\n          beta4 = beta4.redIAdd(beta4);\n          var beta8 = beta4.redAdd(beta4);\n          nx = alpha.redSqr().redISub(beta8);\n          nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n          var ggamma8 = gamma.redSqr();\n          ggamma8 = ggamma8.redIAdd(ggamma8);\n          ggamma8 = ggamma8.redIAdd(ggamma8);\n          ggamma8 = ggamma8.redIAdd(ggamma8);\n          ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n        }\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype._dbl = function _dbl() {\n        var a = this.curve.a;\n        var jx = this.x;\n        var jy = this.y;\n        var jz = this.z;\n        var jz4 = jz.redSqr().redSqr();\n        var jx2 = jx.redSqr();\n        var jy2 = jy.redSqr();\n        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n        var jxd4 = jx.redAdd(jx);\n        jxd4 = jxd4.redIAdd(jxd4);\n        var t1 = jxd4.redMul(jy2);\n        var nx = c.redSqr().redISub(t1.redAdd(t1));\n        var t2 = t1.redISub(nx);\n        var jyd8 = jy2.redSqr();\n        jyd8 = jyd8.redIAdd(jyd8);\n        jyd8 = jyd8.redIAdd(jyd8);\n        jyd8 = jyd8.redIAdd(jyd8);\n        var ny = c.redMul(t2).redISub(jyd8);\n        var nz = jy.redAdd(jy).redMul(jz);\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype.trpl = function trpl() {\n        if (!this.curve.zeroA)\n          return this.dbl().add(this);\n        var xx = this.x.redSqr();\n        var yy = this.y.redSqr();\n        var zz = this.z.redSqr();\n        var yyyy = yy.redSqr();\n        var m = xx.redAdd(xx).redIAdd(xx);\n        var mm = m.redSqr();\n        var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n        e = e.redIAdd(e);\n        e = e.redAdd(e).redIAdd(e);\n        e = e.redISub(mm);\n        var ee = e.redSqr();\n        var t = yyyy.redIAdd(yyyy);\n        t = t.redIAdd(t);\n        t = t.redIAdd(t);\n        t = t.redIAdd(t);\n        var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n        var yyu4 = yy.redMul(u);\n        yyu4 = yyu4.redIAdd(yyu4);\n        yyu4 = yyu4.redIAdd(yyu4);\n        var nx = this.x.redMul(ee).redISub(yyu4);\n        nx = nx.redIAdd(nx);\n        nx = nx.redIAdd(nx);\n        var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n        ny = ny.redIAdd(ny);\n        ny = ny.redIAdd(ny);\n        ny = ny.redIAdd(ny);\n        var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n        return this.curve.jpoint(nx, ny, nz);\n      };\n      JPoint.prototype.mul = function mul(k, kbase) {\n        k = new BN(k, kbase);\n        return this.curve._wnafMul(this, k);\n      };\n      JPoint.prototype.eq = function eq(p) {\n        if (p.type === \"affine\")\n          return this.eq(p.toJ());\n        if (this === p)\n          return true;\n        var z2 = this.z.redSqr();\n        var pz2 = p.z.redSqr();\n        if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n          return false;\n        var z3 = z2.redMul(this.z);\n        var pz3 = pz2.redMul(p.z);\n        return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n      };\n      JPoint.prototype.eqXToP = function eqXToP(x) {\n        var zs = this.z.redSqr();\n        var rx = x.toRed(this.curve.red).redMul(zs);\n        if (this.x.cmp(rx) === 0)\n          return true;\n        var xc = x.clone();\n        var t = this.curve.redN.redMul(zs);\n        for (; ; ) {\n          xc.iadd(this.curve.n);\n          if (xc.cmp(this.curve.p) >= 0)\n            return false;\n          rx.redIAdd(t);\n          if (this.x.cmp(rx) === 0)\n            return true;\n        }\n      };\n      JPoint.prototype.inspect = function inspect() {\n        if (this.isInfinity())\n          return \"<EC JPoint Infinity>\";\n        return \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n      };\n      JPoint.prototype.isInfinity = function isInfinity() {\n        return this.z.cmpn(0) === 0;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/mont.js\n  var require_mont = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/mont.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var inherits = require_inherits_browser();\n      var Base = require_base();\n      var utils = require_utils2();\n      function MontCurve(conf) {\n        Base.call(this, \"mont\", conf);\n        this.a = new BN(conf.a, 16).toRed(this.red);\n        this.b = new BN(conf.b, 16).toRed(this.red);\n        this.i4 = new BN(4).toRed(this.red).redInvm();\n        this.two = new BN(2).toRed(this.red);\n        this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n      }\n      inherits(MontCurve, Base);\n      module.exports = MontCurve;\n      MontCurve.prototype.validate = function validate(point) {\n        var x = point.normalize().x;\n        var x2 = x.redSqr();\n        var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n        var y = rhs.redSqrt();\n        return y.redSqr().cmp(rhs) === 0;\n      };\n      function Point2(curve, x, z) {\n        Base.BasePoint.call(this, curve, \"projective\");\n        if (x === null && z === null) {\n          this.x = this.curve.one;\n          this.z = this.curve.zero;\n        } else {\n          this.x = new BN(x, 16);\n          this.z = new BN(z, 16);\n          if (!this.x.red)\n            this.x = this.x.toRed(this.curve.red);\n          if (!this.z.red)\n            this.z = this.z.toRed(this.curve.red);\n        }\n      }\n      inherits(Point2, Base.BasePoint);\n      MontCurve.prototype.decodePoint = function decodePoint(bytes2, enc) {\n        return this.point(utils.toArray(bytes2, enc), 1);\n      };\n      MontCurve.prototype.point = function point(x, z) {\n        return new Point2(this, x, z);\n      };\n      MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n        return Point2.fromJSON(this, obj);\n      };\n      Point2.prototype.precompute = function precompute() {\n      };\n      Point2.prototype._encode = function _encode2() {\n        return this.getX().toArray(\"be\", this.curve.p.byteLength());\n      };\n      Point2.fromJSON = function fromJSON(curve, obj) {\n        return new Point2(curve, obj[0], obj[1] || curve.one);\n      };\n      Point2.prototype.inspect = function inspect() {\n        if (this.isInfinity())\n          return \"<EC Point Infinity>\";\n        return \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n      };\n      Point2.prototype.isInfinity = function isInfinity() {\n        return this.z.cmpn(0) === 0;\n      };\n      Point2.prototype.dbl = function dbl() {\n        var a = this.x.redAdd(this.z);\n        var aa = a.redSqr();\n        var b2 = this.x.redSub(this.z);\n        var bb = b2.redSqr();\n        var c = aa.redSub(bb);\n        var nx = aa.redMul(bb);\n        var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n        return this.curve.point(nx, nz);\n      };\n      Point2.prototype.add = function add2() {\n        throw new Error(\"Not supported on Montgomery curve\");\n      };\n      Point2.prototype.diffAdd = function diffAdd(p, diff) {\n        var a = this.x.redAdd(this.z);\n        var b2 = this.x.redSub(this.z);\n        var c = p.x.redAdd(p.z);\n        var d = p.x.redSub(p.z);\n        var da = d.redMul(a);\n        var cb = c.redMul(b2);\n        var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n        var nz = diff.x.redMul(da.redISub(cb).redSqr());\n        return this.curve.point(nx, nz);\n      };\n      Point2.prototype.mul = function mul(k) {\n        var t = k.clone();\n        var a = this;\n        var b2 = this.curve.point(null, null);\n        var c = this;\n        for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n          bits.push(t.andln(1));\n        for (var i = bits.length - 1; i >= 0; i--) {\n          if (bits[i] === 0) {\n            a = a.diffAdd(b2, c);\n            b2 = b2.dbl();\n          } else {\n            b2 = a.diffAdd(b2, c);\n            a = a.dbl();\n          }\n        }\n        return b2;\n      };\n      Point2.prototype.mulAdd = function mulAdd() {\n        throw new Error(\"Not supported on Montgomery curve\");\n      };\n      Point2.prototype.jumlAdd = function jumlAdd() {\n        throw new Error(\"Not supported on Montgomery curve\");\n      };\n      Point2.prototype.eq = function eq(other) {\n        return this.getX().cmp(other.getX()) === 0;\n      };\n      Point2.prototype.normalize = function normalize() {\n        this.x = this.x.redMul(this.z.redInvm());\n        this.z = this.curve.one;\n        return this;\n      };\n      Point2.prototype.getX = function getX() {\n        this.normalize();\n        return this.x.fromRed();\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/edwards.js\n  var require_edwards = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/edwards.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils2();\n      var BN = require_bn2();\n      var inherits = require_inherits_browser();\n      var Base = require_base();\n      var assert3 = utils.assert;\n      function EdwardsCurve(conf) {\n        this.twisted = (conf.a | 0) !== 1;\n        this.mOneA = this.twisted && (conf.a | 0) === -1;\n        this.extended = this.mOneA;\n        Base.call(this, \"edwards\", conf);\n        this.a = new BN(conf.a, 16).umod(this.red.m);\n        this.a = this.a.toRed(this.red);\n        this.c = new BN(conf.c, 16).toRed(this.red);\n        this.c2 = this.c.redSqr();\n        this.d = new BN(conf.d, 16).toRed(this.red);\n        this.dd = this.d.redAdd(this.d);\n        assert3(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n        this.oneC = (conf.c | 0) === 1;\n      }\n      inherits(EdwardsCurve, Base);\n      module.exports = EdwardsCurve;\n      EdwardsCurve.prototype._mulA = function _mulA(num) {\n        if (this.mOneA)\n          return num.redNeg();\n        else\n          return this.a.redMul(num);\n      };\n      EdwardsCurve.prototype._mulC = function _mulC(num) {\n        if (this.oneC)\n          return num;\n        else\n          return this.c.redMul(num);\n      };\n      EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n        return this.point(x, y, z, t);\n      };\n      EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n        x = new BN(x, 16);\n        if (!x.red)\n          x = x.toRed(this.red);\n        var x2 = x.redSqr();\n        var rhs = this.c2.redSub(this.a.redMul(x2));\n        var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n        var y2 = rhs.redMul(lhs.redInvm());\n        var y = y2.redSqrt();\n        if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n          throw new Error(\"invalid point\");\n        var isOdd = y.fromRed().isOdd();\n        if (odd && !isOdd || !odd && isOdd)\n          y = y.redNeg();\n        return this.point(x, y);\n      };\n      EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n        y = new BN(y, 16);\n        if (!y.red)\n          y = y.toRed(this.red);\n        var y2 = y.redSqr();\n        var lhs = y2.redSub(this.c2);\n        var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n        var x2 = lhs.redMul(rhs.redInvm());\n        if (x2.cmp(this.zero) === 0) {\n          if (odd)\n            throw new Error(\"invalid point\");\n          else\n            return this.point(this.zero, y);\n        }\n        var x = x2.redSqrt();\n        if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n          throw new Error(\"invalid point\");\n        if (x.fromRed().isOdd() !== odd)\n          x = x.redNeg();\n        return this.point(x, y);\n      };\n      EdwardsCurve.prototype.validate = function validate(point) {\n        if (point.isInfinity())\n          return true;\n        point.normalize();\n        var x2 = point.x.redSqr();\n        var y2 = point.y.redSqr();\n        var lhs = x2.redMul(this.a).redAdd(y2);\n        var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n        return lhs.cmp(rhs) === 0;\n      };\n      function Point2(curve, x, y, z, t) {\n        Base.BasePoint.call(this, curve, \"projective\");\n        if (x === null && y === null && z === null) {\n          this.x = this.curve.zero;\n          this.y = this.curve.one;\n          this.z = this.curve.one;\n          this.t = this.curve.zero;\n          this.zOne = true;\n        } else {\n          this.x = new BN(x, 16);\n          this.y = new BN(y, 16);\n          this.z = z ? new BN(z, 16) : this.curve.one;\n          this.t = t && new BN(t, 16);\n          if (!this.x.red)\n            this.x = this.x.toRed(this.curve.red);\n          if (!this.y.red)\n            this.y = this.y.toRed(this.curve.red);\n          if (!this.z.red)\n            this.z = this.z.toRed(this.curve.red);\n          if (this.t && !this.t.red)\n            this.t = this.t.toRed(this.curve.red);\n          this.zOne = this.z === this.curve.one;\n          if (this.curve.extended && !this.t) {\n            this.t = this.x.redMul(this.y);\n            if (!this.zOne)\n              this.t = this.t.redMul(this.z.redInvm());\n          }\n        }\n      }\n      inherits(Point2, Base.BasePoint);\n      EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n        return Point2.fromJSON(this, obj);\n      };\n      EdwardsCurve.prototype.point = function point(x, y, z, t) {\n        return new Point2(this, x, y, z, t);\n      };\n      Point2.fromJSON = function fromJSON(curve, obj) {\n        return new Point2(curve, obj[0], obj[1], obj[2]);\n      };\n      Point2.prototype.inspect = function inspect() {\n        if (this.isInfinity())\n          return \"<EC Point Infinity>\";\n        return \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n      };\n      Point2.prototype.isInfinity = function isInfinity() {\n        return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n      };\n      Point2.prototype._extDbl = function _extDbl() {\n        var a = this.x.redSqr();\n        var b2 = this.y.redSqr();\n        var c = this.z.redSqr();\n        c = c.redIAdd(c);\n        var d = this.curve._mulA(a);\n        var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b2);\n        var g = d.redAdd(b2);\n        var f = g.redSub(c);\n        var h = d.redSub(b2);\n        var nx = e.redMul(f);\n        var ny = g.redMul(h);\n        var nt = e.redMul(h);\n        var nz = f.redMul(g);\n        return this.curve.point(nx, ny, nz, nt);\n      };\n      Point2.prototype._projDbl = function _projDbl() {\n        var b2 = this.x.redAdd(this.y).redSqr();\n        var c = this.x.redSqr();\n        var d = this.y.redSqr();\n        var nx;\n        var ny;\n        var nz;\n        var e;\n        var h;\n        var j;\n        if (this.curve.twisted) {\n          e = this.curve._mulA(c);\n          var f = e.redAdd(d);\n          if (this.zOne) {\n            nx = b2.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n            ny = f.redMul(e.redSub(d));\n            nz = f.redSqr().redSub(f).redSub(f);\n          } else {\n            h = this.z.redSqr();\n            j = f.redSub(h).redISub(h);\n            nx = b2.redSub(c).redISub(d).redMul(j);\n            ny = f.redMul(e.redSub(d));\n            nz = f.redMul(j);\n          }\n        } else {\n          e = c.redAdd(d);\n          h = this.curve._mulC(this.z).redSqr();\n          j = e.redSub(h).redSub(h);\n          nx = this.curve._mulC(b2.redISub(e)).redMul(j);\n          ny = this.curve._mulC(e).redMul(c.redISub(d));\n          nz = e.redMul(j);\n        }\n        return this.curve.point(nx, ny, nz);\n      };\n      Point2.prototype.dbl = function dbl() {\n        if (this.isInfinity())\n          return this;\n        if (this.curve.extended)\n          return this._extDbl();\n        else\n          return this._projDbl();\n      };\n      Point2.prototype._extAdd = function _extAdd(p) {\n        var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n        var b2 = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n        var c = this.t.redMul(this.curve.dd).redMul(p.t);\n        var d = this.z.redMul(p.z.redAdd(p.z));\n        var e = b2.redSub(a);\n        var f = d.redSub(c);\n        var g = d.redAdd(c);\n        var h = b2.redAdd(a);\n        var nx = e.redMul(f);\n        var ny = g.redMul(h);\n        var nt = e.redMul(h);\n        var nz = f.redMul(g);\n        return this.curve.point(nx, ny, nz, nt);\n      };\n      Point2.prototype._projAdd = function _projAdd(p) {\n        var a = this.z.redMul(p.z);\n        var b2 = a.redSqr();\n        var c = this.x.redMul(p.x);\n        var d = this.y.redMul(p.y);\n        var e = this.curve.d.redMul(c).redMul(d);\n        var f = b2.redSub(e);\n        var g = b2.redAdd(e);\n        var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n        var nx = a.redMul(f).redMul(tmp);\n        var ny;\n        var nz;\n        if (this.curve.twisted) {\n          ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n          nz = f.redMul(g);\n        } else {\n          ny = a.redMul(g).redMul(d.redSub(c));\n          nz = this.curve._mulC(f).redMul(g);\n        }\n        return this.curve.point(nx, ny, nz);\n      };\n      Point2.prototype.add = function add2(p) {\n        if (this.isInfinity())\n          return p;\n        if (p.isInfinity())\n          return this;\n        if (this.curve.extended)\n          return this._extAdd(p);\n        else\n          return this._projAdd(p);\n      };\n      Point2.prototype.mul = function mul(k) {\n        if (this._hasDoubles(k))\n          return this.curve._fixedNafMul(this, k);\n        else\n          return this.curve._wnafMul(this, k);\n      };\n      Point2.prototype.mulAdd = function mulAdd(k1, p, k2) {\n        return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);\n      };\n      Point2.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n        return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);\n      };\n      Point2.prototype.normalize = function normalize() {\n        if (this.zOne)\n          return this;\n        var zi = this.z.redInvm();\n        this.x = this.x.redMul(zi);\n        this.y = this.y.redMul(zi);\n        if (this.t)\n          this.t = this.t.redMul(zi);\n        this.z = this.curve.one;\n        this.zOne = true;\n        return this;\n      };\n      Point2.prototype.neg = function neg() {\n        return this.curve.point(\n          this.x.redNeg(),\n          this.y,\n          this.z,\n          this.t && this.t.redNeg()\n        );\n      };\n      Point2.prototype.getX = function getX() {\n        this.normalize();\n        return this.x.fromRed();\n      };\n      Point2.prototype.getY = function getY() {\n        this.normalize();\n        return this.y.fromRed();\n      };\n      Point2.prototype.eq = function eq(other) {\n        return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n      };\n      Point2.prototype.eqXToP = function eqXToP(x) {\n        var rx = x.toRed(this.curve.red).redMul(this.z);\n        if (this.x.cmp(rx) === 0)\n          return true;\n        var xc = x.clone();\n        var t = this.curve.redN.redMul(this.z);\n        for (; ; ) {\n          xc.iadd(this.curve.n);\n          if (xc.cmp(this.curve.p) >= 0)\n            return false;\n          rx.redIAdd(t);\n          if (this.x.cmp(rx) === 0)\n            return true;\n        }\n      };\n      Point2.prototype.toP = Point2.prototype.normalize;\n      Point2.prototype.mixedAdd = Point2.prototype.add;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/index.js\n  var require_curve = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var curve = exports3;\n      curve.base = require_base();\n      curve.short = require_short();\n      curve.mont = require_mont();\n      curve.edwards = require_edwards();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js\n  var require_utils3 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var assert3 = require_minimalistic_assert();\n      var inherits = require_inherits_browser();\n      exports3.inherits = inherits;\n      function isSurrogatePair(msg, i) {\n        if ((msg.charCodeAt(i) & 64512) !== 55296) {\n          return false;\n        }\n        if (i < 0 || i + 1 >= msg.length) {\n          return false;\n        }\n        return (msg.charCodeAt(i + 1) & 64512) === 56320;\n      }\n      function toArray(msg, enc) {\n        if (Array.isArray(msg))\n          return msg.slice();\n        if (!msg)\n          return [];\n        var res = [];\n        if (typeof msg === \"string\") {\n          if (!enc) {\n            var p = 0;\n            for (var i = 0; i < msg.length; i++) {\n              var c = msg.charCodeAt(i);\n              if (c < 128) {\n                res[p++] = c;\n              } else if (c < 2048) {\n                res[p++] = c >> 6 | 192;\n                res[p++] = c & 63 | 128;\n              } else if (isSurrogatePair(msg, i)) {\n                c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);\n                res[p++] = c >> 18 | 240;\n                res[p++] = c >> 12 & 63 | 128;\n                res[p++] = c >> 6 & 63 | 128;\n                res[p++] = c & 63 | 128;\n              } else {\n                res[p++] = c >> 12 | 224;\n                res[p++] = c >> 6 & 63 | 128;\n                res[p++] = c & 63 | 128;\n              }\n            }\n          } else if (enc === \"hex\") {\n            msg = msg.replace(/[^a-z0-9]+/ig, \"\");\n            if (msg.length % 2 !== 0)\n              msg = \"0\" + msg;\n            for (i = 0; i < msg.length; i += 2)\n              res.push(parseInt(msg[i] + msg[i + 1], 16));\n          }\n        } else {\n          for (i = 0; i < msg.length; i++)\n            res[i] = msg[i] | 0;\n        }\n        return res;\n      }\n      exports3.toArray = toArray;\n      function toHex(msg) {\n        var res = \"\";\n        for (var i = 0; i < msg.length; i++)\n          res += zero2(msg[i].toString(16));\n        return res;\n      }\n      exports3.toHex = toHex;\n      function htonl(w) {\n        var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;\n        return res >>> 0;\n      }\n      exports3.htonl = htonl;\n      function toHex32(msg, endian) {\n        var res = \"\";\n        for (var i = 0; i < msg.length; i++) {\n          var w = msg[i];\n          if (endian === \"little\")\n            w = htonl(w);\n          res += zero8(w.toString(16));\n        }\n        return res;\n      }\n      exports3.toHex32 = toHex32;\n      function zero2(word) {\n        if (word.length === 1)\n          return \"0\" + word;\n        else\n          return word;\n      }\n      exports3.zero2 = zero2;\n      function zero8(word) {\n        if (word.length === 7)\n          return \"0\" + word;\n        else if (word.length === 6)\n          return \"00\" + word;\n        else if (word.length === 5)\n          return \"000\" + word;\n        else if (word.length === 4)\n          return \"0000\" + word;\n        else if (word.length === 3)\n          return \"00000\" + word;\n        else if (word.length === 2)\n          return \"000000\" + word;\n        else if (word.length === 1)\n          return \"0000000\" + word;\n        else\n          return word;\n      }\n      exports3.zero8 = zero8;\n      function join32(msg, start, end, endian) {\n        var len = end - start;\n        assert3(len % 4 === 0);\n        var res = new Array(len / 4);\n        for (var i = 0, k = start; i < res.length; i++, k += 4) {\n          var w;\n          if (endian === \"big\")\n            w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];\n          else\n            w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n          res[i] = w >>> 0;\n        }\n        return res;\n      }\n      exports3.join32 = join32;\n      function split32(msg, endian) {\n        var res = new Array(msg.length * 4);\n        for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n          var m = msg[i];\n          if (endian === \"big\") {\n            res[k] = m >>> 24;\n            res[k + 1] = m >>> 16 & 255;\n            res[k + 2] = m >>> 8 & 255;\n            res[k + 3] = m & 255;\n          } else {\n            res[k + 3] = m >>> 24;\n            res[k + 2] = m >>> 16 & 255;\n            res[k + 1] = m >>> 8 & 255;\n            res[k] = m & 255;\n          }\n        }\n        return res;\n      }\n      exports3.split32 = split32;\n      function rotr32(w, b2) {\n        return w >>> b2 | w << 32 - b2;\n      }\n      exports3.rotr32 = rotr32;\n      function rotl32(w, b2) {\n        return w << b2 | w >>> 32 - b2;\n      }\n      exports3.rotl32 = rotl32;\n      function sum32(a, b2) {\n        return a + b2 >>> 0;\n      }\n      exports3.sum32 = sum32;\n      function sum32_3(a, b2, c) {\n        return a + b2 + c >>> 0;\n      }\n      exports3.sum32_3 = sum32_3;\n      function sum32_4(a, b2, c, d) {\n        return a + b2 + c + d >>> 0;\n      }\n      exports3.sum32_4 = sum32_4;\n      function sum32_5(a, b2, c, d, e) {\n        return a + b2 + c + d + e >>> 0;\n      }\n      exports3.sum32_5 = sum32_5;\n      function sum64(buf, pos, ah, al) {\n        var bh = buf[pos];\n        var bl = buf[pos + 1];\n        var lo = al + bl >>> 0;\n        var hi = (lo < al ? 1 : 0) + ah + bh;\n        buf[pos] = hi >>> 0;\n        buf[pos + 1] = lo;\n      }\n      exports3.sum64 = sum64;\n      function sum64_hi(ah, al, bh, bl) {\n        var lo = al + bl >>> 0;\n        var hi = (lo < al ? 1 : 0) + ah + bh;\n        return hi >>> 0;\n      }\n      exports3.sum64_hi = sum64_hi;\n      function sum64_lo(ah, al, bh, bl) {\n        var lo = al + bl;\n        return lo >>> 0;\n      }\n      exports3.sum64_lo = sum64_lo;\n      function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n        var carry = 0;\n        var lo = al;\n        lo = lo + bl >>> 0;\n        carry += lo < al ? 1 : 0;\n        lo = lo + cl >>> 0;\n        carry += lo < cl ? 1 : 0;\n        lo = lo + dl >>> 0;\n        carry += lo < dl ? 1 : 0;\n        var hi = ah + bh + ch + dh + carry;\n        return hi >>> 0;\n      }\n      exports3.sum64_4_hi = sum64_4_hi;\n      function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n        var lo = al + bl + cl + dl;\n        return lo >>> 0;\n      }\n      exports3.sum64_4_lo = sum64_4_lo;\n      function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n        var carry = 0;\n        var lo = al;\n        lo = lo + bl >>> 0;\n        carry += lo < al ? 1 : 0;\n        lo = lo + cl >>> 0;\n        carry += lo < cl ? 1 : 0;\n        lo = lo + dl >>> 0;\n        carry += lo < dl ? 1 : 0;\n        lo = lo + el >>> 0;\n        carry += lo < el ? 1 : 0;\n        var hi = ah + bh + ch + dh + eh + carry;\n        return hi >>> 0;\n      }\n      exports3.sum64_5_hi = sum64_5_hi;\n      function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n        var lo = al + bl + cl + dl + el;\n        return lo >>> 0;\n      }\n      exports3.sum64_5_lo = sum64_5_lo;\n      function rotr64_hi(ah, al, num) {\n        var r = al << 32 - num | ah >>> num;\n        return r >>> 0;\n      }\n      exports3.rotr64_hi = rotr64_hi;\n      function rotr64_lo(ah, al, num) {\n        var r = ah << 32 - num | al >>> num;\n        return r >>> 0;\n      }\n      exports3.rotr64_lo = rotr64_lo;\n      function shr64_hi(ah, al, num) {\n        return ah >>> num;\n      }\n      exports3.shr64_hi = shr64_hi;\n      function shr64_lo(ah, al, num) {\n        var r = ah << 32 - num | al >>> num;\n        return r >>> 0;\n      }\n      exports3.shr64_lo = shr64_lo;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js\n  var require_common = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var assert3 = require_minimalistic_assert();\n      function BlockHash() {\n        this.pending = null;\n        this.pendingTotal = 0;\n        this.blockSize = this.constructor.blockSize;\n        this.outSize = this.constructor.outSize;\n        this.hmacStrength = this.constructor.hmacStrength;\n        this.padLength = this.constructor.padLength / 8;\n        this.endian = \"big\";\n        this._delta8 = this.blockSize / 8;\n        this._delta32 = this.blockSize / 32;\n      }\n      exports3.BlockHash = BlockHash;\n      BlockHash.prototype.update = function update(msg, enc) {\n        msg = utils.toArray(msg, enc);\n        if (!this.pending)\n          this.pending = msg;\n        else\n          this.pending = this.pending.concat(msg);\n        this.pendingTotal += msg.length;\n        if (this.pending.length >= this._delta8) {\n          msg = this.pending;\n          var r = msg.length % this._delta8;\n          this.pending = msg.slice(msg.length - r, msg.length);\n          if (this.pending.length === 0)\n            this.pending = null;\n          msg = utils.join32(msg, 0, msg.length - r, this.endian);\n          for (var i = 0; i < msg.length; i += this._delta32)\n            this._update(msg, i, i + this._delta32);\n        }\n        return this;\n      };\n      BlockHash.prototype.digest = function digest(enc) {\n        this.update(this._pad());\n        assert3(this.pending === null);\n        return this._digest(enc);\n      };\n      BlockHash.prototype._pad = function pad() {\n        var len = this.pendingTotal;\n        var bytes2 = this._delta8;\n        var k = bytes2 - (len + this.padLength) % bytes2;\n        var res = new Array(k + this.padLength);\n        res[0] = 128;\n        for (var i = 1; i < k; i++)\n          res[i] = 0;\n        len <<= 3;\n        if (this.endian === \"big\") {\n          for (var t = 8; t < this.padLength; t++)\n            res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = len >>> 24 & 255;\n          res[i++] = len >>> 16 & 255;\n          res[i++] = len >>> 8 & 255;\n          res[i++] = len & 255;\n        } else {\n          res[i++] = len & 255;\n          res[i++] = len >>> 8 & 255;\n          res[i++] = len >>> 16 & 255;\n          res[i++] = len >>> 24 & 255;\n          res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = 0;\n          res[i++] = 0;\n          for (t = 8; t < this.padLength; t++)\n            res[i++] = 0;\n        }\n        return res;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js\n  var require_common2 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var rotr32 = utils.rotr32;\n      function ft_1(s, x, y, z) {\n        if (s === 0)\n          return ch32(x, y, z);\n        if (s === 1 || s === 3)\n          return p32(x, y, z);\n        if (s === 2)\n          return maj32(x, y, z);\n      }\n      exports3.ft_1 = ft_1;\n      function ch32(x, y, z) {\n        return x & y ^ ~x & z;\n      }\n      exports3.ch32 = ch32;\n      function maj32(x, y, z) {\n        return x & y ^ x & z ^ y & z;\n      }\n      exports3.maj32 = maj32;\n      function p32(x, y, z) {\n        return x ^ y ^ z;\n      }\n      exports3.p32 = p32;\n      function s0_256(x) {\n        return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n      }\n      exports3.s0_256 = s0_256;\n      function s1_256(x) {\n        return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n      }\n      exports3.s1_256 = s1_256;\n      function g0_256(x) {\n        return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n      }\n      exports3.g0_256 = g0_256;\n      function g1_256(x) {\n        return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n      }\n      exports3.g1_256 = g1_256;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/1.js\n  var require__ = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/1.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var common = require_common();\n      var shaCommon = require_common2();\n      var rotl32 = utils.rotl32;\n      var sum32 = utils.sum32;\n      var sum32_5 = utils.sum32_5;\n      var ft_1 = shaCommon.ft_1;\n      var BlockHash = common.BlockHash;\n      var sha1_K = [\n        1518500249,\n        1859775393,\n        2400959708,\n        3395469782\n      ];\n      function SHA1() {\n        if (!(this instanceof SHA1))\n          return new SHA1();\n        BlockHash.call(this);\n        this.h = [\n          1732584193,\n          4023233417,\n          2562383102,\n          271733878,\n          3285377520\n        ];\n        this.W = new Array(80);\n      }\n      utils.inherits(SHA1, BlockHash);\n      module.exports = SHA1;\n      SHA1.blockSize = 512;\n      SHA1.outSize = 160;\n      SHA1.hmacStrength = 80;\n      SHA1.padLength = 64;\n      SHA1.prototype._update = function _update(msg, start) {\n        var W = this.W;\n        for (var i = 0; i < 16; i++)\n          W[i] = msg[start + i];\n        for (; i < W.length; i++)\n          W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n        var a = this.h[0];\n        var b2 = this.h[1];\n        var c = this.h[2];\n        var d = this.h[3];\n        var e = this.h[4];\n        for (i = 0; i < W.length; i++) {\n          var s = ~~(i / 20);\n          var t = sum32_5(rotl32(a, 5), ft_1(s, b2, c, d), e, W[i], sha1_K[s]);\n          e = d;\n          d = c;\n          c = rotl32(b2, 30);\n          b2 = a;\n          a = t;\n        }\n        this.h[0] = sum32(this.h[0], a);\n        this.h[1] = sum32(this.h[1], b2);\n        this.h[2] = sum32(this.h[2], c);\n        this.h[3] = sum32(this.h[3], d);\n        this.h[4] = sum32(this.h[4], e);\n      };\n      SHA1.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h, \"big\");\n        else\n          return utils.split32(this.h, \"big\");\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js\n  var require__2 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var common = require_common();\n      var shaCommon = require_common2();\n      var assert3 = require_minimalistic_assert();\n      var sum32 = utils.sum32;\n      var sum32_4 = utils.sum32_4;\n      var sum32_5 = utils.sum32_5;\n      var ch32 = shaCommon.ch32;\n      var maj32 = shaCommon.maj32;\n      var s0_256 = shaCommon.s0_256;\n      var s1_256 = shaCommon.s1_256;\n      var g0_256 = shaCommon.g0_256;\n      var g1_256 = shaCommon.g1_256;\n      var BlockHash = common.BlockHash;\n      var sha256_K = [\n        1116352408,\n        1899447441,\n        3049323471,\n        3921009573,\n        961987163,\n        1508970993,\n        2453635748,\n        2870763221,\n        3624381080,\n        310598401,\n        607225278,\n        1426881987,\n        1925078388,\n        2162078206,\n        2614888103,\n        3248222580,\n        3835390401,\n        4022224774,\n        264347078,\n        604807628,\n        770255983,\n        1249150122,\n        1555081692,\n        1996064986,\n        2554220882,\n        2821834349,\n        2952996808,\n        3210313671,\n        3336571891,\n        3584528711,\n        113926993,\n        338241895,\n        666307205,\n        773529912,\n        1294757372,\n        1396182291,\n        1695183700,\n        1986661051,\n        2177026350,\n        2456956037,\n        2730485921,\n        2820302411,\n        3259730800,\n        3345764771,\n        3516065817,\n        3600352804,\n        4094571909,\n        275423344,\n        430227734,\n        506948616,\n        659060556,\n        883997877,\n        958139571,\n        1322822218,\n        1537002063,\n        1747873779,\n        1955562222,\n        2024104815,\n        2227730452,\n        2361852424,\n        2428436474,\n        2756734187,\n        3204031479,\n        3329325298\n      ];\n      function SHA2562() {\n        if (!(this instanceof SHA2562))\n          return new SHA2562();\n        BlockHash.call(this);\n        this.h = [\n          1779033703,\n          3144134277,\n          1013904242,\n          2773480762,\n          1359893119,\n          2600822924,\n          528734635,\n          1541459225\n        ];\n        this.k = sha256_K;\n        this.W = new Array(64);\n      }\n      utils.inherits(SHA2562, BlockHash);\n      module.exports = SHA2562;\n      SHA2562.blockSize = 512;\n      SHA2562.outSize = 256;\n      SHA2562.hmacStrength = 192;\n      SHA2562.padLength = 64;\n      SHA2562.prototype._update = function _update(msg, start) {\n        var W = this.W;\n        for (var i = 0; i < 16; i++)\n          W[i] = msg[start + i];\n        for (; i < W.length; i++)\n          W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n        var a = this.h[0];\n        var b2 = this.h[1];\n        var c = this.h[2];\n        var d = this.h[3];\n        var e = this.h[4];\n        var f = this.h[5];\n        var g = this.h[6];\n        var h = this.h[7];\n        assert3(this.k.length === W.length);\n        for (i = 0; i < W.length; i++) {\n          var T12 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n          var T2 = sum32(s0_256(a), maj32(a, b2, c));\n          h = g;\n          g = f;\n          f = e;\n          e = sum32(d, T12);\n          d = c;\n          c = b2;\n          b2 = a;\n          a = sum32(T12, T2);\n        }\n        this.h[0] = sum32(this.h[0], a);\n        this.h[1] = sum32(this.h[1], b2);\n        this.h[2] = sum32(this.h[2], c);\n        this.h[3] = sum32(this.h[3], d);\n        this.h[4] = sum32(this.h[4], e);\n        this.h[5] = sum32(this.h[5], f);\n        this.h[6] = sum32(this.h[6], g);\n        this.h[7] = sum32(this.h[7], h);\n      };\n      SHA2562.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h, \"big\");\n        else\n          return utils.split32(this.h, \"big\");\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/224.js\n  var require__3 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/224.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var SHA2562 = require__2();\n      function SHA224() {\n        if (!(this instanceof SHA224))\n          return new SHA224();\n        SHA2562.call(this);\n        this.h = [\n          3238371032,\n          914150663,\n          812702999,\n          4144912697,\n          4290775857,\n          1750603025,\n          1694076839,\n          3204075428\n        ];\n      }\n      utils.inherits(SHA224, SHA2562);\n      module.exports = SHA224;\n      SHA224.blockSize = 512;\n      SHA224.outSize = 224;\n      SHA224.hmacStrength = 192;\n      SHA224.padLength = 64;\n      SHA224.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h.slice(0, 7), \"big\");\n        else\n          return utils.split32(this.h.slice(0, 7), \"big\");\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js\n  var require__4 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var common = require_common();\n      var assert3 = require_minimalistic_assert();\n      var rotr64_hi = utils.rotr64_hi;\n      var rotr64_lo = utils.rotr64_lo;\n      var shr64_hi = utils.shr64_hi;\n      var shr64_lo = utils.shr64_lo;\n      var sum64 = utils.sum64;\n      var sum64_hi = utils.sum64_hi;\n      var sum64_lo = utils.sum64_lo;\n      var sum64_4_hi = utils.sum64_4_hi;\n      var sum64_4_lo = utils.sum64_4_lo;\n      var sum64_5_hi = utils.sum64_5_hi;\n      var sum64_5_lo = utils.sum64_5_lo;\n      var BlockHash = common.BlockHash;\n      var sha512_K = [\n        1116352408,\n        3609767458,\n        1899447441,\n        602891725,\n        3049323471,\n        3964484399,\n        3921009573,\n        2173295548,\n        961987163,\n        4081628472,\n        1508970993,\n        3053834265,\n        2453635748,\n        2937671579,\n        2870763221,\n        3664609560,\n        3624381080,\n        2734883394,\n        310598401,\n        1164996542,\n        607225278,\n        1323610764,\n        1426881987,\n        3590304994,\n        1925078388,\n        4068182383,\n        2162078206,\n        991336113,\n        2614888103,\n        633803317,\n        3248222580,\n        3479774868,\n        3835390401,\n        2666613458,\n        4022224774,\n        944711139,\n        264347078,\n        2341262773,\n        604807628,\n        2007800933,\n        770255983,\n        1495990901,\n        1249150122,\n        1856431235,\n        1555081692,\n        3175218132,\n        1996064986,\n        2198950837,\n        2554220882,\n        3999719339,\n        2821834349,\n        766784016,\n        2952996808,\n        2566594879,\n        3210313671,\n        3203337956,\n        3336571891,\n        1034457026,\n        3584528711,\n        2466948901,\n        113926993,\n        3758326383,\n        338241895,\n        168717936,\n        666307205,\n        1188179964,\n        773529912,\n        1546045734,\n        1294757372,\n        1522805485,\n        1396182291,\n        2643833823,\n        1695183700,\n        2343527390,\n        1986661051,\n        1014477480,\n        2177026350,\n        1206759142,\n        2456956037,\n        344077627,\n        2730485921,\n        1290863460,\n        2820302411,\n        3158454273,\n        3259730800,\n        3505952657,\n        3345764771,\n        106217008,\n        3516065817,\n        3606008344,\n        3600352804,\n        1432725776,\n        4094571909,\n        1467031594,\n        275423344,\n        851169720,\n        430227734,\n        3100823752,\n        506948616,\n        1363258195,\n        659060556,\n        3750685593,\n        883997877,\n        3785050280,\n        958139571,\n        3318307427,\n        1322822218,\n        3812723403,\n        1537002063,\n        2003034995,\n        1747873779,\n        3602036899,\n        1955562222,\n        1575990012,\n        2024104815,\n        1125592928,\n        2227730452,\n        2716904306,\n        2361852424,\n        442776044,\n        2428436474,\n        593698344,\n        2756734187,\n        3733110249,\n        3204031479,\n        2999351573,\n        3329325298,\n        3815920427,\n        3391569614,\n        3928383900,\n        3515267271,\n        566280711,\n        3940187606,\n        3454069534,\n        4118630271,\n        4000239992,\n        116418474,\n        1914138554,\n        174292421,\n        2731055270,\n        289380356,\n        3203993006,\n        460393269,\n        320620315,\n        685471733,\n        587496836,\n        852142971,\n        1086792851,\n        1017036298,\n        365543100,\n        1126000580,\n        2618297676,\n        1288033470,\n        3409855158,\n        1501505948,\n        4234509866,\n        1607167915,\n        987167468,\n        1816402316,\n        1246189591\n      ];\n      function SHA5122() {\n        if (!(this instanceof SHA5122))\n          return new SHA5122();\n        BlockHash.call(this);\n        this.h = [\n          1779033703,\n          4089235720,\n          3144134277,\n          2227873595,\n          1013904242,\n          4271175723,\n          2773480762,\n          1595750129,\n          1359893119,\n          2917565137,\n          2600822924,\n          725511199,\n          528734635,\n          4215389547,\n          1541459225,\n          327033209\n        ];\n        this.k = sha512_K;\n        this.W = new Array(160);\n      }\n      utils.inherits(SHA5122, BlockHash);\n      module.exports = SHA5122;\n      SHA5122.blockSize = 1024;\n      SHA5122.outSize = 512;\n      SHA5122.hmacStrength = 192;\n      SHA5122.padLength = 128;\n      SHA5122.prototype._prepareBlock = function _prepareBlock(msg, start) {\n        var W = this.W;\n        for (var i = 0; i < 32; i++)\n          W[i] = msg[start + i];\n        for (; i < W.length; i += 2) {\n          var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);\n          var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n          var c1_hi = W[i - 14];\n          var c1_lo = W[i - 13];\n          var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);\n          var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n          var c3_hi = W[i - 32];\n          var c3_lo = W[i - 31];\n          W[i] = sum64_4_hi(\n            c0_hi,\n            c0_lo,\n            c1_hi,\n            c1_lo,\n            c2_hi,\n            c2_lo,\n            c3_hi,\n            c3_lo\n          );\n          W[i + 1] = sum64_4_lo(\n            c0_hi,\n            c0_lo,\n            c1_hi,\n            c1_lo,\n            c2_hi,\n            c2_lo,\n            c3_hi,\n            c3_lo\n          );\n        }\n      };\n      SHA5122.prototype._update = function _update(msg, start) {\n        this._prepareBlock(msg, start);\n        var W = this.W;\n        var ah = this.h[0];\n        var al = this.h[1];\n        var bh = this.h[2];\n        var bl = this.h[3];\n        var ch = this.h[4];\n        var cl = this.h[5];\n        var dh = this.h[6];\n        var dl = this.h[7];\n        var eh = this.h[8];\n        var el = this.h[9];\n        var fh = this.h[10];\n        var fl = this.h[11];\n        var gh = this.h[12];\n        var gl = this.h[13];\n        var hh = this.h[14];\n        var hl = this.h[15];\n        assert3(this.k.length === W.length);\n        for (var i = 0; i < W.length; i += 2) {\n          var c0_hi = hh;\n          var c0_lo = hl;\n          var c1_hi = s1_512_hi(eh, el);\n          var c1_lo = s1_512_lo(eh, el);\n          var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n          var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n          var c3_hi = this.k[i];\n          var c3_lo = this.k[i + 1];\n          var c4_hi = W[i];\n          var c4_lo = W[i + 1];\n          var T1_hi = sum64_5_hi(\n            c0_hi,\n            c0_lo,\n            c1_hi,\n            c1_lo,\n            c2_hi,\n            c2_lo,\n            c3_hi,\n            c3_lo,\n            c4_hi,\n            c4_lo\n          );\n          var T1_lo = sum64_5_lo(\n            c0_hi,\n            c0_lo,\n            c1_hi,\n            c1_lo,\n            c2_hi,\n            c2_lo,\n            c3_hi,\n            c3_lo,\n            c4_hi,\n            c4_lo\n          );\n          c0_hi = s0_512_hi(ah, al);\n          c0_lo = s0_512_lo(ah, al);\n          c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n          c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n          var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n          var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n          hh = gh;\n          hl = gl;\n          gh = fh;\n          gl = fl;\n          fh = eh;\n          fl = el;\n          eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n          el = sum64_lo(dl, dl, T1_hi, T1_lo);\n          dh = ch;\n          dl = cl;\n          ch = bh;\n          cl = bl;\n          bh = ah;\n          bl = al;\n          ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n          al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n        }\n        sum64(this.h, 0, ah, al);\n        sum64(this.h, 2, bh, bl);\n        sum64(this.h, 4, ch, cl);\n        sum64(this.h, 6, dh, dl);\n        sum64(this.h, 8, eh, el);\n        sum64(this.h, 10, fh, fl);\n        sum64(this.h, 12, gh, gl);\n        sum64(this.h, 14, hh, hl);\n      };\n      SHA5122.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h, \"big\");\n        else\n          return utils.split32(this.h, \"big\");\n      };\n      function ch64_hi(xh, xl, yh, yl, zh) {\n        var r = xh & yh ^ ~xh & zh;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function ch64_lo(xh, xl, yh, yl, zh, zl) {\n        var r = xl & yl ^ ~xl & zl;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function maj64_hi(xh, xl, yh, yl, zh) {\n        var r = xh & yh ^ xh & zh ^ yh & zh;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function maj64_lo(xh, xl, yh, yl, zh, zl) {\n        var r = xl & yl ^ xl & zl ^ yl & zl;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function s0_512_hi(xh, xl) {\n        var c0_hi = rotr64_hi(xh, xl, 28);\n        var c1_hi = rotr64_hi(xl, xh, 2);\n        var c2_hi = rotr64_hi(xl, xh, 7);\n        var r = c0_hi ^ c1_hi ^ c2_hi;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function s0_512_lo(xh, xl) {\n        var c0_lo = rotr64_lo(xh, xl, 28);\n        var c1_lo = rotr64_lo(xl, xh, 2);\n        var c2_lo = rotr64_lo(xl, xh, 7);\n        var r = c0_lo ^ c1_lo ^ c2_lo;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function s1_512_hi(xh, xl) {\n        var c0_hi = rotr64_hi(xh, xl, 14);\n        var c1_hi = rotr64_hi(xh, xl, 18);\n        var c2_hi = rotr64_hi(xl, xh, 9);\n        var r = c0_hi ^ c1_hi ^ c2_hi;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function s1_512_lo(xh, xl) {\n        var c0_lo = rotr64_lo(xh, xl, 14);\n        var c1_lo = rotr64_lo(xh, xl, 18);\n        var c2_lo = rotr64_lo(xl, xh, 9);\n        var r = c0_lo ^ c1_lo ^ c2_lo;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function g0_512_hi(xh, xl) {\n        var c0_hi = rotr64_hi(xh, xl, 1);\n        var c1_hi = rotr64_hi(xh, xl, 8);\n        var c2_hi = shr64_hi(xh, xl, 7);\n        var r = c0_hi ^ c1_hi ^ c2_hi;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function g0_512_lo(xh, xl) {\n        var c0_lo = rotr64_lo(xh, xl, 1);\n        var c1_lo = rotr64_lo(xh, xl, 8);\n        var c2_lo = shr64_lo(xh, xl, 7);\n        var r = c0_lo ^ c1_lo ^ c2_lo;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function g1_512_hi(xh, xl) {\n        var c0_hi = rotr64_hi(xh, xl, 19);\n        var c1_hi = rotr64_hi(xl, xh, 29);\n        var c2_hi = shr64_hi(xh, xl, 6);\n        var r = c0_hi ^ c1_hi ^ c2_hi;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n      function g1_512_lo(xh, xl) {\n        var c0_lo = rotr64_lo(xh, xl, 19);\n        var c1_lo = rotr64_lo(xl, xh, 29);\n        var c2_lo = shr64_lo(xh, xl, 6);\n        var r = c0_lo ^ c1_lo ^ c2_lo;\n        if (r < 0)\n          r += 4294967296;\n        return r;\n      }\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/384.js\n  var require__5 = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/384.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var SHA5122 = require__4();\n      function SHA384() {\n        if (!(this instanceof SHA384))\n          return new SHA384();\n        SHA5122.call(this);\n        this.h = [\n          3418070365,\n          3238371032,\n          1654270250,\n          914150663,\n          2438529370,\n          812702999,\n          355462360,\n          4144912697,\n          1731405415,\n          4290775857,\n          2394180231,\n          1750603025,\n          3675008525,\n          1694076839,\n          1203062813,\n          3204075428\n        ];\n      }\n      utils.inherits(SHA384, SHA5122);\n      module.exports = SHA384;\n      SHA384.blockSize = 1024;\n      SHA384.outSize = 384;\n      SHA384.hmacStrength = 192;\n      SHA384.padLength = 128;\n      SHA384.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h.slice(0, 12), \"big\");\n        else\n          return utils.split32(this.h.slice(0, 12), \"big\");\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha.js\n  var require_sha = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      exports3.sha1 = require__();\n      exports3.sha224 = require__3();\n      exports3.sha256 = require__2();\n      exports3.sha384 = require__5();\n      exports3.sha512 = require__4();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/ripemd.js\n  var require_ripemd = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/ripemd.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var common = require_common();\n      var rotl32 = utils.rotl32;\n      var sum32 = utils.sum32;\n      var sum32_3 = utils.sum32_3;\n      var sum32_4 = utils.sum32_4;\n      var BlockHash = common.BlockHash;\n      function RIPEMD160() {\n        if (!(this instanceof RIPEMD160))\n          return new RIPEMD160();\n        BlockHash.call(this);\n        this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n        this.endian = \"little\";\n      }\n      utils.inherits(RIPEMD160, BlockHash);\n      exports3.ripemd160 = RIPEMD160;\n      RIPEMD160.blockSize = 512;\n      RIPEMD160.outSize = 160;\n      RIPEMD160.hmacStrength = 192;\n      RIPEMD160.padLength = 64;\n      RIPEMD160.prototype._update = function update(msg, start) {\n        var A = this.h[0];\n        var B = this.h[1];\n        var C = this.h[2];\n        var D = this.h[3];\n        var E = this.h[4];\n        var Ah = A;\n        var Bh = B;\n        var Ch = C;\n        var Dh = D;\n        var Eh = E;\n        for (var j = 0; j < 80; j++) {\n          var T = sum32(\n            rotl32(\n              sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n              s[j]\n            ),\n            E\n          );\n          A = E;\n          E = D;\n          D = rotl32(C, 10);\n          C = B;\n          B = T;\n          T = sum32(\n            rotl32(\n              sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n              sh[j]\n            ),\n            Eh\n          );\n          Ah = Eh;\n          Eh = Dh;\n          Dh = rotl32(Ch, 10);\n          Ch = Bh;\n          Bh = T;\n        }\n        T = sum32_3(this.h[1], C, Dh);\n        this.h[1] = sum32_3(this.h[2], D, Eh);\n        this.h[2] = sum32_3(this.h[3], E, Ah);\n        this.h[3] = sum32_3(this.h[4], A, Bh);\n        this.h[4] = sum32_3(this.h[0], B, Ch);\n        this.h[0] = T;\n      };\n      RIPEMD160.prototype._digest = function digest(enc) {\n        if (enc === \"hex\")\n          return utils.toHex32(this.h, \"little\");\n        else\n          return utils.split32(this.h, \"little\");\n      };\n      function f(j, x, y, z) {\n        if (j <= 15)\n          return x ^ y ^ z;\n        else if (j <= 31)\n          return x & y | ~x & z;\n        else if (j <= 47)\n          return (x | ~y) ^ z;\n        else if (j <= 63)\n          return x & z | y & ~z;\n        else\n          return x ^ (y | ~z);\n      }\n      function K(j) {\n        if (j <= 15)\n          return 0;\n        else if (j <= 31)\n          return 1518500249;\n        else if (j <= 47)\n          return 1859775393;\n        else if (j <= 63)\n          return 2400959708;\n        else\n          return 2840853838;\n      }\n      function Kh(j) {\n        if (j <= 15)\n          return 1352829926;\n        else if (j <= 31)\n          return 1548603684;\n        else if (j <= 47)\n          return 1836072691;\n        else if (j <= 63)\n          return 2053994217;\n        else\n          return 0;\n      }\n      var r = [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        7,\n        4,\n        13,\n        1,\n        10,\n        6,\n        15,\n        3,\n        12,\n        0,\n        9,\n        5,\n        2,\n        14,\n        11,\n        8,\n        3,\n        10,\n        14,\n        4,\n        9,\n        15,\n        8,\n        1,\n        2,\n        7,\n        0,\n        6,\n        13,\n        11,\n        5,\n        12,\n        1,\n        9,\n        11,\n        10,\n        0,\n        8,\n        12,\n        4,\n        13,\n        3,\n        7,\n        15,\n        14,\n        5,\n        6,\n        2,\n        4,\n        0,\n        5,\n        9,\n        7,\n        12,\n        2,\n        10,\n        14,\n        1,\n        3,\n        8,\n        11,\n        6,\n        15,\n        13\n      ];\n      var rh = [\n        5,\n        14,\n        7,\n        0,\n        9,\n        2,\n        11,\n        4,\n        13,\n        6,\n        15,\n        8,\n        1,\n        10,\n        3,\n        12,\n        6,\n        11,\n        3,\n        7,\n        0,\n        13,\n        5,\n        10,\n        14,\n        15,\n        8,\n        12,\n        4,\n        9,\n        1,\n        2,\n        15,\n        5,\n        1,\n        3,\n        7,\n        14,\n        6,\n        9,\n        11,\n        8,\n        12,\n        2,\n        10,\n        0,\n        4,\n        13,\n        8,\n        6,\n        4,\n        1,\n        3,\n        11,\n        15,\n        0,\n        5,\n        12,\n        2,\n        13,\n        9,\n        7,\n        10,\n        14,\n        12,\n        15,\n        10,\n        4,\n        1,\n        5,\n        8,\n        7,\n        6,\n        2,\n        13,\n        14,\n        0,\n        3,\n        9,\n        11\n      ];\n      var s = [\n        11,\n        14,\n        15,\n        12,\n        5,\n        8,\n        7,\n        9,\n        11,\n        13,\n        14,\n        15,\n        6,\n        7,\n        9,\n        8,\n        7,\n        6,\n        8,\n        13,\n        11,\n        9,\n        7,\n        15,\n        7,\n        12,\n        15,\n        9,\n        11,\n        7,\n        13,\n        12,\n        11,\n        13,\n        6,\n        7,\n        14,\n        9,\n        13,\n        15,\n        14,\n        8,\n        13,\n        6,\n        5,\n        12,\n        7,\n        5,\n        11,\n        12,\n        14,\n        15,\n        14,\n        15,\n        9,\n        8,\n        9,\n        14,\n        5,\n        6,\n        8,\n        6,\n        5,\n        12,\n        9,\n        15,\n        5,\n        11,\n        6,\n        8,\n        13,\n        12,\n        5,\n        12,\n        13,\n        14,\n        11,\n        8,\n        5,\n        6\n      ];\n      var sh = [\n        8,\n        9,\n        9,\n        11,\n        13,\n        15,\n        15,\n        5,\n        7,\n        7,\n        8,\n        11,\n        14,\n        14,\n        12,\n        6,\n        9,\n        13,\n        15,\n        7,\n        12,\n        8,\n        9,\n        11,\n        7,\n        7,\n        12,\n        7,\n        6,\n        15,\n        13,\n        11,\n        9,\n        7,\n        15,\n        11,\n        8,\n        6,\n        6,\n        14,\n        12,\n        13,\n        5,\n        14,\n        13,\n        13,\n        7,\n        5,\n        15,\n        5,\n        8,\n        11,\n        14,\n        14,\n        6,\n        14,\n        6,\n        9,\n        12,\n        9,\n        12,\n        5,\n        15,\n        8,\n        8,\n        5,\n        12,\n        9,\n        12,\n        5,\n        14,\n        6,\n        8,\n        13,\n        6,\n        5,\n        15,\n        13,\n        11,\n        11\n      ];\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/hmac.js\n  var require_hmac = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/hmac.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils3();\n      var assert3 = require_minimalistic_assert();\n      function Hmac(hash2, key, enc) {\n        if (!(this instanceof Hmac))\n          return new Hmac(hash2, key, enc);\n        this.Hash = hash2;\n        this.blockSize = hash2.blockSize / 8;\n        this.outSize = hash2.outSize / 8;\n        this.inner = null;\n        this.outer = null;\n        this._init(utils.toArray(key, enc));\n      }\n      module.exports = Hmac;\n      Hmac.prototype._init = function init2(key) {\n        if (key.length > this.blockSize)\n          key = new this.Hash().update(key).digest();\n        assert3(key.length <= this.blockSize);\n        for (var i = key.length; i < this.blockSize; i++)\n          key.push(0);\n        for (i = 0; i < key.length; i++)\n          key[i] ^= 54;\n        this.inner = new this.Hash().update(key);\n        for (i = 0; i < key.length; i++)\n          key[i] ^= 106;\n        this.outer = new this.Hash().update(key);\n      };\n      Hmac.prototype.update = function update(msg, enc) {\n        this.inner.update(msg, enc);\n        return this;\n      };\n      Hmac.prototype.digest = function digest(enc) {\n        this.outer.update(this.inner.digest());\n        return this.outer.digest(enc);\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js\n  var require_hash = __commonJS({\n    \"../../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var hash2 = exports3;\n      hash2.utils = require_utils3();\n      hash2.common = require_common();\n      hash2.sha = require_sha();\n      hash2.ripemd = require_ripemd();\n      hash2.hmac = require_hmac();\n      hash2.sha1 = hash2.sha.sha1;\n      hash2.sha256 = hash2.sha.sha256;\n      hash2.sha224 = hash2.sha.sha224;\n      hash2.sha384 = hash2.sha.sha384;\n      hash2.sha512 = hash2.sha.sha512;\n      hash2.ripemd160 = hash2.ripemd.ripemd160;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\n  var require_secp256k1 = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      module.exports = {\n        doubles: {\n          step: 4,\n          points: [\n            [\n              \"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\n              \"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"\n            ],\n            [\n              \"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\n              \"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"\n            ],\n            [\n              \"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\n              \"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"\n            ],\n            [\n              \"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\n              \"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"\n            ],\n            [\n              \"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\n              \"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"\n            ],\n            [\n              \"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\n              \"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"\n            ],\n            [\n              \"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\n              \"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"\n            ],\n            [\n              \"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\n              \"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"\n            ],\n            [\n              \"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\n              \"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"\n            ],\n            [\n              \"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\n              \"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"\n            ],\n            [\n              \"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\n              \"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"\n            ],\n            [\n              \"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\n              \"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"\n            ],\n            [\n              \"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\n              \"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"\n            ],\n            [\n              \"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\n              \"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"\n            ],\n            [\n              \"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\n              \"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"\n            ],\n            [\n              \"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\n              \"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"\n            ],\n            [\n              \"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\n              \"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"\n            ],\n            [\n              \"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\n              \"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"\n            ],\n            [\n              \"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\n              \"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"\n            ],\n            [\n              \"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\n              \"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"\n            ],\n            [\n              \"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\n              \"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"\n            ],\n            [\n              \"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\n              \"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"\n            ],\n            [\n              \"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\n              \"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"\n            ],\n            [\n              \"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\n              \"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"\n            ],\n            [\n              \"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\n              \"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"\n            ],\n            [\n              \"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\n              \"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"\n            ],\n            [\n              \"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\n              \"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"\n            ],\n            [\n              \"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\n              \"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"\n            ],\n            [\n              \"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\n              \"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"\n            ],\n            [\n              \"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\n              \"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"\n            ],\n            [\n              \"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\n              \"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"\n            ],\n            [\n              \"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\n              \"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"\n            ],\n            [\n              \"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\n              \"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"\n            ],\n            [\n              \"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\n              \"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"\n            ],\n            [\n              \"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\n              \"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"\n            ],\n            [\n              \"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\n              \"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"\n            ],\n            [\n              \"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\n              \"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"\n            ],\n            [\n              \"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\n              \"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"\n            ],\n            [\n              \"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\n              \"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"\n            ],\n            [\n              \"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\n              \"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"\n            ],\n            [\n              \"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\n              \"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"\n            ],\n            [\n              \"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\n              \"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"\n            ],\n            [\n              \"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\n              \"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"\n            ],\n            [\n              \"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\n              \"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"\n            ],\n            [\n              \"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\n              \"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"\n            ],\n            [\n              \"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\n              \"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"\n            ],\n            [\n              \"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\n              \"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"\n            ],\n            [\n              \"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\n              \"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"\n            ],\n            [\n              \"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\n              \"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"\n            ],\n            [\n              \"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\n              \"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"\n            ],\n            [\n              \"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\n              \"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"\n            ],\n            [\n              \"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\n              \"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"\n            ],\n            [\n              \"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\n              \"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"\n            ],\n            [\n              \"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\n              \"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"\n            ],\n            [\n              \"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\n              \"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"\n            ],\n            [\n              \"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\n              \"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"\n            ],\n            [\n              \"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\n              \"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"\n            ],\n            [\n              \"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\n              \"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"\n            ],\n            [\n              \"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\n              \"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"\n            ],\n            [\n              \"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\n              \"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"\n            ],\n            [\n              \"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\n              \"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"\n            ],\n            [\n              \"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\n              \"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"\n            ],\n            [\n              \"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\n              \"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"\n            ],\n            [\n              \"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\n              \"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"\n            ],\n            [\n              \"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\n              \"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"\n            ]\n          ]\n        },\n        naf: {\n          wnd: 7,\n          points: [\n            [\n              \"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\n              \"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"\n            ],\n            [\n              \"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\n              \"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"\n            ],\n            [\n              \"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\n              \"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"\n            ],\n            [\n              \"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\n              \"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"\n            ],\n            [\n              \"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\n              \"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"\n            ],\n            [\n              \"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\n              \"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"\n            ],\n            [\n              \"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\n              \"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"\n            ],\n            [\n              \"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\n              \"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"\n            ],\n            [\n              \"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\n              \"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"\n            ],\n            [\n              \"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\n              \"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"\n            ],\n            [\n              \"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\n              \"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"\n            ],\n            [\n              \"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\n              \"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"\n            ],\n            [\n              \"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\n              \"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"\n            ],\n            [\n              \"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\n              \"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"\n            ],\n            [\n              \"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\n              \"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"\n            ],\n            [\n              \"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\n              \"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"\n            ],\n            [\n              \"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\n              \"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"\n            ],\n            [\n              \"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\n              \"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"\n            ],\n            [\n              \"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\n              \"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"\n            ],\n            [\n              \"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\n              \"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"\n            ],\n            [\n              \"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\n              \"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"\n            ],\n            [\n              \"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\n              \"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"\n            ],\n            [\n              \"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\n              \"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"\n            ],\n            [\n              \"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\n              \"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"\n            ],\n            [\n              \"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\n              \"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"\n            ],\n            [\n              \"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\n              \"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"\n            ],\n            [\n              \"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\n              \"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"\n            ],\n            [\n              \"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\n              \"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"\n            ],\n            [\n              \"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\n              \"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"\n            ],\n            [\n              \"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\n              \"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"\n            ],\n            [\n              \"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\n              \"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"\n            ],\n            [\n              \"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\n              \"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"\n            ],\n            [\n              \"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\n              \"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"\n            ],\n            [\n              \"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\n              \"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"\n            ],\n            [\n              \"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\n              \"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"\n            ],\n            [\n              \"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\n              \"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"\n            ],\n            [\n              \"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\n              \"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"\n            ],\n            [\n              \"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\n              \"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"\n            ],\n            [\n              \"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\n              \"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"\n            ],\n            [\n              \"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\n              \"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"\n            ],\n            [\n              \"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\n              \"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"\n            ],\n            [\n              \"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\n              \"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"\n            ],\n            [\n              \"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\n              \"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"\n            ],\n            [\n              \"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\n              \"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"\n            ],\n            [\n              \"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\n              \"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"\n            ],\n            [\n              \"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\n              \"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"\n            ],\n            [\n              \"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\n              \"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"\n            ],\n            [\n              \"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\n              \"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"\n            ],\n            [\n              \"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\n              \"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"\n            ],\n            [\n              \"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\n              \"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"\n            ],\n            [\n              \"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\n              \"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"\n            ],\n            [\n              \"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\n              \"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"\n            ],\n            [\n              \"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\n              \"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"\n            ],\n            [\n              \"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\n              \"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"\n            ],\n            [\n              \"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\n              \"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"\n            ],\n            [\n              \"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\n              \"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"\n            ],\n            [\n              \"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\n              \"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"\n            ],\n            [\n              \"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\n              \"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"\n            ],\n            [\n              \"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\n              \"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"\n            ],\n            [\n              \"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\n              \"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"\n            ],\n            [\n              \"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\n              \"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"\n            ],\n            [\n              \"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\n              \"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"\n            ],\n            [\n              \"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\n              \"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"\n            ],\n            [\n              \"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\n              \"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"\n            ],\n            [\n              \"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\n              \"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"\n            ],\n            [\n              \"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\n              \"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"\n            ],\n            [\n              \"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\n              \"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"\n            ],\n            [\n              \"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\n              \"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"\n            ],\n            [\n              \"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\n              \"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"\n            ],\n            [\n              \"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\n              \"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"\n            ],\n            [\n              \"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\n              \"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"\n            ],\n            [\n              \"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\n              \"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"\n            ],\n            [\n              \"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\n              \"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"\n            ],\n            [\n              \"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\n              \"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"\n            ],\n            [\n              \"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\n              \"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"\n            ],\n            [\n              \"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\n              \"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"\n            ],\n            [\n              \"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\n              \"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"\n            ],\n            [\n              \"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\n              \"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"\n            ],\n            [\n              \"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\n              \"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"\n            ],\n            [\n              \"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\n              \"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"\n            ],\n            [\n              \"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\n              \"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"\n            ],\n            [\n              \"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\n              \"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"\n            ],\n            [\n              \"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\n              \"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"\n            ],\n            [\n              \"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\n              \"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"\n            ],\n            [\n              \"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\n              \"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"\n            ],\n            [\n              \"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\n              \"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"\n            ],\n            [\n              \"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\n              \"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"\n            ],\n            [\n              \"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\n              \"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"\n            ],\n            [\n              \"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\n              \"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"\n            ],\n            [\n              \"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\n              \"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"\n            ],\n            [\n              \"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\n              \"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"\n            ],\n            [\n              \"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\n              \"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"\n            ],\n            [\n              \"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\n              \"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"\n            ],\n            [\n              \"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\n              \"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"\n            ],\n            [\n              \"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\n              \"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"\n            ],\n            [\n              \"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\n              \"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"\n            ],\n            [\n              \"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\n              \"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"\n            ],\n            [\n              \"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\n              \"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"\n            ],\n            [\n              \"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\n              \"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"\n            ],\n            [\n              \"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\n              \"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"\n            ],\n            [\n              \"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\n              \"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"\n            ],\n            [\n              \"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\n              \"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"\n            ],\n            [\n              \"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\n              \"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"\n            ],\n            [\n              \"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\n              \"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"\n            ],\n            [\n              \"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\n              \"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"\n            ],\n            [\n              \"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\n              \"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"\n            ],\n            [\n              \"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\n              \"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"\n            ],\n            [\n              \"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\n              \"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"\n            ],\n            [\n              \"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\n              \"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"\n            ],\n            [\n              \"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\n              \"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"\n            ],\n            [\n              \"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\n              \"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"\n            ],\n            [\n              \"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\n              \"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"\n            ],\n            [\n              \"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\n              \"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"\n            ],\n            [\n              \"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\n              \"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"\n            ],\n            [\n              \"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\n              \"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"\n            ],\n            [\n              \"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\n              \"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"\n            ],\n            [\n              \"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\n              \"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"\n            ],\n            [\n              \"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\n              \"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"\n            ],\n            [\n              \"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\n              \"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"\n            ],\n            [\n              \"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\n              \"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"\n            ],\n            [\n              \"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\n              \"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"\n            ],\n            [\n              \"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\n              \"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"\n            ],\n            [\n              \"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\n              \"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"\n            ],\n            [\n              \"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\n              \"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"\n            ],\n            [\n              \"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\n              \"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"\n            ],\n            [\n              \"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\n              \"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"\n            ],\n            [\n              \"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\n              \"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"\n            ]\n          ]\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curves.js\n  var require_curves = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curves.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var curves = exports3;\n      var hash2 = require_hash();\n      var curve = require_curve();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      function PresetCurve(options) {\n        if (options.type === \"short\")\n          this.curve = new curve.short(options);\n        else if (options.type === \"edwards\")\n          this.curve = new curve.edwards(options);\n        else\n          this.curve = new curve.mont(options);\n        this.g = this.curve.g;\n        this.n = this.curve.n;\n        this.hash = options.hash;\n        assert3(this.g.validate(), \"Invalid curve\");\n        assert3(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n      }\n      curves.PresetCurve = PresetCurve;\n      function defineCurve(name, options) {\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            var curve2 = new PresetCurve(options);\n            Object.defineProperty(curves, name, {\n              configurable: true,\n              enumerable: true,\n              value: curve2\n            });\n            return curve2;\n          }\n        });\n      }\n      defineCurve(\"p192\", {\n        type: \"short\",\n        prime: \"p192\",\n        p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n        b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n        n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n        hash: hash2.sha256,\n        gRed: false,\n        g: [\n          \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n          \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n        ]\n      });\n      defineCurve(\"p224\", {\n        type: \"short\",\n        prime: \"p224\",\n        p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n        b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n        n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n        hash: hash2.sha256,\n        gRed: false,\n        g: [\n          \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n          \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n        ]\n      });\n      defineCurve(\"p256\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n        a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n        b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n        n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n        hash: hash2.sha256,\n        gRed: false,\n        g: [\n          \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n          \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n        ]\n      });\n      defineCurve(\"p384\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n        a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n        b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n        n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n        hash: hash2.sha384,\n        gRed: false,\n        g: [\n          \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n          \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n        ]\n      });\n      defineCurve(\"p521\", {\n        type: \"short\",\n        prime: null,\n        p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n        a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n        b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n        n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n        hash: hash2.sha512,\n        gRed: false,\n        g: [\n          \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n          \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n        ]\n      });\n      defineCurve(\"curve25519\", {\n        type: \"mont\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"76d06\",\n        b: \"1\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: hash2.sha256,\n        gRed: false,\n        g: [\n          \"9\"\n        ]\n      });\n      defineCurve(\"ed25519\", {\n        type: \"edwards\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"-1\",\n        c: \"1\",\n        // -121665 * (121666^(-1)) (mod P)\n        d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: hash2.sha256,\n        gRed: false,\n        g: [\n          \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n          // 4/5\n          \"6666666666666666666666666666666666666666666666666666666666666658\"\n        ]\n      });\n      var pre;\n      try {\n        pre = require_secp256k1();\n      } catch (e) {\n        pre = void 0;\n      }\n      defineCurve(\"secp256k1\", {\n        type: \"short\",\n        prime: \"k256\",\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n        a: \"0\",\n        b: \"7\",\n        n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n        h: \"1\",\n        hash: hash2.sha256,\n        // Precomputed endomorphism\n        beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n        lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n        basis: [\n          {\n            a: \"3086d221a7d46bcde86c90e49284eb15\",\n            b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n          },\n          {\n            a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n            b: \"3086d221a7d46bcde86c90e49284eb15\"\n          }\n        ],\n        gRed: false,\n        g: [\n          \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n          \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n          pre\n        ]\n      });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/hmac-drbg@1.0.1/node_modules/hmac-drbg/lib/hmac-drbg.js\n  var require_hmac_drbg = __commonJS({\n    \"../../../node_modules/.pnpm/hmac-drbg@1.0.1/node_modules/hmac-drbg/lib/hmac-drbg.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var hash2 = require_hash();\n      var utils = require_utils();\n      var assert3 = require_minimalistic_assert();\n      function HmacDRBG(options) {\n        if (!(this instanceof HmacDRBG))\n          return new HmacDRBG(options);\n        this.hash = options.hash;\n        this.predResist = !!options.predResist;\n        this.outLen = this.hash.outSize;\n        this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n        this._reseed = null;\n        this.reseedInterval = null;\n        this.K = null;\n        this.V = null;\n        var entropy = utils.toArray(options.entropy, options.entropyEnc || \"hex\");\n        var nonce = utils.toArray(options.nonce, options.nonceEnc || \"hex\");\n        var pers = utils.toArray(options.pers, options.persEnc || \"hex\");\n        assert3(\n          entropy.length >= this.minEntropy / 8,\n          \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n        );\n        this._init(entropy, nonce, pers);\n      }\n      module.exports = HmacDRBG;\n      HmacDRBG.prototype._init = function init2(entropy, nonce, pers) {\n        var seed = entropy.concat(nonce).concat(pers);\n        this.K = new Array(this.outLen / 8);\n        this.V = new Array(this.outLen / 8);\n        for (var i = 0; i < this.V.length; i++) {\n          this.K[i] = 0;\n          this.V[i] = 1;\n        }\n        this._update(seed);\n        this._reseed = 1;\n        this.reseedInterval = 281474976710656;\n      };\n      HmacDRBG.prototype._hmac = function hmac2() {\n        return new hash2.hmac(this.hash, this.K);\n      };\n      HmacDRBG.prototype._update = function update(seed) {\n        var kmac = this._hmac().update(this.V).update([0]);\n        if (seed)\n          kmac = kmac.update(seed);\n        this.K = kmac.digest();\n        this.V = this._hmac().update(this.V).digest();\n        if (!seed)\n          return;\n        this.K = this._hmac().update(this.V).update([1]).update(seed).digest();\n        this.V = this._hmac().update(this.V).digest();\n      };\n      HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add2, addEnc) {\n        if (typeof entropyEnc !== \"string\") {\n          addEnc = add2;\n          add2 = entropyEnc;\n          entropyEnc = null;\n        }\n        entropy = utils.toArray(entropy, entropyEnc);\n        add2 = utils.toArray(add2, addEnc);\n        assert3(\n          entropy.length >= this.minEntropy / 8,\n          \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n        );\n        this._update(entropy.concat(add2 || []));\n        this._reseed = 1;\n      };\n      HmacDRBG.prototype.generate = function generate(len, enc, add2, addEnc) {\n        if (this._reseed > this.reseedInterval)\n          throw new Error(\"Reseed is required\");\n        if (typeof enc !== \"string\") {\n          addEnc = add2;\n          add2 = enc;\n          enc = null;\n        }\n        if (add2) {\n          add2 = utils.toArray(add2, addEnc || \"hex\");\n          this._update(add2);\n        }\n        var temp = [];\n        while (temp.length < len) {\n          this.V = this._hmac().update(this.V).digest();\n          temp = temp.concat(this.V);\n        }\n        var res = temp.slice(0, len);\n        this._update(add2);\n        this._reseed++;\n        return utils.encode(res, enc);\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/key.js\n  var require_key = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/key.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      function KeyPair(ec, options) {\n        this.ec = ec;\n        this.priv = null;\n        this.pub = null;\n        if (options.priv)\n          this._importPrivate(options.priv, options.privEnc);\n        if (options.pub)\n          this._importPublic(options.pub, options.pubEnc);\n      }\n      module.exports = KeyPair;\n      KeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n        if (pub instanceof KeyPair)\n          return pub;\n        return new KeyPair(ec, {\n          pub,\n          pubEnc: enc\n        });\n      };\n      KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n        if (priv instanceof KeyPair)\n          return priv;\n        return new KeyPair(ec, {\n          priv,\n          privEnc: enc\n        });\n      };\n      KeyPair.prototype.validate = function validate() {\n        var pub = this.getPublic();\n        if (pub.isInfinity())\n          return { result: false, reason: \"Invalid public key\" };\n        if (!pub.validate())\n          return { result: false, reason: \"Public key is not a point\" };\n        if (!pub.mul(this.ec.curve.n).isInfinity())\n          return { result: false, reason: \"Public key * N != O\" };\n        return { result: true, reason: null };\n      };\n      KeyPair.prototype.getPublic = function getPublic(compact, enc) {\n        if (typeof compact === \"string\") {\n          enc = compact;\n          compact = null;\n        }\n        if (!this.pub)\n          this.pub = this.ec.g.mul(this.priv);\n        if (!enc)\n          return this.pub;\n        return this.pub.encode(enc, compact);\n      };\n      KeyPair.prototype.getPrivate = function getPrivate(enc) {\n        if (enc === \"hex\")\n          return this.priv.toString(16, 2);\n        else\n          return this.priv;\n      };\n      KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n        this.priv = new BN(key, enc || 16);\n        this.priv = this.priv.umod(this.ec.curve.n);\n      };\n      KeyPair.prototype._importPublic = function _importPublic(key, enc) {\n        if (key.x || key.y) {\n          if (this.ec.curve.type === \"mont\") {\n            assert3(key.x, \"Need x coordinate\");\n          } else if (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") {\n            assert3(key.x && key.y, \"Need both x and y coordinate\");\n          }\n          this.pub = this.ec.curve.point(key.x, key.y);\n          return;\n        }\n        this.pub = this.ec.curve.decodePoint(key, enc);\n      };\n      KeyPair.prototype.derive = function derive(pub) {\n        if (!pub.validate()) {\n          assert3(pub.validate(), \"public point not validated\");\n        }\n        return pub.mul(this.priv).getX();\n      };\n      KeyPair.prototype.sign = function sign(msg, enc, options) {\n        return this.ec.sign(msg, this, enc, options);\n      };\n      KeyPair.prototype.verify = function verify(msg, signature, options) {\n        return this.ec.verify(msg, signature, this, void 0, options);\n      };\n      KeyPair.prototype.inspect = function inspect() {\n        return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/signature.js\n  var require_signature = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/signature.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      function Signature2(options, enc) {\n        if (options instanceof Signature2)\n          return options;\n        if (this._importDER(options, enc))\n          return;\n        assert3(options.r && options.s, \"Signature without r or s\");\n        this.r = new BN(options.r, 16);\n        this.s = new BN(options.s, 16);\n        if (options.recoveryParam === void 0)\n          this.recoveryParam = null;\n        else\n          this.recoveryParam = options.recoveryParam;\n      }\n      module.exports = Signature2;\n      function Position() {\n        this.place = 0;\n      }\n      function getLength(buf, p) {\n        var initial = buf[p.place++];\n        if (!(initial & 128)) {\n          return initial;\n        }\n        var octetLen = initial & 15;\n        if (octetLen === 0 || octetLen > 4) {\n          return false;\n        }\n        if (buf[p.place] === 0) {\n          return false;\n        }\n        var val = 0;\n        for (var i = 0, off2 = p.place; i < octetLen; i++, off2++) {\n          val <<= 8;\n          val |= buf[off2];\n          val >>>= 0;\n        }\n        if (val <= 127) {\n          return false;\n        }\n        p.place = off2;\n        return val;\n      }\n      function rmPadding(buf) {\n        var i = 0;\n        var len = buf.length - 1;\n        while (!buf[i] && !(buf[i + 1] & 128) && i < len) {\n          i++;\n        }\n        if (i === 0) {\n          return buf;\n        }\n        return buf.slice(i);\n      }\n      Signature2.prototype._importDER = function _importDER(data, enc) {\n        data = utils.toArray(data, enc);\n        var p = new Position();\n        if (data[p.place++] !== 48) {\n          return false;\n        }\n        var len = getLength(data, p);\n        if (len === false) {\n          return false;\n        }\n        if (len + p.place !== data.length) {\n          return false;\n        }\n        if (data[p.place++] !== 2) {\n          return false;\n        }\n        var rlen = getLength(data, p);\n        if (rlen === false) {\n          return false;\n        }\n        if ((data[p.place] & 128) !== 0) {\n          return false;\n        }\n        var r = data.slice(p.place, rlen + p.place);\n        p.place += rlen;\n        if (data[p.place++] !== 2) {\n          return false;\n        }\n        var slen = getLength(data, p);\n        if (slen === false) {\n          return false;\n        }\n        if (data.length !== slen + p.place) {\n          return false;\n        }\n        if ((data[p.place] & 128) !== 0) {\n          return false;\n        }\n        var s = data.slice(p.place, slen + p.place);\n        if (r[0] === 0) {\n          if (r[1] & 128) {\n            r = r.slice(1);\n          } else {\n            return false;\n          }\n        }\n        if (s[0] === 0) {\n          if (s[1] & 128) {\n            s = s.slice(1);\n          } else {\n            return false;\n          }\n        }\n        this.r = new BN(r);\n        this.s = new BN(s);\n        this.recoveryParam = null;\n        return true;\n      };\n      function constructLength(arr, len) {\n        if (len < 128) {\n          arr.push(len);\n          return;\n        }\n        var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n        arr.push(octets | 128);\n        while (--octets) {\n          arr.push(len >>> (octets << 3) & 255);\n        }\n        arr.push(len);\n      }\n      Signature2.prototype.toDER = function toDER(enc) {\n        var r = this.r.toArray();\n        var s = this.s.toArray();\n        if (r[0] & 128)\n          r = [0].concat(r);\n        if (s[0] & 128)\n          s = [0].concat(s);\n        r = rmPadding(r);\n        s = rmPadding(s);\n        while (!s[0] && !(s[1] & 128)) {\n          s = s.slice(1);\n        }\n        var arr = [2];\n        constructLength(arr, r.length);\n        arr = arr.concat(r);\n        arr.push(2);\n        constructLength(arr, s.length);\n        var backHalf = arr.concat(s);\n        var res = [48];\n        constructLength(res, backHalf.length);\n        res = res.concat(backHalf);\n        return utils.encode(res, enc);\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/index.js\n  var require_ec = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var HmacDRBG = require_hmac_drbg();\n      var utils = require_utils2();\n      var curves = require_curves();\n      var rand = require_brorand();\n      var assert3 = utils.assert;\n      var KeyPair = require_key();\n      var Signature2 = require_signature();\n      function EC(options) {\n        if (!(this instanceof EC))\n          return new EC(options);\n        if (typeof options === \"string\") {\n          assert3(\n            Object.prototype.hasOwnProperty.call(curves, options),\n            \"Unknown curve \" + options\n          );\n          options = curves[options];\n        }\n        if (options instanceof curves.PresetCurve)\n          options = { curve: options };\n        this.curve = options.curve.curve;\n        this.n = this.curve.n;\n        this.nh = this.n.ushrn(1);\n        this.g = this.curve.g;\n        this.g = options.curve.g;\n        this.g.precompute(options.curve.n.bitLength() + 1);\n        this.hash = options.hash || options.curve.hash;\n      }\n      module.exports = EC;\n      EC.prototype.keyPair = function keyPair(options) {\n        return new KeyPair(this, options);\n      };\n      EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n        return KeyPair.fromPrivate(this, priv, enc);\n      };\n      EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n        return KeyPair.fromPublic(this, pub, enc);\n      };\n      EC.prototype.genKeyPair = function genKeyPair(options) {\n        if (!options)\n          options = {};\n        var drbg = new HmacDRBG({\n          hash: this.hash,\n          pers: options.pers,\n          persEnc: options.persEnc || \"utf8\",\n          entropy: options.entropy || rand(this.hash.hmacStrength),\n          entropyEnc: options.entropy && options.entropyEnc || \"utf8\",\n          nonce: this.n.toArray()\n        });\n        var bytes2 = this.n.byteLength();\n        var ns2 = this.n.sub(new BN(2));\n        for (; ; ) {\n          var priv = new BN(drbg.generate(bytes2));\n          if (priv.cmp(ns2) > 0)\n            continue;\n          priv.iaddn(1);\n          return this.keyFromPrivate(priv);\n        }\n      };\n      EC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n        var byteLength;\n        if (BN.isBN(msg) || typeof msg === \"number\") {\n          msg = new BN(msg, 16);\n          byteLength = msg.byteLength();\n        } else if (typeof msg === \"object\") {\n          byteLength = msg.length;\n          msg = new BN(msg, 16);\n        } else {\n          var str = msg.toString();\n          byteLength = str.length + 1 >>> 1;\n          msg = new BN(str, 16);\n        }\n        if (typeof bitLength !== \"number\") {\n          bitLength = byteLength * 8;\n        }\n        var delta = bitLength - this.n.bitLength();\n        if (delta > 0)\n          msg = msg.ushrn(delta);\n        if (!truncOnly && msg.cmp(this.n) >= 0)\n          return msg.sub(this.n);\n        else\n          return msg;\n      };\n      EC.prototype.sign = function sign(msg, key, enc, options) {\n        if (typeof enc === \"object\") {\n          options = enc;\n          enc = null;\n        }\n        if (!options)\n          options = {};\n        if (typeof msg !== \"string\" && typeof msg !== \"number\" && !BN.isBN(msg)) {\n          assert3(\n            typeof msg === \"object\" && msg && typeof msg.length === \"number\",\n            \"Expected message to be an array-like, a hex string, or a BN instance\"\n          );\n          assert3(msg.length >>> 0 === msg.length);\n          for (var i = 0; i < msg.length; i++)\n            assert3((msg[i] & 255) === msg[i]);\n        }\n        key = this.keyFromPrivate(key, enc);\n        msg = this._truncateToN(msg, false, options.msgBitLength);\n        assert3(!msg.isNeg(), \"Can not sign a negative message\");\n        var bytes2 = this.n.byteLength();\n        var bkey = key.getPrivate().toArray(\"be\", bytes2);\n        var nonce = msg.toArray(\"be\", bytes2);\n        assert3(new BN(nonce).eq(msg), \"Can not sign message\");\n        var drbg = new HmacDRBG({\n          hash: this.hash,\n          entropy: bkey,\n          nonce,\n          pers: options.pers,\n          persEnc: options.persEnc || \"utf8\"\n        });\n        var ns1 = this.n.sub(new BN(1));\n        for (var iter = 0; ; iter++) {\n          var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n          k = this._truncateToN(k, true);\n          if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n            continue;\n          var kp = this.g.mul(k);\n          if (kp.isInfinity())\n            continue;\n          var kpX = kp.getX();\n          var r = kpX.umod(this.n);\n          if (r.cmpn(0) === 0)\n            continue;\n          var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n          s = s.umod(this.n);\n          if (s.cmpn(0) === 0)\n            continue;\n          var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n          if (options.canonical && s.cmp(this.nh) > 0) {\n            s = this.n.sub(s);\n            recoveryParam ^= 1;\n          }\n          return new Signature2({ r, s, recoveryParam });\n        }\n      };\n      EC.prototype.verify = function verify(msg, signature, key, enc, options) {\n        if (!options)\n          options = {};\n        msg = this._truncateToN(msg, false, options.msgBitLength);\n        key = this.keyFromPublic(key, enc);\n        signature = new Signature2(signature, \"hex\");\n        var r = signature.r;\n        var s = signature.s;\n        if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n          return false;\n        if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n          return false;\n        var sinv = s.invm(this.n);\n        var u1 = sinv.mul(msg).umod(this.n);\n        var u2 = sinv.mul(r).umod(this.n);\n        var p;\n        if (!this.curve._maxwellTrick) {\n          p = this.g.mulAdd(u1, key.getPublic(), u2);\n          if (p.isInfinity())\n            return false;\n          return p.getX().umod(this.n).cmp(r) === 0;\n        }\n        p = this.g.jmulAdd(u1, key.getPublic(), u2);\n        if (p.isInfinity())\n          return false;\n        return p.eqXToP(r);\n      };\n      EC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n        assert3((3 & j) === j, \"The recovery param is more than two bits\");\n        signature = new Signature2(signature, enc);\n        var n2 = this.n;\n        var e = new BN(msg);\n        var r = signature.r;\n        var s = signature.s;\n        var isYOdd = j & 1;\n        var isSecondKey = j >> 1;\n        if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n          throw new Error(\"Unable to find sencond key candinate\");\n        if (isSecondKey)\n          r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n        else\n          r = this.curve.pointFromX(r, isYOdd);\n        var rInv = signature.r.invm(n2);\n        var s1 = n2.sub(e).mul(rInv).umod(n2);\n        var s2 = s.mul(rInv).umod(n2);\n        return this.g.mulAdd(s1, r, s2);\n      };\n      EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n        signature = new Signature2(signature, enc);\n        if (signature.recoveryParam !== null)\n          return signature.recoveryParam;\n        for (var i = 0; i < 4; i++) {\n          var Qprime;\n          try {\n            Qprime = this.recoverPubKey(e, signature, i);\n          } catch (e2) {\n            continue;\n          }\n          if (Qprime.eq(Q))\n            return i;\n        }\n        throw new Error(\"Unable to find valid recovery factor\");\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/key.js\n  var require_key2 = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/key.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      var parseBytes = utils.parseBytes;\n      var cachedProperty = utils.cachedProperty;\n      function KeyPair(eddsa, params) {\n        this.eddsa = eddsa;\n        this._secret = parseBytes(params.secret);\n        if (eddsa.isPoint(params.pub))\n          this._pub = params.pub;\n        else\n          this._pubBytes = parseBytes(params.pub);\n      }\n      KeyPair.fromPublic = function fromPublic(eddsa, pub) {\n        if (pub instanceof KeyPair)\n          return pub;\n        return new KeyPair(eddsa, { pub });\n      };\n      KeyPair.fromSecret = function fromSecret(eddsa, secret) {\n        if (secret instanceof KeyPair)\n          return secret;\n        return new KeyPair(eddsa, { secret });\n      };\n      KeyPair.prototype.secret = function secret() {\n        return this._secret;\n      };\n      cachedProperty(KeyPair, \"pubBytes\", function pubBytes() {\n        return this.eddsa.encodePoint(this.pub());\n      });\n      cachedProperty(KeyPair, \"pub\", function pub() {\n        if (this._pubBytes)\n          return this.eddsa.decodePoint(this._pubBytes);\n        return this.eddsa.g.mul(this.priv());\n      });\n      cachedProperty(KeyPair, \"privBytes\", function privBytes() {\n        var eddsa = this.eddsa;\n        var hash2 = this.hash();\n        var lastIx = eddsa.encodingLength - 1;\n        var a = hash2.slice(0, eddsa.encodingLength);\n        a[0] &= 248;\n        a[lastIx] &= 127;\n        a[lastIx] |= 64;\n        return a;\n      });\n      cachedProperty(KeyPair, \"priv\", function priv() {\n        return this.eddsa.decodeInt(this.privBytes());\n      });\n      cachedProperty(KeyPair, \"hash\", function hash2() {\n        return this.eddsa.hash().update(this.secret()).digest();\n      });\n      cachedProperty(KeyPair, \"messagePrefix\", function messagePrefix() {\n        return this.hash().slice(this.eddsa.encodingLength);\n      });\n      KeyPair.prototype.sign = function sign(message) {\n        assert3(this._secret, \"KeyPair can only verify\");\n        return this.eddsa.sign(message, this);\n      };\n      KeyPair.prototype.verify = function verify(message, sig) {\n        return this.eddsa.verify(message, sig, this);\n      };\n      KeyPair.prototype.getSecret = function getSecret(enc) {\n        assert3(this._secret, \"KeyPair is public only\");\n        return utils.encode(this.secret(), enc);\n      };\n      KeyPair.prototype.getPublic = function getPublic(enc) {\n        return utils.encode(this.pubBytes(), enc);\n      };\n      module.exports = KeyPair;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/signature.js\n  var require_signature2 = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/signature.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var BN = require_bn2();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      var cachedProperty = utils.cachedProperty;\n      var parseBytes = utils.parseBytes;\n      function Signature2(eddsa, sig) {\n        this.eddsa = eddsa;\n        if (typeof sig !== \"object\")\n          sig = parseBytes(sig);\n        if (Array.isArray(sig)) {\n          assert3(sig.length === eddsa.encodingLength * 2, \"Signature has invalid size\");\n          sig = {\n            R: sig.slice(0, eddsa.encodingLength),\n            S: sig.slice(eddsa.encodingLength)\n          };\n        }\n        assert3(sig.R && sig.S, \"Signature without R or S\");\n        if (eddsa.isPoint(sig.R))\n          this._R = sig.R;\n        if (sig.S instanceof BN)\n          this._S = sig.S;\n        this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n        this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n      }\n      cachedProperty(Signature2, \"S\", function S() {\n        return this.eddsa.decodeInt(this.Sencoded());\n      });\n      cachedProperty(Signature2, \"R\", function R() {\n        return this.eddsa.decodePoint(this.Rencoded());\n      });\n      cachedProperty(Signature2, \"Rencoded\", function Rencoded() {\n        return this.eddsa.encodePoint(this.R());\n      });\n      cachedProperty(Signature2, \"Sencoded\", function Sencoded() {\n        return this.eddsa.encodeInt(this.S());\n      });\n      Signature2.prototype.toBytes = function toBytes2() {\n        return this.Rencoded().concat(this.Sencoded());\n      };\n      Signature2.prototype.toHex = function toHex() {\n        return utils.encode(this.toBytes(), \"hex\").toUpperCase();\n      };\n      module.exports = Signature2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/index.js\n  var require_eddsa = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var hash2 = require_hash();\n      var curves = require_curves();\n      var utils = require_utils2();\n      var assert3 = utils.assert;\n      var parseBytes = utils.parseBytes;\n      var KeyPair = require_key2();\n      var Signature2 = require_signature2();\n      function EDDSA(curve) {\n        assert3(curve === \"ed25519\", \"only tested with ed25519 so far\");\n        if (!(this instanceof EDDSA))\n          return new EDDSA(curve);\n        curve = curves[curve].curve;\n        this.curve = curve;\n        this.g = curve.g;\n        this.g.precompute(curve.n.bitLength() + 1);\n        this.pointClass = curve.point().constructor;\n        this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n        this.hash = hash2.sha512;\n      }\n      module.exports = EDDSA;\n      EDDSA.prototype.sign = function sign(message, secret) {\n        message = parseBytes(message);\n        var key = this.keyFromSecret(secret);\n        var r = this.hashInt(key.messagePrefix(), message);\n        var R = this.g.mul(r);\n        var Rencoded = this.encodePoint(R);\n        var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());\n        var S = r.add(s_).umod(this.curve.n);\n        return this.makeSignature({ R, S, Rencoded });\n      };\n      EDDSA.prototype.verify = function verify(message, sig, pub) {\n        message = parseBytes(message);\n        sig = this.makeSignature(sig);\n        if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n          return false;\n        }\n        var key = this.keyFromPublic(pub);\n        var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n        var SG = this.g.mul(sig.S());\n        var RplusAh = sig.R().add(key.pub().mul(h));\n        return RplusAh.eq(SG);\n      };\n      EDDSA.prototype.hashInt = function hashInt() {\n        var hash3 = this.hash();\n        for (var i = 0; i < arguments.length; i++)\n          hash3.update(arguments[i]);\n        return utils.intFromLE(hash3.digest()).umod(this.curve.n);\n      };\n      EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n        return KeyPair.fromPublic(this, pub);\n      };\n      EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n        return KeyPair.fromSecret(this, secret);\n      };\n      EDDSA.prototype.makeSignature = function makeSignature(sig) {\n        if (sig instanceof Signature2)\n          return sig;\n        return new Signature2(this, sig);\n      };\n      EDDSA.prototype.encodePoint = function encodePoint(point) {\n        var enc = point.getY().toArray(\"le\", this.encodingLength);\n        enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;\n        return enc;\n      };\n      EDDSA.prototype.decodePoint = function decodePoint(bytes2) {\n        bytes2 = utils.parseBytes(bytes2);\n        var lastIx = bytes2.length - 1;\n        var normed = bytes2.slice(0, lastIx).concat(bytes2[lastIx] & ~128);\n        var xIsOdd = (bytes2[lastIx] & 128) !== 0;\n        var y = utils.intFromLE(normed);\n        return this.curve.pointFromY(y, xIsOdd);\n      };\n      EDDSA.prototype.encodeInt = function encodeInt(num) {\n        return num.toArray(\"le\", this.encodingLength);\n      };\n      EDDSA.prototype.decodeInt = function decodeInt(bytes2) {\n        return utils.intFromLE(bytes2);\n      };\n      EDDSA.prototype.isPoint = function isPoint(val) {\n        return val instanceof this.pointClass;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic.js\n  var require_elliptic = __commonJS({\n    \"../../../node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var elliptic = exports3;\n      elliptic.version = require_package().version;\n      elliptic.utils = require_utils2();\n      elliptic.rand = require_brorand();\n      elliptic.curve = require_curve();\n      elliptic.curves = require_curves();\n      elliptic.ec = require_ec();\n      elliptic.eddsa = require_eddsa();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/elliptic.js\n  var require_elliptic2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/elliptic.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.EC = void 0;\n      var elliptic_1 = __importDefault2(require_elliptic());\n      var EC = elliptic_1.default.ec;\n      exports3.EC = EC;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/_version.js\n  var require_version12 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"signing-key/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/index.js\n  var require_lib16 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+signing-key@5.8.0/node_modules/@ethersproject/signing-key/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.computePublicKey = exports3.recoverPublicKey = exports3.SigningKey = void 0;\n      var elliptic_1 = require_elliptic2();\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version12();\n      var logger = new logger_1.Logger(_version_1.version);\n      var _curve = null;\n      function getCurve() {\n        if (!_curve) {\n          _curve = new elliptic_1.EC(\"secp256k1\");\n        }\n        return _curve;\n      }\n      var SigningKey2 = (\n        /** @class */\n        function() {\n          function SigningKey3(privateKey) {\n            (0, properties_1.defineReadOnly)(this, \"curve\", \"secp256k1\");\n            (0, properties_1.defineReadOnly)(this, \"privateKey\", (0, bytes_1.hexlify)(privateKey));\n            if ((0, bytes_1.hexDataLength)(this.privateKey) !== 32) {\n              logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n            }\n            var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n            (0, properties_1.defineReadOnly)(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n            (0, properties_1.defineReadOnly)(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n            (0, properties_1.defineReadOnly)(this, \"_isSigningKey\", true);\n          }\n          SigningKey3.prototype._addPoint = function(other) {\n            var p0 = getCurve().keyFromPublic((0, bytes_1.arrayify)(this.publicKey));\n            var p1 = getCurve().keyFromPublic((0, bytes_1.arrayify)(other));\n            return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n          };\n          SigningKey3.prototype.signDigest = function(digest) {\n            var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n            var digestBytes = (0, bytes_1.arrayify)(digest);\n            if (digestBytes.length !== 32) {\n              logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n            }\n            var signature = keyPair.sign(digestBytes, { canonical: true });\n            return (0, bytes_1.splitSignature)({\n              recoveryParam: signature.recoveryParam,\n              r: (0, bytes_1.hexZeroPad)(\"0x\" + signature.r.toString(16), 32),\n              s: (0, bytes_1.hexZeroPad)(\"0x\" + signature.s.toString(16), 32)\n            });\n          };\n          SigningKey3.prototype.computeSharedSecret = function(otherKey) {\n            var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n            var otherKeyPair = getCurve().keyFromPublic((0, bytes_1.arrayify)(computePublicKey(otherKey)));\n            return (0, bytes_1.hexZeroPad)(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n          };\n          SigningKey3.isSigningKey = function(value) {\n            return !!(value && value._isSigningKey);\n          };\n          return SigningKey3;\n        }()\n      );\n      exports3.SigningKey = SigningKey2;\n      function recoverPublicKey(digest, signature) {\n        var sig = (0, bytes_1.splitSignature)(signature);\n        var rs = { r: (0, bytes_1.arrayify)(sig.r), s: (0, bytes_1.arrayify)(sig.s) };\n        return \"0x\" + getCurve().recoverPubKey((0, bytes_1.arrayify)(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n      }\n      exports3.recoverPublicKey = recoverPublicKey;\n      function computePublicKey(key, compressed) {\n        var bytes2 = (0, bytes_1.arrayify)(key);\n        if (bytes2.length === 32) {\n          var signingKey = new SigningKey2(bytes2);\n          if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes2).getPublic(true, \"hex\");\n          }\n          return signingKey.publicKey;\n        } else if (bytes2.length === 33) {\n          if (compressed) {\n            return (0, bytes_1.hexlify)(bytes2);\n          }\n          return \"0x\" + getCurve().keyFromPublic(bytes2).getPublic(false, \"hex\");\n        } else if (bytes2.length === 65) {\n          if (!compressed) {\n            return (0, bytes_1.hexlify)(bytes2);\n          }\n          return \"0x\" + getCurve().keyFromPublic(bytes2).getPublic(true, \"hex\");\n        }\n        return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n      }\n      exports3.computePublicKey = computePublicKey;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+transactions@5.8.0/node_modules/@ethersproject/transactions/lib/_version.js\n  var require_version13 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+transactions@5.8.0/node_modules/@ethersproject/transactions/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"transactions/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+transactions@5.8.0/node_modules/@ethersproject/transactions/lib/index.js\n  var require_lib17 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+transactions@5.8.0/node_modules/@ethersproject/transactions/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function() {\n          return m[k];\n        } });\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __setModuleDefault2 = exports3 && exports3.__setModuleDefault || (Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      });\n      var __importStar2 = exports3 && exports3.__importStar || function(mod2) {\n        if (mod2 && mod2.__esModule)\n          return mod2;\n        var result = {};\n        if (mod2 != null) {\n          for (var k in mod2)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod2, k))\n              __createBinding2(result, mod2, k);\n        }\n        __setModuleDefault2(result, mod2);\n        return result;\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.parse = exports3.serialize = exports3.accessListify = exports3.recoverAddress = exports3.computeAddress = exports3.TransactionTypes = void 0;\n      var address_1 = require_lib7();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var constants_1 = require_lib8();\n      var keccak256_1 = require_lib5();\n      var properties_1 = require_lib4();\n      var RLP = __importStar2(require_lib6());\n      var signing_key_1 = require_lib16();\n      var logger_1 = require_lib();\n      var _version_1 = require_version13();\n      var logger = new logger_1.Logger(_version_1.version);\n      var TransactionTypes;\n      (function(TransactionTypes2) {\n        TransactionTypes2[TransactionTypes2[\"legacy\"] = 0] = \"legacy\";\n        TransactionTypes2[TransactionTypes2[\"eip2930\"] = 1] = \"eip2930\";\n        TransactionTypes2[TransactionTypes2[\"eip1559\"] = 2] = \"eip1559\";\n      })(TransactionTypes = exports3.TransactionTypes || (exports3.TransactionTypes = {}));\n      function handleAddress2(value) {\n        if (value === \"0x\") {\n          return null;\n        }\n        return (0, address_1.getAddress)(value);\n      }\n      function handleNumber2(value) {\n        if (value === \"0x\") {\n          return constants_1.Zero;\n        }\n        return bignumber_1.BigNumber.from(value);\n      }\n      var transactionFields = [\n        { name: \"nonce\", maxLength: 32, numeric: true },\n        { name: \"gasPrice\", maxLength: 32, numeric: true },\n        { name: \"gasLimit\", maxLength: 32, numeric: true },\n        { name: \"to\", length: 20 },\n        { name: \"value\", maxLength: 32, numeric: true },\n        { name: \"data\" }\n      ];\n      var allowedTransactionKeys = {\n        chainId: true,\n        data: true,\n        gasLimit: true,\n        gasPrice: true,\n        nonce: true,\n        to: true,\n        type: true,\n        value: true\n      };\n      function computeAddress2(key) {\n        var publicKey = (0, signing_key_1.computePublicKey)(key);\n        return (0, address_1.getAddress)((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, bytes_1.hexDataSlice)(publicKey, 1)), 12));\n      }\n      exports3.computeAddress = computeAddress2;\n      function recoverAddress2(digest, signature) {\n        return computeAddress2((0, signing_key_1.recoverPublicKey)((0, bytes_1.arrayify)(digest), signature));\n      }\n      exports3.recoverAddress = recoverAddress2;\n      function formatNumber2(value, name) {\n        var result = (0, bytes_1.stripZeros)(bignumber_1.BigNumber.from(value).toHexString());\n        if (result.length > 32) {\n          logger.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\n        }\n        return result;\n      }\n      function accessSetify2(addr, storageKeys) {\n        return {\n          address: (0, address_1.getAddress)(addr),\n          storageKeys: (storageKeys || []).map(function(storageKey, index) {\n            if ((0, bytes_1.hexDataLength)(storageKey) !== 32) {\n              logger.throwArgumentError(\"invalid access list storageKey\", \"accessList[\" + addr + \":\" + index + \"]\", storageKey);\n            }\n            return storageKey.toLowerCase();\n          })\n        };\n      }\n      function accessListify2(value) {\n        if (Array.isArray(value)) {\n          return value.map(function(set, index) {\n            if (Array.isArray(set)) {\n              if (set.length > 2) {\n                logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", \"value[\" + index + \"]\", set);\n              }\n              return accessSetify2(set[0], set[1]);\n            }\n            return accessSetify2(set.address, set.storageKeys);\n          });\n        }\n        var result = Object.keys(value).map(function(addr) {\n          var storageKeys = value[addr].reduce(function(accum, storageKey) {\n            accum[storageKey] = true;\n            return accum;\n          }, {});\n          return accessSetify2(addr, Object.keys(storageKeys).sort());\n        });\n        result.sort(function(a, b2) {\n          return a.address.localeCompare(b2.address);\n        });\n        return result;\n      }\n      exports3.accessListify = accessListify2;\n      function formatAccessList2(value) {\n        return accessListify2(value).map(function(set) {\n          return [set.address, set.storageKeys];\n        });\n      }\n      function _serializeEip15592(transaction, signature) {\n        if (transaction.gasPrice != null) {\n          var gasPrice = bignumber_1.BigNumber.from(transaction.gasPrice);\n          var maxFeePerGas = bignumber_1.BigNumber.from(transaction.maxFeePerGas || 0);\n          if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n              gasPrice,\n              maxFeePerGas\n            });\n          }\n        }\n        var fields = [\n          formatNumber2(transaction.chainId || 0, \"chainId\"),\n          formatNumber2(transaction.nonce || 0, \"nonce\"),\n          formatNumber2(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n          formatNumber2(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n          formatNumber2(transaction.gasLimit || 0, \"gasLimit\"),\n          transaction.to != null ? (0, address_1.getAddress)(transaction.to) : \"0x\",\n          formatNumber2(transaction.value || 0, \"value\"),\n          transaction.data || \"0x\",\n          formatAccessList2(transaction.accessList || [])\n        ];\n        if (signature) {\n          var sig = (0, bytes_1.splitSignature)(signature);\n          fields.push(formatNumber2(sig.recoveryParam, \"recoveryParam\"));\n          fields.push((0, bytes_1.stripZeros)(sig.r));\n          fields.push((0, bytes_1.stripZeros)(sig.s));\n        }\n        return (0, bytes_1.hexConcat)([\"0x02\", RLP.encode(fields)]);\n      }\n      function _serializeEip29302(transaction, signature) {\n        var fields = [\n          formatNumber2(transaction.chainId || 0, \"chainId\"),\n          formatNumber2(transaction.nonce || 0, \"nonce\"),\n          formatNumber2(transaction.gasPrice || 0, \"gasPrice\"),\n          formatNumber2(transaction.gasLimit || 0, \"gasLimit\"),\n          transaction.to != null ? (0, address_1.getAddress)(transaction.to) : \"0x\",\n          formatNumber2(transaction.value || 0, \"value\"),\n          transaction.data || \"0x\",\n          formatAccessList2(transaction.accessList || [])\n        ];\n        if (signature) {\n          var sig = (0, bytes_1.splitSignature)(signature);\n          fields.push(formatNumber2(sig.recoveryParam, \"recoveryParam\"));\n          fields.push((0, bytes_1.stripZeros)(sig.r));\n          fields.push((0, bytes_1.stripZeros)(sig.s));\n        }\n        return (0, bytes_1.hexConcat)([\"0x01\", RLP.encode(fields)]);\n      }\n      function _serialize(transaction, signature) {\n        (0, properties_1.checkProperties)(transaction, allowedTransactionKeys);\n        var raw = [];\n        transactionFields.forEach(function(fieldInfo) {\n          var value = transaction[fieldInfo.name] || [];\n          var options = {};\n          if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n          }\n          value = (0, bytes_1.arrayify)((0, bytes_1.hexlify)(value, options));\n          if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n          }\n          if (fieldInfo.maxLength) {\n            value = (0, bytes_1.stripZeros)(value);\n            if (value.length > fieldInfo.maxLength) {\n              logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n            }\n          }\n          raw.push((0, bytes_1.hexlify)(value));\n        });\n        var chainId = 0;\n        if (transaction.chainId != null) {\n          chainId = transaction.chainId;\n          if (typeof chainId !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n          }\n        } else if (signature && !(0, bytes_1.isBytesLike)(signature) && signature.v > 28) {\n          chainId = Math.floor((signature.v - 35) / 2);\n        }\n        if (chainId !== 0) {\n          raw.push((0, bytes_1.hexlify)(chainId));\n          raw.push(\"0x\");\n          raw.push(\"0x\");\n        }\n        if (!signature) {\n          return RLP.encode(raw);\n        }\n        var sig = (0, bytes_1.splitSignature)(signature);\n        var v = 27 + sig.recoveryParam;\n        if (chainId !== 0) {\n          raw.pop();\n          raw.pop();\n          raw.pop();\n          v += chainId * 2 + 8;\n          if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n          }\n        } else if (sig.v !== v) {\n          logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n        raw.push((0, bytes_1.hexlify)(v));\n        raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.r)));\n        raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.s)));\n        return RLP.encode(raw);\n      }\n      function serialize(transaction, signature) {\n        if (transaction.type == null || transaction.type === 0) {\n          if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n          }\n          return _serialize(transaction, signature);\n        }\n        switch (transaction.type) {\n          case 1:\n            return _serializeEip29302(transaction, signature);\n          case 2:\n            return _serializeEip15592(transaction, signature);\n          default:\n            break;\n        }\n        return logger.throwError(\"unsupported transaction type: \" + transaction.type, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"serializeTransaction\",\n          transactionType: transaction.type\n        });\n      }\n      exports3.serialize = serialize;\n      function _parseEipSignature2(tx, fields, serialize2) {\n        try {\n          var recid = handleNumber2(fields[0]).toNumber();\n          if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n          }\n          tx.v = recid;\n        } catch (error) {\n          logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n        }\n        tx.r = (0, bytes_1.hexZeroPad)(fields[1], 32);\n        tx.s = (0, bytes_1.hexZeroPad)(fields[2], 32);\n        try {\n          var digest = (0, keccak256_1.keccak256)(serialize2(tx));\n          tx.from = recoverAddress2(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n        } catch (error) {\n        }\n      }\n      function _parseEip15592(payload) {\n        var transaction = RLP.decode(payload.slice(1));\n        if (transaction.length !== 9 && transaction.length !== 12) {\n          logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", (0, bytes_1.hexlify)(payload));\n        }\n        var maxPriorityFeePerGas = handleNumber2(transaction[2]);\n        var maxFeePerGas = handleNumber2(transaction[3]);\n        var tx = {\n          type: 2,\n          chainId: handleNumber2(transaction[0]).toNumber(),\n          nonce: handleNumber2(transaction[1]).toNumber(),\n          maxPriorityFeePerGas,\n          maxFeePerGas,\n          gasPrice: null,\n          gasLimit: handleNumber2(transaction[4]),\n          to: handleAddress2(transaction[5]),\n          value: handleNumber2(transaction[6]),\n          data: transaction[7],\n          accessList: accessListify2(transaction[8])\n        };\n        if (transaction.length === 9) {\n          return tx;\n        }\n        tx.hash = (0, keccak256_1.keccak256)(payload);\n        _parseEipSignature2(tx, transaction.slice(9), _serializeEip15592);\n        return tx;\n      }\n      function _parseEip29302(payload) {\n        var transaction = RLP.decode(payload.slice(1));\n        if (transaction.length !== 8 && transaction.length !== 11) {\n          logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", (0, bytes_1.hexlify)(payload));\n        }\n        var tx = {\n          type: 1,\n          chainId: handleNumber2(transaction[0]).toNumber(),\n          nonce: handleNumber2(transaction[1]).toNumber(),\n          gasPrice: handleNumber2(transaction[2]),\n          gasLimit: handleNumber2(transaction[3]),\n          to: handleAddress2(transaction[4]),\n          value: handleNumber2(transaction[5]),\n          data: transaction[6],\n          accessList: accessListify2(transaction[7])\n        };\n        if (transaction.length === 8) {\n          return tx;\n        }\n        tx.hash = (0, keccak256_1.keccak256)(payload);\n        _parseEipSignature2(tx, transaction.slice(8), _serializeEip29302);\n        return tx;\n      }\n      function _parse(rawTransaction) {\n        var transaction = RLP.decode(rawTransaction);\n        if (transaction.length !== 9 && transaction.length !== 6) {\n          logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n        }\n        var tx = {\n          nonce: handleNumber2(transaction[0]).toNumber(),\n          gasPrice: handleNumber2(transaction[1]),\n          gasLimit: handleNumber2(transaction[2]),\n          to: handleAddress2(transaction[3]),\n          value: handleNumber2(transaction[4]),\n          data: transaction[5],\n          chainId: 0\n        };\n        if (transaction.length === 6) {\n          return tx;\n        }\n        try {\n          tx.v = bignumber_1.BigNumber.from(transaction[6]).toNumber();\n        } catch (error) {\n          return tx;\n        }\n        tx.r = (0, bytes_1.hexZeroPad)(transaction[7], 32);\n        tx.s = (0, bytes_1.hexZeroPad)(transaction[8], 32);\n        if (bignumber_1.BigNumber.from(tx.r).isZero() && bignumber_1.BigNumber.from(tx.s).isZero()) {\n          tx.chainId = tx.v;\n          tx.v = 0;\n        } else {\n          tx.chainId = Math.floor((tx.v - 35) / 2);\n          if (tx.chainId < 0) {\n            tx.chainId = 0;\n          }\n          var recoveryParam = tx.v - 27;\n          var raw = transaction.slice(0, 6);\n          if (tx.chainId !== 0) {\n            raw.push((0, bytes_1.hexlify)(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n          }\n          var digest = (0, keccak256_1.keccak256)(RLP.encode(raw));\n          try {\n            tx.from = recoverAddress2(digest, { r: (0, bytes_1.hexlify)(tx.r), s: (0, bytes_1.hexlify)(tx.s), recoveryParam });\n          } catch (error) {\n          }\n          tx.hash = (0, keccak256_1.keccak256)(rawTransaction);\n        }\n        tx.type = null;\n        return tx;\n      }\n      function parse(rawTransaction) {\n        var payload = (0, bytes_1.arrayify)(rawTransaction);\n        if (payload[0] > 127) {\n          return _parse(payload);\n        }\n        switch (payload[0]) {\n          case 1:\n            return _parseEip29302(payload);\n          case 2:\n            return _parseEip15592(payload);\n          default:\n            break;\n        }\n        return logger.throwError(\"unsupported transaction type: \" + payload[0], logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"parseTransaction\",\n          transactionType: payload[0]\n        });\n      }\n      exports3.parse = parse;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+contracts@5.8.0/node_modules/@ethersproject/contracts/lib/_version.js\n  var require_version14 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+contracts@5.8.0/node_modules/@ethersproject/contracts/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"contracts/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+contracts@5.8.0/node_modules/@ethersproject/contracts/lib/index.js\n  var require_lib18 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+contracts@5.8.0/node_modules/@ethersproject/contracts/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      var __spreadArray2 = exports3 && exports3.__spreadArray || function(to, from, pack2) {\n        if (pack2 || arguments.length === 2)\n          for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n              if (!ar)\n                ar = Array.prototype.slice.call(from, 0, i);\n              ar[i] = from[i];\n            }\n          }\n        return to.concat(ar || Array.prototype.slice.call(from));\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.ContractFactory = exports3.Contract = exports3.BaseContract = void 0;\n      var abi_1 = require_lib13();\n      var abstract_provider_1 = require_lib14();\n      var abstract_signer_1 = require_lib15();\n      var address_1 = require_lib7();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var transactions_1 = require_lib17();\n      var logger_1 = require_lib();\n      var _version_1 = require_version14();\n      var logger = new logger_1.Logger(_version_1.version);\n      var allowedTransactionKeys = {\n        chainId: true,\n        data: true,\n        from: true,\n        gasLimit: true,\n        gasPrice: true,\n        nonce: true,\n        to: true,\n        value: true,\n        type: true,\n        accessList: true,\n        maxFeePerGas: true,\n        maxPriorityFeePerGas: true,\n        customData: true,\n        ccipReadEnabled: true\n      };\n      function resolveName(resolver, nameOrPromise) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var name, address;\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                return [4, nameOrPromise];\n              case 1:\n                name = _a.sent();\n                if (typeof name !== \"string\") {\n                  logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n                }\n                try {\n                  return [2, (0, address_1.getAddress)(name)];\n                } catch (error) {\n                }\n                if (!resolver) {\n                  logger.throwError(\"a provider or signer is needed to resolve ENS names\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\"\n                  });\n                }\n                return [4, resolver.resolveName(name)];\n              case 2:\n                address = _a.sent();\n                if (address == null) {\n                  logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n                }\n                return [2, address];\n            }\n          });\n        });\n      }\n      function resolveAddresses(resolver, value, paramType) {\n        return __awaiter2(this, void 0, void 0, function() {\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                if (!Array.isArray(paramType))\n                  return [3, 2];\n                return [4, Promise.all(paramType.map(function(paramType2, index) {\n                  return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType2.name], paramType2);\n                }))];\n              case 1:\n                return [2, _a.sent()];\n              case 2:\n                if (!(paramType.type === \"address\"))\n                  return [3, 4];\n                return [4, resolveName(resolver, value)];\n              case 3:\n                return [2, _a.sent()];\n              case 4:\n                if (!(paramType.type === \"tuple\"))\n                  return [3, 6];\n                return [4, resolveAddresses(resolver, value, paramType.components)];\n              case 5:\n                return [2, _a.sent()];\n              case 6:\n                if (!(paramType.baseType === \"array\"))\n                  return [3, 8];\n                if (!Array.isArray(value)) {\n                  return [2, Promise.reject(logger.makeError(\"invalid value for array\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                  }))];\n                }\n                return [4, Promise.all(value.map(function(v) {\n                  return resolveAddresses(resolver, v, paramType.arrayChildren);\n                }))];\n              case 7:\n                return [2, _a.sent()];\n              case 8:\n                return [2, value];\n            }\n          });\n        });\n      }\n      function populateTransaction(contract, fragment, args) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var overrides, resolved, data, tx, ro, intrinsic, bytes2, i, roValue, leftovers;\n          var _this = this;\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                overrides = {};\n                if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n                  overrides = (0, properties_1.shallowCopy)(args.pop());\n                }\n                logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n                if (contract.signer) {\n                  if (overrides.from) {\n                    overrides.from = (0, properties_1.resolveProperties)({\n                      override: resolveName(contract.signer, overrides.from),\n                      signer: contract.signer.getAddress()\n                    }).then(function(check) {\n                      return __awaiter2(_this, void 0, void 0, function() {\n                        return __generator2(this, function(_a2) {\n                          if ((0, address_1.getAddress)(check.signer) !== check.override) {\n                            logger.throwError(\"Contract with a Signer cannot override from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                              operation: \"overrides.from\"\n                            });\n                          }\n                          return [2, check.override];\n                        });\n                      });\n                    });\n                  } else {\n                    overrides.from = contract.signer.getAddress();\n                  }\n                } else if (overrides.from) {\n                  overrides.from = resolveName(contract.provider, overrides.from);\n                }\n                return [4, (0, properties_1.resolveProperties)({\n                  args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n                  address: contract.resolvedAddress,\n                  overrides: (0, properties_1.resolveProperties)(overrides) || {}\n                })];\n              case 1:\n                resolved = _a.sent();\n                data = contract.interface.encodeFunctionData(fragment, resolved.args);\n                tx = {\n                  data,\n                  to: resolved.address\n                };\n                ro = resolved.overrides;\n                if (ro.nonce != null) {\n                  tx.nonce = bignumber_1.BigNumber.from(ro.nonce).toNumber();\n                }\n                if (ro.gasLimit != null) {\n                  tx.gasLimit = bignumber_1.BigNumber.from(ro.gasLimit);\n                }\n                if (ro.gasPrice != null) {\n                  tx.gasPrice = bignumber_1.BigNumber.from(ro.gasPrice);\n                }\n                if (ro.maxFeePerGas != null) {\n                  tx.maxFeePerGas = bignumber_1.BigNumber.from(ro.maxFeePerGas);\n                }\n                if (ro.maxPriorityFeePerGas != null) {\n                  tx.maxPriorityFeePerGas = bignumber_1.BigNumber.from(ro.maxPriorityFeePerGas);\n                }\n                if (ro.from != null) {\n                  tx.from = ro.from;\n                }\n                if (ro.type != null) {\n                  tx.type = ro.type;\n                }\n                if (ro.accessList != null) {\n                  tx.accessList = (0, transactions_1.accessListify)(ro.accessList);\n                }\n                if (tx.gasLimit == null && fragment.gas != null) {\n                  intrinsic = 21e3;\n                  bytes2 = (0, bytes_1.arrayify)(data);\n                  for (i = 0; i < bytes2.length; i++) {\n                    intrinsic += 4;\n                    if (bytes2[i]) {\n                      intrinsic += 64;\n                    }\n                  }\n                  tx.gasLimit = bignumber_1.BigNumber.from(fragment.gas).add(intrinsic);\n                }\n                if (ro.value) {\n                  roValue = bignumber_1.BigNumber.from(ro.value);\n                  if (!roValue.isZero() && !fragment.payable) {\n                    logger.throwError(\"non-payable method cannot override value\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                      operation: \"overrides.value\",\n                      value: overrides.value\n                    });\n                  }\n                  tx.value = roValue;\n                }\n                if (ro.customData) {\n                  tx.customData = (0, properties_1.shallowCopy)(ro.customData);\n                }\n                if (ro.ccipReadEnabled) {\n                  tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n                }\n                delete overrides.nonce;\n                delete overrides.gasLimit;\n                delete overrides.gasPrice;\n                delete overrides.from;\n                delete overrides.value;\n                delete overrides.type;\n                delete overrides.accessList;\n                delete overrides.maxFeePerGas;\n                delete overrides.maxPriorityFeePerGas;\n                delete overrides.customData;\n                delete overrides.ccipReadEnabled;\n                leftovers = Object.keys(overrides).filter(function(key) {\n                  return overrides[key] != null;\n                });\n                if (leftovers.length) {\n                  logger.throwError(\"cannot override \" + leftovers.map(function(l) {\n                    return JSON.stringify(l);\n                  }).join(\",\"), logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides\",\n                    overrides: leftovers\n                  });\n                }\n                return [2, tx];\n            }\n          });\n        });\n      }\n      function buildPopulate(contract, fragment) {\n        return function() {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          return populateTransaction(contract, fragment, args);\n        };\n      }\n      function buildEstimate(contract, fragment) {\n        var signerOrProvider = contract.signer || contract.provider;\n        return function() {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          return __awaiter2(this, void 0, void 0, function() {\n            var tx;\n            return __generator2(this, function(_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!signerOrProvider) {\n                    logger.throwError(\"estimate require a provider or signer\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                      operation: \"estimateGas\"\n                    });\n                  }\n                  return [4, populateTransaction(contract, fragment, args)];\n                case 1:\n                  tx = _a.sent();\n                  return [4, signerOrProvider.estimateGas(tx)];\n                case 2:\n                  return [2, _a.sent()];\n              }\n            });\n          });\n        };\n      }\n      function addContractWait(contract, tx) {\n        var wait2 = tx.wait.bind(tx);\n        tx.wait = function(confirmations) {\n          return wait2(confirmations).then(function(receipt) {\n            receipt.events = receipt.logs.map(function(log) {\n              var event = (0, properties_1.deepCopy)(log);\n              var parsed = null;\n              try {\n                parsed = contract.interface.parseLog(log);\n              } catch (e) {\n              }\n              if (parsed) {\n                event.args = parsed.args;\n                event.decode = function(data, topics) {\n                  return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                };\n                event.event = parsed.name;\n                event.eventSignature = parsed.signature;\n              }\n              event.removeListener = function() {\n                return contract.provider;\n              };\n              event.getBlock = function() {\n                return contract.provider.getBlock(receipt.blockHash);\n              };\n              event.getTransaction = function() {\n                return contract.provider.getTransaction(receipt.transactionHash);\n              };\n              event.getTransactionReceipt = function() {\n                return Promise.resolve(receipt);\n              };\n              return event;\n            });\n            return receipt;\n          });\n        };\n      }\n      function buildCall(contract, fragment, collapseSimple) {\n        var signerOrProvider = contract.signer || contract.provider;\n        return function() {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          return __awaiter2(this, void 0, void 0, function() {\n            var blockTag, overrides, tx, result, value;\n            return __generator2(this, function(_a) {\n              switch (_a.label) {\n                case 0:\n                  blockTag = void 0;\n                  if (!(args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\"))\n                    return [3, 3];\n                  overrides = (0, properties_1.shallowCopy)(args.pop());\n                  if (!(overrides.blockTag != null))\n                    return [3, 2];\n                  return [4, overrides.blockTag];\n                case 1:\n                  blockTag = _a.sent();\n                  _a.label = 2;\n                case 2:\n                  delete overrides.blockTag;\n                  args.push(overrides);\n                  _a.label = 3;\n                case 3:\n                  if (!(contract.deployTransaction != null))\n                    return [3, 5];\n                  return [4, contract._deployed(blockTag)];\n                case 4:\n                  _a.sent();\n                  _a.label = 5;\n                case 5:\n                  return [4, populateTransaction(contract, fragment, args)];\n                case 6:\n                  tx = _a.sent();\n                  return [4, signerOrProvider.call(tx, blockTag)];\n                case 7:\n                  result = _a.sent();\n                  try {\n                    value = contract.interface.decodeFunctionResult(fragment, result);\n                    if (collapseSimple && fragment.outputs.length === 1) {\n                      value = value[0];\n                    }\n                    return [2, value];\n                  } catch (error) {\n                    if (error.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                      error.address = contract.address;\n                      error.args = args;\n                      error.transaction = tx;\n                    }\n                    throw error;\n                  }\n                  return [\n                    2\n                    /*return*/\n                  ];\n              }\n            });\n          });\n        };\n      }\n      function buildSend(contract, fragment) {\n        return function() {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          return __awaiter2(this, void 0, void 0, function() {\n            var txRequest, tx;\n            return __generator2(this, function(_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!contract.signer) {\n                    logger.throwError(\"sending a transaction requires a signer\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                      operation: \"sendTransaction\"\n                    });\n                  }\n                  if (!(contract.deployTransaction != null))\n                    return [3, 2];\n                  return [4, contract._deployed()];\n                case 1:\n                  _a.sent();\n                  _a.label = 2;\n                case 2:\n                  return [4, populateTransaction(contract, fragment, args)];\n                case 3:\n                  txRequest = _a.sent();\n                  return [4, contract.signer.sendTransaction(txRequest)];\n                case 4:\n                  tx = _a.sent();\n                  addContractWait(contract, tx);\n                  return [2, tx];\n              }\n            });\n          });\n        };\n      }\n      function buildDefault(contract, fragment, collapseSimple) {\n        if (fragment.constant) {\n          return buildCall(contract, fragment, collapseSimple);\n        }\n        return buildSend(contract, fragment);\n      }\n      function getEventTag(filter) {\n        if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n          return \"*\";\n        }\n        return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map(function(topic) {\n          if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n          }\n          return topic;\n        }).join(\":\") : \"\");\n      }\n      var RunningEvent = (\n        /** @class */\n        function() {\n          function RunningEvent2(tag, filter) {\n            (0, properties_1.defineReadOnly)(this, \"tag\", tag);\n            (0, properties_1.defineReadOnly)(this, \"filter\", filter);\n            this._listeners = [];\n          }\n          RunningEvent2.prototype.addListener = function(listener, once2) {\n            this._listeners.push({ listener, once: once2 });\n          };\n          RunningEvent2.prototype.removeListener = function(listener) {\n            var done = false;\n            this._listeners = this._listeners.filter(function(item) {\n              if (done || item.listener !== listener) {\n                return true;\n              }\n              done = true;\n              return false;\n            });\n          };\n          RunningEvent2.prototype.removeAllListeners = function() {\n            this._listeners = [];\n          };\n          RunningEvent2.prototype.listeners = function() {\n            return this._listeners.map(function(i) {\n              return i.listener;\n            });\n          };\n          RunningEvent2.prototype.listenerCount = function() {\n            return this._listeners.length;\n          };\n          RunningEvent2.prototype.run = function(args) {\n            var _this = this;\n            var listenerCount = this.listenerCount();\n            this._listeners = this._listeners.filter(function(item) {\n              var argsCopy = args.slice();\n              setTimeout(function() {\n                item.listener.apply(_this, argsCopy);\n              }, 0);\n              return !item.once;\n            });\n            return listenerCount;\n          };\n          RunningEvent2.prototype.prepareEvent = function(event) {\n          };\n          RunningEvent2.prototype.getEmit = function(event) {\n            return [event];\n          };\n          return RunningEvent2;\n        }()\n      );\n      var ErrorRunningEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(ErrorRunningEvent2, _super);\n          function ErrorRunningEvent2() {\n            return _super.call(this, \"error\", null) || this;\n          }\n          return ErrorRunningEvent2;\n        }(RunningEvent)\n      );\n      var FragmentRunningEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(FragmentRunningEvent2, _super);\n          function FragmentRunningEvent2(address, contractInterface, fragment, topics) {\n            var _this = this;\n            var filter = {\n              address\n            };\n            var topic = contractInterface.getEventTopic(fragment);\n            if (topics) {\n              if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n              }\n              filter.topics = topics.slice();\n            } else {\n              filter.topics = [topic];\n            }\n            _this = _super.call(this, getEventTag(filter), filter) || this;\n            (0, properties_1.defineReadOnly)(_this, \"address\", address);\n            (0, properties_1.defineReadOnly)(_this, \"interface\", contractInterface);\n            (0, properties_1.defineReadOnly)(_this, \"fragment\", fragment);\n            return _this;\n          }\n          FragmentRunningEvent2.prototype.prepareEvent = function(event) {\n            var _this = this;\n            _super.prototype.prepareEvent.call(this, event);\n            event.event = this.fragment.name;\n            event.eventSignature = this.fragment.format();\n            event.decode = function(data, topics) {\n              return _this.interface.decodeEventLog(_this.fragment, data, topics);\n            };\n            try {\n              event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n            } catch (error) {\n              event.args = null;\n              event.decodeError = error;\n            }\n          };\n          FragmentRunningEvent2.prototype.getEmit = function(event) {\n            var errors = (0, abi_1.checkResultErrors)(event.args);\n            if (errors.length) {\n              throw errors[0].error;\n            }\n            var args = (event.args || []).slice();\n            args.push(event);\n            return args;\n          };\n          return FragmentRunningEvent2;\n        }(RunningEvent)\n      );\n      var WildcardRunningEvent = (\n        /** @class */\n        function(_super) {\n          __extends2(WildcardRunningEvent2, _super);\n          function WildcardRunningEvent2(address, contractInterface) {\n            var _this = _super.call(this, \"*\", { address }) || this;\n            (0, properties_1.defineReadOnly)(_this, \"address\", address);\n            (0, properties_1.defineReadOnly)(_this, \"interface\", contractInterface);\n            return _this;\n          }\n          WildcardRunningEvent2.prototype.prepareEvent = function(event) {\n            var _this = this;\n            _super.prototype.prepareEvent.call(this, event);\n            try {\n              var parsed_1 = this.interface.parseLog(event);\n              event.event = parsed_1.name;\n              event.eventSignature = parsed_1.signature;\n              event.decode = function(data, topics) {\n                return _this.interface.decodeEventLog(parsed_1.eventFragment, data, topics);\n              };\n              event.args = parsed_1.args;\n            } catch (error) {\n            }\n          };\n          return WildcardRunningEvent2;\n        }(RunningEvent)\n      );\n      var BaseContract2 = (\n        /** @class */\n        function() {\n          function BaseContract3(addressOrName, contractInterface, signerOrProvider) {\n            var _newTarget = this.constructor;\n            var _this = this;\n            (0, properties_1.defineReadOnly)(this, \"interface\", (0, properties_1.getStatic)(_newTarget, \"getInterface\")(contractInterface));\n            if (signerOrProvider == null) {\n              (0, properties_1.defineReadOnly)(this, \"provider\", null);\n              (0, properties_1.defineReadOnly)(this, \"signer\", null);\n            } else if (abstract_signer_1.Signer.isSigner(signerOrProvider)) {\n              (0, properties_1.defineReadOnly)(this, \"provider\", signerOrProvider.provider || null);\n              (0, properties_1.defineReadOnly)(this, \"signer\", signerOrProvider);\n            } else if (abstract_provider_1.Provider.isProvider(signerOrProvider)) {\n              (0, properties_1.defineReadOnly)(this, \"provider\", signerOrProvider);\n              (0, properties_1.defineReadOnly)(this, \"signer\", null);\n            } else {\n              logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n            }\n            (0, properties_1.defineReadOnly)(this, \"callStatic\", {});\n            (0, properties_1.defineReadOnly)(this, \"estimateGas\", {});\n            (0, properties_1.defineReadOnly)(this, \"functions\", {});\n            (0, properties_1.defineReadOnly)(this, \"populateTransaction\", {});\n            (0, properties_1.defineReadOnly)(this, \"filters\", {});\n            {\n              var uniqueFilters_1 = {};\n              Object.keys(this.interface.events).forEach(function(eventSignature) {\n                var event = _this.interface.events[eventSignature];\n                (0, properties_1.defineReadOnly)(_this.filters, eventSignature, function() {\n                  var args = [];\n                  for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                  }\n                  return {\n                    address: _this.address,\n                    topics: _this.interface.encodeFilterTopics(event, args)\n                  };\n                });\n                if (!uniqueFilters_1[event.name]) {\n                  uniqueFilters_1[event.name] = [];\n                }\n                uniqueFilters_1[event.name].push(eventSignature);\n              });\n              Object.keys(uniqueFilters_1).forEach(function(name) {\n                var filters = uniqueFilters_1[name];\n                if (filters.length === 1) {\n                  (0, properties_1.defineReadOnly)(_this.filters, name, _this.filters[filters[0]]);\n                } else {\n                  logger.warn(\"Duplicate definition of \" + name + \" (\" + filters.join(\", \") + \")\");\n                }\n              });\n            }\n            (0, properties_1.defineReadOnly)(this, \"_runningEvents\", {});\n            (0, properties_1.defineReadOnly)(this, \"_wrappedEmits\", {});\n            if (addressOrName == null) {\n              logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n            }\n            (0, properties_1.defineReadOnly)(this, \"address\", addressOrName);\n            if (this.provider) {\n              (0, properties_1.defineReadOnly)(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n            } else {\n              try {\n                (0, properties_1.defineReadOnly)(this, \"resolvedAddress\", Promise.resolve((0, address_1.getAddress)(addressOrName)));\n              } catch (error) {\n                logger.throwError(\"provider is required to use ENS name as contract address\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"new Contract\"\n                });\n              }\n            }\n            this.resolvedAddress.catch(function(e) {\n            });\n            var uniqueNames = {};\n            var uniqueSignatures = {};\n            Object.keys(this.interface.functions).forEach(function(signature) {\n              var fragment = _this.interface.functions[signature];\n              if (uniqueSignatures[signature]) {\n                logger.warn(\"Duplicate ABI entry for \" + JSON.stringify(signature));\n                return;\n              }\n              uniqueSignatures[signature] = true;\n              {\n                var name_1 = fragment.name;\n                if (!uniqueNames[\"%\" + name_1]) {\n                  uniqueNames[\"%\" + name_1] = [];\n                }\n                uniqueNames[\"%\" + name_1].push(signature);\n              }\n              if (_this[signature] == null) {\n                (0, properties_1.defineReadOnly)(_this, signature, buildDefault(_this, fragment, true));\n              }\n              if (_this.functions[signature] == null) {\n                (0, properties_1.defineReadOnly)(_this.functions, signature, buildDefault(_this, fragment, false));\n              }\n              if (_this.callStatic[signature] == null) {\n                (0, properties_1.defineReadOnly)(_this.callStatic, signature, buildCall(_this, fragment, true));\n              }\n              if (_this.populateTransaction[signature] == null) {\n                (0, properties_1.defineReadOnly)(_this.populateTransaction, signature, buildPopulate(_this, fragment));\n              }\n              if (_this.estimateGas[signature] == null) {\n                (0, properties_1.defineReadOnly)(_this.estimateGas, signature, buildEstimate(_this, fragment));\n              }\n            });\n            Object.keys(uniqueNames).forEach(function(name) {\n              var signatures = uniqueNames[name];\n              if (signatures.length > 1) {\n                return;\n              }\n              name = name.substring(1);\n              var signature = signatures[0];\n              try {\n                if (_this[name] == null) {\n                  (0, properties_1.defineReadOnly)(_this, name, _this[signature]);\n                }\n              } catch (e) {\n              }\n              if (_this.functions[name] == null) {\n                (0, properties_1.defineReadOnly)(_this.functions, name, _this.functions[signature]);\n              }\n              if (_this.callStatic[name] == null) {\n                (0, properties_1.defineReadOnly)(_this.callStatic, name, _this.callStatic[signature]);\n              }\n              if (_this.populateTransaction[name] == null) {\n                (0, properties_1.defineReadOnly)(_this.populateTransaction, name, _this.populateTransaction[signature]);\n              }\n              if (_this.estimateGas[name] == null) {\n                (0, properties_1.defineReadOnly)(_this.estimateGas, name, _this.estimateGas[signature]);\n              }\n            });\n          }\n          BaseContract3.getContractAddress = function(transaction) {\n            return (0, address_1.getContractAddress)(transaction);\n          };\n          BaseContract3.getInterface = function(contractInterface) {\n            if (abi_1.Interface.isInterface(contractInterface)) {\n              return contractInterface;\n            }\n            return new abi_1.Interface(contractInterface);\n          };\n          BaseContract3.prototype.deployed = function() {\n            return this._deployed();\n          };\n          BaseContract3.prototype._deployed = function(blockTag) {\n            var _this = this;\n            if (!this._deployedPromise) {\n              if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(function() {\n                  return _this;\n                });\n              } else {\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then(function(code) {\n                  if (code === \"0x\") {\n                    logger.throwError(\"contract not deployed\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                      contractAddress: _this.address,\n                      operation: \"getDeployed\"\n                    });\n                  }\n                  return _this;\n                });\n              }\n            }\n            return this._deployedPromise;\n          };\n          BaseContract3.prototype.fallback = function(overrides) {\n            var _this = this;\n            if (!this.signer) {\n              logger.throwError(\"sending a transactions require a signer\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n            }\n            var tx = (0, properties_1.shallowCopy)(overrides || {});\n            [\"from\", \"to\"].forEach(function(key) {\n              if (tx[key] == null) {\n                return;\n              }\n              logger.throwError(\"cannot override \" + key, logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n            });\n            tx.to = this.resolvedAddress;\n            return this.deployed().then(function() {\n              return _this.signer.sendTransaction(tx);\n            });\n          };\n          BaseContract3.prototype.connect = function(signerOrProvider) {\n            if (typeof signerOrProvider === \"string\") {\n              signerOrProvider = new abstract_signer_1.VoidSigner(signerOrProvider, this.provider);\n            }\n            var contract = new this.constructor(this.address, this.interface, signerOrProvider);\n            if (this.deployTransaction) {\n              (0, properties_1.defineReadOnly)(contract, \"deployTransaction\", this.deployTransaction);\n            }\n            return contract;\n          };\n          BaseContract3.prototype.attach = function(addressOrName) {\n            return new this.constructor(addressOrName, this.interface, this.signer || this.provider);\n          };\n          BaseContract3.isIndexed = function(value) {\n            return abi_1.Indexed.isIndexed(value);\n          };\n          BaseContract3.prototype._normalizeRunningEvent = function(runningEvent) {\n            if (this._runningEvents[runningEvent.tag]) {\n              return this._runningEvents[runningEvent.tag];\n            }\n            return runningEvent;\n          };\n          BaseContract3.prototype._getRunningEvent = function(eventName) {\n            if (typeof eventName === \"string\") {\n              if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n              }\n              if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n              }\n              if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n              }\n              var fragment = this.interface.getEvent(eventName);\n              return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n            }\n            if (eventName.topics && eventName.topics.length > 0) {\n              try {\n                var topic = eventName.topics[0];\n                if (typeof topic !== \"string\") {\n                  throw new Error(\"invalid topic\");\n                }\n                var fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n              } catch (error) {\n              }\n              var filter = {\n                address: this.address,\n                topics: eventName.topics\n              };\n              return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n            }\n            return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n          };\n          BaseContract3.prototype._checkRunningEvents = function(runningEvent) {\n            if (runningEvent.listenerCount() === 0) {\n              delete this._runningEvents[runningEvent.tag];\n              var emit3 = this._wrappedEmits[runningEvent.tag];\n              if (emit3 && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit3);\n                delete this._wrappedEmits[runningEvent.tag];\n              }\n            }\n          };\n          BaseContract3.prototype._wrapEvent = function(runningEvent, log, listener) {\n            var _this = this;\n            var event = (0, properties_1.deepCopy)(log);\n            event.removeListener = function() {\n              if (!listener) {\n                return;\n              }\n              runningEvent.removeListener(listener);\n              _this._checkRunningEvents(runningEvent);\n            };\n            event.getBlock = function() {\n              return _this.provider.getBlock(log.blockHash);\n            };\n            event.getTransaction = function() {\n              return _this.provider.getTransaction(log.transactionHash);\n            };\n            event.getTransactionReceipt = function() {\n              return _this.provider.getTransactionReceipt(log.transactionHash);\n            };\n            runningEvent.prepareEvent(event);\n            return event;\n          };\n          BaseContract3.prototype._addEventListener = function(runningEvent, listener, once2) {\n            var _this = this;\n            if (!this.provider) {\n              logger.throwError(\"events require a provider or a signer with a provider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n            }\n            runningEvent.addListener(listener, once2);\n            this._runningEvents[runningEvent.tag] = runningEvent;\n            if (!this._wrappedEmits[runningEvent.tag]) {\n              var wrappedEmit = function(log) {\n                var event = _this._wrapEvent(runningEvent, log, listener);\n                if (event.decodeError == null) {\n                  try {\n                    var args = runningEvent.getEmit(event);\n                    _this.emit.apply(_this, __spreadArray2([runningEvent.filter], args, false));\n                  } catch (error) {\n                    event.decodeError = error.error;\n                  }\n                }\n                if (runningEvent.filter != null) {\n                  _this.emit(\"event\", event);\n                }\n                if (event.decodeError != null) {\n                  _this.emit(\"error\", event.decodeError, event);\n                }\n              };\n              this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n              if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n              }\n            }\n          };\n          BaseContract3.prototype.queryFilter = function(event, fromBlockOrBlockhash, toBlock) {\n            var _this = this;\n            var runningEvent = this._getRunningEvent(event);\n            var filter = (0, properties_1.shallowCopy)(runningEvent.filter);\n            if (typeof fromBlockOrBlockhash === \"string\" && (0, bytes_1.isHexString)(fromBlockOrBlockhash, 32)) {\n              if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n              }\n              filter.blockHash = fromBlockOrBlockhash;\n            } else {\n              filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;\n              filter.toBlock = toBlock != null ? toBlock : \"latest\";\n            }\n            return this.provider.getLogs(filter).then(function(logs) {\n              return logs.map(function(log) {\n                return _this._wrapEvent(runningEvent, log, null);\n              });\n            });\n          };\n          BaseContract3.prototype.on = function(event, listener) {\n            this._addEventListener(this._getRunningEvent(event), listener, false);\n            return this;\n          };\n          BaseContract3.prototype.once = function(event, listener) {\n            this._addEventListener(this._getRunningEvent(event), listener, true);\n            return this;\n          };\n          BaseContract3.prototype.emit = function(eventName) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n              args[_i - 1] = arguments[_i];\n            }\n            if (!this.provider) {\n              return false;\n            }\n            var runningEvent = this._getRunningEvent(eventName);\n            var result = runningEvent.run(args) > 0;\n            this._checkRunningEvents(runningEvent);\n            return result;\n          };\n          BaseContract3.prototype.listenerCount = function(eventName) {\n            var _this = this;\n            if (!this.provider) {\n              return 0;\n            }\n            if (eventName == null) {\n              return Object.keys(this._runningEvents).reduce(function(accum, key) {\n                return accum + _this._runningEvents[key].listenerCount();\n              }, 0);\n            }\n            return this._getRunningEvent(eventName).listenerCount();\n          };\n          BaseContract3.prototype.listeners = function(eventName) {\n            if (!this.provider) {\n              return [];\n            }\n            if (eventName == null) {\n              var result_1 = [];\n              for (var tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach(function(listener) {\n                  result_1.push(listener);\n                });\n              }\n              return result_1;\n            }\n            return this._getRunningEvent(eventName).listeners();\n          };\n          BaseContract3.prototype.removeAllListeners = function(eventName) {\n            if (!this.provider) {\n              return this;\n            }\n            if (eventName == null) {\n              for (var tag in this._runningEvents) {\n                var runningEvent_1 = this._runningEvents[tag];\n                runningEvent_1.removeAllListeners();\n                this._checkRunningEvents(runningEvent_1);\n              }\n              return this;\n            }\n            var runningEvent = this._getRunningEvent(eventName);\n            runningEvent.removeAllListeners();\n            this._checkRunningEvents(runningEvent);\n            return this;\n          };\n          BaseContract3.prototype.off = function(eventName, listener) {\n            if (!this.provider) {\n              return this;\n            }\n            var runningEvent = this._getRunningEvent(eventName);\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n            return this;\n          };\n          BaseContract3.prototype.removeListener = function(eventName, listener) {\n            return this.off(eventName, listener);\n          };\n          return BaseContract3;\n        }()\n      );\n      exports3.BaseContract = BaseContract2;\n      var Contract2 = (\n        /** @class */\n        function(_super) {\n          __extends2(Contract3, _super);\n          function Contract3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          return Contract3;\n        }(BaseContract2)\n      );\n      exports3.Contract = Contract2;\n      var ContractFactory = (\n        /** @class */\n        function() {\n          function ContractFactory2(contractInterface, bytecode, signer) {\n            var _newTarget = this.constructor;\n            var bytecodeHex = null;\n            if (typeof bytecode === \"string\") {\n              bytecodeHex = bytecode;\n            } else if ((0, bytes_1.isBytes)(bytecode)) {\n              bytecodeHex = (0, bytes_1.hexlify)(bytecode);\n            } else if (bytecode && typeof bytecode.object === \"string\") {\n              bytecodeHex = bytecode.object;\n            } else {\n              bytecodeHex = \"!\";\n            }\n            if (bytecodeHex.substring(0, 2) !== \"0x\") {\n              bytecodeHex = \"0x\" + bytecodeHex;\n            }\n            if (!(0, bytes_1.isHexString)(bytecodeHex) || bytecodeHex.length % 2) {\n              logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n            }\n            if (signer && !abstract_signer_1.Signer.isSigner(signer)) {\n              logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n            }\n            (0, properties_1.defineReadOnly)(this, \"bytecode\", bytecodeHex);\n            (0, properties_1.defineReadOnly)(this, \"interface\", (0, properties_1.getStatic)(_newTarget, \"getInterface\")(contractInterface));\n            (0, properties_1.defineReadOnly)(this, \"signer\", signer || null);\n          }\n          ContractFactory2.prototype.getDeployTransaction = function() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            var tx = {};\n            if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n              tx = (0, properties_1.shallowCopy)(args.pop());\n              for (var key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                  throw new Error(\"unknown transaction override \" + key);\n                }\n              }\n            }\n            [\"data\", \"from\", \"to\"].forEach(function(key2) {\n              if (tx[key2] == null) {\n                return;\n              }\n              logger.throwError(\"cannot override \" + key2, logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: key2 });\n            });\n            if (tx.value) {\n              var value = bignumber_1.BigNumber.from(tx.value);\n              if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"overrides.value\",\n                  value: tx.value\n                });\n              }\n            }\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            tx.data = (0, bytes_1.hexlify)((0, bytes_1.concat)([\n              this.bytecode,\n              this.interface.encodeDeploy(args)\n            ]));\n            return tx;\n          };\n          ContractFactory2.prototype.deploy = function() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            return __awaiter2(this, void 0, void 0, function() {\n              var overrides, params, unsignedTx, tx, address, contract;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    overrides = {};\n                    if (args.length === this.interface.deploy.inputs.length + 1) {\n                      overrides = args.pop();\n                    }\n                    logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n                    return [4, resolveAddresses(this.signer, args, this.interface.deploy.inputs)];\n                  case 1:\n                    params = _a.sent();\n                    params.push(overrides);\n                    unsignedTx = this.getDeployTransaction.apply(this, params);\n                    return [4, this.signer.sendTransaction(unsignedTx)];\n                  case 2:\n                    tx = _a.sent();\n                    address = (0, properties_1.getStatic)(this.constructor, \"getContractAddress\")(tx);\n                    contract = (0, properties_1.getStatic)(this.constructor, \"getContract\")(address, this.interface, this.signer);\n                    addContractWait(contract, tx);\n                    (0, properties_1.defineReadOnly)(contract, \"deployTransaction\", tx);\n                    return [2, contract];\n                }\n              });\n            });\n          };\n          ContractFactory2.prototype.attach = function(address) {\n            return this.constructor.getContract(address, this.interface, this.signer);\n          };\n          ContractFactory2.prototype.connect = function(signer) {\n            return new this.constructor(this.interface, this.bytecode, signer);\n          };\n          ContractFactory2.fromSolidity = function(compilerOutput, signer) {\n            if (compilerOutput == null) {\n              logger.throwError(\"missing compiler output\", logger_1.Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n            }\n            if (typeof compilerOutput === \"string\") {\n              compilerOutput = JSON.parse(compilerOutput);\n            }\n            var abi = compilerOutput.abi;\n            var bytecode = null;\n            if (compilerOutput.bytecode) {\n              bytecode = compilerOutput.bytecode;\n            } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n              bytecode = compilerOutput.evm.bytecode;\n            }\n            return new this(abi, bytecode, signer);\n          };\n          ContractFactory2.getInterface = function(contractInterface) {\n            return Contract2.getInterface(contractInterface);\n          };\n          ContractFactory2.getContractAddress = function(tx) {\n            return (0, address_1.getContractAddress)(tx);\n          };\n          ContractFactory2.getContract = function(address, contractInterface, signer) {\n            return new Contract2(address, contractInterface, signer);\n          };\n          return ContractFactory2;\n        }()\n      );\n      exports3.ContractFactory = ContractFactory;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+basex@5.8.0/node_modules/@ethersproject/basex/lib/index.js\n  var require_lib19 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+basex@5.8.0/node_modules/@ethersproject/basex/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Base58 = exports3.Base32 = exports3.BaseX = void 0;\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var BaseX = (\n        /** @class */\n        function() {\n          function BaseX2(alphabet) {\n            (0, properties_1.defineReadOnly)(this, \"alphabet\", alphabet);\n            (0, properties_1.defineReadOnly)(this, \"base\", alphabet.length);\n            (0, properties_1.defineReadOnly)(this, \"_alphabetMap\", {});\n            (0, properties_1.defineReadOnly)(this, \"_leader\", alphabet.charAt(0));\n            for (var i = 0; i < alphabet.length; i++) {\n              this._alphabetMap[alphabet.charAt(i)] = i;\n            }\n          }\n          BaseX2.prototype.encode = function(value) {\n            var source = (0, bytes_1.arrayify)(value);\n            if (source.length === 0) {\n              return \"\";\n            }\n            var digits = [0];\n            for (var i = 0; i < source.length; ++i) {\n              var carry = source[i];\n              for (var j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = carry / this.base | 0;\n              }\n              while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = carry / this.base | 0;\n              }\n            }\n            var string = \"\";\n            for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n              string += this._leader;\n            }\n            for (var q = digits.length - 1; q >= 0; --q) {\n              string += this.alphabet[digits[q]];\n            }\n            return string;\n          };\n          BaseX2.prototype.decode = function(value) {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\"Expected String\");\n            }\n            var bytes2 = [];\n            if (value.length === 0) {\n              return new Uint8Array(bytes2);\n            }\n            bytes2.push(0);\n            for (var i = 0; i < value.length; i++) {\n              var byte = this._alphabetMap[value[i]];\n              if (byte === void 0) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n              }\n              var carry = byte;\n              for (var j = 0; j < bytes2.length; ++j) {\n                carry += bytes2[j] * this.base;\n                bytes2[j] = carry & 255;\n                carry >>= 8;\n              }\n              while (carry > 0) {\n                bytes2.push(carry & 255);\n                carry >>= 8;\n              }\n            }\n            for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n              bytes2.push(0);\n            }\n            return (0, bytes_1.arrayify)(new Uint8Array(bytes2.reverse()));\n          };\n          return BaseX2;\n        }()\n      );\n      exports3.BaseX = BaseX;\n      var Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\n      exports3.Base32 = Base32;\n      var Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n      exports3.Base58 = Base58;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/types.js\n  var require_types = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/types.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.SupportedAlgorithm = void 0;\n      var SupportedAlgorithm;\n      (function(SupportedAlgorithm2) {\n        SupportedAlgorithm2[\"sha256\"] = \"sha256\";\n        SupportedAlgorithm2[\"sha512\"] = \"sha512\";\n      })(SupportedAlgorithm = exports3.SupportedAlgorithm || (exports3.SupportedAlgorithm = {}));\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/_version.js\n  var require_version15 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"sha2/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/browser-sha2.js\n  var require_browser_sha2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/browser-sha2.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.computeHmac = exports3.sha512 = exports3.sha256 = exports3.ripemd160 = void 0;\n      var hash_js_1 = __importDefault2(require_hash());\n      var bytes_1 = require_lib2();\n      var types_1 = require_types();\n      var logger_1 = require_lib();\n      var _version_1 = require_version15();\n      var logger = new logger_1.Logger(_version_1.version);\n      function ripemd160(data) {\n        return \"0x\" + hash_js_1.default.ripemd160().update((0, bytes_1.arrayify)(data)).digest(\"hex\");\n      }\n      exports3.ripemd160 = ripemd160;\n      function sha2563(data) {\n        return \"0x\" + hash_js_1.default.sha256().update((0, bytes_1.arrayify)(data)).digest(\"hex\");\n      }\n      exports3.sha256 = sha2563;\n      function sha5123(data) {\n        return \"0x\" + hash_js_1.default.sha512().update((0, bytes_1.arrayify)(data)).digest(\"hex\");\n      }\n      exports3.sha512 = sha5123;\n      function computeHmac(algorithm, key, data) {\n        if (!types_1.SupportedAlgorithm[algorithm]) {\n          logger.throwError(\"unsupported algorithm \" + algorithm, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm\n          });\n        }\n        return \"0x\" + hash_js_1.default.hmac(hash_js_1.default[algorithm], (0, bytes_1.arrayify)(key)).update((0, bytes_1.arrayify)(data)).digest(\"hex\");\n      }\n      exports3.computeHmac = computeHmac;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/index.js\n  var require_lib20 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+sha2@5.8.0/node_modules/@ethersproject/sha2/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.SupportedAlgorithm = exports3.sha512 = exports3.sha256 = exports3.ripemd160 = exports3.computeHmac = void 0;\n      var sha2_1 = require_browser_sha2();\n      Object.defineProperty(exports3, \"computeHmac\", { enumerable: true, get: function() {\n        return sha2_1.computeHmac;\n      } });\n      Object.defineProperty(exports3, \"ripemd160\", { enumerable: true, get: function() {\n        return sha2_1.ripemd160;\n      } });\n      Object.defineProperty(exports3, \"sha256\", { enumerable: true, get: function() {\n        return sha2_1.sha256;\n      } });\n      Object.defineProperty(exports3, \"sha512\", { enumerable: true, get: function() {\n        return sha2_1.sha512;\n      } });\n      var types_1 = require_types();\n      Object.defineProperty(exports3, \"SupportedAlgorithm\", { enumerable: true, get: function() {\n        return types_1.SupportedAlgorithm;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+pbkdf2@5.8.0/node_modules/@ethersproject/pbkdf2/lib/browser-pbkdf2.js\n  var require_browser_pbkdf2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+pbkdf2@5.8.0/node_modules/@ethersproject/pbkdf2/lib/browser-pbkdf2.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.pbkdf2 = void 0;\n      var bytes_1 = require_lib2();\n      var sha2_1 = require_lib20();\n      function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n        password = (0, bytes_1.arrayify)(password);\n        salt = (0, bytes_1.arrayify)(salt);\n        var hLen;\n        var l = 1;\n        var DK = new Uint8Array(keylen);\n        var block1 = new Uint8Array(salt.length + 4);\n        block1.set(salt);\n        var r;\n        var T;\n        for (var i = 1; i <= l; i++) {\n          block1[salt.length] = i >> 24 & 255;\n          block1[salt.length + 1] = i >> 16 & 255;\n          block1[salt.length + 2] = i >> 8 & 255;\n          block1[salt.length + 3] = i & 255;\n          var U = (0, bytes_1.arrayify)((0, sha2_1.computeHmac)(hashAlgorithm, password, block1));\n          if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n          }\n          T.set(U);\n          for (var j = 1; j < iterations; j++) {\n            U = (0, bytes_1.arrayify)((0, sha2_1.computeHmac)(hashAlgorithm, password, U));\n            for (var k = 0; k < hLen; k++)\n              T[k] ^= U[k];\n          }\n          var destPos = (i - 1) * hLen;\n          var len = i === l ? r : hLen;\n          DK.set((0, bytes_1.arrayify)(T).slice(0, len), destPos);\n        }\n        return (0, bytes_1.hexlify)(DK);\n      }\n      exports3.pbkdf2 = pbkdf2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+pbkdf2@5.8.0/node_modules/@ethersproject/pbkdf2/lib/index.js\n  var require_lib21 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+pbkdf2@5.8.0/node_modules/@ethersproject/pbkdf2/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.pbkdf2 = void 0;\n      var pbkdf2_1 = require_browser_pbkdf2();\n      Object.defineProperty(exports3, \"pbkdf2\", { enumerable: true, get: function() {\n        return pbkdf2_1.pbkdf2;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/_version.js\n  var require_version16 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"wordlists/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/wordlist.js\n  var require_wordlist = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/wordlist.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Wordlist = exports3.logger = void 0;\n      var exportWordlist = false;\n      var hash_1 = require_lib12();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version16();\n      exports3.logger = new logger_1.Logger(_version_1.version);\n      var Wordlist = (\n        /** @class */\n        function() {\n          function Wordlist2(locale) {\n            var _newTarget = this.constructor;\n            exports3.logger.checkAbstract(_newTarget, Wordlist2);\n            (0, properties_1.defineReadOnly)(this, \"locale\", locale);\n          }\n          Wordlist2.prototype.split = function(mnemonic) {\n            return mnemonic.toLowerCase().split(/ +/g);\n          };\n          Wordlist2.prototype.join = function(words) {\n            return words.join(\" \");\n          };\n          Wordlist2.check = function(wordlist) {\n            var words = [];\n            for (var i = 0; i < 2048; i++) {\n              var word = wordlist.getWord(i);\n              if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n              }\n              words.push(word);\n            }\n            return (0, hash_1.id)(words.join(\"\\n\") + \"\\n\");\n          };\n          Wordlist2.register = function(lang, name) {\n            if (!name) {\n              name = lang.locale;\n            }\n            if (exportWordlist) {\n              try {\n                var anyGlobal2 = window;\n                if (anyGlobal2._ethers && anyGlobal2._ethers.wordlists) {\n                  if (!anyGlobal2._ethers.wordlists[name]) {\n                    (0, properties_1.defineReadOnly)(anyGlobal2._ethers.wordlists, name, lang);\n                  }\n                }\n              } catch (error) {\n              }\n            }\n          };\n          return Wordlist2;\n        }()\n      );\n      exports3.Wordlist = Wordlist;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-cz.js\n  var require_lang_cz = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-cz.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langCz = void 0;\n      var wordlist_1 = require_wordlist();\n      var words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\n      var wordlist = null;\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n        if (wordlist_1.Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n        }\n      }\n      var LangCz = (\n        /** @class */\n        function(_super) {\n          __extends2(LangCz2, _super);\n          function LangCz2() {\n            return _super.call(this, \"cz\") || this;\n          }\n          LangCz2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangCz2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist.indexOf(word);\n          };\n          return LangCz2;\n        }(wordlist_1.Wordlist)\n      );\n      var langCz = new LangCz();\n      exports3.langCz = langCz;\n      wordlist_1.Wordlist.register(langCz);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-en.js\n  var require_lang_en = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-en.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langEn = void 0;\n      var wordlist_1 = require_wordlist();\n      var words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n      var wordlist = null;\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n        if (wordlist_1.Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n        }\n      }\n      var LangEn = (\n        /** @class */\n        function(_super) {\n          __extends2(LangEn2, _super);\n          function LangEn2() {\n            return _super.call(this, \"en\") || this;\n          }\n          LangEn2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangEn2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist.indexOf(word);\n          };\n          return LangEn2;\n        }(wordlist_1.Wordlist)\n      );\n      var langEn = new LangEn();\n      exports3.langEn = langEn;\n      wordlist_1.Wordlist.register(langEn);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-es.js\n  var require_lang_es = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-es.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langEs = void 0;\n      var strings_1 = require_lib9();\n      var wordlist_1 = require_wordlist();\n      var words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\n      var lookup = {};\n      var wordlist = null;\n      function dropDiacritic(word) {\n        wordlist_1.logger.checkNormalize();\n        return (0, strings_1.toUtf8String)(Array.prototype.filter.call((0, strings_1.toUtf8Bytes)(word.normalize(\"NFD\").toLowerCase()), function(c) {\n          return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n        }));\n      }\n      function expand(word) {\n        var output2 = [];\n        Array.prototype.forEach.call((0, strings_1.toUtf8Bytes)(word), function(c) {\n          if (c === 47) {\n            output2.push(204);\n            output2.push(129);\n          } else if (c === 126) {\n            output2.push(110);\n            output2.push(204);\n            output2.push(131);\n          } else {\n            output2.push(c);\n          }\n        });\n        return (0, strings_1.toUtf8String)(output2);\n      }\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(function(w) {\n          return expand(w);\n        });\n        wordlist.forEach(function(word, index) {\n          lookup[dropDiacritic(word)] = index;\n        });\n        if (wordlist_1.Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n        }\n      }\n      var LangEs = (\n        /** @class */\n        function(_super) {\n          __extends2(LangEs2, _super);\n          function LangEs2() {\n            return _super.call(this, \"es\") || this;\n          }\n          LangEs2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangEs2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return lookup[dropDiacritic(word)];\n          };\n          return LangEs2;\n        }(wordlist_1.Wordlist)\n      );\n      var langEs = new LangEs();\n      exports3.langEs = langEs;\n      wordlist_1.Wordlist.register(langEs);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-fr.js\n  var require_lang_fr = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-fr.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langFr = void 0;\n      var strings_1 = require_lib9();\n      var wordlist_1 = require_wordlist();\n      var words = \"\";\n      var wordlist = null;\n      var lookup = {};\n      function dropDiacritic(word) {\n        wordlist_1.logger.checkNormalize();\n        return (0, strings_1.toUtf8String)(Array.prototype.filter.call((0, strings_1.toUtf8Bytes)(word.normalize(\"NFD\").toLowerCase()), function(c) {\n          return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n        }));\n      }\n      function expand(word) {\n        var output2 = [];\n        Array.prototype.forEach.call((0, strings_1.toUtf8Bytes)(word), function(c) {\n          if (c === 47) {\n            output2.push(204);\n            output2.push(129);\n          } else if (c === 45) {\n            output2.push(204);\n            output2.push(128);\n          } else {\n            output2.push(c);\n          }\n        });\n        return (0, strings_1.toUtf8String)(output2);\n      }\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(function(w) {\n          return expand(w);\n        });\n        wordlist.forEach(function(word, index) {\n          lookup[dropDiacritic(word)] = index;\n        });\n        if (wordlist_1.Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n        }\n      }\n      var LangFr = (\n        /** @class */\n        function(_super) {\n          __extends2(LangFr2, _super);\n          function LangFr2() {\n            return _super.call(this, \"fr\") || this;\n          }\n          LangFr2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangFr2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return lookup[dropDiacritic(word)];\n          };\n          return LangFr2;\n        }(wordlist_1.Wordlist)\n      );\n      var langFr = new LangFr();\n      exports3.langFr = langFr;\n      wordlist_1.Wordlist.register(langFr);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-ja.js\n  var require_lang_ja = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-ja.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langJa = void 0;\n      var bytes_1 = require_lib2();\n      var strings_1 = require_lib9();\n      var wordlist_1 = require_wordlist();\n      var data = [\n        // 4-kana words\n        \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n        // 5-kana words\n        \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n        // 6-kana words\n        \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n        // 7-kana words\n        \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n        // 8-kana words\n        \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n        // 9-kana words\n        \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n        // 10-kana words\n        \"IJBEJqXZJ\"\n      ];\n      var mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\n      var wordlist = null;\n      function hex(word) {\n        return (0, bytes_1.hexlify)((0, strings_1.toUtf8Bytes)(word));\n      }\n      var KiYoKu = \"0xe3818de38284e3818f\";\n      var KyoKu = \"0xe3818de38283e3818f\";\n      function loadWords(lang) {\n        if (wordlist !== null) {\n          return;\n        }\n        wordlist = [];\n        var transform = {};\n        transform[(0, strings_1.toUtf8String)([227, 130, 154])] = false;\n        transform[(0, strings_1.toUtf8String)([227, 130, 153])] = false;\n        transform[(0, strings_1.toUtf8String)([227, 130, 133])] = (0, strings_1.toUtf8String)([227, 130, 134]);\n        transform[(0, strings_1.toUtf8String)([227, 129, 163])] = (0, strings_1.toUtf8String)([227, 129, 164]);\n        transform[(0, strings_1.toUtf8String)([227, 130, 131])] = (0, strings_1.toUtf8String)([227, 130, 132]);\n        transform[(0, strings_1.toUtf8String)([227, 130, 135])] = (0, strings_1.toUtf8String)([227, 130, 136]);\n        function normalize(word2) {\n          var result = \"\";\n          for (var i2 = 0; i2 < word2.length; i2++) {\n            var kana = word2[i2];\n            var target = transform[kana];\n            if (target === false) {\n              continue;\n            }\n            if (target) {\n              kana = target;\n            }\n            result += kana;\n          }\n          return result;\n        }\n        function sortJapanese(a, b2) {\n          a = normalize(a);\n          b2 = normalize(b2);\n          if (a < b2) {\n            return -1;\n          }\n          if (a > b2) {\n            return 1;\n          }\n          return 0;\n        }\n        for (var length_1 = 3; length_1 <= 9; length_1++) {\n          var d = data[length_1 - 3];\n          for (var offset = 0; offset < d.length; offset += length_1) {\n            var word = [];\n            for (var i = 0; i < length_1; i++) {\n              var k = mapping.indexOf(d[offset + i]);\n              word.push(227);\n              word.push(k & 64 ? 130 : 129);\n              word.push((k & 63) + 128);\n            }\n            wordlist.push((0, strings_1.toUtf8String)(word));\n          }\n        }\n        wordlist.sort(sortJapanese);\n        if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n          var tmp = wordlist[442];\n          wordlist[442] = wordlist[443];\n          wordlist[443] = tmp;\n        }\n        if (wordlist_1.Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n        }\n      }\n      var LangJa = (\n        /** @class */\n        function(_super) {\n          __extends2(LangJa2, _super);\n          function LangJa2() {\n            return _super.call(this, \"ja\") || this;\n          }\n          LangJa2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangJa2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist.indexOf(word);\n          };\n          LangJa2.prototype.split = function(mnemonic) {\n            wordlist_1.logger.checkNormalize();\n            return mnemonic.split(/(?:\\u3000| )+/g);\n          };\n          LangJa2.prototype.join = function(words) {\n            return words.join(\"\\u3000\");\n          };\n          return LangJa2;\n        }(wordlist_1.Wordlist)\n      );\n      var langJa = new LangJa();\n      exports3.langJa = langJa;\n      wordlist_1.Wordlist.register(langJa);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-ko.js\n  var require_lang_ko = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-ko.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langKo = void 0;\n      var strings_1 = require_lib9();\n      var wordlist_1 = require_wordlist();\n      var data = [\n        \"OYAa\",\n        \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8\",\n        \"ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n        \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n        \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n        \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n        \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n        \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n      ];\n      var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n      function getHangul(code) {\n        if (code >= 40) {\n          code = code + 168 - 40;\n        } else if (code >= 19) {\n          code = code + 97 - 19;\n        }\n        return (0, strings_1.toUtf8String)([225, (code >> 6) + 132, (code & 63) + 128]);\n      }\n      var wordlist = null;\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = [];\n        data.forEach(function(data2, length) {\n          length += 4;\n          for (var i = 0; i < data2.length; i += length) {\n            var word = \"\";\n            for (var j = 0; j < length; j++) {\n              word += getHangul(codes.indexOf(data2[i + j]));\n            }\n            wordlist.push(word);\n          }\n        });\n        wordlist.sort();\n        if (wordlist_1.Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n        }\n      }\n      var LangKo = (\n        /** @class */\n        function(_super) {\n          __extends2(LangKo2, _super);\n          function LangKo2() {\n            return _super.call(this, \"ko\") || this;\n          }\n          LangKo2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangKo2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist.indexOf(word);\n          };\n          return LangKo2;\n        }(wordlist_1.Wordlist)\n      );\n      var langKo = new LangKo();\n      exports3.langKo = langKo;\n      wordlist_1.Wordlist.register(langKo);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-it.js\n  var require_lang_it = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-it.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langIt = void 0;\n      var wordlist_1 = require_wordlist();\n      var words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\n      var wordlist = null;\n      function loadWords(lang) {\n        if (wordlist != null) {\n          return;\n        }\n        wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n        if (wordlist_1.Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n          wordlist = null;\n          throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n        }\n      }\n      var LangIt = (\n        /** @class */\n        function(_super) {\n          __extends2(LangIt2, _super);\n          function LangIt2() {\n            return _super.call(this, \"it\") || this;\n          }\n          LangIt2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[index];\n          };\n          LangIt2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist.indexOf(word);\n          };\n          return LangIt2;\n        }(wordlist_1.Wordlist)\n      );\n      var langIt = new LangIt();\n      exports3.langIt = langIt;\n      wordlist_1.Wordlist.register(langIt);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-zh.js\n  var require_lang_zh = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/lang-zh.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.langZhTw = exports3.langZhCn = void 0;\n      var strings_1 = require_lib9();\n      var wordlist_1 = require_wordlist();\n      var data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\n      var deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n      var wordlist = {\n        zh_cn: null,\n        zh_tw: null\n      };\n      var Checks = {\n        zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n        zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n      };\n      var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      var style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\n      function loadWords(lang) {\n        if (wordlist[lang.locale] !== null) {\n          return;\n        }\n        wordlist[lang.locale] = [];\n        var deltaOffset = 0;\n        for (var i = 0; i < 2048; i++) {\n          var s = style.indexOf(data[i * 3]);\n          var bytes2 = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2])\n          ];\n          if (lang.locale === \"zh_tw\") {\n            var common = s % 4;\n            for (var i_1 = common; i_1 < 3; i_1++) {\n              bytes2[i_1] = codes.indexOf(deltaData[deltaOffset++]) + (i_1 == 0 ? 228 : 128);\n            }\n          }\n          wordlist[lang.locale].push((0, strings_1.toUtf8String)(bytes2));\n        }\n        if (wordlist_1.Wordlist.check(lang) !== Checks[lang.locale]) {\n          wordlist[lang.locale] = null;\n          throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n        }\n      }\n      var LangZh = (\n        /** @class */\n        function(_super) {\n          __extends2(LangZh2, _super);\n          function LangZh2(country) {\n            return _super.call(this, \"zh_\" + country) || this;\n          }\n          LangZh2.prototype.getWord = function(index) {\n            loadWords(this);\n            return wordlist[this.locale][index];\n          };\n          LangZh2.prototype.getWordIndex = function(word) {\n            loadWords(this);\n            return wordlist[this.locale].indexOf(word);\n          };\n          LangZh2.prototype.split = function(mnemonic) {\n            mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n            return mnemonic.split(\"\");\n          };\n          return LangZh2;\n        }(wordlist_1.Wordlist)\n      );\n      var langZhCn = new LangZh(\"cn\");\n      exports3.langZhCn = langZhCn;\n      wordlist_1.Wordlist.register(langZhCn);\n      wordlist_1.Wordlist.register(langZhCn, \"zh\");\n      var langZhTw = new LangZh(\"tw\");\n      exports3.langZhTw = langZhTw;\n      wordlist_1.Wordlist.register(langZhTw);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/wordlists.js\n  var require_wordlists = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/wordlists.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.wordlists = void 0;\n      var lang_cz_1 = require_lang_cz();\n      var lang_en_1 = require_lang_en();\n      var lang_es_1 = require_lang_es();\n      var lang_fr_1 = require_lang_fr();\n      var lang_ja_1 = require_lang_ja();\n      var lang_ko_1 = require_lang_ko();\n      var lang_it_1 = require_lang_it();\n      var lang_zh_1 = require_lang_zh();\n      exports3.wordlists = {\n        cz: lang_cz_1.langCz,\n        en: lang_en_1.langEn,\n        es: lang_es_1.langEs,\n        fr: lang_fr_1.langFr,\n        it: lang_it_1.langIt,\n        ja: lang_ja_1.langJa,\n        ko: lang_ko_1.langKo,\n        zh: lang_zh_1.langZhCn,\n        zh_cn: lang_zh_1.langZhCn,\n        zh_tw: lang_zh_1.langZhTw\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/index.js\n  var require_lib22 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wordlists@5.8.0/node_modules/@ethersproject/wordlists/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.wordlists = exports3.Wordlist = exports3.logger = void 0;\n      var wordlist_1 = require_wordlist();\n      Object.defineProperty(exports3, \"logger\", { enumerable: true, get: function() {\n        return wordlist_1.logger;\n      } });\n      Object.defineProperty(exports3, \"Wordlist\", { enumerable: true, get: function() {\n        return wordlist_1.Wordlist;\n      } });\n      var wordlists_1 = require_wordlists();\n      Object.defineProperty(exports3, \"wordlists\", { enumerable: true, get: function() {\n        return wordlists_1.wordlists;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hdnode@5.8.0/node_modules/@ethersproject/hdnode/lib/_version.js\n  var require_version17 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hdnode@5.8.0/node_modules/@ethersproject/hdnode/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"hdnode/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+hdnode@5.8.0/node_modules/@ethersproject/hdnode/lib/index.js\n  var require_lib23 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+hdnode@5.8.0/node_modules/@ethersproject/hdnode/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getAccountPath = exports3.isValidMnemonic = exports3.entropyToMnemonic = exports3.mnemonicToEntropy = exports3.mnemonicToSeed = exports3.HDNode = exports3.defaultPath = void 0;\n      var basex_1 = require_lib19();\n      var bytes_1 = require_lib2();\n      var bignumber_1 = require_lib3();\n      var strings_1 = require_lib9();\n      var pbkdf2_1 = require_lib21();\n      var properties_1 = require_lib4();\n      var signing_key_1 = require_lib16();\n      var sha2_1 = require_lib20();\n      var transactions_1 = require_lib17();\n      var wordlists_1 = require_lib22();\n      var logger_1 = require_lib();\n      var _version_1 = require_version17();\n      var logger = new logger_1.Logger(_version_1.version);\n      var N = bignumber_1.BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n      var MasterSecret = (0, strings_1.toUtf8Bytes)(\"Bitcoin seed\");\n      var HardenedBit = 2147483648;\n      function getUpperMask(bits) {\n        return (1 << bits) - 1 << 8 - bits;\n      }\n      function getLowerMask(bits) {\n        return (1 << bits) - 1;\n      }\n      function bytes32(value) {\n        return (0, bytes_1.hexZeroPad)((0, bytes_1.hexlify)(value), 32);\n      }\n      function base58check(data) {\n        return basex_1.Base58.encode((0, bytes_1.concat)([data, (0, bytes_1.hexDataSlice)((0, sha2_1.sha256)((0, sha2_1.sha256)(data)), 0, 4)]));\n      }\n      function getWordlist(wordlist) {\n        if (wordlist == null) {\n          return wordlists_1.wordlists[\"en\"];\n        }\n        if (typeof wordlist === \"string\") {\n          var words = wordlists_1.wordlists[wordlist];\n          if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n          }\n          return words;\n        }\n        return wordlist;\n      }\n      var _constructorGuard = {};\n      exports3.defaultPath = \"m/44'/60'/0'/0/0\";\n      var HDNode = (\n        /** @class */\n        function() {\n          function HDNode2(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n            if (constructorGuard !== _constructorGuard) {\n              throw new Error(\"HDNode constructor cannot be called directly\");\n            }\n            if (privateKey) {\n              var signingKey = new signing_key_1.SigningKey(privateKey);\n              (0, properties_1.defineReadOnly)(this, \"privateKey\", signingKey.privateKey);\n              (0, properties_1.defineReadOnly)(this, \"publicKey\", signingKey.compressedPublicKey);\n            } else {\n              (0, properties_1.defineReadOnly)(this, \"privateKey\", null);\n              (0, properties_1.defineReadOnly)(this, \"publicKey\", (0, bytes_1.hexlify)(publicKey));\n            }\n            (0, properties_1.defineReadOnly)(this, \"parentFingerprint\", parentFingerprint);\n            (0, properties_1.defineReadOnly)(this, \"fingerprint\", (0, bytes_1.hexDataSlice)((0, sha2_1.ripemd160)((0, sha2_1.sha256)(this.publicKey)), 0, 4));\n            (0, properties_1.defineReadOnly)(this, \"address\", (0, transactions_1.computeAddress)(this.publicKey));\n            (0, properties_1.defineReadOnly)(this, \"chainCode\", chainCode);\n            (0, properties_1.defineReadOnly)(this, \"index\", index);\n            (0, properties_1.defineReadOnly)(this, \"depth\", depth);\n            if (mnemonicOrPath == null) {\n              (0, properties_1.defineReadOnly)(this, \"mnemonic\", null);\n              (0, properties_1.defineReadOnly)(this, \"path\", null);\n            } else if (typeof mnemonicOrPath === \"string\") {\n              (0, properties_1.defineReadOnly)(this, \"mnemonic\", null);\n              (0, properties_1.defineReadOnly)(this, \"path\", mnemonicOrPath);\n            } else {\n              (0, properties_1.defineReadOnly)(this, \"mnemonic\", mnemonicOrPath);\n              (0, properties_1.defineReadOnly)(this, \"path\", mnemonicOrPath.path);\n            }\n          }\n          Object.defineProperty(HDNode2.prototype, \"extendedKey\", {\n            get: function() {\n              if (this.depth >= 256) {\n                throw new Error(\"Depth too large!\");\n              }\n              return base58check((0, bytes_1.concat)([\n                this.privateKey != null ? \"0x0488ADE4\" : \"0x0488B21E\",\n                (0, bytes_1.hexlify)(this.depth),\n                this.parentFingerprint,\n                (0, bytes_1.hexZeroPad)((0, bytes_1.hexlify)(this.index), 4),\n                this.chainCode,\n                this.privateKey != null ? (0, bytes_1.concat)([\"0x00\", this.privateKey]) : this.publicKey\n              ]));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          HDNode2.prototype.neuter = function() {\n            return new HDNode2(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n          };\n          HDNode2.prototype._derive = function(index) {\n            if (index > 4294967295) {\n              throw new Error(\"invalid index - \" + String(index));\n            }\n            var path = this.path;\n            if (path) {\n              path += \"/\" + (index & ~HardenedBit);\n            }\n            var data = new Uint8Array(37);\n            if (index & HardenedBit) {\n              if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n              }\n              data.set((0, bytes_1.arrayify)(this.privateKey), 1);\n              if (path) {\n                path += \"'\";\n              }\n            } else {\n              data.set((0, bytes_1.arrayify)(this.publicKey));\n            }\n            for (var i = 24; i >= 0; i -= 8) {\n              data[33 + (i >> 3)] = index >> 24 - i & 255;\n            }\n            var I = (0, bytes_1.arrayify)((0, sha2_1.computeHmac)(sha2_1.SupportedAlgorithm.sha512, this.chainCode, data));\n            var IL = I.slice(0, 32);\n            var IR = I.slice(32);\n            var ki = null;\n            var Ki = null;\n            if (this.privateKey) {\n              ki = bytes32(bignumber_1.BigNumber.from(IL).add(this.privateKey).mod(N));\n            } else {\n              var ek = new signing_key_1.SigningKey((0, bytes_1.hexlify)(IL));\n              Ki = ek._addPoint(this.publicKey);\n            }\n            var mnemonicOrPath = path;\n            var srcMnemonic = this.mnemonic;\n            if (srcMnemonic) {\n              mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path,\n                locale: srcMnemonic.locale || \"en\"\n              });\n            }\n            return new HDNode2(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n          };\n          HDNode2.prototype.derivePath = function(path) {\n            var components = path.split(\"/\");\n            if (components.length === 0 || components[0] === \"m\" && this.depth !== 0) {\n              throw new Error(\"invalid path - \" + path);\n            }\n            if (components[0] === \"m\") {\n              components.shift();\n            }\n            var result = this;\n            for (var i = 0; i < components.length; i++) {\n              var component = components[i];\n              if (component.match(/^[0-9]+'$/)) {\n                var index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                  throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n              } else if (component.match(/^[0-9]+$/)) {\n                var index = parseInt(component);\n                if (index >= HardenedBit) {\n                  throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n              } else {\n                throw new Error(\"invalid path component - \" + component);\n              }\n            }\n            return result;\n          };\n          HDNode2._fromSeed = function(seed, mnemonic) {\n            var seedArray = (0, bytes_1.arrayify)(seed);\n            if (seedArray.length < 16 || seedArray.length > 64) {\n              throw new Error(\"invalid seed\");\n            }\n            var I = (0, bytes_1.arrayify)((0, sha2_1.computeHmac)(sha2_1.SupportedAlgorithm.sha512, MasterSecret, seedArray));\n            return new HDNode2(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n          };\n          HDNode2.fromMnemonic = function(mnemonic, password, wordlist) {\n            wordlist = getWordlist(wordlist);\n            mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n            return HDNode2._fromSeed(mnemonicToSeed(mnemonic, password), {\n              phrase: mnemonic,\n              path: \"m\",\n              locale: wordlist.locale\n            });\n          };\n          HDNode2.fromSeed = function(seed) {\n            return HDNode2._fromSeed(seed, null);\n          };\n          HDNode2.fromExtendedKey = function(extendedKey) {\n            var bytes2 = basex_1.Base58.decode(extendedKey);\n            if (bytes2.length !== 82 || base58check(bytes2.slice(0, 78)) !== extendedKey) {\n              logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n            }\n            var depth = bytes2[4];\n            var parentFingerprint = (0, bytes_1.hexlify)(bytes2.slice(5, 9));\n            var index = parseInt((0, bytes_1.hexlify)(bytes2.slice(9, 13)).substring(2), 16);\n            var chainCode = (0, bytes_1.hexlify)(bytes2.slice(13, 45));\n            var key = bytes2.slice(45, 78);\n            switch ((0, bytes_1.hexlify)(bytes2.slice(0, 4))) {\n              case \"0x0488b21e\":\n              case \"0x043587cf\":\n                return new HDNode2(_constructorGuard, null, (0, bytes_1.hexlify)(key), parentFingerprint, chainCode, index, depth, null);\n              case \"0x0488ade4\":\n              case \"0x04358394 \":\n                if (key[0] !== 0) {\n                  break;\n                }\n                return new HDNode2(_constructorGuard, (0, bytes_1.hexlify)(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n            }\n            return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n          };\n          return HDNode2;\n        }()\n      );\n      exports3.HDNode = HDNode;\n      function mnemonicToSeed(mnemonic, password) {\n        if (!password) {\n          password = \"\";\n        }\n        var salt = (0, strings_1.toUtf8Bytes)(\"mnemonic\" + password, strings_1.UnicodeNormalizationForm.NFKD);\n        return (0, pbkdf2_1.pbkdf2)((0, strings_1.toUtf8Bytes)(mnemonic, strings_1.UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n      }\n      exports3.mnemonicToSeed = mnemonicToSeed;\n      function mnemonicToEntropy(mnemonic, wordlist) {\n        wordlist = getWordlist(wordlist);\n        logger.checkNormalize();\n        var words = wordlist.split(mnemonic);\n        if (words.length % 3 !== 0) {\n          throw new Error(\"invalid mnemonic\");\n        }\n        var entropy = (0, bytes_1.arrayify)(new Uint8Array(Math.ceil(11 * words.length / 8)));\n        var offset = 0;\n        for (var i = 0; i < words.length; i++) {\n          var index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n          if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n          }\n          for (var bit = 0; bit < 11; bit++) {\n            if (index & 1 << 10 - bit) {\n              entropy[offset >> 3] |= 1 << 7 - offset % 8;\n            }\n            offset++;\n          }\n        }\n        var entropyBits = 32 * words.length / 3;\n        var checksumBits = words.length / 3;\n        var checksumMask = getUpperMask(checksumBits);\n        var checksum = (0, bytes_1.arrayify)((0, sha2_1.sha256)(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n        if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n          throw new Error(\"invalid checksum\");\n        }\n        return (0, bytes_1.hexlify)(entropy.slice(0, entropyBits / 8));\n      }\n      exports3.mnemonicToEntropy = mnemonicToEntropy;\n      function entropyToMnemonic(entropy, wordlist) {\n        wordlist = getWordlist(wordlist);\n        entropy = (0, bytes_1.arrayify)(entropy);\n        if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n          throw new Error(\"invalid entropy\");\n        }\n        var indices = [0];\n        var remainingBits = 11;\n        for (var i = 0; i < entropy.length; i++) {\n          if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n          } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n          }\n        }\n        var checksumBits = entropy.length / 4;\n        var checksum = (0, bytes_1.arrayify)((0, sha2_1.sha256)(entropy))[0] & getUpperMask(checksumBits);\n        indices[indices.length - 1] <<= checksumBits;\n        indices[indices.length - 1] |= checksum >> 8 - checksumBits;\n        return wordlist.join(indices.map(function(index) {\n          return wordlist.getWord(index);\n        }));\n      }\n      exports3.entropyToMnemonic = entropyToMnemonic;\n      function isValidMnemonic(mnemonic, wordlist) {\n        try {\n          mnemonicToEntropy(mnemonic, wordlist);\n          return true;\n        } catch (error) {\n        }\n        return false;\n      }\n      exports3.isValidMnemonic = isValidMnemonic;\n      function getAccountPath(index) {\n        if (typeof index !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n          logger.throwArgumentError(\"invalid account index\", \"index\", index);\n        }\n        return \"m/44'/60'/\" + index + \"'/0/0\";\n      }\n      exports3.getAccountPath = getAccountPath;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/_version.js\n  var require_version18 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"random/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/browser-random.js\n  var require_browser_random = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/browser-random.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.randomBytes = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version18();\n      var logger = new logger_1.Logger(_version_1.version);\n      function getGlobal2() {\n        if (typeof self !== \"undefined\") {\n          return self;\n        }\n        if (typeof window !== \"undefined\") {\n          return window;\n        }\n        if (typeof global !== \"undefined\") {\n          return global;\n        }\n        throw new Error(\"unable to locate global object\");\n      }\n      var anyGlobal2 = getGlobal2();\n      var crypto3 = anyGlobal2.crypto || anyGlobal2.msCrypto;\n      if (!crypto3 || !crypto3.getRandomValues) {\n        logger.warn(\"WARNING: Missing strong random number source\");\n        crypto3 = {\n          getRandomValues: function(buffer) {\n            return logger.throwError(\"no secure random source avaialble\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"crypto.getRandomValues\"\n            });\n          }\n        };\n      }\n      function randomBytes2(length) {\n        if (length <= 0 || length > 1024 || length % 1 || length != length) {\n          logger.throwArgumentError(\"invalid length\", \"length\", length);\n        }\n        var result = new Uint8Array(length);\n        crypto3.getRandomValues(result);\n        return (0, bytes_1.arrayify)(result);\n      }\n      exports3.randomBytes = randomBytes2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/shuffle.js\n  var require_shuffle = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/shuffle.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.shuffled = void 0;\n      function shuffled(array) {\n        array = array.slice();\n        for (var i = array.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n        return array;\n      }\n      exports3.shuffled = shuffled;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/index.js\n  var require_lib24 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+random@5.8.0/node_modules/@ethersproject/random/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.shuffled = exports3.randomBytes = void 0;\n      var random_1 = require_browser_random();\n      Object.defineProperty(exports3, \"randomBytes\", { enumerable: true, get: function() {\n        return random_1.randomBytes;\n      } });\n      var shuffle_1 = require_shuffle();\n      Object.defineProperty(exports3, \"shuffled\", { enumerable: true, get: function() {\n        return shuffle_1.shuffled;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/aes-js@3.0.0/node_modules/aes-js/index.js\n  var require_aes_js = __commonJS({\n    \"../../../node_modules/.pnpm/aes-js@3.0.0/node_modules/aes-js/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(root) {\n        function checkInt(value) {\n          return parseInt(value) === value;\n        }\n        function checkInts(arrayish) {\n          if (!checkInt(arrayish.length)) {\n            return false;\n          }\n          for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n              return false;\n            }\n          }\n          return true;\n        }\n        function coerceArray(arg, copy4) {\n          if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === \"Uint8Array\") {\n            if (copy4) {\n              if (arg.slice) {\n                arg = arg.slice();\n              } else {\n                arg = Array.prototype.slice.call(arg);\n              }\n            }\n            return arg;\n          }\n          if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n              throw new Error(\"Array contains invalid value: \" + arg);\n            }\n            return new Uint8Array(arg);\n          }\n          if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n          }\n          throw new Error(\"unsupported array-like object\");\n        }\n        function createArray(length) {\n          return new Uint8Array(length);\n        }\n        function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n          if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n              sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n              sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n          }\n          targetArray.set(sourceArray, targetStart);\n        }\n        var convertUtf8 = /* @__PURE__ */ function() {\n          function toBytes2(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n              var c = text.charCodeAt(i++);\n              if (c === 37) {\n                result.push(parseInt(text.substr(i, 2), 16));\n                i += 2;\n              } else {\n                result.push(c);\n              }\n            }\n            return coerceArray(result);\n          }\n          function fromBytes(bytes2) {\n            var result = [], i = 0;\n            while (i < bytes2.length) {\n              var c = bytes2[i];\n              if (c < 128) {\n                result.push(String.fromCharCode(c));\n                i++;\n              } else if (c > 191 && c < 224) {\n                result.push(String.fromCharCode((c & 31) << 6 | bytes2[i + 1] & 63));\n                i += 2;\n              } else {\n                result.push(String.fromCharCode((c & 15) << 12 | (bytes2[i + 1] & 63) << 6 | bytes2[i + 2] & 63));\n                i += 3;\n              }\n            }\n            return result.join(\"\");\n          }\n          return {\n            toBytes: toBytes2,\n            fromBytes\n          };\n        }();\n        var convertHex = /* @__PURE__ */ function() {\n          function toBytes2(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n              result.push(parseInt(text.substr(i, 2), 16));\n            }\n            return result;\n          }\n          var Hex = \"0123456789abcdef\";\n          function fromBytes(bytes2) {\n            var result = [];\n            for (var i = 0; i < bytes2.length; i++) {\n              var v = bytes2[i];\n              result.push(Hex[(v & 240) >> 4] + Hex[v & 15]);\n            }\n            return result.join(\"\");\n          }\n          return {\n            toBytes: toBytes2,\n            fromBytes\n          };\n        }();\n        var numberOfRounds = { 16: 10, 24: 12, 32: 14 };\n        var rcon = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];\n        var S = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];\n        var Si = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];\n        var T12 = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986];\n        var T2 = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766];\n        var T3 = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126];\n        var T4 = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436];\n        var T5 = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890];\n        var T6 = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935];\n        var T7 = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600];\n        var T8 = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480];\n        var U1 = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795];\n        var U2 = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855];\n        var U3 = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150];\n        var U4 = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];\n        function convertToInt32(bytes2) {\n          var result = [];\n          for (var i = 0; i < bytes2.length; i += 4) {\n            result.push(\n              bytes2[i] << 24 | bytes2[i + 1] << 16 | bytes2[i + 2] << 8 | bytes2[i + 3]\n            );\n          }\n          return result;\n        }\n        var AES = function(key) {\n          if (!(this instanceof AES)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          Object.defineProperty(this, \"key\", {\n            value: coerceArray(key, true)\n          });\n          this._prepare();\n        };\n        AES.prototype._prepare = function() {\n          var rounds = numberOfRounds[this.key.length];\n          if (rounds == null) {\n            throw new Error(\"invalid key size (must be 16, 24 or 32 bytes)\");\n          }\n          this._Ke = [];\n          this._Kd = [];\n          for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n          }\n          var roundKeyCount = (rounds + 1) * 4;\n          var KC = this.key.length / 4;\n          var tk = convertToInt32(this.key);\n          var index;\n          for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n          }\n          var rconpointer = 0;\n          var t = KC, tt;\n          while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= S[tt >> 16 & 255] << 24 ^ S[tt >> 8 & 255] << 16 ^ S[tt & 255] << 8 ^ S[tt >> 24 & 255] ^ rcon[rconpointer] << 24;\n            rconpointer += 1;\n            if (KC != 8) {\n              for (var i = 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n              }\n            } else {\n              for (var i = 1; i < KC / 2; i++) {\n                tk[i] ^= tk[i - 1];\n              }\n              tt = tk[KC / 2 - 1];\n              tk[KC / 2] ^= S[tt & 255] ^ S[tt >> 8 & 255] << 8 ^ S[tt >> 16 & 255] << 16 ^ S[tt >> 24 & 255] << 24;\n              for (var i = KC / 2 + 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n              }\n            }\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n              r = t >> 2;\n              c = t % 4;\n              this._Ke[r][c] = tk[i];\n              this._Kd[rounds - r][c] = tk[i++];\n              t++;\n            }\n          }\n          for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n              tt = this._Kd[r][c];\n              this._Kd[r][c] = U1[tt >> 24 & 255] ^ U2[tt >> 16 & 255] ^ U3[tt >> 8 & 255] ^ U4[tt & 255];\n            }\n          }\n        };\n        AES.prototype.encrypt = function(plaintext) {\n          if (plaintext.length != 16) {\n            throw new Error(\"invalid plaintext size (must be 16 bytes)\");\n          }\n          var rounds = this._Ke.length - 1;\n          var a = [0, 0, 0, 0];\n          var t = convertToInt32(plaintext);\n          for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n          }\n          for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n              a[i] = T12[t[i] >> 24 & 255] ^ T2[t[(i + 1) % 4] >> 16 & 255] ^ T3[t[(i + 2) % 4] >> 8 & 255] ^ T4[t[(i + 3) % 4] & 255] ^ this._Ke[r][i];\n            }\n            t = a.slice();\n          }\n          var result = createArray(16), tt;\n          for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i] = (S[t[i] >> 24 & 255] ^ tt >> 24) & 255;\n            result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 255] ^ tt >> 16) & 255;\n            result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;\n            result[4 * i + 3] = (S[t[(i + 3) % 4] & 255] ^ tt) & 255;\n          }\n          return result;\n        };\n        AES.prototype.decrypt = function(ciphertext) {\n          if (ciphertext.length != 16) {\n            throw new Error(\"invalid ciphertext size (must be 16 bytes)\");\n          }\n          var rounds = this._Kd.length - 1;\n          var a = [0, 0, 0, 0];\n          var t = convertToInt32(ciphertext);\n          for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n          }\n          for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n              a[i] = T5[t[i] >> 24 & 255] ^ T6[t[(i + 3) % 4] >> 16 & 255] ^ T7[t[(i + 2) % 4] >> 8 & 255] ^ T8[t[(i + 1) % 4] & 255] ^ this._Kd[r][i];\n            }\n            t = a.slice();\n          }\n          var result = createArray(16), tt;\n          for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i] = (Si[t[i] >> 24 & 255] ^ tt >> 24) & 255;\n            result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 255] ^ tt >> 16) & 255;\n            result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;\n            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 255] ^ tt) & 255;\n          }\n          return result;\n        };\n        var ModeOfOperationECB = function(key) {\n          if (!(this instanceof ModeOfOperationECB)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          this.description = \"Electronic Code Block\";\n          this.name = \"ecb\";\n          this._aes = new AES(key);\n        };\n        ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n          plaintext = coerceArray(plaintext);\n          if (plaintext.length % 16 !== 0) {\n            throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n          }\n          var ciphertext = createArray(plaintext.length);\n          var block = createArray(16);\n          for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n          }\n          return ciphertext;\n        };\n        ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n          ciphertext = coerceArray(ciphertext);\n          if (ciphertext.length % 16 !== 0) {\n            throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n          }\n          var plaintext = createArray(ciphertext.length);\n          var block = createArray(16);\n          for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n          }\n          return plaintext;\n        };\n        var ModeOfOperationCBC = function(key, iv) {\n          if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          this.description = \"Cipher Block Chaining\";\n          this.name = \"cbc\";\n          if (!iv) {\n            iv = createArray(16);\n          } else if (iv.length != 16) {\n            throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n          }\n          this._lastCipherblock = coerceArray(iv, true);\n          this._aes = new AES(key);\n        };\n        ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n          plaintext = coerceArray(plaintext);\n          if (plaintext.length % 16 !== 0) {\n            throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n          }\n          var ciphertext = createArray(plaintext.length);\n          var block = createArray(16);\n          for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            for (var j = 0; j < 16; j++) {\n              block[j] ^= this._lastCipherblock[j];\n            }\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n          }\n          return ciphertext;\n        };\n        ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n          ciphertext = coerceArray(ciphertext);\n          if (ciphertext.length % 16 !== 0) {\n            throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n          }\n          var plaintext = createArray(ciphertext.length);\n          var block = createArray(16);\n          for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            for (var j = 0; j < 16; j++) {\n              plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n          }\n          return plaintext;\n        };\n        var ModeOfOperationCFB = function(key, iv, segmentSize) {\n          if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          this.description = \"Cipher Feedback\";\n          this.name = \"cfb\";\n          if (!iv) {\n            iv = createArray(16);\n          } else if (iv.length != 16) {\n            throw new Error(\"invalid initialation vector size (must be 16 size)\");\n          }\n          if (!segmentSize) {\n            segmentSize = 1;\n          }\n          this.segmentSize = segmentSize;\n          this._shiftRegister = coerceArray(iv, true);\n          this._aes = new AES(key);\n        };\n        ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n          if (plaintext.length % this.segmentSize != 0) {\n            throw new Error(\"invalid plaintext size (must be segmentSize bytes)\");\n          }\n          var encrypted = coerceArray(plaintext, true);\n          var xorSegment;\n          for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n              encrypted[i + j] ^= xorSegment[j];\n            }\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n          }\n          return encrypted;\n        };\n        ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n          if (ciphertext.length % this.segmentSize != 0) {\n            throw new Error(\"invalid ciphertext size (must be segmentSize bytes)\");\n          }\n          var plaintext = coerceArray(ciphertext, true);\n          var xorSegment;\n          for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n              plaintext[i + j] ^= xorSegment[j];\n            }\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n          }\n          return plaintext;\n        };\n        var ModeOfOperationOFB = function(key, iv) {\n          if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          this.description = \"Output Feedback\";\n          this.name = \"ofb\";\n          if (!iv) {\n            iv = createArray(16);\n          } else if (iv.length != 16) {\n            throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n          }\n          this._lastPrecipher = coerceArray(iv, true);\n          this._lastPrecipherIndex = 16;\n          this._aes = new AES(key);\n        };\n        ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n          var encrypted = coerceArray(plaintext, true);\n          for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n              this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n              this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n          }\n          return encrypted;\n        };\n        ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n        var Counter = function(initialValue) {\n          if (!(this instanceof Counter)) {\n            throw Error(\"Counter must be instanitated with `new`\");\n          }\n          if (initialValue !== 0 && !initialValue) {\n            initialValue = 1;\n          }\n          if (typeof initialValue === \"number\") {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n          } else {\n            this.setBytes(initialValue);\n          }\n        };\n        Counter.prototype.setValue = function(value) {\n          if (typeof value !== \"number\" || parseInt(value) != value) {\n            throw new Error(\"invalid counter value (must be an integer)\");\n          }\n          for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n          }\n        };\n        Counter.prototype.setBytes = function(bytes2) {\n          bytes2 = coerceArray(bytes2, true);\n          if (bytes2.length != 16) {\n            throw new Error(\"invalid counter bytes size (must be 16 bytes)\");\n          }\n          this._counter = bytes2;\n        };\n        Counter.prototype.increment = function() {\n          for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n              this._counter[i] = 0;\n            } else {\n              this._counter[i]++;\n              break;\n            }\n          }\n        };\n        var ModeOfOperationCTR = function(key, counter) {\n          if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error(\"AES must be instanitated with `new`\");\n          }\n          this.description = \"Counter\";\n          this.name = \"ctr\";\n          if (!(counter instanceof Counter)) {\n            counter = new Counter(counter);\n          }\n          this._counter = counter;\n          this._remainingCounter = null;\n          this._remainingCounterIndex = 16;\n          this._aes = new AES(key);\n        };\n        ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n          var encrypted = coerceArray(plaintext, true);\n          for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n              this._remainingCounter = this._aes.encrypt(this._counter._counter);\n              this._remainingCounterIndex = 0;\n              this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n          }\n          return encrypted;\n        };\n        ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n        function pkcs7pad(data) {\n          data = coerceArray(data, true);\n          var padder = 16 - data.length % 16;\n          var result = createArray(data.length + padder);\n          copyArray(data, result);\n          for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n          }\n          return result;\n        }\n        function pkcs7strip(data) {\n          data = coerceArray(data, true);\n          if (data.length < 16) {\n            throw new Error(\"PKCS#7 invalid length\");\n          }\n          var padder = data[data.length - 1];\n          if (padder > 16) {\n            throw new Error(\"PKCS#7 padding byte out of range\");\n          }\n          var length = data.length - padder;\n          for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n              throw new Error(\"PKCS#7 invalid padding byte\");\n            }\n          }\n          var result = createArray(length);\n          copyArray(data, result, 0, 0, length);\n          return result;\n        }\n        var aesjs = {\n          AES,\n          Counter,\n          ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n          },\n          utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n          },\n          padding: {\n            pkcs7: {\n              pad: pkcs7pad,\n              strip: pkcs7strip\n            }\n          },\n          _arrayTest: {\n            coerceArray,\n            createArray,\n            copyArray\n          }\n        };\n        if (typeof exports3 !== \"undefined\") {\n          module.exports = aesjs;\n        } else if (typeof define === \"function\" && define.amd) {\n          define(aesjs);\n        } else {\n          if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n          }\n          root.aesjs = aesjs;\n        }\n      })(exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/_version.js\n  var require_version19 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"json-wallets/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/utils.js\n  var require_utils4 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/utils.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.uuidV4 = exports3.searchPath = exports3.getPassword = exports3.zpad = exports3.looseArrayify = void 0;\n      var bytes_1 = require_lib2();\n      var strings_1 = require_lib9();\n      function looseArrayify(hexString) {\n        if (typeof hexString === \"string\" && hexString.substring(0, 2) !== \"0x\") {\n          hexString = \"0x\" + hexString;\n        }\n        return (0, bytes_1.arrayify)(hexString);\n      }\n      exports3.looseArrayify = looseArrayify;\n      function zpad(value, length) {\n        value = String(value);\n        while (value.length < length) {\n          value = \"0\" + value;\n        }\n        return value;\n      }\n      exports3.zpad = zpad;\n      function getPassword(password) {\n        if (typeof password === \"string\") {\n          return (0, strings_1.toUtf8Bytes)(password, strings_1.UnicodeNormalizationForm.NFKC);\n        }\n        return (0, bytes_1.arrayify)(password);\n      }\n      exports3.getPassword = getPassword;\n      function searchPath(object2, path) {\n        var currentChild = object2;\n        var comps = path.toLowerCase().split(\"/\");\n        for (var i = 0; i < comps.length; i++) {\n          var matchingChild = null;\n          for (var key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n              matchingChild = currentChild[key];\n              break;\n            }\n          }\n          if (matchingChild === null) {\n            return null;\n          }\n          currentChild = matchingChild;\n        }\n        return currentChild;\n      }\n      exports3.searchPath = searchPath;\n      function uuidV4(randomBytes2) {\n        var bytes2 = (0, bytes_1.arrayify)(randomBytes2);\n        bytes2[6] = bytes2[6] & 15 | 64;\n        bytes2[8] = bytes2[8] & 63 | 128;\n        var value = (0, bytes_1.hexlify)(bytes2);\n        return [\n          value.substring(2, 10),\n          value.substring(10, 14),\n          value.substring(14, 18),\n          value.substring(18, 22),\n          value.substring(22, 34)\n        ].join(\"-\");\n      }\n      exports3.uuidV4 = uuidV4;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/crowdsale.js\n  var require_crowdsale = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/crowdsale.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.decrypt = exports3.CrowdsaleAccount = void 0;\n      var aes_js_1 = __importDefault2(require_aes_js());\n      var address_1 = require_lib7();\n      var bytes_1 = require_lib2();\n      var keccak256_1 = require_lib5();\n      var pbkdf2_1 = require_lib21();\n      var strings_1 = require_lib9();\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version19();\n      var logger = new logger_1.Logger(_version_1.version);\n      var utils_1 = require_utils4();\n      var CrowdsaleAccount = (\n        /** @class */\n        function(_super) {\n          __extends2(CrowdsaleAccount2, _super);\n          function CrowdsaleAccount2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          CrowdsaleAccount2.prototype.isCrowdsaleAccount = function(value) {\n            return !!(value && value._isCrowdsaleAccount);\n          };\n          return CrowdsaleAccount2;\n        }(properties_1.Description)\n      );\n      exports3.CrowdsaleAccount = CrowdsaleAccount;\n      function decrypt(json, password) {\n        var data = JSON.parse(json);\n        password = (0, utils_1.getPassword)(password);\n        var ethaddr = (0, address_1.getAddress)((0, utils_1.searchPath)(data, \"ethaddr\"));\n        var encseed = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"encseed\"));\n        if (!encseed || encseed.length % 16 !== 0) {\n          logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n        }\n        var key = (0, bytes_1.arrayify)((0, pbkdf2_1.pbkdf2)(password, password, 2e3, 32, \"sha256\")).slice(0, 16);\n        var iv = encseed.slice(0, 16);\n        var encryptedSeed = encseed.slice(16);\n        var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n        var seed = aes_js_1.default.padding.pkcs7.strip((0, bytes_1.arrayify)(aesCbc.decrypt(encryptedSeed)));\n        var seedHex = \"\";\n        for (var i = 0; i < seed.length; i++) {\n          seedHex += String.fromCharCode(seed[i]);\n        }\n        var seedHexBytes = (0, strings_1.toUtf8Bytes)(seedHex);\n        var privateKey = (0, keccak256_1.keccak256)(seedHexBytes);\n        return new CrowdsaleAccount({\n          _isCrowdsaleAccount: true,\n          address: ethaddr,\n          privateKey\n        });\n      }\n      exports3.decrypt = decrypt;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/inspect.js\n  var require_inspect = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/inspect.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getJsonWalletAddress = exports3.isKeystoreWallet = exports3.isCrowdsaleWallet = void 0;\n      var address_1 = require_lib7();\n      function isCrowdsaleWallet(json) {\n        var data = null;\n        try {\n          data = JSON.parse(json);\n        } catch (error) {\n          return false;\n        }\n        return data.encseed && data.ethaddr;\n      }\n      exports3.isCrowdsaleWallet = isCrowdsaleWallet;\n      function isKeystoreWallet(json) {\n        var data = null;\n        try {\n          data = JSON.parse(json);\n        } catch (error) {\n          return false;\n        }\n        if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n          return false;\n        }\n        return true;\n      }\n      exports3.isKeystoreWallet = isKeystoreWallet;\n      function getJsonWalletAddress(json) {\n        if (isCrowdsaleWallet(json)) {\n          try {\n            return (0, address_1.getAddress)(JSON.parse(json).ethaddr);\n          } catch (error) {\n            return null;\n          }\n        }\n        if (isKeystoreWallet(json)) {\n          try {\n            return (0, address_1.getAddress)(JSON.parse(json).address);\n          } catch (error) {\n            return null;\n          }\n        }\n        return null;\n      }\n      exports3.getJsonWalletAddress = getJsonWalletAddress;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/scrypt-js@3.0.1/node_modules/scrypt-js/scrypt.js\n  var require_scrypt = __commonJS({\n    \"../../../node_modules/.pnpm/scrypt-js@3.0.1/node_modules/scrypt-js/scrypt.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(root) {\n        const MAX_VALUE = 2147483647;\n        function SHA2562(m) {\n          const K = new Uint32Array([\n            1116352408,\n            1899447441,\n            3049323471,\n            3921009573,\n            961987163,\n            1508970993,\n            2453635748,\n            2870763221,\n            3624381080,\n            310598401,\n            607225278,\n            1426881987,\n            1925078388,\n            2162078206,\n            2614888103,\n            3248222580,\n            3835390401,\n            4022224774,\n            264347078,\n            604807628,\n            770255983,\n            1249150122,\n            1555081692,\n            1996064986,\n            2554220882,\n            2821834349,\n            2952996808,\n            3210313671,\n            3336571891,\n            3584528711,\n            113926993,\n            338241895,\n            666307205,\n            773529912,\n            1294757372,\n            1396182291,\n            1695183700,\n            1986661051,\n            2177026350,\n            2456956037,\n            2730485921,\n            2820302411,\n            3259730800,\n            3345764771,\n            3516065817,\n            3600352804,\n            4094571909,\n            275423344,\n            430227734,\n            506948616,\n            659060556,\n            883997877,\n            958139571,\n            1322822218,\n            1537002063,\n            1747873779,\n            1955562222,\n            2024104815,\n            2227730452,\n            2361852424,\n            2428436474,\n            2756734187,\n            3204031479,\n            3329325298\n          ]);\n          let h0 = 1779033703, h1 = 3144134277, h2 = 1013904242, h3 = 2773480762;\n          let h4 = 1359893119, h5 = 2600822924, h6 = 528734635, h7 = 1541459225;\n          const w = new Uint32Array(64);\n          function blocks(p2) {\n            let off2 = 0, len = p2.length;\n            while (len >= 64) {\n              let a = h0, b2 = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i2, j, t1, t2;\n              for (i2 = 0; i2 < 16; i2++) {\n                j = off2 + i2 * 4;\n                w[i2] = (p2[j] & 255) << 24 | (p2[j + 1] & 255) << 16 | (p2[j + 2] & 255) << 8 | p2[j + 3] & 255;\n              }\n              for (i2 = 16; i2 < 64; i2++) {\n                u = w[i2 - 2];\n                t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n                u = w[i2 - 15];\n                t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n                w[i2] = (t1 + w[i2 - 7] | 0) + (t2 + w[i2 - 16] | 0) | 0;\n              }\n              for (i2 = 0; i2 < 64; i2++) {\n                t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i2] + w[i2] | 0) | 0) | 0;\n                t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b2 ^ a & c ^ b2 & c) | 0;\n                h = g;\n                g = f;\n                f = e;\n                e = d + t1 | 0;\n                d = c;\n                c = b2;\n                b2 = a;\n                a = t1 + t2 | 0;\n              }\n              h0 = h0 + a | 0;\n              h1 = h1 + b2 | 0;\n              h2 = h2 + c | 0;\n              h3 = h3 + d | 0;\n              h4 = h4 + e | 0;\n              h5 = h5 + f | 0;\n              h6 = h6 + g | 0;\n              h7 = h7 + h | 0;\n              off2 += 64;\n              len -= 64;\n            }\n          }\n          blocks(m);\n          let i, bytesLeft = m.length % 64, bitLenHi = m.length / 536870912 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);\n          p.push(128);\n          for (i = bytesLeft + 1; i < numZeros; i++) {\n            p.push(0);\n          }\n          p.push(bitLenHi >>> 24 & 255);\n          p.push(bitLenHi >>> 16 & 255);\n          p.push(bitLenHi >>> 8 & 255);\n          p.push(bitLenHi >>> 0 & 255);\n          p.push(bitLenLo >>> 24 & 255);\n          p.push(bitLenLo >>> 16 & 255);\n          p.push(bitLenLo >>> 8 & 255);\n          p.push(bitLenLo >>> 0 & 255);\n          blocks(p);\n          return [\n            h0 >>> 24 & 255,\n            h0 >>> 16 & 255,\n            h0 >>> 8 & 255,\n            h0 >>> 0 & 255,\n            h1 >>> 24 & 255,\n            h1 >>> 16 & 255,\n            h1 >>> 8 & 255,\n            h1 >>> 0 & 255,\n            h2 >>> 24 & 255,\n            h2 >>> 16 & 255,\n            h2 >>> 8 & 255,\n            h2 >>> 0 & 255,\n            h3 >>> 24 & 255,\n            h3 >>> 16 & 255,\n            h3 >>> 8 & 255,\n            h3 >>> 0 & 255,\n            h4 >>> 24 & 255,\n            h4 >>> 16 & 255,\n            h4 >>> 8 & 255,\n            h4 >>> 0 & 255,\n            h5 >>> 24 & 255,\n            h5 >>> 16 & 255,\n            h5 >>> 8 & 255,\n            h5 >>> 0 & 255,\n            h6 >>> 24 & 255,\n            h6 >>> 16 & 255,\n            h6 >>> 8 & 255,\n            h6 >>> 0 & 255,\n            h7 >>> 24 & 255,\n            h7 >>> 16 & 255,\n            h7 >>> 8 & 255,\n            h7 >>> 0 & 255\n          ];\n        }\n        function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n          password = password.length <= 64 ? password : SHA2562(password);\n          const innerLen = 64 + salt.length + 4;\n          const inner = new Array(innerLen);\n          const outerKey = new Array(64);\n          let i;\n          let dk = [];\n          for (i = 0; i < 64; i++) {\n            inner[i] = 54;\n          }\n          for (i = 0; i < password.length; i++) {\n            inner[i] ^= password[i];\n          }\n          for (i = 0; i < salt.length; i++) {\n            inner[64 + i] = salt[i];\n          }\n          for (i = innerLen - 4; i < innerLen; i++) {\n            inner[i] = 0;\n          }\n          for (i = 0; i < 64; i++)\n            outerKey[i] = 92;\n          for (i = 0; i < password.length; i++)\n            outerKey[i] ^= password[i];\n          function incrementCounter() {\n            for (let i2 = innerLen - 1; i2 >= innerLen - 4; i2--) {\n              inner[i2]++;\n              if (inner[i2] <= 255)\n                return;\n              inner[i2] = 0;\n            }\n          }\n          while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA2562(outerKey.concat(SHA2562(inner))));\n            dkLen -= 32;\n          }\n          if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA2562(outerKey.concat(SHA2562(inner))).slice(0, dkLen));\n          }\n          return dk;\n        }\n        function blockmix_salsa8(BY, Yi, r, x, _X) {\n          let i;\n          arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n          for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + i * 16, 16);\n          }\n          for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);\n          }\n          for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n          }\n        }\n        function R(a, b2) {\n          return a << b2 | a >>> 32 - b2;\n        }\n        function salsa20_8(B, x) {\n          arraycopy(B, 0, x, 0, 16);\n          for (let i = 8; i > 0; i -= 2) {\n            x[4] ^= R(x[0] + x[12], 7);\n            x[8] ^= R(x[4] + x[0], 9);\n            x[12] ^= R(x[8] + x[4], 13);\n            x[0] ^= R(x[12] + x[8], 18);\n            x[9] ^= R(x[5] + x[1], 7);\n            x[13] ^= R(x[9] + x[5], 9);\n            x[1] ^= R(x[13] + x[9], 13);\n            x[5] ^= R(x[1] + x[13], 18);\n            x[14] ^= R(x[10] + x[6], 7);\n            x[2] ^= R(x[14] + x[10], 9);\n            x[6] ^= R(x[2] + x[14], 13);\n            x[10] ^= R(x[6] + x[2], 18);\n            x[3] ^= R(x[15] + x[11], 7);\n            x[7] ^= R(x[3] + x[15], 9);\n            x[11] ^= R(x[7] + x[3], 13);\n            x[15] ^= R(x[11] + x[7], 18);\n            x[1] ^= R(x[0] + x[3], 7);\n            x[2] ^= R(x[1] + x[0], 9);\n            x[3] ^= R(x[2] + x[1], 13);\n            x[0] ^= R(x[3] + x[2], 18);\n            x[6] ^= R(x[5] + x[4], 7);\n            x[7] ^= R(x[6] + x[5], 9);\n            x[4] ^= R(x[7] + x[6], 13);\n            x[5] ^= R(x[4] + x[7], 18);\n            x[11] ^= R(x[10] + x[9], 7);\n            x[8] ^= R(x[11] + x[10], 9);\n            x[9] ^= R(x[8] + x[11], 13);\n            x[10] ^= R(x[9] + x[8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n          }\n          for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n          }\n        }\n        function blockxor(S, Si, D, len) {\n          for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i];\n          }\n        }\n        function arraycopy(src, srcPos, dest, destPos, length) {\n          while (length--) {\n            dest[destPos++] = src[srcPos++];\n          }\n        }\n        function checkBufferish(o) {\n          if (!o || typeof o.length !== \"number\") {\n            return false;\n          }\n          for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof v !== \"number\" || v % 1 || v < 0 || v >= 256) {\n              return false;\n            }\n          }\n          return true;\n        }\n        function ensureInteger(value, name) {\n          if (typeof value !== \"number\" || value % 1) {\n            throw new Error(\"invalid \" + name);\n          }\n          return value;\n        }\n        function _scrypt(password, salt, N, r, p, dkLen, callback) {\n          N = ensureInteger(N, \"N\");\n          r = ensureInteger(r, \"r\");\n          p = ensureInteger(p, \"p\");\n          dkLen = ensureInteger(dkLen, \"dkLen\");\n          if (N === 0 || (N & N - 1) !== 0) {\n            throw new Error(\"N must be power of 2\");\n          }\n          if (N > MAX_VALUE / 128 / r) {\n            throw new Error(\"N too large\");\n          }\n          if (r > MAX_VALUE / 128 / p) {\n            throw new Error(\"r too large\");\n          }\n          if (!checkBufferish(password)) {\n            throw new Error(\"password must be an array or buffer\");\n          }\n          password = Array.prototype.slice.call(password);\n          if (!checkBufferish(salt)) {\n            throw new Error(\"salt must be an array or buffer\");\n          }\n          salt = Array.prototype.slice.call(salt);\n          let b2 = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n          const B = new Uint32Array(p * 32 * r);\n          for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = (b2[j + 3] & 255) << 24 | (b2[j + 2] & 255) << 16 | (b2[j + 1] & 255) << 8 | (b2[j + 0] & 255) << 0;\n          }\n          const XY = new Uint32Array(64 * r);\n          const V = new Uint32Array(32 * r * N);\n          const Yi = 32 * r;\n          const x = new Uint32Array(16);\n          const _X = new Uint32Array(16);\n          const totalOps = p * N * 2;\n          let currentOp = 0;\n          let lastPercent10 = null;\n          let stop = false;\n          let state = 0;\n          let i0 = 0, i1;\n          let Bi;\n          const limit = callback ? parseInt(1e3 / r) : 4294967295;\n          const nextTick2 = typeof setImmediate !== \"undefined\" ? setImmediate : setTimeout;\n          const incrementalSMix = function() {\n            if (stop) {\n              return callback(new Error(\"cancelled\"), currentOp / totalOps);\n            }\n            let steps;\n            switch (state) {\n              case 0:\n                Bi = i0 * 32 * r;\n                arraycopy(B, Bi, XY, 0, Yi);\n                state = 1;\n                i1 = 0;\n              case 1:\n                steps = N - i1;\n                if (steps > limit) {\n                  steps = limit;\n                }\n                for (let i = 0; i < steps; i++) {\n                  arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);\n                  blockmix_salsa8(XY, Yi, r, x, _X);\n                }\n                i1 += steps;\n                currentOp += steps;\n                if (callback) {\n                  const percent10 = parseInt(1e3 * currentOp / totalOps);\n                  if (percent10 !== lastPercent10) {\n                    stop = callback(null, currentOp / totalOps);\n                    if (stop) {\n                      break;\n                    }\n                    lastPercent10 = percent10;\n                  }\n                }\n                if (i1 < N) {\n                  break;\n                }\n                i1 = 0;\n                state = 2;\n              case 2:\n                steps = N - i1;\n                if (steps > limit) {\n                  steps = limit;\n                }\n                for (let i = 0; i < steps; i++) {\n                  const offset = (2 * r - 1) * 16;\n                  const j = XY[offset] & N - 1;\n                  blockxor(V, j * Yi, XY, Yi);\n                  blockmix_salsa8(XY, Yi, r, x, _X);\n                }\n                i1 += steps;\n                currentOp += steps;\n                if (callback) {\n                  const percent10 = parseInt(1e3 * currentOp / totalOps);\n                  if (percent10 !== lastPercent10) {\n                    stop = callback(null, currentOp / totalOps);\n                    if (stop) {\n                      break;\n                    }\n                    lastPercent10 = percent10;\n                  }\n                }\n                if (i1 < N) {\n                  break;\n                }\n                arraycopy(XY, 0, B, Bi, Yi);\n                i0++;\n                if (i0 < p) {\n                  state = 0;\n                  break;\n                }\n                b2 = [];\n                for (let i = 0; i < B.length; i++) {\n                  b2.push(B[i] >> 0 & 255);\n                  b2.push(B[i] >> 8 & 255);\n                  b2.push(B[i] >> 16 & 255);\n                  b2.push(B[i] >> 24 & 255);\n                }\n                const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b2, dkLen);\n                if (callback) {\n                  callback(null, 1, derivedKey);\n                }\n                return derivedKey;\n            }\n            if (callback) {\n              nextTick2(incrementalSMix);\n            }\n          };\n          if (!callback) {\n            while (true) {\n              const derivedKey = incrementalSMix();\n              if (derivedKey != void 0) {\n                return derivedKey;\n              }\n            }\n          }\n          incrementalSMix();\n        }\n        const lib = {\n          scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n              let lastProgress = 0;\n              if (progressCallback) {\n                progressCallback(0);\n              }\n              _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                if (error) {\n                  reject(error);\n                } else if (key) {\n                  if (progressCallback && lastProgress !== 1) {\n                    progressCallback(1);\n                  }\n                  resolve(new Uint8Array(key));\n                } else if (progressCallback && progress !== lastProgress) {\n                  lastProgress = progress;\n                  return progressCallback(progress);\n                }\n              });\n            });\n          },\n          syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n          }\n        };\n        if (typeof exports3 !== \"undefined\") {\n          module.exports = lib;\n        } else if (typeof define === \"function\" && define.amd) {\n          define(lib);\n        } else if (root) {\n          if (root.scrypt) {\n            root._scrypt = root.scrypt;\n          }\n          root.scrypt = lib;\n        }\n      })(exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/keystore.js\n  var require_keystore = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/keystore.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.encrypt = exports3.decrypt = exports3.decryptSync = exports3.KeystoreAccount = void 0;\n      var aes_js_1 = __importDefault2(require_aes_js());\n      var scrypt_js_1 = __importDefault2(require_scrypt());\n      var address_1 = require_lib7();\n      var bytes_1 = require_lib2();\n      var hdnode_1 = require_lib23();\n      var keccak256_1 = require_lib5();\n      var pbkdf2_1 = require_lib21();\n      var random_1 = require_lib24();\n      var properties_1 = require_lib4();\n      var transactions_1 = require_lib17();\n      var utils_1 = require_utils4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version19();\n      var logger = new logger_1.Logger(_version_1.version);\n      function hasMnemonic(value) {\n        return value != null && value.mnemonic && value.mnemonic.phrase;\n      }\n      var KeystoreAccount = (\n        /** @class */\n        function(_super) {\n          __extends2(KeystoreAccount2, _super);\n          function KeystoreAccount2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          KeystoreAccount2.prototype.isKeystoreAccount = function(value) {\n            return !!(value && value._isKeystoreAccount);\n          };\n          return KeystoreAccount2;\n        }(properties_1.Description)\n      );\n      exports3.KeystoreAccount = KeystoreAccount;\n      function _decrypt(data, key, ciphertext) {\n        var cipher = (0, utils_1.searchPath)(data, \"crypto/cipher\");\n        if (cipher === \"aes-128-ctr\") {\n          var iv = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"crypto/cipherparams/iv\"));\n          var counter = new aes_js_1.default.Counter(iv);\n          var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(key, counter);\n          return (0, bytes_1.arrayify)(aesCtr.decrypt(ciphertext));\n        }\n        return null;\n      }\n      function _getAccount(data, key) {\n        var ciphertext = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"crypto/ciphertext\"));\n        var computedMAC = (0, bytes_1.hexlify)((0, keccak256_1.keccak256)((0, bytes_1.concat)([key.slice(16, 32), ciphertext]))).substring(2);\n        if (computedMAC !== (0, utils_1.searchPath)(data, \"crypto/mac\").toLowerCase()) {\n          throw new Error(\"invalid password\");\n        }\n        var privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n        if (!privateKey) {\n          logger.throwError(\"unsupported cipher\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n          });\n        }\n        var mnemonicKey = key.slice(32, 64);\n        var address = (0, transactions_1.computeAddress)(privateKey);\n        if (data.address) {\n          var check = data.address.toLowerCase();\n          if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n          }\n          if ((0, address_1.getAddress)(check) !== address) {\n            throw new Error(\"address mismatch\");\n          }\n        }\n        var account = {\n          _isKeystoreAccount: true,\n          address,\n          privateKey: (0, bytes_1.hexlify)(privateKey)\n        };\n        if ((0, utils_1.searchPath)(data, \"x-ethers/version\") === \"0.1\") {\n          var mnemonicCiphertext = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"x-ethers/mnemonicCiphertext\"));\n          var mnemonicIv = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"x-ethers/mnemonicCounter\"));\n          var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n          var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n          var path = (0, utils_1.searchPath)(data, \"x-ethers/path\") || hdnode_1.defaultPath;\n          var locale = (0, utils_1.searchPath)(data, \"x-ethers/locale\") || \"en\";\n          var entropy = (0, bytes_1.arrayify)(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n          try {\n            var mnemonic = (0, hdnode_1.entropyToMnemonic)(entropy, locale);\n            var node = hdnode_1.HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n              throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n          } catch (error) {\n            if (error.code !== logger_1.Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n              throw error;\n            }\n          }\n        }\n        return new KeystoreAccount(account);\n      }\n      function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n        return (0, bytes_1.arrayify)((0, pbkdf2_1.pbkdf2)(passwordBytes, salt, count, dkLen, prfFunc));\n      }\n      function pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n        return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n      }\n      function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n        var passwordBytes = (0, utils_1.getPassword)(password);\n        var kdf = (0, utils_1.searchPath)(data, \"crypto/kdf\");\n        if (kdf && typeof kdf === \"string\") {\n          var throwError2 = function(name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n          };\n          if (kdf.toLowerCase() === \"scrypt\") {\n            var salt = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"crypto/kdfparams/salt\"));\n            var N = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/n\"));\n            var r = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/r\"));\n            var p = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/p\"));\n            if (!N || !r || !p) {\n              throwError2(\"kdf\", kdf);\n            }\n            if ((N & N - 1) !== 0) {\n              throwError2(\"N\", N);\n            }\n            var dkLen = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n              throwError2(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n          } else if (kdf.toLowerCase() === \"pbkdf2\") {\n            var salt = (0, utils_1.looseArrayify)((0, utils_1.searchPath)(data, \"crypto/kdfparams/salt\"));\n            var prfFunc = null;\n            var prf = (0, utils_1.searchPath)(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n              prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n              prfFunc = \"sha512\";\n            } else {\n              throwError2(\"prf\", prf);\n            }\n            var count = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/c\"));\n            var dkLen = parseInt((0, utils_1.searchPath)(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n              throwError2(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n          }\n        }\n        return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n      }\n      function decryptSync(json, password) {\n        var data = JSON.parse(json);\n        var key = _computeKdfKey(data, password, pbkdf2Sync, scrypt_js_1.default.syncScrypt);\n        return _getAccount(data, key);\n      }\n      exports3.decryptSync = decryptSync;\n      function decrypt(json, password, progressCallback) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var data, key;\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                data = JSON.parse(json);\n                return [4, _computeKdfKey(data, password, pbkdf2, scrypt_js_1.default.scrypt, progressCallback)];\n              case 1:\n                key = _a.sent();\n                return [2, _getAccount(data, key)];\n            }\n          });\n        });\n      }\n      exports3.decrypt = decrypt;\n      function encrypt(account, password, options, progressCallback) {\n        try {\n          if ((0, address_1.getAddress)(account.address) !== (0, transactions_1.computeAddress)(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n          }\n          if (hasMnemonic(account)) {\n            var mnemonic = account.mnemonic;\n            var node = hdnode_1.HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || hdnode_1.defaultPath);\n            if (node.privateKey != account.privateKey) {\n              throw new Error(\"mnemonic mismatch\");\n            }\n          }\n        } catch (e) {\n          return Promise.reject(e);\n        }\n        if (typeof options === \"function\" && !progressCallback) {\n          progressCallback = options;\n          options = {};\n        }\n        if (!options) {\n          options = {};\n        }\n        var privateKey = (0, bytes_1.arrayify)(account.privateKey);\n        var passwordBytes = (0, utils_1.getPassword)(password);\n        var entropy = null;\n        var path = null;\n        var locale = null;\n        if (hasMnemonic(account)) {\n          var srcMnemonic = account.mnemonic;\n          entropy = (0, bytes_1.arrayify)((0, hdnode_1.mnemonicToEntropy)(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n          path = srcMnemonic.path || hdnode_1.defaultPath;\n          locale = srcMnemonic.locale || \"en\";\n        }\n        var client = options.client;\n        if (!client) {\n          client = \"ethers.js\";\n        }\n        var salt = null;\n        if (options.salt) {\n          salt = (0, bytes_1.arrayify)(options.salt);\n        } else {\n          salt = (0, random_1.randomBytes)(32);\n          ;\n        }\n        var iv = null;\n        if (options.iv) {\n          iv = (0, bytes_1.arrayify)(options.iv);\n          if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n          }\n        } else {\n          iv = (0, random_1.randomBytes)(16);\n        }\n        var uuidRandom = null;\n        if (options.uuid) {\n          uuidRandom = (0, bytes_1.arrayify)(options.uuid);\n          if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n          }\n        } else {\n          uuidRandom = (0, random_1.randomBytes)(16);\n        }\n        var N = 1 << 17, r = 8, p = 1;\n        if (options.scrypt) {\n          if (options.scrypt.N) {\n            N = options.scrypt.N;\n          }\n          if (options.scrypt.r) {\n            r = options.scrypt.r;\n          }\n          if (options.scrypt.p) {\n            p = options.scrypt.p;\n          }\n        }\n        return scrypt_js_1.default.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then(function(key) {\n          key = (0, bytes_1.arrayify)(key);\n          var derivedKey = key.slice(0, 16);\n          var macPrefix = key.slice(16, 32);\n          var mnemonicKey = key.slice(32, 64);\n          var counter = new aes_js_1.default.Counter(iv);\n          var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(derivedKey, counter);\n          var ciphertext = (0, bytes_1.arrayify)(aesCtr.encrypt(privateKey));\n          var mac = (0, keccak256_1.keccak256)((0, bytes_1.concat)([macPrefix, ciphertext]));\n          var data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: (0, utils_1.uuidV4)(uuidRandom),\n            version: 3,\n            crypto: {\n              cipher: \"aes-128-ctr\",\n              cipherparams: {\n                iv: (0, bytes_1.hexlify)(iv).substring(2)\n              },\n              ciphertext: (0, bytes_1.hexlify)(ciphertext).substring(2),\n              kdf: \"scrypt\",\n              kdfparams: {\n                salt: (0, bytes_1.hexlify)(salt).substring(2),\n                n: N,\n                dklen: 32,\n                p,\n                r\n              },\n              mac: mac.substring(2)\n            }\n          };\n          if (entropy) {\n            var mnemonicIv = (0, random_1.randomBytes)(16);\n            var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n            var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            var mnemonicCiphertext = (0, bytes_1.arrayify)(mnemonicAesCtr.encrypt(entropy));\n            var now = /* @__PURE__ */ new Date();\n            var timestamp = now.getUTCFullYear() + \"-\" + (0, utils_1.zpad)(now.getUTCMonth() + 1, 2) + \"-\" + (0, utils_1.zpad)(now.getUTCDate(), 2) + \"T\" + (0, utils_1.zpad)(now.getUTCHours(), 2) + \"-\" + (0, utils_1.zpad)(now.getUTCMinutes(), 2) + \"-\" + (0, utils_1.zpad)(now.getUTCSeconds(), 2) + \".0Z\";\n            data[\"x-ethers\"] = {\n              client,\n              gethFilename: \"UTC--\" + timestamp + \"--\" + data.address,\n              mnemonicCounter: (0, bytes_1.hexlify)(mnemonicIv).substring(2),\n              mnemonicCiphertext: (0, bytes_1.hexlify)(mnemonicCiphertext).substring(2),\n              path,\n              locale,\n              version: \"0.1\"\n            };\n          }\n          return JSON.stringify(data);\n        });\n      }\n      exports3.encrypt = encrypt;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/index.js\n  var require_lib25 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+json-wallets@5.8.0/node_modules/@ethersproject/json-wallets/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.decryptJsonWalletSync = exports3.decryptJsonWallet = exports3.getJsonWalletAddress = exports3.isKeystoreWallet = exports3.isCrowdsaleWallet = exports3.encryptKeystore = exports3.decryptKeystoreSync = exports3.decryptKeystore = exports3.decryptCrowdsale = void 0;\n      var crowdsale_1 = require_crowdsale();\n      Object.defineProperty(exports3, \"decryptCrowdsale\", { enumerable: true, get: function() {\n        return crowdsale_1.decrypt;\n      } });\n      var inspect_1 = require_inspect();\n      Object.defineProperty(exports3, \"getJsonWalletAddress\", { enumerable: true, get: function() {\n        return inspect_1.getJsonWalletAddress;\n      } });\n      Object.defineProperty(exports3, \"isCrowdsaleWallet\", { enumerable: true, get: function() {\n        return inspect_1.isCrowdsaleWallet;\n      } });\n      Object.defineProperty(exports3, \"isKeystoreWallet\", { enumerable: true, get: function() {\n        return inspect_1.isKeystoreWallet;\n      } });\n      var keystore_1 = require_keystore();\n      Object.defineProperty(exports3, \"decryptKeystore\", { enumerable: true, get: function() {\n        return keystore_1.decrypt;\n      } });\n      Object.defineProperty(exports3, \"decryptKeystoreSync\", { enumerable: true, get: function() {\n        return keystore_1.decryptSync;\n      } });\n      Object.defineProperty(exports3, \"encryptKeystore\", { enumerable: true, get: function() {\n        return keystore_1.encrypt;\n      } });\n      function decryptJsonWallet(json, password, progressCallback) {\n        if ((0, inspect_1.isCrowdsaleWallet)(json)) {\n          if (progressCallback) {\n            progressCallback(0);\n          }\n          var account = (0, crowdsale_1.decrypt)(json, password);\n          if (progressCallback) {\n            progressCallback(1);\n          }\n          return Promise.resolve(account);\n        }\n        if ((0, inspect_1.isKeystoreWallet)(json)) {\n          return (0, keystore_1.decrypt)(json, password, progressCallback);\n        }\n        return Promise.reject(new Error(\"invalid JSON wallet\"));\n      }\n      exports3.decryptJsonWallet = decryptJsonWallet;\n      function decryptJsonWalletSync(json, password) {\n        if ((0, inspect_1.isCrowdsaleWallet)(json)) {\n          return (0, crowdsale_1.decrypt)(json, password);\n        }\n        if ((0, inspect_1.isKeystoreWallet)(json)) {\n          return (0, keystore_1.decryptSync)(json, password);\n        }\n        throw new Error(\"invalid JSON wallet\");\n      }\n      exports3.decryptJsonWalletSync = decryptJsonWalletSync;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wallet@5.8.0/node_modules/@ethersproject/wallet/lib/_version.js\n  var require_version20 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wallet@5.8.0/node_modules/@ethersproject/wallet/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"wallet/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+wallet@5.8.0/node_modules/@ethersproject/wallet/lib/index.js\n  var require_lib26 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+wallet@5.8.0/node_modules/@ethersproject/wallet/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.verifyTypedData = exports3.verifyMessage = exports3.Wallet = void 0;\n      var address_1 = require_lib7();\n      var abstract_provider_1 = require_lib14();\n      var abstract_signer_1 = require_lib15();\n      var bytes_1 = require_lib2();\n      var hash_1 = require_lib12();\n      var hdnode_1 = require_lib23();\n      var keccak256_1 = require_lib5();\n      var properties_1 = require_lib4();\n      var random_1 = require_lib24();\n      var signing_key_1 = require_lib16();\n      var json_wallets_1 = require_lib25();\n      var transactions_1 = require_lib17();\n      var logger_1 = require_lib();\n      var _version_1 = require_version20();\n      var logger = new logger_1.Logger(_version_1.version);\n      function isAccount(value) {\n        return value != null && (0, bytes_1.isHexString)(value.privateKey, 32) && value.address != null;\n      }\n      function hasMnemonic(value) {\n        var mnemonic = value.mnemonic;\n        return mnemonic && mnemonic.phrase;\n      }\n      var Wallet = (\n        /** @class */\n        function(_super) {\n          __extends2(Wallet2, _super);\n          function Wallet2(privateKey, provider) {\n            var _this = _super.call(this) || this;\n            if (isAccount(privateKey)) {\n              var signingKey_1 = new signing_key_1.SigningKey(privateKey.privateKey);\n              (0, properties_1.defineReadOnly)(_this, \"_signingKey\", function() {\n                return signingKey_1;\n              });\n              (0, properties_1.defineReadOnly)(_this, \"address\", (0, transactions_1.computeAddress)(_this.publicKey));\n              if (_this.address !== (0, address_1.getAddress)(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n              }\n              if (hasMnemonic(privateKey)) {\n                var srcMnemonic_1 = privateKey.mnemonic;\n                (0, properties_1.defineReadOnly)(_this, \"_mnemonic\", function() {\n                  return {\n                    phrase: srcMnemonic_1.phrase,\n                    path: srcMnemonic_1.path || hdnode_1.defaultPath,\n                    locale: srcMnemonic_1.locale || \"en\"\n                  };\n                });\n                var mnemonic = _this.mnemonic;\n                var node = hdnode_1.HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if ((0, transactions_1.computeAddress)(node.privateKey) !== _this.address) {\n                  logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n              } else {\n                (0, properties_1.defineReadOnly)(_this, \"_mnemonic\", function() {\n                  return null;\n                });\n              }\n            } else {\n              if (signing_key_1.SigningKey.isSigningKey(privateKey)) {\n                if (privateKey.curve !== \"secp256k1\") {\n                  logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                (0, properties_1.defineReadOnly)(_this, \"_signingKey\", function() {\n                  return privateKey;\n                });\n              } else {\n                if (typeof privateKey === \"string\") {\n                  if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                    privateKey = \"0x\" + privateKey;\n                  }\n                }\n                var signingKey_2 = new signing_key_1.SigningKey(privateKey);\n                (0, properties_1.defineReadOnly)(_this, \"_signingKey\", function() {\n                  return signingKey_2;\n                });\n              }\n              (0, properties_1.defineReadOnly)(_this, \"_mnemonic\", function() {\n                return null;\n              });\n              (0, properties_1.defineReadOnly)(_this, \"address\", (0, transactions_1.computeAddress)(_this.publicKey));\n            }\n            if (provider && !abstract_provider_1.Provider.isProvider(provider)) {\n              logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n            }\n            (0, properties_1.defineReadOnly)(_this, \"provider\", provider || null);\n            return _this;\n          }\n          Object.defineProperty(Wallet2.prototype, \"mnemonic\", {\n            get: function() {\n              return this._mnemonic();\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Wallet2.prototype, \"privateKey\", {\n            get: function() {\n              return this._signingKey().privateKey;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Wallet2.prototype, \"publicKey\", {\n            get: function() {\n              return this._signingKey().publicKey;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Wallet2.prototype.getAddress = function() {\n            return Promise.resolve(this.address);\n          };\n          Wallet2.prototype.connect = function(provider) {\n            return new Wallet2(this, provider);\n          };\n          Wallet2.prototype.signTransaction = function(transaction) {\n            var _this = this;\n            return (0, properties_1.resolveProperties)(transaction).then(function(tx) {\n              if (tx.from != null) {\n                if ((0, address_1.getAddress)(tx.from) !== _this.address) {\n                  logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n              }\n              var signature = _this._signingKey().signDigest((0, keccak256_1.keccak256)((0, transactions_1.serialize)(tx)));\n              return (0, transactions_1.serialize)(tx, signature);\n            });\n          };\n          Wallet2.prototype.signMessage = function(message) {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, (0, bytes_1.joinSignature)(this._signingKey().signDigest((0, hash_1.hashMessage)(message)))];\n              });\n            });\n          };\n          Wallet2.prototype._signTypedData = function(domain2, types, value) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var populated;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, hash_1._TypedDataEncoder.resolveNames(domain2, types, value, function(name) {\n                      if (_this.provider == null) {\n                        logger.throwError(\"cannot resolve ENS names without a provider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                          operation: \"resolveName\",\n                          value: name\n                        });\n                      }\n                      return _this.provider.resolveName(name);\n                    })];\n                  case 1:\n                    populated = _a.sent();\n                    return [2, (0, bytes_1.joinSignature)(this._signingKey().signDigest(hash_1._TypedDataEncoder.hash(populated.domain, types, populated.value)))];\n                }\n              });\n            });\n          };\n          Wallet2.prototype.encrypt = function(password, options, progressCallback) {\n            if (typeof options === \"function\" && !progressCallback) {\n              progressCallback = options;\n              options = {};\n            }\n            if (progressCallback && typeof progressCallback !== \"function\") {\n              throw new Error(\"invalid callback\");\n            }\n            if (!options) {\n              options = {};\n            }\n            return (0, json_wallets_1.encryptKeystore)(this, password, options, progressCallback);\n          };\n          Wallet2.createRandom = function(options) {\n            var entropy = (0, random_1.randomBytes)(16);\n            if (!options) {\n              options = {};\n            }\n            if (options.extraEntropy) {\n              entropy = (0, bytes_1.arrayify)((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, bytes_1.concat)([entropy, options.extraEntropy])), 0, 16));\n            }\n            var mnemonic = (0, hdnode_1.entropyToMnemonic)(entropy, options.locale);\n            return Wallet2.fromMnemonic(mnemonic, options.path, options.locale);\n          };\n          Wallet2.fromEncryptedJson = function(json, password, progressCallback) {\n            return (0, json_wallets_1.decryptJsonWallet)(json, password, progressCallback).then(function(account) {\n              return new Wallet2(account);\n            });\n          };\n          Wallet2.fromEncryptedJsonSync = function(json, password) {\n            return new Wallet2((0, json_wallets_1.decryptJsonWalletSync)(json, password));\n          };\n          Wallet2.fromMnemonic = function(mnemonic, path, wordlist) {\n            if (!path) {\n              path = hdnode_1.defaultPath;\n            }\n            return new Wallet2(hdnode_1.HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n          };\n          return Wallet2;\n        }(abstract_signer_1.Signer)\n      );\n      exports3.Wallet = Wallet;\n      function verifyMessage(message, signature) {\n        return (0, transactions_1.recoverAddress)((0, hash_1.hashMessage)(message), signature);\n      }\n      exports3.verifyMessage = verifyMessage;\n      function verifyTypedData2(domain2, types, value, signature) {\n        return (0, transactions_1.recoverAddress)(hash_1._TypedDataEncoder.hash(domain2, types, value), signature);\n      }\n      exports3.verifyTypedData = verifyTypedData2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+networks@5.8.0/node_modules/@ethersproject/networks/lib/_version.js\n  var require_version21 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+networks@5.8.0/node_modules/@ethersproject/networks/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"networks/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+networks@5.8.0/node_modules/@ethersproject/networks/lib/index.js\n  var require_lib27 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+networks@5.8.0/node_modules/@ethersproject/networks/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getNetwork = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version21();\n      var logger = new logger_1.Logger(_version_1.version);\n      function isRenetworkable(value) {\n        return value && typeof value.renetwork === \"function\";\n      }\n      function ethDefaultProvider(network) {\n        var func = function(providers, options) {\n          if (options == null) {\n            options = {};\n          }\n          var providerList = [];\n          if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n              providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch (error) {\n            }\n          }\n          if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n              providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch (error) {\n            }\n          }\n          if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n              providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch (error) {\n            }\n          }\n          if (providers.PocketProvider && options.pocket !== \"-\") {\n            var skip = [\"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\"];\n            try {\n              var provider = new providers.PocketProvider(network, options.pocket);\n              if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                providerList.push(provider);\n              }\n            } catch (error) {\n            }\n          }\n          if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n              providerList.push(new providers.CloudflareProvider(network));\n            } catch (error) {\n            }\n          }\n          if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n              var skip = [\"ropsten\"];\n              var provider = new providers.AnkrProvider(network, options.ankr);\n              if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                providerList.push(provider);\n              }\n            } catch (error) {\n            }\n          }\n          if (providers.QuickNodeProvider && options.quicknode !== \"-\") {\n            try {\n              providerList.push(new providers.QuickNodeProvider(network, options.quicknode));\n            } catch (error) {\n            }\n          }\n          if (providerList.length === 0) {\n            return null;\n          }\n          if (providers.FallbackProvider) {\n            var quorum = 1;\n            if (options.quorum != null) {\n              quorum = options.quorum;\n            } else if (network === \"homestead\") {\n              quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n          }\n          return providerList[0];\n        };\n        func.renetwork = function(network2) {\n          return ethDefaultProvider(network2);\n        };\n        return func;\n      }\n      function etcDefaultProvider(url, network) {\n        var func = function(providers, options) {\n          if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n          }\n          return null;\n        };\n        func.renetwork = function(network2) {\n          return etcDefaultProvider(url, network2);\n        };\n        return func;\n      }\n      var homestead = {\n        chainId: 1,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"homestead\",\n        _defaultProvider: ethDefaultProvider(\"homestead\")\n      };\n      var ropsten = {\n        chainId: 3,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"ropsten\",\n        _defaultProvider: ethDefaultProvider(\"ropsten\")\n      };\n      var classicMordor = {\n        chainId: 63,\n        name: \"classicMordor\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n      };\n      var networks = {\n        unspecified: { chainId: 0, name: \"unspecified\" },\n        homestead,\n        mainnet: homestead,\n        morden: { chainId: 2, name: \"morden\" },\n        ropsten,\n        testnet: ropsten,\n        rinkeby: {\n          chainId: 4,\n          ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n          name: \"rinkeby\",\n          _defaultProvider: ethDefaultProvider(\"rinkeby\")\n        },\n        kovan: {\n          chainId: 42,\n          name: \"kovan\",\n          _defaultProvider: ethDefaultProvider(\"kovan\")\n        },\n        goerli: {\n          chainId: 5,\n          ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n          name: \"goerli\",\n          _defaultProvider: ethDefaultProvider(\"goerli\")\n        },\n        kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n        sepolia: {\n          chainId: 11155111,\n          ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n          name: \"sepolia\",\n          _defaultProvider: ethDefaultProvider(\"sepolia\")\n        },\n        holesky: {\n          chainId: 17e3,\n          name: \"holesky\",\n          _defaultProvider: ethDefaultProvider(\"holesky\")\n        },\n        // ETC (See: #351)\n        classic: {\n          chainId: 61,\n          name: \"classic\",\n          _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/etc\", \"classic\")\n        },\n        classicMorden: { chainId: 62, name: \"classicMorden\" },\n        classicMordor,\n        classicTestnet: classicMordor,\n        classicKotti: {\n          chainId: 6,\n          name: \"classicKotti\",\n          _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/kotti\", \"classicKotti\")\n        },\n        xdai: { chainId: 100, name: \"xdai\" },\n        matic: {\n          chainId: 137,\n          name: \"matic\",\n          _defaultProvider: ethDefaultProvider(\"matic\")\n        },\n        maticmum: {\n          chainId: 80001,\n          name: \"maticmum\",\n          _defaultProvider: ethDefaultProvider(\"maticmum\")\n        },\n        optimism: {\n          chainId: 10,\n          name: \"optimism\",\n          _defaultProvider: ethDefaultProvider(\"optimism\")\n        },\n        \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n        \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n        \"optimism-sepolia\": { chainId: 11155420, name: \"optimism-sepolia\" },\n        arbitrum: { chainId: 42161, name: \"arbitrum\" },\n        \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n        \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n        \"arbitrum-sepolia\": { chainId: 421614, name: \"arbitrum-sepolia\" },\n        bnb: { chainId: 56, name: \"bnb\" },\n        bnbt: { chainId: 97, name: \"bnbt\" }\n      };\n      function getNetwork(network) {\n        if (network == null) {\n          return null;\n        }\n        if (typeof network === \"number\") {\n          for (var name_1 in networks) {\n            var standard_1 = networks[name_1];\n            if (standard_1.chainId === network) {\n              return {\n                name: standard_1.name,\n                chainId: standard_1.chainId,\n                ensAddress: standard_1.ensAddress || null,\n                _defaultProvider: standard_1._defaultProvider || null\n              };\n            }\n          }\n          return {\n            chainId: network,\n            name: \"unknown\"\n          };\n        }\n        if (typeof network === \"string\") {\n          var standard_2 = networks[network];\n          if (standard_2 == null) {\n            return null;\n          }\n          return {\n            name: standard_2.name,\n            chainId: standard_2.chainId,\n            ensAddress: standard_2.ensAddress,\n            _defaultProvider: standard_2._defaultProvider || null\n          };\n        }\n        var standard = networks[network.name];\n        if (!standard) {\n          if (typeof network.chainId !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n          }\n          return network;\n        }\n        if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n          logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n        }\n        var defaultProvider = network._defaultProvider || null;\n        if (defaultProvider == null && standard._defaultProvider) {\n          if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n          } else {\n            defaultProvider = standard._defaultProvider;\n          }\n        }\n        return {\n          name: network.name,\n          chainId: standard.chainId,\n          ensAddress: network.ensAddress || standard.ensAddress || null,\n          _defaultProvider: defaultProvider\n        };\n      }\n      exports3.getNetwork = getNetwork;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/_version.js\n  var require_version22 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"web/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/browser-geturl.js\n  var require_browser_geturl = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/browser-geturl.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getUrl = void 0;\n      var bytes_1 = require_lib2();\n      function getUrl(href, options) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var request, opts, response, body, headers;\n          return __generator2(this, function(_a) {\n            switch (_a.label) {\n              case 0:\n                if (options == null) {\n                  options = {};\n                }\n                request = {\n                  method: options.method || \"GET\",\n                  headers: options.headers || {},\n                  body: options.body || void 0\n                };\n                if (options.skipFetchSetup !== true) {\n                  request.mode = \"cors\";\n                  request.cache = \"no-cache\";\n                  request.credentials = \"same-origin\";\n                  request.redirect = \"follow\";\n                  request.referrer = \"client\";\n                }\n                ;\n                if (options.fetchOptions != null) {\n                  opts = options.fetchOptions;\n                  if (opts.mode) {\n                    request.mode = opts.mode;\n                  }\n                  if (opts.cache) {\n                    request.cache = opts.cache;\n                  }\n                  if (opts.credentials) {\n                    request.credentials = opts.credentials;\n                  }\n                  if (opts.redirect) {\n                    request.redirect = opts.redirect;\n                  }\n                  if (opts.referrer) {\n                    request.referrer = opts.referrer;\n                  }\n                }\n                return [4, fetch(href, request)];\n              case 1:\n                response = _a.sent();\n                return [4, response.arrayBuffer()];\n              case 2:\n                body = _a.sent();\n                headers = {};\n                if (response.headers.forEach) {\n                  response.headers.forEach(function(value, key) {\n                    headers[key.toLowerCase()] = value;\n                  });\n                } else {\n                  response.headers.keys().forEach(function(key) {\n                    headers[key.toLowerCase()] = response.headers.get(key);\n                  });\n                }\n                return [2, {\n                  headers,\n                  statusCode: response.status,\n                  statusMessage: response.statusText,\n                  body: (0, bytes_1.arrayify)(new Uint8Array(body))\n                }];\n            }\n          });\n        });\n      }\n      exports3.getUrl = getUrl;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/index.js\n  var require_lib28 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+web@5.8.0/node_modules/@ethersproject/web/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.poll = exports3.fetchJson = exports3._fetchData = void 0;\n      var base64_1 = require_lib10();\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var strings_1 = require_lib9();\n      var logger_1 = require_lib();\n      var _version_1 = require_version22();\n      var logger = new logger_1.Logger(_version_1.version);\n      var geturl_1 = require_browser_geturl();\n      function staller(duration) {\n        return new Promise(function(resolve) {\n          setTimeout(resolve, duration);\n        });\n      }\n      function bodyify(value, type) {\n        if (value == null) {\n          return null;\n        }\n        if (typeof value === \"string\") {\n          return value;\n        }\n        if ((0, bytes_1.isBytesLike)(value)) {\n          if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n              return (0, strings_1.toUtf8String)(value);\n            } catch (error) {\n            }\n            ;\n          }\n          return (0, bytes_1.hexlify)(value);\n        }\n        return value;\n      }\n      function unpercent2(value) {\n        return (0, strings_1.toUtf8Bytes)(value.replace(/%([0-9a-f][0-9a-f])/gi, function(all, code) {\n          return String.fromCharCode(parseInt(code, 16));\n        }));\n      }\n      function _fetchData(connection, body, processFunc) {\n        var attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n        logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n        var throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n        var throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n        logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n        var errorPassThrough = typeof connection === \"object\" ? !!connection.errorPassThrough : false;\n        var headers = {};\n        var url = null;\n        var options = {\n          method: \"GET\"\n        };\n        var allow304 = false;\n        var timeout = 2 * 60 * 1e3;\n        if (typeof connection === \"string\") {\n          url = connection;\n        } else if (typeof connection === \"object\") {\n          if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n          }\n          url = connection.url;\n          if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n          }\n          if (connection.headers) {\n            for (var key in connection.headers) {\n              headers[key.toLowerCase()] = { key, value: String(connection.headers[key]) };\n              if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                allow304 = true;\n              }\n            }\n          }\n          options.allowGzip = !!connection.allowGzip;\n          if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n              logger.throwError(\"basic authentication requires a secure https url\", logger_1.Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            var authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n              key: \"Authorization\",\n              value: \"Basic \" + (0, base64_1.encode)((0, strings_1.toUtf8Bytes)(authorization))\n            };\n          }\n          if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n          }\n          if (connection.fetchOptions != null) {\n            options.fetchOptions = (0, properties_1.shallowCopy)(connection.fetchOptions);\n          }\n        }\n        var reData2 = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n        var dataMatch = url ? url.match(reData2) : null;\n        if (dataMatch) {\n          try {\n            var response = {\n              statusCode: 200,\n              statusMessage: \"OK\",\n              headers: { \"content-type\": dataMatch[1] || \"text/plain\" },\n              body: dataMatch[2] ? (0, base64_1.decode)(dataMatch[3]) : unpercent2(dataMatch[3])\n            };\n            var result = response.body;\n            if (processFunc) {\n              result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n          } catch (error) {\n            logger.throwError(\"processing response error\", logger_1.Logger.errors.SERVER_ERROR, {\n              body: bodyify(dataMatch[1], dataMatch[2]),\n              error,\n              requestBody: null,\n              requestMethod: \"GET\",\n              url\n            });\n          }\n        }\n        if (body) {\n          options.method = \"POST\";\n          options.body = body;\n          if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n          }\n          if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n          }\n        }\n        var flatHeaders = {};\n        Object.keys(headers).forEach(function(key2) {\n          var header = headers[key2];\n          flatHeaders[header.key] = header.value;\n        });\n        options.headers = flatHeaders;\n        var runningTimeout = function() {\n          var timer = null;\n          var promise = new Promise(function(resolve, reject) {\n            if (timeout) {\n              timer = setTimeout(function() {\n                if (timer == null) {\n                  return;\n                }\n                timer = null;\n                reject(logger.makeError(\"timeout\", logger_1.Logger.errors.TIMEOUT, {\n                  requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                  requestMethod: options.method,\n                  timeout,\n                  url\n                }));\n              }, timeout);\n            }\n          });\n          var cancel = function() {\n            if (timer == null) {\n              return;\n            }\n            clearTimeout(timer);\n            timer = null;\n          };\n          return { promise, cancel };\n        }();\n        var runningFetch = function() {\n          return __awaiter2(this, void 0, void 0, function() {\n            var attempt, response2, location_1, tryAgain, stall2, retryAfter, error_1, body_1, result2, error_2, tryAgain, timeout_1;\n            return __generator2(this, function(_a) {\n              switch (_a.label) {\n                case 0:\n                  attempt = 0;\n                  _a.label = 1;\n                case 1:\n                  if (!(attempt < attemptLimit))\n                    return [3, 20];\n                  response2 = null;\n                  _a.label = 2;\n                case 2:\n                  _a.trys.push([2, 9, , 10]);\n                  return [4, (0, geturl_1.getUrl)(url, options)];\n                case 3:\n                  response2 = _a.sent();\n                  if (!(attempt < attemptLimit))\n                    return [3, 8];\n                  if (!(response2.statusCode === 301 || response2.statusCode === 302))\n                    return [3, 4];\n                  location_1 = response2.headers.location || \"\";\n                  if (options.method === \"GET\" && location_1.match(/^https:/)) {\n                    url = response2.headers.location;\n                    return [3, 19];\n                  }\n                  return [3, 8];\n                case 4:\n                  if (!(response2.statusCode === 429))\n                    return [3, 8];\n                  tryAgain = true;\n                  if (!throttleCallback)\n                    return [3, 6];\n                  return [4, throttleCallback(attempt, url)];\n                case 5:\n                  tryAgain = _a.sent();\n                  _a.label = 6;\n                case 6:\n                  if (!tryAgain)\n                    return [3, 8];\n                  stall2 = 0;\n                  retryAfter = response2.headers[\"retry-after\"];\n                  if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    stall2 = parseInt(retryAfter) * 1e3;\n                  } else {\n                    stall2 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                  }\n                  return [4, staller(stall2)];\n                case 7:\n                  _a.sent();\n                  return [3, 19];\n                case 8:\n                  return [3, 10];\n                case 9:\n                  error_1 = _a.sent();\n                  response2 = error_1.response;\n                  if (response2 == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", logger_1.Logger.errors.SERVER_ERROR, {\n                      requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                      requestMethod: options.method,\n                      serverError: error_1,\n                      url\n                    });\n                  }\n                  return [3, 10];\n                case 10:\n                  body_1 = response2.body;\n                  if (allow304 && response2.statusCode === 304) {\n                    body_1 = null;\n                  } else if (!errorPassThrough && (response2.statusCode < 200 || response2.statusCode >= 300)) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", logger_1.Logger.errors.SERVER_ERROR, {\n                      status: response2.statusCode,\n                      headers: response2.headers,\n                      body: bodyify(body_1, response2.headers ? response2.headers[\"content-type\"] : null),\n                      requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                      requestMethod: options.method,\n                      url\n                    });\n                  }\n                  if (!processFunc)\n                    return [3, 18];\n                  _a.label = 11;\n                case 11:\n                  _a.trys.push([11, 13, , 18]);\n                  return [4, processFunc(body_1, response2)];\n                case 12:\n                  result2 = _a.sent();\n                  runningTimeout.cancel();\n                  return [2, result2];\n                case 13:\n                  error_2 = _a.sent();\n                  if (!(error_2.throttleRetry && attempt < attemptLimit))\n                    return [3, 17];\n                  tryAgain = true;\n                  if (!throttleCallback)\n                    return [3, 15];\n                  return [4, throttleCallback(attempt, url)];\n                case 14:\n                  tryAgain = _a.sent();\n                  _a.label = 15;\n                case 15:\n                  if (!tryAgain)\n                    return [3, 17];\n                  timeout_1 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                  return [4, staller(timeout_1)];\n                case 16:\n                  _a.sent();\n                  return [3, 19];\n                case 17:\n                  runningTimeout.cancel();\n                  logger.throwError(\"processing response error\", logger_1.Logger.errors.SERVER_ERROR, {\n                    body: bodyify(body_1, response2.headers ? response2.headers[\"content-type\"] : null),\n                    error: error_2,\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url\n                  });\n                  return [3, 18];\n                case 18:\n                  runningTimeout.cancel();\n                  return [2, body_1];\n                case 19:\n                  attempt++;\n                  return [3, 1];\n                case 20:\n                  return [2, logger.throwError(\"failed response\", logger_1.Logger.errors.SERVER_ERROR, {\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url\n                  })];\n              }\n            });\n          });\n        }();\n        return Promise.race([runningTimeout.promise, runningFetch]);\n      }\n      exports3._fetchData = _fetchData;\n      function fetchJson(connection, json, processFunc) {\n        var processJsonFunc = function(value, response) {\n          var result = null;\n          if (value != null) {\n            try {\n              result = JSON.parse((0, strings_1.toUtf8String)(value));\n            } catch (error) {\n              logger.throwError(\"invalid JSON\", logger_1.Logger.errors.SERVER_ERROR, {\n                body: value,\n                error\n              });\n            }\n          }\n          if (processFunc) {\n            result = processFunc(result, response);\n          }\n          return result;\n        };\n        var body = null;\n        if (json != null) {\n          body = (0, strings_1.toUtf8Bytes)(json);\n          var updated = typeof connection === \"string\" ? { url: connection } : (0, properties_1.shallowCopy)(connection);\n          if (updated.headers) {\n            var hasContentType = Object.keys(updated.headers).filter(function(k) {\n              return k.toLowerCase() === \"content-type\";\n            }).length !== 0;\n            if (!hasContentType) {\n              updated.headers = (0, properties_1.shallowCopy)(updated.headers);\n              updated.headers[\"content-type\"] = \"application/json\";\n            }\n          } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n          }\n          connection = updated;\n        }\n        return _fetchData(connection, body, processJsonFunc);\n      }\n      exports3.fetchJson = fetchJson;\n      function poll(func, options) {\n        if (!options) {\n          options = {};\n        }\n        options = (0, properties_1.shallowCopy)(options);\n        if (options.floor == null) {\n          options.floor = 0;\n        }\n        if (options.ceiling == null) {\n          options.ceiling = 1e4;\n        }\n        if (options.interval == null) {\n          options.interval = 250;\n        }\n        return new Promise(function(resolve, reject) {\n          var timer = null;\n          var done = false;\n          var cancel = function() {\n            if (done) {\n              return false;\n            }\n            done = true;\n            if (timer) {\n              clearTimeout(timer);\n            }\n            return true;\n          };\n          if (options.timeout) {\n            timer = setTimeout(function() {\n              if (cancel()) {\n                reject(new Error(\"timeout\"));\n              }\n            }, options.timeout);\n          }\n          var retryLimit = options.retryLimit;\n          var attempt = 0;\n          function check() {\n            return func().then(function(result) {\n              if (result !== void 0) {\n                if (cancel()) {\n                  resolve(result);\n                }\n              } else if (options.oncePoll) {\n                options.oncePoll.once(\"poll\", check);\n              } else if (options.onceBlock) {\n                options.onceBlock.once(\"block\", check);\n              } else if (!done) {\n                attempt++;\n                if (attempt > retryLimit) {\n                  if (cancel()) {\n                    reject(new Error(\"retry limit reached\"));\n                  }\n                  return;\n                }\n                var timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                if (timeout < options.floor) {\n                  timeout = options.floor;\n                }\n                if (timeout > options.ceiling) {\n                  timeout = options.ceiling;\n                }\n                setTimeout(check, timeout);\n              }\n              return null;\n            }, function(error) {\n              if (cancel()) {\n                reject(error);\n              }\n            });\n          }\n          check();\n        });\n      }\n      exports3.poll = poll;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/bech32@1.1.4/node_modules/bech32/index.js\n  var require_bech32 = __commonJS({\n    \"../../../node_modules/.pnpm/bech32@1.1.4/node_modules/bech32/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var ALPHABET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\n      var ALPHABET_MAP = {};\n      for (z = 0; z < ALPHABET.length; z++) {\n        x = ALPHABET.charAt(z);\n        if (ALPHABET_MAP[x] !== void 0)\n          throw new TypeError(x + \" is ambiguous\");\n        ALPHABET_MAP[x] = z;\n      }\n      var x;\n      var z;\n      function polymodStep(pre) {\n        var b2 = pre >> 25;\n        return (pre & 33554431) << 5 ^ -(b2 >> 0 & 1) & 996825010 ^ -(b2 >> 1 & 1) & 642813549 ^ -(b2 >> 2 & 1) & 513874426 ^ -(b2 >> 3 & 1) & 1027748829 ^ -(b2 >> 4 & 1) & 705979059;\n      }\n      function prefixChk(prefix) {\n        var chk = 1;\n        for (var i = 0; i < prefix.length; ++i) {\n          var c = prefix.charCodeAt(i);\n          if (c < 33 || c > 126)\n            return \"Invalid prefix (\" + prefix + \")\";\n          chk = polymodStep(chk) ^ c >> 5;\n        }\n        chk = polymodStep(chk);\n        for (i = 0; i < prefix.length; ++i) {\n          var v = prefix.charCodeAt(i);\n          chk = polymodStep(chk) ^ v & 31;\n        }\n        return chk;\n      }\n      function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n          throw new TypeError(\"Exceeds length limit\");\n        prefix = prefix.toLowerCase();\n        var chk = prefixChk(prefix);\n        if (typeof chk === \"string\")\n          throw new Error(chk);\n        var result = prefix + \"1\";\n        for (var i = 0; i < words.length; ++i) {\n          var x2 = words[i];\n          if (x2 >> 5 !== 0)\n            throw new Error(\"Non 5-bit word\");\n          chk = polymodStep(chk) ^ x2;\n          result += ALPHABET.charAt(x2);\n        }\n        for (i = 0; i < 6; ++i) {\n          chk = polymodStep(chk);\n        }\n        chk ^= 1;\n        for (i = 0; i < 6; ++i) {\n          var v = chk >> (5 - i) * 5 & 31;\n          result += ALPHABET.charAt(v);\n        }\n        return result;\n      }\n      function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n          return str + \" too short\";\n        if (str.length > LIMIT)\n          return \"Exceeds length limit\";\n        var lowered = str.toLowerCase();\n        var uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n          return \"Mixed-case string \" + str;\n        str = lowered;\n        var split3 = str.lastIndexOf(\"1\");\n        if (split3 === -1)\n          return \"No separator character for \" + str;\n        if (split3 === 0)\n          return \"Missing prefix for \" + str;\n        var prefix = str.slice(0, split3);\n        var wordChars = str.slice(split3 + 1);\n        if (wordChars.length < 6)\n          return \"Data too short\";\n        var chk = prefixChk(prefix);\n        if (typeof chk === \"string\")\n          return chk;\n        var words = [];\n        for (var i = 0; i < wordChars.length; ++i) {\n          var c = wordChars.charAt(i);\n          var v = ALPHABET_MAP[c];\n          if (v === void 0)\n            return \"Unknown character \" + c;\n          chk = polymodStep(chk) ^ v;\n          if (i + 6 >= wordChars.length)\n            continue;\n          words.push(v);\n        }\n        if (chk !== 1)\n          return \"Invalid checksum for \" + str;\n        return { prefix, words };\n      }\n      function decodeUnsafe() {\n        var res = __decode.apply(null, arguments);\n        if (typeof res === \"object\")\n          return res;\n      }\n      function decode(str) {\n        var res = __decode.apply(null, arguments);\n        if (typeof res === \"object\")\n          return res;\n        throw new Error(res);\n      }\n      function convert(data, inBits, outBits, pad) {\n        var value = 0;\n        var bits = 0;\n        var maxV = (1 << outBits) - 1;\n        var result = [];\n        for (var i = 0; i < data.length; ++i) {\n          value = value << inBits | data[i];\n          bits += inBits;\n          while (bits >= outBits) {\n            bits -= outBits;\n            result.push(value >> bits & maxV);\n          }\n        }\n        if (pad) {\n          if (bits > 0) {\n            result.push(value << outBits - bits & maxV);\n          }\n        } else {\n          if (bits >= inBits)\n            return \"Excess padding\";\n          if (value << outBits - bits & maxV)\n            return \"Non-zero padding\";\n        }\n        return result;\n      }\n      function toWordsUnsafe(bytes2) {\n        var res = convert(bytes2, 8, 5, true);\n        if (Array.isArray(res))\n          return res;\n      }\n      function toWords(bytes2) {\n        var res = convert(bytes2, 8, 5, true);\n        if (Array.isArray(res))\n          return res;\n        throw new Error(res);\n      }\n      function fromWordsUnsafe(words) {\n        var res = convert(words, 5, 8, false);\n        if (Array.isArray(res))\n          return res;\n      }\n      function fromWords(words) {\n        var res = convert(words, 5, 8, false);\n        if (Array.isArray(res))\n          return res;\n        throw new Error(res);\n      }\n      module.exports = {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWordsUnsafe,\n        toWords,\n        fromWordsUnsafe,\n        fromWords\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/_version.js\n  var require_version23 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"providers/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/formatter.js\n  var require_formatter = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/formatter.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.showThrottleMessage = exports3.isCommunityResource = exports3.isCommunityResourcable = exports3.Formatter = void 0;\n      var address_1 = require_lib7();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var constants_1 = require_lib8();\n      var properties_1 = require_lib4();\n      var transactions_1 = require_lib17();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var Formatter = (\n        /** @class */\n        function() {\n          function Formatter2() {\n            this.formats = this.getDefaultFormats();\n          }\n          Formatter2.prototype.getDefaultFormats = function() {\n            var _this = this;\n            var formats = {};\n            var address = this.address.bind(this);\n            var bigNumber = this.bigNumber.bind(this);\n            var blockTag = this.blockTag.bind(this);\n            var data = this.data.bind(this);\n            var hash2 = this.hash.bind(this);\n            var hex = this.hex.bind(this);\n            var number2 = this.number.bind(this);\n            var type = this.type.bind(this);\n            var strictData = function(v) {\n              return _this.data(v, true);\n            };\n            formats.transaction = {\n              hash: hash2,\n              type,\n              accessList: Formatter2.allowNull(this.accessList.bind(this), null),\n              blockHash: Formatter2.allowNull(hash2, null),\n              blockNumber: Formatter2.allowNull(number2, null),\n              transactionIndex: Formatter2.allowNull(number2, null),\n              confirmations: Formatter2.allowNull(number2, null),\n              from: address,\n              // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n              // must be set\n              gasPrice: Formatter2.allowNull(bigNumber),\n              maxPriorityFeePerGas: Formatter2.allowNull(bigNumber),\n              maxFeePerGas: Formatter2.allowNull(bigNumber),\n              gasLimit: bigNumber,\n              to: Formatter2.allowNull(address, null),\n              value: bigNumber,\n              nonce: number2,\n              data,\n              r: Formatter2.allowNull(this.uint256),\n              s: Formatter2.allowNull(this.uint256),\n              v: Formatter2.allowNull(number2),\n              creates: Formatter2.allowNull(address, null),\n              raw: Formatter2.allowNull(data)\n            };\n            formats.transactionRequest = {\n              from: Formatter2.allowNull(address),\n              nonce: Formatter2.allowNull(number2),\n              gasLimit: Formatter2.allowNull(bigNumber),\n              gasPrice: Formatter2.allowNull(bigNumber),\n              maxPriorityFeePerGas: Formatter2.allowNull(bigNumber),\n              maxFeePerGas: Formatter2.allowNull(bigNumber),\n              to: Formatter2.allowNull(address),\n              value: Formatter2.allowNull(bigNumber),\n              data: Formatter2.allowNull(strictData),\n              type: Formatter2.allowNull(number2),\n              accessList: Formatter2.allowNull(this.accessList.bind(this), null)\n            };\n            formats.receiptLog = {\n              transactionIndex: number2,\n              blockNumber: number2,\n              transactionHash: hash2,\n              address,\n              topics: Formatter2.arrayOf(hash2),\n              data,\n              logIndex: number2,\n              blockHash: hash2\n            };\n            formats.receipt = {\n              to: Formatter2.allowNull(this.address, null),\n              from: Formatter2.allowNull(this.address, null),\n              contractAddress: Formatter2.allowNull(address, null),\n              transactionIndex: number2,\n              // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n              root: Formatter2.allowNull(hex),\n              gasUsed: bigNumber,\n              logsBloom: Formatter2.allowNull(data),\n              blockHash: hash2,\n              transactionHash: hash2,\n              logs: Formatter2.arrayOf(this.receiptLog.bind(this)),\n              blockNumber: number2,\n              confirmations: Formatter2.allowNull(number2, null),\n              cumulativeGasUsed: bigNumber,\n              effectiveGasPrice: Formatter2.allowNull(bigNumber),\n              status: Formatter2.allowNull(number2),\n              type\n            };\n            formats.block = {\n              hash: Formatter2.allowNull(hash2),\n              parentHash: hash2,\n              number: number2,\n              timestamp: number2,\n              nonce: Formatter2.allowNull(hex),\n              difficulty: this.difficulty.bind(this),\n              gasLimit: bigNumber,\n              gasUsed: bigNumber,\n              miner: Formatter2.allowNull(address),\n              extraData: data,\n              transactions: Formatter2.allowNull(Formatter2.arrayOf(hash2)),\n              baseFeePerGas: Formatter2.allowNull(bigNumber)\n            };\n            formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\n            formats.blockWithTransactions.transactions = Formatter2.allowNull(Formatter2.arrayOf(this.transactionResponse.bind(this)));\n            formats.filter = {\n              fromBlock: Formatter2.allowNull(blockTag, void 0),\n              toBlock: Formatter2.allowNull(blockTag, void 0),\n              blockHash: Formatter2.allowNull(hash2, void 0),\n              address: Formatter2.allowNull(address, void 0),\n              topics: Formatter2.allowNull(this.topics.bind(this), void 0)\n            };\n            formats.filterLog = {\n              blockNumber: Formatter2.allowNull(number2),\n              blockHash: Formatter2.allowNull(hash2),\n              transactionIndex: number2,\n              removed: Formatter2.allowNull(this.boolean.bind(this)),\n              address,\n              data: Formatter2.allowFalsish(data, \"0x\"),\n              topics: Formatter2.arrayOf(hash2),\n              transactionHash: hash2,\n              logIndex: number2\n            };\n            return formats;\n          };\n          Formatter2.prototype.accessList = function(accessList) {\n            return (0, transactions_1.accessListify)(accessList || []);\n          };\n          Formatter2.prototype.number = function(number2) {\n            if (number2 === \"0x\") {\n              return 0;\n            }\n            return bignumber_1.BigNumber.from(number2).toNumber();\n          };\n          Formatter2.prototype.type = function(number2) {\n            if (number2 === \"0x\" || number2 == null) {\n              return 0;\n            }\n            return bignumber_1.BigNumber.from(number2).toNumber();\n          };\n          Formatter2.prototype.bigNumber = function(value) {\n            return bignumber_1.BigNumber.from(value);\n          };\n          Formatter2.prototype.boolean = function(value) {\n            if (typeof value === \"boolean\") {\n              return value;\n            }\n            if (typeof value === \"string\") {\n              value = value.toLowerCase();\n              if (value === \"true\") {\n                return true;\n              }\n              if (value === \"false\") {\n                return false;\n              }\n            }\n            throw new Error(\"invalid boolean - \" + value);\n          };\n          Formatter2.prototype.hex = function(value, strict) {\n            if (typeof value === \"string\") {\n              if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n              }\n              if ((0, bytes_1.isHexString)(value)) {\n                return value.toLowerCase();\n              }\n            }\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n          };\n          Formatter2.prototype.data = function(value, strict) {\n            var result = this.hex(value, strict);\n            if (result.length % 2 !== 0) {\n              throw new Error(\"invalid data; odd-length - \" + value);\n            }\n            return result;\n          };\n          Formatter2.prototype.address = function(value) {\n            return (0, address_1.getAddress)(value);\n          };\n          Formatter2.prototype.callAddress = function(value) {\n            if (!(0, bytes_1.isHexString)(value, 32)) {\n              return null;\n            }\n            var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\n            return address === constants_1.AddressZero ? null : address;\n          };\n          Formatter2.prototype.contractAddress = function(value) {\n            return (0, address_1.getContractAddress)(value);\n          };\n          Formatter2.prototype.blockTag = function(blockTag) {\n            if (blockTag == null) {\n              return \"latest\";\n            }\n            if (blockTag === \"earliest\") {\n              return \"0x0\";\n            }\n            switch (blockTag) {\n              case \"earliest\":\n                return \"0x0\";\n              case \"latest\":\n              case \"pending\":\n              case \"safe\":\n              case \"finalized\":\n                return blockTag;\n            }\n            if (typeof blockTag === \"number\" || (0, bytes_1.isHexString)(blockTag)) {\n              return (0, bytes_1.hexValue)(blockTag);\n            }\n            throw new Error(\"invalid blockTag\");\n          };\n          Formatter2.prototype.hash = function(value, strict) {\n            var result = this.hex(value, strict);\n            if ((0, bytes_1.hexDataLength)(result) !== 32) {\n              return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n            }\n            return result;\n          };\n          Formatter2.prototype.difficulty = function(value) {\n            if (value == null) {\n              return null;\n            }\n            var v = bignumber_1.BigNumber.from(value);\n            try {\n              return v.toNumber();\n            } catch (error) {\n            }\n            return null;\n          };\n          Formatter2.prototype.uint256 = function(value) {\n            if (!(0, bytes_1.isHexString)(value)) {\n              throw new Error(\"invalid uint256\");\n            }\n            return (0, bytes_1.hexZeroPad)(value, 32);\n          };\n          Formatter2.prototype._block = function(value, format) {\n            if (value.author != null && value.miner == null) {\n              value.miner = value.author;\n            }\n            var difficulty = value._difficulty != null ? value._difficulty : value.difficulty;\n            var result = Formatter2.check(format, value);\n            result._difficulty = difficulty == null ? null : bignumber_1.BigNumber.from(difficulty);\n            return result;\n          };\n          Formatter2.prototype.block = function(value) {\n            return this._block(value, this.formats.block);\n          };\n          Formatter2.prototype.blockWithTransactions = function(value) {\n            return this._block(value, this.formats.blockWithTransactions);\n          };\n          Formatter2.prototype.transactionRequest = function(value) {\n            return Formatter2.check(this.formats.transactionRequest, value);\n          };\n          Formatter2.prototype.transactionResponse = function(transaction) {\n            if (transaction.gas != null && transaction.gasLimit == null) {\n              transaction.gasLimit = transaction.gas;\n            }\n            if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\n              transaction.to = \"0x0000000000000000000000000000000000000000\";\n            }\n            if (transaction.input != null && transaction.data == null) {\n              transaction.data = transaction.input;\n            }\n            if (transaction.to == null && transaction.creates == null) {\n              transaction.creates = this.contractAddress(transaction);\n            }\n            if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n              transaction.accessList = [];\n            }\n            var result = Formatter2.check(this.formats.transaction, transaction);\n            if (transaction.chainId != null) {\n              var chainId = transaction.chainId;\n              if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n              }\n              result.chainId = chainId;\n            } else {\n              var chainId = transaction.networkId;\n              if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n              }\n              if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n              }\n              if (typeof chainId !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                  chainId = 0;\n                }\n                chainId = parseInt(chainId);\n              }\n              if (typeof chainId !== \"number\") {\n                chainId = 0;\n              }\n              result.chainId = chainId;\n            }\n            if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n              result.blockHash = null;\n            }\n            return result;\n          };\n          Formatter2.prototype.transaction = function(value) {\n            return (0, transactions_1.parse)(value);\n          };\n          Formatter2.prototype.receiptLog = function(value) {\n            return Formatter2.check(this.formats.receiptLog, value);\n          };\n          Formatter2.prototype.receipt = function(value) {\n            var result = Formatter2.check(this.formats.receipt, value);\n            if (result.root != null) {\n              if (result.root.length <= 4) {\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\n                if (value_1 === 0 || value_1 === 1) {\n                  if (result.status != null && result.status !== value_1) {\n                    logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                  }\n                  result.status = value_1;\n                  delete result.root;\n                } else {\n                  logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n              } else if (result.root.length !== 66) {\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n              }\n            }\n            if (result.status != null) {\n              result.byzantium = true;\n            }\n            return result;\n          };\n          Formatter2.prototype.topics = function(value) {\n            var _this = this;\n            if (Array.isArray(value)) {\n              return value.map(function(v) {\n                return _this.topics(v);\n              });\n            } else if (value != null) {\n              return this.hash(value, true);\n            }\n            return null;\n          };\n          Formatter2.prototype.filter = function(value) {\n            return Formatter2.check(this.formats.filter, value);\n          };\n          Formatter2.prototype.filterLog = function(value) {\n            return Formatter2.check(this.formats.filterLog, value);\n          };\n          Formatter2.check = function(format, object2) {\n            var result = {};\n            for (var key in format) {\n              try {\n                var value = format[key](object2[key]);\n                if (value !== void 0) {\n                  result[key] = value;\n                }\n              } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object2[key];\n                throw error;\n              }\n            }\n            return result;\n          };\n          Formatter2.allowNull = function(format, nullValue) {\n            return function(value) {\n              if (value == null) {\n                return nullValue;\n              }\n              return format(value);\n            };\n          };\n          Formatter2.allowFalsish = function(format, replaceValue) {\n            return function(value) {\n              if (!value) {\n                return replaceValue;\n              }\n              return format(value);\n            };\n          };\n          Formatter2.arrayOf = function(format) {\n            return function(array) {\n              if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n              }\n              var result = [];\n              array.forEach(function(value) {\n                result.push(format(value));\n              });\n              return result;\n            };\n          };\n          return Formatter2;\n        }()\n      );\n      exports3.Formatter = Formatter;\n      function isCommunityResourcable(value) {\n        return value && typeof value.isCommunityResource === \"function\";\n      }\n      exports3.isCommunityResourcable = isCommunityResourcable;\n      function isCommunityResource(value) {\n        return isCommunityResourcable(value) && value.isCommunityResource();\n      }\n      exports3.isCommunityResource = isCommunityResource;\n      var throttleMessage = false;\n      function showThrottleMessage2() {\n        if (throttleMessage) {\n          return;\n        }\n        throttleMessage = true;\n        console.log(\"========= NOTICE =========\");\n        console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n        console.log(\"\");\n        console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n        console.log(\"community resource for low-traffic projects and early prototyping.\");\n        console.log(\"\");\n        console.log(\"While your application will continue to function, we highly recommended\");\n        console.log(\"signing up for your own API keys to improve performance, increase your\");\n        console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n        console.log(\"\");\n        console.log(\"For more details: https://docs.ethers.io/api-keys/\");\n        console.log(\"==========================\");\n      }\n      exports3.showThrottleMessage = showThrottleMessage2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/base-provider.js\n  var require_base_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/base-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.BaseProvider = exports3.Resolver = exports3.Event = void 0;\n      var abstract_provider_1 = require_lib14();\n      var base64_1 = require_lib10();\n      var basex_1 = require_lib19();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var constants_1 = require_lib8();\n      var hash_1 = require_lib12();\n      var networks_1 = require_lib27();\n      var properties_1 = require_lib4();\n      var sha2_1 = require_lib20();\n      var strings_1 = require_lib9();\n      var web_1 = require_lib28();\n      var bech32_1 = __importDefault2(require_bech32());\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var formatter_1 = require_formatter();\n      var MAX_CCIP_REDIRECTS2 = 10;\n      function checkTopic(topic) {\n        if (topic == null) {\n          return \"null\";\n        }\n        if ((0, bytes_1.hexDataLength)(topic) !== 32) {\n          logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n        }\n        return topic.toLowerCase();\n      }\n      function serializeTopics(topics) {\n        topics = topics.slice();\n        while (topics.length > 0 && topics[topics.length - 1] == null) {\n          topics.pop();\n        }\n        return topics.map(function(topic) {\n          if (Array.isArray(topic)) {\n            var unique_1 = {};\n            topic.forEach(function(topic2) {\n              unique_1[checkTopic(topic2)] = true;\n            });\n            var sorted = Object.keys(unique_1);\n            sorted.sort();\n            return sorted.join(\"|\");\n          } else {\n            return checkTopic(topic);\n          }\n        }).join(\"&\");\n      }\n      function deserializeTopics(data) {\n        if (data === \"\") {\n          return [];\n        }\n        return data.split(/&/g).map(function(topic) {\n          if (topic === \"\") {\n            return [];\n          }\n          var comps = topic.split(\"|\").map(function(topic2) {\n            return topic2 === \"null\" ? null : topic2;\n          });\n          return comps.length === 1 ? comps[0] : comps;\n        });\n      }\n      function getEventTag(eventName) {\n        if (typeof eventName === \"string\") {\n          eventName = eventName.toLowerCase();\n          if ((0, bytes_1.hexDataLength)(eventName) === 32) {\n            return \"tx:\" + eventName;\n          }\n          if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n          }\n        } else if (Array.isArray(eventName)) {\n          return \"filter:*:\" + serializeTopics(eventName);\n        } else if (abstract_provider_1.ForkEvent.isForkEvent(eventName)) {\n          logger.warn(\"not implemented\");\n          throw new Error(\"not implemented\");\n        } else if (eventName && typeof eventName === \"object\") {\n          return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n        }\n        throw new Error(\"invalid event - \" + eventName);\n      }\n      function getTime3() {\n        return (/* @__PURE__ */ new Date()).getTime();\n      }\n      function stall2(duration) {\n        return new Promise(function(resolve) {\n          setTimeout(resolve, duration);\n        });\n      }\n      var PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\n      var Event = (\n        /** @class */\n        function() {\n          function Event2(tag, listener, once2) {\n            (0, properties_1.defineReadOnly)(this, \"tag\", tag);\n            (0, properties_1.defineReadOnly)(this, \"listener\", listener);\n            (0, properties_1.defineReadOnly)(this, \"once\", once2);\n            this._lastBlockNumber = -2;\n            this._inflight = false;\n          }\n          Object.defineProperty(Event2.prototype, \"event\", {\n            get: function() {\n              switch (this.type) {\n                case \"tx\":\n                  return this.hash;\n                case \"filter\":\n                  return this.filter;\n              }\n              return this.tag;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Event2.prototype, \"type\", {\n            get: function() {\n              return this.tag.split(\":\")[0];\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Event2.prototype, \"hash\", {\n            get: function() {\n              var comps = this.tag.split(\":\");\n              if (comps[0] !== \"tx\") {\n                return null;\n              }\n              return comps[1];\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Event2.prototype, \"filter\", {\n            get: function() {\n              var comps = this.tag.split(\":\");\n              if (comps[0] !== \"filter\") {\n                return null;\n              }\n              var address = comps[1];\n              var topics = deserializeTopics(comps[2]);\n              var filter = {};\n              if (topics.length > 0) {\n                filter.topics = topics;\n              }\n              if (address && address !== \"*\") {\n                filter.address = address;\n              }\n              return filter;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Event2.prototype.pollable = function() {\n            return this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n          };\n          return Event2;\n        }()\n      );\n      exports3.Event = Event;\n      var coinInfos = {\n        \"0\": { symbol: \"btc\", p2pkh: 0, p2sh: 5, prefix: \"bc\" },\n        \"2\": { symbol: \"ltc\", p2pkh: 48, p2sh: 50, prefix: \"ltc\" },\n        \"3\": { symbol: \"doge\", p2pkh: 30, p2sh: 22 },\n        \"60\": { symbol: \"eth\", ilk: \"eth\" },\n        \"61\": { symbol: \"etc\", ilk: \"eth\" },\n        \"700\": { symbol: \"xdai\", ilk: \"eth\" }\n      };\n      function bytes32ify(value) {\n        return (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(value).toHexString(), 32);\n      }\n      function base58Encode(data) {\n        return basex_1.Base58.encode((0, bytes_1.concat)([data, (0, bytes_1.hexDataSlice)((0, sha2_1.sha256)((0, sha2_1.sha256)(data)), 0, 4)]));\n      }\n      var matcherIpfs2 = new RegExp(\"^(ipfs)://(.*)$\", \"i\");\n      var matchers2 = [\n        new RegExp(\"^(https)://(.*)$\", \"i\"),\n        new RegExp(\"^(data):(.*)$\", \"i\"),\n        matcherIpfs2,\n        new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\")\n      ];\n      function _parseString2(result, start) {\n        try {\n          return (0, strings_1.toUtf8String)(_parseBytes2(result, start));\n        } catch (error) {\n        }\n        return null;\n      }\n      function _parseBytes2(result, start) {\n        if (result === \"0x\") {\n          return null;\n        }\n        var offset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, start, start + 32)).toNumber();\n        var length = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, offset, offset + 32)).toNumber();\n        return (0, bytes_1.hexDataSlice)(result, offset + 32, offset + 32 + length);\n      }\n      function getIpfsLink2(link) {\n        if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n          link = link.substring(12);\n        } else if (link.match(/^ipfs:\\/\\//i)) {\n          link = link.substring(7);\n        } else {\n          logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n        }\n        return \"https://gateway.ipfs.io/ipfs/\" + link;\n      }\n      function numPad2(value) {\n        var result = (0, bytes_1.arrayify)(value);\n        if (result.length > 32) {\n          throw new Error(\"internal; should not happen\");\n        }\n        var padded = new Uint8Array(32);\n        padded.set(result, 32 - result.length);\n        return padded;\n      }\n      function bytesPad2(value) {\n        if (value.length % 32 === 0) {\n          return value;\n        }\n        var result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n        result.set(value);\n        return result;\n      }\n      function encodeBytes2(datas) {\n        var result = [];\n        var byteCount = 0;\n        for (var i = 0; i < datas.length; i++) {\n          result.push(null);\n          byteCount += 32;\n        }\n        for (var i = 0; i < datas.length; i++) {\n          var data = (0, bytes_1.arrayify)(datas[i]);\n          result[i] = numPad2(byteCount);\n          result.push(numPad2(data.length));\n          result.push(bytesPad2(data));\n          byteCount += 32 + Math.ceil(data.length / 32) * 32;\n        }\n        return (0, bytes_1.hexConcat)(result);\n      }\n      var Resolver = (\n        /** @class */\n        function() {\n          function Resolver2(provider, address, name, resolvedAddress) {\n            (0, properties_1.defineReadOnly)(this, \"provider\", provider);\n            (0, properties_1.defineReadOnly)(this, \"name\", name);\n            (0, properties_1.defineReadOnly)(this, \"address\", provider.formatter.address(address));\n            (0, properties_1.defineReadOnly)(this, \"_resolvedAddress\", resolvedAddress);\n          }\n          Resolver2.prototype.supportsWildcard = function() {\n            var _this = this;\n            if (!this._supportsEip2544) {\n              this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n              }).then(function(result) {\n                return bignumber_1.BigNumber.from(result).eq(1);\n              }).catch(function(error) {\n                if (error.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                  return false;\n                }\n                _this._supportsEip2544 = null;\n                throw error;\n              });\n            }\n            return this._supportsEip2544;\n          };\n          Resolver2.prototype._fetch = function(selector, parameters) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx, parseBytes, result, error_1;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    tx = {\n                      to: this.address,\n                      ccipReadEnabled: true,\n                      data: (0, bytes_1.hexConcat)([selector, (0, hash_1.namehash)(this.name), parameters || \"0x\"])\n                    };\n                    parseBytes = false;\n                    return [4, this.supportsWildcard()];\n                  case 1:\n                    if (_a.sent()) {\n                      parseBytes = true;\n                      tx.data = (0, bytes_1.hexConcat)([\"0x9061b923\", encodeBytes2([(0, hash_1.dnsEncode)(this.name), tx.data])]);\n                    }\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4, this.provider.call(tx)];\n                  case 3:\n                    result = _a.sent();\n                    if ((0, bytes_1.arrayify)(result).length % 32 === 4) {\n                      logger.throwError(\"resolver threw error\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                        transaction: tx,\n                        data: result\n                      });\n                    }\n                    if (parseBytes) {\n                      result = _parseBytes2(result, 0);\n                    }\n                    return [2, result];\n                  case 4:\n                    error_1 = _a.sent();\n                    if (error_1.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                      return [2, null];\n                    }\n                    throw error_1;\n                  case 5:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          Resolver2.prototype._fetchBytes = function(selector, parameters) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this._fetch(selector, parameters)];\n                  case 1:\n                    result = _a.sent();\n                    if (result != null) {\n                      return [2, _parseBytes2(result, 0)];\n                    }\n                    return [2, null];\n                }\n              });\n            });\n          };\n          Resolver2.prototype._getAddress = function(coinType, hexBytes) {\n            var coinInfo = coinInfos[String(coinType)];\n            if (coinInfo == null) {\n              logger.throwError(\"unsupported coin type: \" + coinType, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getAddress(\" + coinType + \")\"\n              });\n            }\n            if (coinInfo.ilk === \"eth\") {\n              return this.provider.formatter.address(hexBytes);\n            }\n            var bytes2 = (0, bytes_1.arrayify)(hexBytes);\n            if (coinInfo.p2pkh != null) {\n              var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n              if (p2pkh) {\n                var length_1 = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length_1 * 2 && length_1 >= 1 && length_1 <= 75) {\n                  return base58Encode((0, bytes_1.concat)([[coinInfo.p2pkh], \"0x\" + p2pkh[2]]));\n                }\n              }\n            }\n            if (coinInfo.p2sh != null) {\n              var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n              if (p2sh) {\n                var length_2 = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length_2 * 2 && length_2 >= 1 && length_2 <= 75) {\n                  return base58Encode((0, bytes_1.concat)([[coinInfo.p2sh], \"0x\" + p2sh[2]]));\n                }\n              }\n            }\n            if (coinInfo.prefix != null) {\n              var length_3 = bytes2[1];\n              var version_1 = bytes2[0];\n              if (version_1 === 0) {\n                if (length_3 !== 20 && length_3 !== 32) {\n                  version_1 = -1;\n                }\n              } else {\n                version_1 = -1;\n              }\n              if (version_1 >= 0 && bytes2.length === 2 + length_3 && length_3 >= 1 && length_3 <= 75) {\n                var words = bech32_1.default.toWords(bytes2.slice(2));\n                words.unshift(version_1);\n                return bech32_1.default.encode(coinInfo.prefix, words);\n              }\n            }\n            return null;\n          };\n          Resolver2.prototype.getAddress = function(coinType) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var result, error_2, hexBytes, address;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (coinType == null) {\n                      coinType = 60;\n                    }\n                    if (!(coinType === 60))\n                      return [3, 4];\n                    _a.label = 1;\n                  case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4, this._fetch(\"0x3b3b57de\")];\n                  case 2:\n                    result = _a.sent();\n                    if (result === \"0x\" || result === constants_1.HashZero) {\n                      return [2, null];\n                    }\n                    return [2, this.provider.formatter.callAddress(result)];\n                  case 3:\n                    error_2 = _a.sent();\n                    if (error_2.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                      return [2, null];\n                    }\n                    throw error_2;\n                  case 4:\n                    return [4, this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType))];\n                  case 5:\n                    hexBytes = _a.sent();\n                    if (hexBytes == null || hexBytes === \"0x\") {\n                      return [2, null];\n                    }\n                    address = this._getAddress(coinType, hexBytes);\n                    if (address == null) {\n                      logger.throwError(\"invalid or unsupported coin data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"getAddress(\" + coinType + \")\",\n                        coinType,\n                        data: hexBytes\n                      });\n                    }\n                    return [2, address];\n                }\n              });\n            });\n          };\n          Resolver2.prototype.getAvatar = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var linkage, avatar, i, match, scheme, _a, selector, owner, _b, comps, addr, tokenId, tokenOwner, _c, _d, balance, _e, _f, tx, metadataUrl, _g, metadata, imageUrl, ipfs, error_3;\n              return __generator2(this, function(_h) {\n                switch (_h.label) {\n                  case 0:\n                    linkage = [{ type: \"name\", content: this.name }];\n                    _h.label = 1;\n                  case 1:\n                    _h.trys.push([1, 19, , 20]);\n                    return [4, this.getText(\"avatar\")];\n                  case 2:\n                    avatar = _h.sent();\n                    if (avatar == null) {\n                      return [2, null];\n                    }\n                    i = 0;\n                    _h.label = 3;\n                  case 3:\n                    if (!(i < matchers2.length))\n                      return [3, 18];\n                    match = avatar.match(matchers2[i]);\n                    if (match == null) {\n                      return [3, 17];\n                    }\n                    scheme = match[1].toLowerCase();\n                    _a = scheme;\n                    switch (_a) {\n                      case \"https\":\n                        return [3, 4];\n                      case \"data\":\n                        return [3, 5];\n                      case \"ipfs\":\n                        return [3, 6];\n                      case \"erc721\":\n                        return [3, 7];\n                      case \"erc1155\":\n                        return [3, 7];\n                    }\n                    return [3, 17];\n                  case 4:\n                    linkage.push({ type: \"url\", content: avatar });\n                    return [2, { linkage, url: avatar }];\n                  case 5:\n                    linkage.push({ type: \"data\", content: avatar });\n                    return [2, { linkage, url: avatar }];\n                  case 6:\n                    linkage.push({ type: \"ipfs\", content: avatar });\n                    return [2, { linkage, url: getIpfsLink2(avatar) }];\n                  case 7:\n                    selector = scheme === \"erc721\" ? \"0xc87b56dd\" : \"0x0e89341c\";\n                    linkage.push({ type: scheme, content: avatar });\n                    _b = this._resolvedAddress;\n                    if (_b)\n                      return [3, 9];\n                    return [4, this.getAddress()];\n                  case 8:\n                    _b = _h.sent();\n                    _h.label = 9;\n                  case 9:\n                    owner = _b;\n                    comps = (match[2] || \"\").split(\"/\");\n                    if (comps.length !== 2) {\n                      return [2, null];\n                    }\n                    return [4, this.provider.formatter.address(comps[0])];\n                  case 10:\n                    addr = _h.sent();\n                    tokenId = (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(comps[1]).toHexString(), 32);\n                    if (!(scheme === \"erc721\"))\n                      return [3, 12];\n                    _d = (_c = this.provider.formatter).callAddress;\n                    return [4, this.provider.call({\n                      to: addr,\n                      data: (0, bytes_1.hexConcat)([\"0x6352211e\", tokenId])\n                    })];\n                  case 11:\n                    tokenOwner = _d.apply(_c, [_h.sent()]);\n                    if (owner !== tokenOwner) {\n                      return [2, null];\n                    }\n                    linkage.push({ type: \"owner\", content: tokenOwner });\n                    return [3, 14];\n                  case 12:\n                    if (!(scheme === \"erc1155\"))\n                      return [3, 14];\n                    _f = (_e = bignumber_1.BigNumber).from;\n                    return [4, this.provider.call({\n                      to: addr,\n                      data: (0, bytes_1.hexConcat)([\"0x00fdd58e\", (0, bytes_1.hexZeroPad)(owner, 32), tokenId])\n                    })];\n                  case 13:\n                    balance = _f.apply(_e, [_h.sent()]);\n                    if (balance.isZero()) {\n                      return [2, null];\n                    }\n                    linkage.push({ type: \"balance\", content: balance.toString() });\n                    _h.label = 14;\n                  case 14:\n                    tx = {\n                      to: this.provider.formatter.address(comps[0]),\n                      data: (0, bytes_1.hexConcat)([selector, tokenId])\n                    };\n                    _g = _parseString2;\n                    return [4, this.provider.call(tx)];\n                  case 15:\n                    metadataUrl = _g.apply(void 0, [_h.sent(), 0]);\n                    if (metadataUrl == null) {\n                      return [2, null];\n                    }\n                    linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                    if (scheme === \"erc1155\") {\n                      metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                      linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                    }\n                    if (metadataUrl.match(/^ipfs:/i)) {\n                      metadataUrl = getIpfsLink2(metadataUrl);\n                    }\n                    linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                    return [4, (0, web_1.fetchJson)(metadataUrl)];\n                  case 16:\n                    metadata = _h.sent();\n                    if (!metadata) {\n                      return [2, null];\n                    }\n                    linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                    imageUrl = metadata.image;\n                    if (typeof imageUrl !== \"string\") {\n                      return [2, null];\n                    }\n                    if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                    } else {\n                      ipfs = imageUrl.match(matcherIpfs2);\n                      if (ipfs == null) {\n                        return [2, null];\n                      }\n                      linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                      imageUrl = getIpfsLink2(imageUrl);\n                    }\n                    linkage.push({ type: \"url\", content: imageUrl });\n                    return [2, { linkage, url: imageUrl }];\n                  case 17:\n                    i++;\n                    return [3, 3];\n                  case 18:\n                    return [3, 20];\n                  case 19:\n                    error_3 = _h.sent();\n                    return [3, 20];\n                  case 20:\n                    return [2, null];\n                }\n              });\n            });\n          };\n          Resolver2.prototype.getContentHash = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var hexBytes, ipfs, length_4, ipns, length_5, swarm, skynet, urlSafe_1, hash2;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this._fetchBytes(\"0xbc1c58d1\")];\n                  case 1:\n                    hexBytes = _a.sent();\n                    if (hexBytes == null || hexBytes === \"0x\") {\n                      return [2, null];\n                    }\n                    ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                    if (ipfs) {\n                      length_4 = parseInt(ipfs[3], 16);\n                      if (ipfs[4].length === length_4 * 2) {\n                        return [2, \"ipfs://\" + basex_1.Base58.encode(\"0x\" + ipfs[1])];\n                      }\n                    }\n                    ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                    if (ipns) {\n                      length_5 = parseInt(ipns[3], 16);\n                      if (ipns[4].length === length_5 * 2) {\n                        return [2, \"ipns://\" + basex_1.Base58.encode(\"0x\" + ipns[1])];\n                      }\n                    }\n                    swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n                    if (swarm) {\n                      if (swarm[1].length === 32 * 2) {\n                        return [2, \"bzz://\" + swarm[1]];\n                      }\n                    }\n                    skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n                    if (skynet) {\n                      if (skynet[1].length === 34 * 2) {\n                        urlSafe_1 = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                        hash2 = (0, base64_1.encode)(\"0x\" + skynet[1]).replace(/[=+\\/]/g, function(a) {\n                          return urlSafe_1[a];\n                        });\n                        return [2, \"sia://\" + hash2];\n                      }\n                    }\n                    return [2, logger.throwError(\"invalid or unsupported content hash data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                      operation: \"getContentHash()\",\n                      data: hexBytes\n                    })];\n                }\n              });\n            });\n          };\n          Resolver2.prototype.getText = function(key) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var keyBytes, hexBytes;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    keyBytes = (0, strings_1.toUtf8Bytes)(key);\n                    keyBytes = (0, bytes_1.concat)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n                    if (keyBytes.length % 32 !== 0) {\n                      keyBytes = (0, bytes_1.concat)([keyBytes, (0, bytes_1.hexZeroPad)(\"0x\", 32 - key.length % 32)]);\n                    }\n                    return [4, this._fetchBytes(\"0x59d1d43c\", (0, bytes_1.hexlify)(keyBytes))];\n                  case 1:\n                    hexBytes = _a.sent();\n                    if (hexBytes == null || hexBytes === \"0x\") {\n                      return [2, null];\n                    }\n                    return [2, (0, strings_1.toUtf8String)(hexBytes)];\n                }\n              });\n            });\n          };\n          return Resolver2;\n        }()\n      );\n      exports3.Resolver = Resolver;\n      var defaultFormatter = null;\n      var nextPollId = 1;\n      var BaseProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(BaseProvider2, _super);\n          function BaseProvider2(network) {\n            var _newTarget = this.constructor;\n            var _this = _super.call(this) || this;\n            _this._events = [];\n            _this._emitted = { block: -2 };\n            _this.disableCcipRead = false;\n            _this.formatter = _newTarget.getFormatter();\n            (0, properties_1.defineReadOnly)(_this, \"anyNetwork\", network === \"any\");\n            if (_this.anyNetwork) {\n              network = _this.detectNetwork();\n            }\n            if (network instanceof Promise) {\n              _this._networkPromise = network;\n              network.catch(function(error) {\n              });\n              _this._ready().catch(function(error) {\n              });\n            } else {\n              var knownNetwork = (0, properties_1.getStatic)(_newTarget, \"getNetwork\")(network);\n              if (knownNetwork) {\n                (0, properties_1.defineReadOnly)(_this, \"_network\", knownNetwork);\n                _this.emit(\"network\", knownNetwork, null);\n              } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n              }\n            }\n            _this._maxInternalBlockNumber = -1024;\n            _this._lastBlockNumber = -2;\n            _this._maxFilterBlockRange = 10;\n            _this._pollingInterval = 4e3;\n            _this._fastQueryDate = 0;\n            return _this;\n          }\n          BaseProvider2.prototype._ready = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var network, error_4;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(this._network == null))\n                      return [3, 7];\n                    network = null;\n                    if (!this._networkPromise)\n                      return [3, 4];\n                    _a.label = 1;\n                  case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4, this._networkPromise];\n                  case 2:\n                    network = _a.sent();\n                    return [3, 4];\n                  case 3:\n                    error_4 = _a.sent();\n                    return [3, 4];\n                  case 4:\n                    if (!(network == null))\n                      return [3, 6];\n                    return [4, this.detectNetwork()];\n                  case 5:\n                    network = _a.sent();\n                    _a.label = 6;\n                  case 6:\n                    if (!network) {\n                      logger.throwError(\"no network detected\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\n                    }\n                    if (this._network == null) {\n                      if (this.anyNetwork) {\n                        this._network = network;\n                      } else {\n                        (0, properties_1.defineReadOnly)(this, \"_network\", network);\n                      }\n                      this.emit(\"network\", network, null);\n                    }\n                    _a.label = 7;\n                  case 7:\n                    return [2, this._network];\n                }\n              });\n            });\n          };\n          Object.defineProperty(BaseProvider2.prototype, \"ready\", {\n            // This will always return the most recently established network.\n            // For \"any\", this can change (a \"network\" event is emitted before\n            // any change is reflected); otherwise this cannot change\n            get: function() {\n              var _this = this;\n              return (0, web_1.poll)(function() {\n                return _this._ready().then(function(network) {\n                  return network;\n                }, function(error) {\n                  if (error.code === logger_1.Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return void 0;\n                  }\n                  throw error;\n                });\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          BaseProvider2.getFormatter = function() {\n            if (defaultFormatter == null) {\n              defaultFormatter = new formatter_1.Formatter();\n            }\n            return defaultFormatter;\n          };\n          BaseProvider2.getNetwork = function(network) {\n            return (0, networks_1.getNetwork)(network == null ? \"homestead\" : network);\n          };\n          BaseProvider2.prototype.ccipReadFetch = function(tx, calldata, urls) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var sender, data, errorMessages, i, url, href, json, result, errorMessage;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (this.disableCcipRead || urls.length === 0) {\n                      return [2, null];\n                    }\n                    sender = tx.to.toLowerCase();\n                    data = calldata.toLowerCase();\n                    errorMessages = [];\n                    i = 0;\n                    _a.label = 1;\n                  case 1:\n                    if (!(i < urls.length))\n                      return [3, 4];\n                    url = urls[i];\n                    href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                    json = url.indexOf(\"{data}\") >= 0 ? null : JSON.stringify({ data, sender });\n                    return [4, (0, web_1.fetchJson)({ url: href, errorPassThrough: true }, json, function(value, response) {\n                      value.status = response.statusCode;\n                      return value;\n                    })];\n                  case 2:\n                    result = _a.sent();\n                    if (result.data) {\n                      return [2, result.data];\n                    }\n                    errorMessage = result.message || \"unknown error\";\n                    if (result.status >= 400 && result.status < 500) {\n                      return [2, logger.throwError(\"response not found during CCIP fetch: \" + errorMessage, logger_1.Logger.errors.SERVER_ERROR, { url, errorMessage })];\n                    }\n                    errorMessages.push(errorMessage);\n                    _a.label = 3;\n                  case 3:\n                    i++;\n                    return [3, 1];\n                  case 4:\n                    return [2, logger.throwError(\"error encountered during CCIP fetch: \" + errorMessages.map(function(m) {\n                      return JSON.stringify(m);\n                    }).join(\", \"), logger_1.Logger.errors.SERVER_ERROR, {\n                      urls,\n                      errorMessages\n                    })];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getInternalBlockNumber = function(maxAge) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var internalBlockNumber, result, error_5, reqTime, checkInternalBlockNumber;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this._ready()];\n                  case 1:\n                    _a.sent();\n                    if (!(maxAge > 0))\n                      return [3, 7];\n                    _a.label = 2;\n                  case 2:\n                    if (!this._internalBlockNumber)\n                      return [3, 7];\n                    internalBlockNumber = this._internalBlockNumber;\n                    _a.label = 3;\n                  case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4, internalBlockNumber];\n                  case 4:\n                    result = _a.sent();\n                    if (getTime3() - result.respTime <= maxAge) {\n                      return [2, result.blockNumber];\n                    }\n                    return [3, 7];\n                  case 5:\n                    error_5 = _a.sent();\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                      return [3, 7];\n                    }\n                    return [3, 6];\n                  case 6:\n                    return [3, 2];\n                  case 7:\n                    reqTime = getTime3();\n                    checkInternalBlockNumber = (0, properties_1.resolveProperties)({\n                      blockNumber: this.perform(\"getBlockNumber\", {}),\n                      networkError: this.getNetwork().then(function(network) {\n                        return null;\n                      }, function(error) {\n                        return error;\n                      })\n                    }).then(function(_a2) {\n                      var blockNumber = _a2.blockNumber, networkError = _a2.networkError;\n                      if (networkError) {\n                        if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                          _this._internalBlockNumber = null;\n                        }\n                        throw networkError;\n                      }\n                      var respTime = getTime3();\n                      blockNumber = bignumber_1.BigNumber.from(blockNumber).toNumber();\n                      if (blockNumber < _this._maxInternalBlockNumber) {\n                        blockNumber = _this._maxInternalBlockNumber;\n                      }\n                      _this._maxInternalBlockNumber = blockNumber;\n                      _this._setFastBlockNumber(blockNumber);\n                      return { blockNumber, reqTime, respTime };\n                    });\n                    this._internalBlockNumber = checkInternalBlockNumber;\n                    checkInternalBlockNumber.catch(function(error) {\n                      if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                        _this._internalBlockNumber = null;\n                      }\n                    });\n                    return [4, checkInternalBlockNumber];\n                  case 8:\n                    return [2, _a.sent().blockNumber];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.poll = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var pollId, runners, blockNumber, error_6, i;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    pollId = nextPollId++;\n                    runners = [];\n                    blockNumber = null;\n                    _a.label = 1;\n                  case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4, this._getInternalBlockNumber(100 + this.pollingInterval / 2)];\n                  case 2:\n                    blockNumber = _a.sent();\n                    return [3, 4];\n                  case 3:\n                    error_6 = _a.sent();\n                    this.emit(\"error\", error_6);\n                    return [\n                      2\n                      /*return*/\n                    ];\n                  case 4:\n                    this._setFastBlockNumber(blockNumber);\n                    this.emit(\"poll\", pollId, blockNumber);\n                    if (blockNumber === this._lastBlockNumber) {\n                      this.emit(\"didPoll\", pollId);\n                      return [\n                        2\n                        /*return*/\n                      ];\n                    }\n                    if (this._emitted.block === -2) {\n                      this._emitted.block = blockNumber - 1;\n                    }\n                    if (Math.abs(this._emitted.block - blockNumber) > 1e3) {\n                      logger.warn(\"network block skew detected; skipping block events (emitted=\" + this._emitted.block + \" blockNumber\" + blockNumber + \")\");\n                      this.emit(\"error\", logger.makeError(\"network block skew detected\", logger_1.Logger.errors.NETWORK_ERROR, {\n                        blockNumber,\n                        event: \"blockSkew\",\n                        previousBlockNumber: this._emitted.block\n                      }));\n                      this.emit(\"block\", blockNumber);\n                    } else {\n                      for (i = this._emitted.block + 1; i <= blockNumber; i++) {\n                        this.emit(\"block\", i);\n                      }\n                    }\n                    if (this._emitted.block !== blockNumber) {\n                      this._emitted.block = blockNumber;\n                      Object.keys(this._emitted).forEach(function(key) {\n                        if (key === \"block\") {\n                          return;\n                        }\n                        var eventBlockNumber = _this._emitted[key];\n                        if (eventBlockNumber === \"pending\") {\n                          return;\n                        }\n                        if (blockNumber - eventBlockNumber > 12) {\n                          delete _this._emitted[key];\n                        }\n                      });\n                    }\n                    if (this._lastBlockNumber === -2) {\n                      this._lastBlockNumber = blockNumber - 1;\n                    }\n                    this._events.forEach(function(event) {\n                      switch (event.type) {\n                        case \"tx\": {\n                          var hash_2 = event.hash;\n                          var runner = _this.getTransactionReceipt(hash_2).then(function(receipt) {\n                            if (!receipt || receipt.blockNumber == null) {\n                              return null;\n                            }\n                            _this._emitted[\"t:\" + hash_2] = receipt.blockNumber;\n                            _this.emit(hash_2, receipt);\n                            return null;\n                          }).catch(function(error) {\n                            _this.emit(\"error\", error);\n                          });\n                          runners.push(runner);\n                          break;\n                        }\n                        case \"filter\": {\n                          if (!event._inflight) {\n                            event._inflight = true;\n                            if (event._lastBlockNumber === -2) {\n                              event._lastBlockNumber = blockNumber - 1;\n                            }\n                            var filter_1 = event.filter;\n                            filter_1.fromBlock = event._lastBlockNumber + 1;\n                            filter_1.toBlock = blockNumber;\n                            var minFromBlock = filter_1.toBlock - _this._maxFilterBlockRange;\n                            if (minFromBlock > filter_1.fromBlock) {\n                              filter_1.fromBlock = minFromBlock;\n                            }\n                            if (filter_1.fromBlock < 0) {\n                              filter_1.fromBlock = 0;\n                            }\n                            var runner = _this.getLogs(filter_1).then(function(logs) {\n                              event._inflight = false;\n                              if (logs.length === 0) {\n                                return;\n                              }\n                              logs.forEach(function(log) {\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                  event._lastBlockNumber = log.blockNumber;\n                                }\n                                _this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                _this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                _this.emit(filter_1, log);\n                              });\n                            }).catch(function(error) {\n                              _this.emit(\"error\", error);\n                              event._inflight = false;\n                            });\n                            runners.push(runner);\n                          }\n                          break;\n                        }\n                      }\n                    });\n                    this._lastBlockNumber = blockNumber;\n                    Promise.all(runners).then(function() {\n                      _this.emit(\"didPoll\", pollId);\n                    }).catch(function(error) {\n                      _this.emit(\"error\", error);\n                    });\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.resetEventsBlock = function(blockNumber) {\n            this._lastBlockNumber = blockNumber - 1;\n            if (this.polling) {\n              this.poll();\n            }\n          };\n          Object.defineProperty(BaseProvider2.prototype, \"network\", {\n            get: function() {\n              return this._network;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          BaseProvider2.prototype.detectNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, logger.throwError(\"provider does not support network detection\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"provider.detectNetwork\"\n                })];\n              });\n            });\n          };\n          BaseProvider2.prototype.getNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var network, currentNetwork, error;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this._ready()];\n                  case 1:\n                    network = _a.sent();\n                    return [4, this.detectNetwork()];\n                  case 2:\n                    currentNetwork = _a.sent();\n                    if (!(network.chainId !== currentNetwork.chainId))\n                      return [3, 5];\n                    if (!this.anyNetwork)\n                      return [3, 4];\n                    this._network = currentNetwork;\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    this.emit(\"network\", currentNetwork, network);\n                    return [4, stall2(0)];\n                  case 3:\n                    _a.sent();\n                    return [2, this._network];\n                  case 4:\n                    error = logger.makeError(\"underlying network changed\", logger_1.Logger.errors.NETWORK_ERROR, {\n                      event: \"changed\",\n                      network,\n                      detectedNetwork: currentNetwork\n                    });\n                    this.emit(\"error\", error);\n                    throw error;\n                  case 5:\n                    return [2, network];\n                }\n              });\n            });\n          };\n          Object.defineProperty(BaseProvider2.prototype, \"blockNumber\", {\n            get: function() {\n              var _this = this;\n              this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function(blockNumber) {\n                _this._setFastBlockNumber(blockNumber);\n              }, function(error) {\n              });\n              return this._fastBlockNumber != null ? this._fastBlockNumber : -1;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(BaseProvider2.prototype, \"polling\", {\n            get: function() {\n              return this._poller != null;\n            },\n            set: function(value) {\n              var _this = this;\n              if (value && !this._poller) {\n                this._poller = setInterval(function() {\n                  _this.poll();\n                }, this.pollingInterval);\n                if (!this._bootstrapPoll) {\n                  this._bootstrapPoll = setTimeout(function() {\n                    _this.poll();\n                    _this._bootstrapPoll = setTimeout(function() {\n                      if (!_this._poller) {\n                        _this.poll();\n                      }\n                      _this._bootstrapPoll = null;\n                    }, _this.pollingInterval);\n                  }, 0);\n                }\n              } else if (!value && this._poller) {\n                clearInterval(this._poller);\n                this._poller = null;\n              }\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(BaseProvider2.prototype, \"pollingInterval\", {\n            get: function() {\n              return this._pollingInterval;\n            },\n            set: function(value) {\n              var _this = this;\n              if (typeof value !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n                throw new Error(\"invalid polling interval\");\n              }\n              this._pollingInterval = value;\n              if (this._poller) {\n                clearInterval(this._poller);\n                this._poller = setInterval(function() {\n                  _this.poll();\n                }, this._pollingInterval);\n              }\n            },\n            enumerable: false,\n            configurable: true\n          });\n          BaseProvider2.prototype._getFastBlockNumber = function() {\n            var _this = this;\n            var now = getTime3();\n            if (now - this._fastQueryDate > 2 * this._pollingInterval) {\n              this._fastQueryDate = now;\n              this._fastBlockNumberPromise = this.getBlockNumber().then(function(blockNumber) {\n                if (_this._fastBlockNumber == null || blockNumber > _this._fastBlockNumber) {\n                  _this._fastBlockNumber = blockNumber;\n                }\n                return _this._fastBlockNumber;\n              });\n            }\n            return this._fastBlockNumberPromise;\n          };\n          BaseProvider2.prototype._setFastBlockNumber = function(blockNumber) {\n            if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n              return;\n            }\n            this._fastQueryDate = getTime3();\n            if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n              this._fastBlockNumber = blockNumber;\n              this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n            }\n          };\n          BaseProvider2.prototype.waitForTransaction = function(transactionHash, confirmations, timeout) {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null)];\n              });\n            });\n          };\n          BaseProvider2.prototype._waitForTransaction = function(transactionHash, confirmations, timeout, replaceable) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var receipt;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getTransactionReceipt(transactionHash)];\n                  case 1:\n                    receipt = _a.sent();\n                    if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                      return [2, receipt];\n                    }\n                    return [2, new Promise(function(resolve, reject) {\n                      var cancelFuncs = [];\n                      var done = false;\n                      var alreadyDone = function() {\n                        if (done) {\n                          return true;\n                        }\n                        done = true;\n                        cancelFuncs.forEach(function(func) {\n                          func();\n                        });\n                        return false;\n                      };\n                      var minedHandler = function(receipt2) {\n                        if (receipt2.confirmations < confirmations) {\n                          return;\n                        }\n                        if (alreadyDone()) {\n                          return;\n                        }\n                        resolve(receipt2);\n                      };\n                      _this.on(transactionHash, minedHandler);\n                      cancelFuncs.push(function() {\n                        _this.removeListener(transactionHash, minedHandler);\n                      });\n                      if (replaceable) {\n                        var lastBlockNumber_1 = replaceable.startBlock;\n                        var scannedBlock_1 = null;\n                        var replaceHandler_1 = function(blockNumber) {\n                          return __awaiter2(_this, void 0, void 0, function() {\n                            var _this2 = this;\n                            return __generator2(this, function(_a2) {\n                              switch (_a2.label) {\n                                case 0:\n                                  if (done) {\n                                    return [\n                                      2\n                                      /*return*/\n                                    ];\n                                  }\n                                  return [4, stall2(1e3)];\n                                case 1:\n                                  _a2.sent();\n                                  this.getTransactionCount(replaceable.from).then(function(nonce) {\n                                    return __awaiter2(_this2, void 0, void 0, function() {\n                                      var mined, block, ti, tx, receipt_1, reason;\n                                      return __generator2(this, function(_a3) {\n                                        switch (_a3.label) {\n                                          case 0:\n                                            if (done) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            if (!(nonce <= replaceable.nonce))\n                                              return [3, 1];\n                                            lastBlockNumber_1 = blockNumber;\n                                            return [3, 9];\n                                          case 1:\n                                            return [4, this.getTransaction(transactionHash)];\n                                          case 2:\n                                            mined = _a3.sent();\n                                            if (mined && mined.blockNumber != null) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            if (scannedBlock_1 == null) {\n                                              scannedBlock_1 = lastBlockNumber_1 - 3;\n                                              if (scannedBlock_1 < replaceable.startBlock) {\n                                                scannedBlock_1 = replaceable.startBlock;\n                                              }\n                                            }\n                                            _a3.label = 3;\n                                          case 3:\n                                            if (!(scannedBlock_1 <= blockNumber))\n                                              return [3, 9];\n                                            if (done) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            return [4, this.getBlockWithTransactions(scannedBlock_1)];\n                                          case 4:\n                                            block = _a3.sent();\n                                            ti = 0;\n                                            _a3.label = 5;\n                                          case 5:\n                                            if (!(ti < block.transactions.length))\n                                              return [3, 8];\n                                            tx = block.transactions[ti];\n                                            if (tx.hash === transactionHash) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce))\n                                              return [3, 7];\n                                            if (done) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            return [4, this.waitForTransaction(tx.hash, confirmations)];\n                                          case 6:\n                                            receipt_1 = _a3.sent();\n                                            if (alreadyDone()) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                              reason = \"repriced\";\n                                            } else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                              reason = \"cancelled\";\n                                            }\n                                            reject(logger.makeError(\"transaction was replaced\", logger_1.Logger.errors.TRANSACTION_REPLACED, {\n                                              cancelled: reason === \"replaced\" || reason === \"cancelled\",\n                                              reason,\n                                              replacement: this._wrapTransaction(tx),\n                                              hash: transactionHash,\n                                              receipt: receipt_1\n                                            }));\n                                            return [\n                                              2\n                                              /*return*/\n                                            ];\n                                          case 7:\n                                            ti++;\n                                            return [3, 5];\n                                          case 8:\n                                            scannedBlock_1++;\n                                            return [3, 3];\n                                          case 9:\n                                            if (done) {\n                                              return [\n                                                2\n                                                /*return*/\n                                              ];\n                                            }\n                                            this.once(\"block\", replaceHandler_1);\n                                            return [\n                                              2\n                                              /*return*/\n                                            ];\n                                        }\n                                      });\n                                    });\n                                  }, function(error) {\n                                    if (done) {\n                                      return;\n                                    }\n                                    _this2.once(\"block\", replaceHandler_1);\n                                  });\n                                  return [\n                                    2\n                                    /*return*/\n                                  ];\n                              }\n                            });\n                          });\n                        };\n                        if (done) {\n                          return;\n                        }\n                        _this.once(\"block\", replaceHandler_1);\n                        cancelFuncs.push(function() {\n                          _this.removeListener(\"block\", replaceHandler_1);\n                        });\n                      }\n                      if (typeof timeout === \"number\" && timeout > 0) {\n                        var timer_1 = setTimeout(function() {\n                          if (alreadyDone()) {\n                            return;\n                          }\n                          reject(logger.makeError(\"timeout exceeded\", logger_1.Logger.errors.TIMEOUT, { timeout }));\n                        }, timeout);\n                        if (timer_1.unref) {\n                          timer_1.unref();\n                        }\n                        cancelFuncs.push(function() {\n                          clearTimeout(timer_1);\n                        });\n                      }\n                    })];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getBlockNumber = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, this._getInternalBlockNumber(0)];\n              });\n            });\n          };\n          BaseProvider2.prototype.getGasPrice = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, this.perform(\"getGasPrice\", {})];\n                  case 2:\n                    result = _a.sent();\n                    try {\n                      return [2, bignumber_1.BigNumber.from(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"getGasPrice\",\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getBalance = function(addressOrName, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      address: this._getAddress(addressOrName),\n                      blockTag: this._getBlockTag(blockTag)\n                    })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"getBalance\", params)];\n                  case 3:\n                    result = _a.sent();\n                    try {\n                      return [2, bignumber_1.BigNumber.from(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"getBalance\",\n                        params,\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getTransactionCount = function(addressOrName, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      address: this._getAddress(addressOrName),\n                      blockTag: this._getBlockTag(blockTag)\n                    })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"getTransactionCount\", params)];\n                  case 3:\n                    result = _a.sent();\n                    try {\n                      return [2, bignumber_1.BigNumber.from(result).toNumber()];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"getTransactionCount\",\n                        params,\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getCode = function(addressOrName, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      address: this._getAddress(addressOrName),\n                      blockTag: this._getBlockTag(blockTag)\n                    })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"getCode\", params)];\n                  case 3:\n                    result = _a.sent();\n                    try {\n                      return [2, (0, bytes_1.hexlify)(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"getCode\",\n                        params,\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getStorageAt = function(addressOrName, position, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      address: this._getAddress(addressOrName),\n                      blockTag: this._getBlockTag(blockTag),\n                      position: Promise.resolve(position).then(function(p) {\n                        return (0, bytes_1.hexValue)(p);\n                      })\n                    })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"getStorageAt\", params)];\n                  case 3:\n                    result = _a.sent();\n                    try {\n                      return [2, (0, bytes_1.hexlify)(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"getStorageAt\",\n                        params,\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._wrapTransaction = function(tx, hash2, startBlock) {\n            var _this = this;\n            if (hash2 != null && (0, bytes_1.hexDataLength)(hash2) !== 32) {\n              throw new Error(\"invalid response - sendTransaction\");\n            }\n            var result = tx;\n            if (hash2 != null && tx.hash !== hash2) {\n              logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", logger_1.Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash2 });\n            }\n            result.wait = function(confirms, timeout) {\n              return __awaiter2(_this, void 0, void 0, function() {\n                var replacement, receipt;\n                return __generator2(this, function(_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (confirms == null) {\n                        confirms = 1;\n                      }\n                      if (timeout == null) {\n                        timeout = 0;\n                      }\n                      replacement = void 0;\n                      if (confirms !== 0 && startBlock != null) {\n                        replacement = {\n                          data: tx.data,\n                          from: tx.from,\n                          nonce: tx.nonce,\n                          to: tx.to,\n                          value: tx.value,\n                          startBlock\n                        };\n                      }\n                      return [4, this._waitForTransaction(tx.hash, confirms, timeout, replacement)];\n                    case 1:\n                      receipt = _a.sent();\n                      if (receipt == null && confirms === 0) {\n                        return [2, null];\n                      }\n                      this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n                      if (receipt.status === 0) {\n                        logger.throwError(\"transaction failed\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                          transactionHash: tx.hash,\n                          transaction: tx,\n                          receipt\n                        });\n                      }\n                      return [2, receipt];\n                  }\n                });\n              });\n            };\n            return result;\n          };\n          BaseProvider2.prototype.sendTransaction = function(signedTransaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var hexTx, tx, blockNumber, hash2, error_7;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, Promise.resolve(signedTransaction).then(function(t) {\n                      return (0, bytes_1.hexlify)(t);\n                    })];\n                  case 2:\n                    hexTx = _a.sent();\n                    tx = this.formatter.transaction(signedTransaction);\n                    if (tx.confirmations == null) {\n                      tx.confirmations = 0;\n                    }\n                    return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                  case 3:\n                    blockNumber = _a.sent();\n                    _a.label = 4;\n                  case 4:\n                    _a.trys.push([4, 6, , 7]);\n                    return [4, this.perform(\"sendTransaction\", { signedTransaction: hexTx })];\n                  case 5:\n                    hash2 = _a.sent();\n                    return [2, this._wrapTransaction(tx, hash2, blockNumber)];\n                  case 6:\n                    error_7 = _a.sent();\n                    error_7.transaction = tx;\n                    error_7.transactionHash = tx.hash;\n                    throw error_7;\n                  case 7:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getTransactionRequest = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var values, tx, _a, _b;\n              var _this = this;\n              return __generator2(this, function(_c) {\n                switch (_c.label) {\n                  case 0:\n                    return [4, transaction];\n                  case 1:\n                    values = _c.sent();\n                    tx = {};\n                    [\"from\", \"to\"].forEach(function(key) {\n                      if (values[key] == null) {\n                        return;\n                      }\n                      tx[key] = Promise.resolve(values[key]).then(function(v) {\n                        return v ? _this._getAddress(v) : null;\n                      });\n                    });\n                    [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(function(key) {\n                      if (values[key] == null) {\n                        return;\n                      }\n                      tx[key] = Promise.resolve(values[key]).then(function(v) {\n                        return v ? bignumber_1.BigNumber.from(v) : null;\n                      });\n                    });\n                    [\"type\"].forEach(function(key) {\n                      if (values[key] == null) {\n                        return;\n                      }\n                      tx[key] = Promise.resolve(values[key]).then(function(v) {\n                        return v != null ? v : null;\n                      });\n                    });\n                    if (values.accessList) {\n                      tx.accessList = this.formatter.accessList(values.accessList);\n                    }\n                    [\"data\"].forEach(function(key) {\n                      if (values[key] == null) {\n                        return;\n                      }\n                      tx[key] = Promise.resolve(values[key]).then(function(v) {\n                        return v ? (0, bytes_1.hexlify)(v) : null;\n                      });\n                    });\n                    _b = (_a = this.formatter).transactionRequest;\n                    return [4, (0, properties_1.resolveProperties)(tx)];\n                  case 2:\n                    return [2, _b.apply(_a, [_c.sent()])];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getFilter = function(filter) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var result, _a, _b;\n              var _this = this;\n              return __generator2(this, function(_c) {\n                switch (_c.label) {\n                  case 0:\n                    return [4, filter];\n                  case 1:\n                    filter = _c.sent();\n                    result = {};\n                    if (filter.address != null) {\n                      result.address = this._getAddress(filter.address);\n                    }\n                    [\"blockHash\", \"topics\"].forEach(function(key) {\n                      if (filter[key] == null) {\n                        return;\n                      }\n                      result[key] = filter[key];\n                    });\n                    [\"fromBlock\", \"toBlock\"].forEach(function(key) {\n                      if (filter[key] == null) {\n                        return;\n                      }\n                      result[key] = _this._getBlockTag(filter[key]);\n                    });\n                    _b = (_a = this.formatter).filter;\n                    return [4, (0, properties_1.resolveProperties)(result)];\n                  case 2:\n                    return [2, _b.apply(_a, [_c.sent()])];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._call = function(transaction, blockTag, attempt) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var txSender, result, data, sender, urls, urlsOffset, urlsLength, urlsData, u, url, calldata, callbackSelector, extraData, ccipResult, tx, error_8;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (attempt >= MAX_CCIP_REDIRECTS2) {\n                      logger.throwError(\"CCIP read exceeded maximum redirections\", logger_1.Logger.errors.SERVER_ERROR, {\n                        redirects: attempt,\n                        transaction\n                      });\n                    }\n                    txSender = transaction.to;\n                    return [4, this.perform(\"call\", { transaction, blockTag })];\n                  case 1:\n                    result = _a.sent();\n                    if (!(attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (0, bytes_1.hexDataLength)(result) % 32 === 4))\n                      return [3, 5];\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    data = (0, bytes_1.hexDataSlice)(result, 4);\n                    sender = (0, bytes_1.hexDataSlice)(data, 0, 32);\n                    if (!bignumber_1.BigNumber.from(sender).eq(txSender)) {\n                      logger.throwError(\"CCIP Read sender did not match\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction,\n                        data: result\n                      });\n                    }\n                    urls = [];\n                    urlsOffset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 32, 64)).toNumber();\n                    urlsLength = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();\n                    urlsData = (0, bytes_1.hexDataSlice)(data, urlsOffset + 32);\n                    for (u = 0; u < urlsLength; u++) {\n                      url = _parseString2(urlsData, u * 32);\n                      if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                          name: \"OffchainLookup\",\n                          signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                          transaction,\n                          data: result\n                        });\n                      }\n                      urls.push(url);\n                    }\n                    calldata = _parseBytes2(data, 64);\n                    if (!bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 100, 128)).isZero()) {\n                      logger.throwError(\"CCIP Read callback selector included junk\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction,\n                        data: result\n                      });\n                    }\n                    callbackSelector = (0, bytes_1.hexDataSlice)(data, 96, 100);\n                    extraData = _parseBytes2(data, 128);\n                    return [4, this.ccipReadFetch(transaction, calldata, urls)];\n                  case 3:\n                    ccipResult = _a.sent();\n                    if (ccipResult == null) {\n                      logger.throwError(\"CCIP Read disabled or provided no URLs\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction,\n                        data: result\n                      });\n                    }\n                    tx = {\n                      to: txSender,\n                      data: (0, bytes_1.hexConcat)([callbackSelector, encodeBytes2([ccipResult, extraData])])\n                    };\n                    return [2, this._call(tx, blockTag, attempt + 1)];\n                  case 4:\n                    error_8 = _a.sent();\n                    if (error_8.code === logger_1.Logger.errors.SERVER_ERROR) {\n                      throw error_8;\n                    }\n                    return [3, 5];\n                  case 5:\n                    try {\n                      return [2, (0, bytes_1.hexlify)(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"call\",\n                        params: { transaction, blockTag },\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.call = function(transaction, blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var resolved;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      transaction: this._getTransactionRequest(transaction),\n                      blockTag: this._getBlockTag(blockTag),\n                      ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n                    })];\n                  case 2:\n                    resolved = _a.sent();\n                    return [2, this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1)];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.estimateGas = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({\n                      transaction: this._getTransactionRequest(transaction)\n                    })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"estimateGas\", params)];\n                  case 3:\n                    result = _a.sent();\n                    try {\n                      return [2, bignumber_1.BigNumber.from(result)];\n                    } catch (error) {\n                      return [2, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                        method: \"estimateGas\",\n                        params,\n                        result,\n                        error\n                      })];\n                    }\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getAddress = function(addressOrName) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var address;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, addressOrName];\n                  case 1:\n                    addressOrName = _a.sent();\n                    if (typeof addressOrName !== \"string\") {\n                      logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n                    }\n                    return [4, this.resolveName(addressOrName)];\n                  case 2:\n                    address = _a.sent();\n                    if (address == null) {\n                      logger.throwError(\"ENS name not configured\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName(\" + JSON.stringify(addressOrName) + \")\"\n                      });\n                    }\n                    return [2, address];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getBlock = function(blockHashOrBlockTag, includeTransactions) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var blockNumber, params, _a, error_9;\n              var _this = this;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _b.sent();\n                    return [4, blockHashOrBlockTag];\n                  case 2:\n                    blockHashOrBlockTag = _b.sent();\n                    blockNumber = -128;\n                    params = {\n                      includeTransactions: !!includeTransactions\n                    };\n                    if (!(0, bytes_1.isHexString)(blockHashOrBlockTag, 32))\n                      return [3, 3];\n                    params.blockHash = blockHashOrBlockTag;\n                    return [3, 6];\n                  case 3:\n                    _b.trys.push([3, 5, , 6]);\n                    _a = params;\n                    return [4, this._getBlockTag(blockHashOrBlockTag)];\n                  case 4:\n                    _a.blockTag = _b.sent();\n                    if ((0, bytes_1.isHexString)(params.blockTag)) {\n                      blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                    return [3, 6];\n                  case 5:\n                    error_9 = _b.sent();\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                    return [3, 6];\n                  case 6:\n                    return [2, (0, web_1.poll)(function() {\n                      return __awaiter2(_this, void 0, void 0, function() {\n                        var block, blockNumber_1, i, tx, confirmations, blockWithTxs;\n                        var _this2 = this;\n                        return __generator2(this, function(_a2) {\n                          switch (_a2.label) {\n                            case 0:\n                              return [4, this.perform(\"getBlock\", params)];\n                            case 1:\n                              block = _a2.sent();\n                              if (block == null) {\n                                if (params.blockHash != null) {\n                                  if (this._emitted[\"b:\" + params.blockHash] == null) {\n                                    return [2, null];\n                                  }\n                                }\n                                if (params.blockTag != null) {\n                                  if (blockNumber > this._emitted.block) {\n                                    return [2, null];\n                                  }\n                                }\n                                return [2, void 0];\n                              }\n                              if (!includeTransactions)\n                                return [3, 8];\n                              blockNumber_1 = null;\n                              i = 0;\n                              _a2.label = 2;\n                            case 2:\n                              if (!(i < block.transactions.length))\n                                return [3, 7];\n                              tx = block.transactions[i];\n                              if (!(tx.blockNumber == null))\n                                return [3, 3];\n                              tx.confirmations = 0;\n                              return [3, 6];\n                            case 3:\n                              if (!(tx.confirmations == null))\n                                return [3, 6];\n                              if (!(blockNumber_1 == null))\n                                return [3, 5];\n                              return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                            case 4:\n                              blockNumber_1 = _a2.sent();\n                              _a2.label = 5;\n                            case 5:\n                              confirmations = blockNumber_1 - tx.blockNumber + 1;\n                              if (confirmations <= 0) {\n                                confirmations = 1;\n                              }\n                              tx.confirmations = confirmations;\n                              _a2.label = 6;\n                            case 6:\n                              i++;\n                              return [3, 2];\n                            case 7:\n                              blockWithTxs = this.formatter.blockWithTransactions(block);\n                              blockWithTxs.transactions = blockWithTxs.transactions.map(function(tx2) {\n                                return _this2._wrapTransaction(tx2);\n                              });\n                              return [2, blockWithTxs];\n                            case 8:\n                              return [2, this.formatter.block(block)];\n                          }\n                        });\n                      });\n                    }, { oncePoll: this })];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getBlock = function(blockHashOrBlockTag) {\n            return this._getBlock(blockHashOrBlockTag, false);\n          };\n          BaseProvider2.prototype.getBlockWithTransactions = function(blockHashOrBlockTag) {\n            return this._getBlock(blockHashOrBlockTag, true);\n          };\n          BaseProvider2.prototype.getTransaction = function(transactionHash) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, transactionHash];\n                  case 2:\n                    transactionHash = _a.sent();\n                    params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                    return [2, (0, web_1.poll)(function() {\n                      return __awaiter2(_this, void 0, void 0, function() {\n                        var result, tx, blockNumber, confirmations;\n                        return __generator2(this, function(_a2) {\n                          switch (_a2.label) {\n                            case 0:\n                              return [4, this.perform(\"getTransaction\", params)];\n                            case 1:\n                              result = _a2.sent();\n                              if (result == null) {\n                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                  return [2, null];\n                                }\n                                return [2, void 0];\n                              }\n                              tx = this.formatter.transactionResponse(result);\n                              if (!(tx.blockNumber == null))\n                                return [3, 2];\n                              tx.confirmations = 0;\n                              return [3, 4];\n                            case 2:\n                              if (!(tx.confirmations == null))\n                                return [3, 4];\n                              return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                            case 3:\n                              blockNumber = _a2.sent();\n                              confirmations = blockNumber - tx.blockNumber + 1;\n                              if (confirmations <= 0) {\n                                confirmations = 1;\n                              }\n                              tx.confirmations = confirmations;\n                              _a2.label = 4;\n                            case 4:\n                              return [2, this._wrapTransaction(tx)];\n                          }\n                        });\n                      });\n                    }, { oncePoll: this })];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getTransactionReceipt = function(transactionHash) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, transactionHash];\n                  case 2:\n                    transactionHash = _a.sent();\n                    params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                    return [2, (0, web_1.poll)(function() {\n                      return __awaiter2(_this, void 0, void 0, function() {\n                        var result, receipt, blockNumber, confirmations;\n                        return __generator2(this, function(_a2) {\n                          switch (_a2.label) {\n                            case 0:\n                              return [4, this.perform(\"getTransactionReceipt\", params)];\n                            case 1:\n                              result = _a2.sent();\n                              if (result == null) {\n                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                  return [2, null];\n                                }\n                                return [2, void 0];\n                              }\n                              if (result.blockHash == null) {\n                                return [2, void 0];\n                              }\n                              receipt = this.formatter.receipt(result);\n                              if (!(receipt.blockNumber == null))\n                                return [3, 2];\n                              receipt.confirmations = 0;\n                              return [3, 4];\n                            case 2:\n                              if (!(receipt.confirmations == null))\n                                return [3, 4];\n                              return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                            case 3:\n                              blockNumber = _a2.sent();\n                              confirmations = blockNumber - receipt.blockNumber + 1;\n                              if (confirmations <= 0) {\n                                confirmations = 1;\n                              }\n                              receipt.confirmations = confirmations;\n                              _a2.label = 4;\n                            case 4:\n                              return [2, receipt];\n                          }\n                        });\n                      });\n                    }, { oncePoll: this })];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getLogs = function(filter) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, logs;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [4, (0, properties_1.resolveProperties)({ filter: this._getFilter(filter) })];\n                  case 2:\n                    params = _a.sent();\n                    return [4, this.perform(\"getLogs\", params)];\n                  case 3:\n                    logs = _a.sent();\n                    logs.forEach(function(log) {\n                      if (log.removed == null) {\n                        log.removed = false;\n                      }\n                    });\n                    return [2, formatter_1.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getEtherPrice = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.getNetwork()];\n                  case 1:\n                    _a.sent();\n                    return [2, this.perform(\"getEtherPrice\", {})];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getBlockTag = function(blockTag) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var blockNumber;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, blockTag];\n                  case 1:\n                    blockTag = _a.sent();\n                    if (!(typeof blockTag === \"number\" && blockTag < 0))\n                      return [3, 3];\n                    if (blockTag % 1) {\n                      logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                    }\n                    return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                  case 2:\n                    blockNumber = _a.sent();\n                    blockNumber += blockTag;\n                    if (blockNumber < 0) {\n                      blockNumber = 0;\n                    }\n                    return [2, this.formatter.blockTag(blockNumber)];\n                  case 3:\n                    return [2, this.formatter.blockTag(blockTag)];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getResolver = function(name) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var currentName, addr, resolver, _a;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    currentName = name;\n                    _b.label = 1;\n                  case 1:\n                    if (false)\n                      return [3, 6];\n                    if (currentName === \"\" || currentName === \".\") {\n                      return [2, null];\n                    }\n                    if (name !== \"eth\" && currentName === \"eth\") {\n                      return [2, null];\n                    }\n                    return [4, this._getResolver(currentName, \"getResolver\")];\n                  case 2:\n                    addr = _b.sent();\n                    if (!(addr != null))\n                      return [3, 5];\n                    resolver = new Resolver(this, addr, name);\n                    _a = currentName !== name;\n                    if (!_a)\n                      return [3, 4];\n                    return [4, resolver.supportsWildcard()];\n                  case 3:\n                    _a = !_b.sent();\n                    _b.label = 4;\n                  case 4:\n                    if (_a) {\n                      return [2, null];\n                    }\n                    return [2, resolver];\n                  case 5:\n                    currentName = currentName.split(\".\").slice(1).join(\".\");\n                    return [3, 1];\n                  case 6:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype._getResolver = function(name, operation) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var network, addrData, error_10;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (operation == null) {\n                      operation = \"ENS\";\n                    }\n                    return [4, this.getNetwork()];\n                  case 1:\n                    network = _a.sent();\n                    if (!network.ensAddress) {\n                      logger.throwError(\"network does not support ENS\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });\n                    }\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4, this.call({\n                      to: network.ensAddress,\n                      data: \"0x0178b8bf\" + (0, hash_1.namehash)(name).substring(2)\n                    })];\n                  case 3:\n                    addrData = _a.sent();\n                    return [2, this.formatter.callAddress(addrData)];\n                  case 4:\n                    error_10 = _a.sent();\n                    return [3, 5];\n                  case 5:\n                    return [2, null];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.resolveName = function(name) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var resolver;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, name];\n                  case 1:\n                    name = _a.sent();\n                    try {\n                      return [2, Promise.resolve(this.formatter.address(name))];\n                    } catch (error) {\n                      if ((0, bytes_1.isHexString)(name)) {\n                        throw error;\n                      }\n                    }\n                    if (typeof name !== \"string\") {\n                      logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n                    }\n                    return [4, this.getResolver(name)];\n                  case 2:\n                    resolver = _a.sent();\n                    if (!resolver) {\n                      return [2, null];\n                    }\n                    return [4, resolver.getAddress()];\n                  case 3:\n                    return [2, _a.sent()];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.lookupAddress = function(address) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var node, resolverAddr, name, _a, addr;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4, address];\n                  case 1:\n                    address = _b.sent();\n                    address = this.formatter.address(address);\n                    node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                    return [4, this._getResolver(node, \"lookupAddress\")];\n                  case 2:\n                    resolverAddr = _b.sent();\n                    if (resolverAddr == null) {\n                      return [2, null];\n                    }\n                    _a = _parseString2;\n                    return [4, this.call({\n                      to: resolverAddr,\n                      data: \"0x691f3431\" + (0, hash_1.namehash)(node).substring(2)\n                    })];\n                  case 3:\n                    name = _a.apply(void 0, [_b.sent(), 0]);\n                    return [4, this.resolveName(name)];\n                  case 4:\n                    addr = _b.sent();\n                    if (addr != address) {\n                      return [2, null];\n                    }\n                    return [2, name];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.getAvatar = function(nameOrAddress) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var resolver, address, node, resolverAddress, avatar_1, error_11, name_1, _a, error_12, avatar;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    resolver = null;\n                    if (!(0, bytes_1.isHexString)(nameOrAddress))\n                      return [3, 10];\n                    address = this.formatter.address(nameOrAddress);\n                    node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                    return [4, this._getResolver(node, \"getAvatar\")];\n                  case 1:\n                    resolverAddress = _b.sent();\n                    if (!resolverAddress) {\n                      return [2, null];\n                    }\n                    resolver = new Resolver(this, resolverAddress, node);\n                    _b.label = 2;\n                  case 2:\n                    _b.trys.push([2, 4, , 5]);\n                    return [4, resolver.getAvatar()];\n                  case 3:\n                    avatar_1 = _b.sent();\n                    if (avatar_1) {\n                      return [2, avatar_1.url];\n                    }\n                    return [3, 5];\n                  case 4:\n                    error_11 = _b.sent();\n                    if (error_11.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                      throw error_11;\n                    }\n                    return [3, 5];\n                  case 5:\n                    _b.trys.push([5, 8, , 9]);\n                    _a = _parseString2;\n                    return [4, this.call({\n                      to: resolverAddress,\n                      data: \"0x691f3431\" + (0, hash_1.namehash)(node).substring(2)\n                    })];\n                  case 6:\n                    name_1 = _a.apply(void 0, [_b.sent(), 0]);\n                    return [4, this.getResolver(name_1)];\n                  case 7:\n                    resolver = _b.sent();\n                    return [3, 9];\n                  case 8:\n                    error_12 = _b.sent();\n                    if (error_12.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                      throw error_12;\n                    }\n                    return [2, null];\n                  case 9:\n                    return [3, 12];\n                  case 10:\n                    return [4, this.getResolver(nameOrAddress)];\n                  case 11:\n                    resolver = _b.sent();\n                    if (!resolver) {\n                      return [2, null];\n                    }\n                    _b.label = 12;\n                  case 12:\n                    return [4, resolver.getAvatar()];\n                  case 13:\n                    avatar = _b.sent();\n                    if (avatar == null) {\n                      return [2, null];\n                    }\n                    return [2, avatar.url];\n                }\n              });\n            });\n          };\n          BaseProvider2.prototype.perform = function(method, params) {\n            return logger.throwError(method + \" not implemented\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\n          };\n          BaseProvider2.prototype._startEvent = function(event) {\n            this.polling = this._events.filter(function(e) {\n              return e.pollable();\n            }).length > 0;\n          };\n          BaseProvider2.prototype._stopEvent = function(event) {\n            this.polling = this._events.filter(function(e) {\n              return e.pollable();\n            }).length > 0;\n          };\n          BaseProvider2.prototype._addEventListener = function(eventName, listener, once2) {\n            var event = new Event(getEventTag(eventName), listener, once2);\n            this._events.push(event);\n            this._startEvent(event);\n            return this;\n          };\n          BaseProvider2.prototype.on = function(eventName, listener) {\n            return this._addEventListener(eventName, listener, false);\n          };\n          BaseProvider2.prototype.once = function(eventName, listener) {\n            return this._addEventListener(eventName, listener, true);\n          };\n          BaseProvider2.prototype.emit = function(eventName) {\n            var _this = this;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n              args[_i - 1] = arguments[_i];\n            }\n            var result = false;\n            var stopped = [];\n            var eventTag = getEventTag(eventName);\n            this._events = this._events.filter(function(event) {\n              if (event.tag !== eventTag) {\n                return true;\n              }\n              setTimeout(function() {\n                event.listener.apply(_this, args);\n              }, 0);\n              result = true;\n              if (event.once) {\n                stopped.push(event);\n                return false;\n              }\n              return true;\n            });\n            stopped.forEach(function(event) {\n              _this._stopEvent(event);\n            });\n            return result;\n          };\n          BaseProvider2.prototype.listenerCount = function(eventName) {\n            if (!eventName) {\n              return this._events.length;\n            }\n            var eventTag = getEventTag(eventName);\n            return this._events.filter(function(event) {\n              return event.tag === eventTag;\n            }).length;\n          };\n          BaseProvider2.prototype.listeners = function(eventName) {\n            if (eventName == null) {\n              return this._events.map(function(event) {\n                return event.listener;\n              });\n            }\n            var eventTag = getEventTag(eventName);\n            return this._events.filter(function(event) {\n              return event.tag === eventTag;\n            }).map(function(event) {\n              return event.listener;\n            });\n          };\n          BaseProvider2.prototype.off = function(eventName, listener) {\n            var _this = this;\n            if (listener == null) {\n              return this.removeAllListeners(eventName);\n            }\n            var stopped = [];\n            var found = false;\n            var eventTag = getEventTag(eventName);\n            this._events = this._events.filter(function(event) {\n              if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n              }\n              if (found) {\n                return true;\n              }\n              found = true;\n              stopped.push(event);\n              return false;\n            });\n            stopped.forEach(function(event) {\n              _this._stopEvent(event);\n            });\n            return this;\n          };\n          BaseProvider2.prototype.removeAllListeners = function(eventName) {\n            var _this = this;\n            var stopped = [];\n            if (eventName == null) {\n              stopped = this._events;\n              this._events = [];\n            } else {\n              var eventTag_1 = getEventTag(eventName);\n              this._events = this._events.filter(function(event) {\n                if (event.tag !== eventTag_1) {\n                  return true;\n                }\n                stopped.push(event);\n                return false;\n              });\n            }\n            stopped.forEach(function(event) {\n              _this._stopEvent(event);\n            });\n            return this;\n          };\n          return BaseProvider2;\n        }(abstract_provider_1.Provider)\n      );\n      exports3.BaseProvider = BaseProvider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/json-rpc-provider.js\n  var require_json_rpc_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/json-rpc-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.JsonRpcProvider = exports3.JsonRpcSigner = void 0;\n      var abstract_signer_1 = require_lib15();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var hash_1 = require_lib12();\n      var properties_1 = require_lib4();\n      var strings_1 = require_lib9();\n      var transactions_1 = require_lib17();\n      var web_1 = require_lib28();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var base_provider_1 = require_base_provider();\n      var errorGas = [\"call\", \"estimateGas\"];\n      function spelunk(value, requireData) {\n        if (value == null) {\n          return null;\n        }\n        if (typeof value.message === \"string\" && value.message.match(\"reverted\")) {\n          var data = (0, bytes_1.isHexString)(value.data) ? value.data : null;\n          if (!requireData || data) {\n            return { message: value.message, data };\n          }\n        }\n        if (typeof value === \"object\") {\n          for (var key in value) {\n            var result = spelunk(value[key], requireData);\n            if (result) {\n              return result;\n            }\n          }\n          return null;\n        }\n        if (typeof value === \"string\") {\n          try {\n            return spelunk(JSON.parse(value), requireData);\n          } catch (error) {\n          }\n        }\n        return null;\n      }\n      function checkError(method, error, params) {\n        var transaction = params.transaction || params.signedTransaction;\n        if (method === \"call\") {\n          var result = spelunk(error, true);\n          if (result) {\n            return result.data;\n          }\n          logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", logger_1.Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\",\n            transaction,\n            error\n          });\n        }\n        if (method === \"estimateGas\") {\n          var result = spelunk(error.body, false);\n          if (result == null) {\n            result = spelunk(error, false);\n          }\n          if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n              reason: result.message,\n              method,\n              transaction,\n              error\n            });\n          }\n        }\n        var message = error.message;\n        if (error.code === logger_1.Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n          message = error.error.message;\n        } else if (typeof error.body === \"string\") {\n          message = error.body;\n        } else if (typeof error.responseText === \"string\") {\n          message = error.responseText;\n        }\n        message = (message || \"\").toLowerCase();\n        if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n          logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_1.Logger.errors.INSUFFICIENT_FUNDS, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/nonce (is )?too low/i)) {\n          logger.throwError(\"nonce has already been used\", logger_1.Logger.errors.NONCE_EXPIRED, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n          logger.throwError(\"replacement fee too low\", logger_1.Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/only replay-protected/i)) {\n          logger.throwError(\"legacy pre-eip-155 transactions not supported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n          logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error,\n            method,\n            transaction\n          });\n        }\n        throw error;\n      }\n      function timer(timeout) {\n        return new Promise(function(resolve) {\n          setTimeout(resolve, timeout);\n        });\n      }\n      function getResult(payload) {\n        if (payload.error) {\n          var error = new Error(payload.error.message);\n          error.code = payload.error.code;\n          error.data = payload.error.data;\n          throw error;\n        }\n        return payload.result;\n      }\n      function getLowerCase2(value) {\n        if (value) {\n          return value.toLowerCase();\n        }\n        return value;\n      }\n      var _constructorGuard = {};\n      var JsonRpcSigner2 = (\n        /** @class */\n        function(_super) {\n          __extends2(JsonRpcSigner3, _super);\n          function JsonRpcSigner3(constructorGuard, provider, addressOrIndex) {\n            var _this = _super.call(this) || this;\n            if (constructorGuard !== _constructorGuard) {\n              throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n            }\n            (0, properties_1.defineReadOnly)(_this, \"provider\", provider);\n            if (addressOrIndex == null) {\n              addressOrIndex = 0;\n            }\n            if (typeof addressOrIndex === \"string\") {\n              (0, properties_1.defineReadOnly)(_this, \"_address\", _this.provider.formatter.address(addressOrIndex));\n              (0, properties_1.defineReadOnly)(_this, \"_index\", null);\n            } else if (typeof addressOrIndex === \"number\") {\n              (0, properties_1.defineReadOnly)(_this, \"_index\", addressOrIndex);\n              (0, properties_1.defineReadOnly)(_this, \"_address\", null);\n            } else {\n              logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n            }\n            return _this;\n          }\n          JsonRpcSigner3.prototype.connect = function(provider) {\n            return logger.throwError(\"cannot alter JSON-RPC Signer connection\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"connect\"\n            });\n          };\n          JsonRpcSigner3.prototype.connectUnchecked = function() {\n            return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n          };\n          JsonRpcSigner3.prototype.getAddress = function() {\n            var _this = this;\n            if (this._address) {\n              return Promise.resolve(this._address);\n            }\n            return this.provider.send(\"eth_accounts\", []).then(function(accounts) {\n              if (accounts.length <= _this._index) {\n                logger.throwError(\"unknown account #\" + _this._index, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"getAddress\"\n                });\n              }\n              return _this.provider.formatter.address(accounts[_this._index]);\n            });\n          };\n          JsonRpcSigner3.prototype.sendUncheckedTransaction = function(transaction) {\n            var _this = this;\n            transaction = (0, properties_1.shallowCopy)(transaction);\n            var fromAddress = this.getAddress().then(function(address) {\n              if (address) {\n                address = address.toLowerCase();\n              }\n              return address;\n            });\n            if (transaction.gasLimit == null) {\n              var estimate = (0, properties_1.shallowCopy)(transaction);\n              estimate.from = fromAddress;\n              transaction.gasLimit = this.provider.estimateGas(estimate);\n            }\n            if (transaction.to != null) {\n              transaction.to = Promise.resolve(transaction.to).then(function(to) {\n                return __awaiter2(_this, void 0, void 0, function() {\n                  var address;\n                  return __generator2(this, function(_a) {\n                    switch (_a.label) {\n                      case 0:\n                        if (to == null) {\n                          return [2, null];\n                        }\n                        return [4, this.provider.resolveName(to)];\n                      case 1:\n                        address = _a.sent();\n                        if (address == null) {\n                          logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                        }\n                        return [2, address];\n                    }\n                  });\n                });\n              });\n            }\n            return (0, properties_1.resolveProperties)({\n              tx: (0, properties_1.resolveProperties)(transaction),\n              sender: fromAddress\n            }).then(function(_a) {\n              var tx = _a.tx, sender = _a.sender;\n              if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                  logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n              } else {\n                tx.from = sender;\n              }\n              var hexTx = _this.provider.constructor.hexlifyTransaction(tx, { from: true });\n              return _this.provider.send(\"eth_sendTransaction\", [hexTx]).then(function(hash2) {\n                return hash2;\n              }, function(error) {\n                if (typeof error.message === \"string\" && error.message.match(/user denied/i)) {\n                  logger.throwError(\"user rejected transaction\", logger_1.Logger.errors.ACTION_REJECTED, {\n                    action: \"sendTransaction\",\n                    transaction: tx\n                  });\n                }\n                return checkError(\"sendTransaction\", error, hexTx);\n              });\n            });\n          };\n          JsonRpcSigner3.prototype.signTransaction = function(transaction) {\n            return logger.throwError(\"signing transactions is unsupported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"signTransaction\"\n            });\n          };\n          JsonRpcSigner3.prototype.sendTransaction = function(transaction) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var blockNumber, hash2, error_1;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval)];\n                  case 1:\n                    blockNumber = _a.sent();\n                    return [4, this.sendUncheckedTransaction(transaction)];\n                  case 2:\n                    hash2 = _a.sent();\n                    _a.label = 3;\n                  case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4, (0, web_1.poll)(function() {\n                      return __awaiter2(_this, void 0, void 0, function() {\n                        var tx;\n                        return __generator2(this, function(_a2) {\n                          switch (_a2.label) {\n                            case 0:\n                              return [4, this.provider.getTransaction(hash2)];\n                            case 1:\n                              tx = _a2.sent();\n                              if (tx === null) {\n                                return [2, void 0];\n                              }\n                              return [2, this.provider._wrapTransaction(tx, hash2, blockNumber)];\n                          }\n                        });\n                      });\n                    }, { oncePoll: this.provider })];\n                  case 4:\n                    return [2, _a.sent()];\n                  case 5:\n                    error_1 = _a.sent();\n                    error_1.transactionHash = hash2;\n                    throw error_1;\n                  case 6:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          JsonRpcSigner3.prototype.signMessage = function(message) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var data, address, error_2;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    data = typeof message === \"string\" ? (0, strings_1.toUtf8Bytes)(message) : message;\n                    return [4, this.getAddress()];\n                  case 1:\n                    address = _a.sent();\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4, this.provider.send(\"personal_sign\", [(0, bytes_1.hexlify)(data), address.toLowerCase()])];\n                  case 3:\n                    return [2, _a.sent()];\n                  case 4:\n                    error_2 = _a.sent();\n                    if (typeof error_2.message === \"string\" && error_2.message.match(/user denied/i)) {\n                      logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                        action: \"signMessage\",\n                        from: address,\n                        messageData: message\n                      });\n                    }\n                    throw error_2;\n                  case 5:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          JsonRpcSigner3.prototype._legacySignMessage = function(message) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var data, address, error_3;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    data = typeof message === \"string\" ? (0, strings_1.toUtf8Bytes)(message) : message;\n                    return [4, this.getAddress()];\n                  case 1:\n                    address = _a.sent();\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4, this.provider.send(\"eth_sign\", [address.toLowerCase(), (0, bytes_1.hexlify)(data)])];\n                  case 3:\n                    return [2, _a.sent()];\n                  case 4:\n                    error_3 = _a.sent();\n                    if (typeof error_3.message === \"string\" && error_3.message.match(/user denied/i)) {\n                      logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                        action: \"_legacySignMessage\",\n                        from: address,\n                        messageData: message\n                      });\n                    }\n                    throw error_3;\n                  case 5:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          JsonRpcSigner3.prototype._signTypedData = function(domain2, types, value) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var populated, address, error_4;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, hash_1._TypedDataEncoder.resolveNames(domain2, types, value, function(name) {\n                      return _this.provider.resolveName(name);\n                    })];\n                  case 1:\n                    populated = _a.sent();\n                    return [4, this.getAddress()];\n                  case 2:\n                    address = _a.sent();\n                    _a.label = 3;\n                  case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4, this.provider.send(\"eth_signTypedData_v4\", [\n                      address.toLowerCase(),\n                      JSON.stringify(hash_1._TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n                    ])];\n                  case 4:\n                    return [2, _a.sent()];\n                  case 5:\n                    error_4 = _a.sent();\n                    if (typeof error_4.message === \"string\" && error_4.message.match(/user denied/i)) {\n                      logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                        action: \"_signTypedData\",\n                        from: address,\n                        messageData: { domain: populated.domain, types, value: populated.value }\n                      });\n                    }\n                    throw error_4;\n                  case 6:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          JsonRpcSigner3.prototype.unlock = function(password) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var provider, address;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    provider = this.provider;\n                    return [4, this.getAddress()];\n                  case 1:\n                    address = _a.sent();\n                    return [2, provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null])];\n                }\n              });\n            });\n          };\n          return JsonRpcSigner3;\n        }(abstract_signer_1.Signer)\n      );\n      exports3.JsonRpcSigner = JsonRpcSigner2;\n      var UncheckedJsonRpcSigner = (\n        /** @class */\n        function(_super) {\n          __extends2(UncheckedJsonRpcSigner2, _super);\n          function UncheckedJsonRpcSigner2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          UncheckedJsonRpcSigner2.prototype.sendTransaction = function(transaction) {\n            var _this = this;\n            return this.sendUncheckedTransaction(transaction).then(function(hash2) {\n              return {\n                hash: hash2,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: function(confirmations) {\n                  return _this.provider.waitForTransaction(hash2, confirmations);\n                }\n              };\n            });\n          };\n          return UncheckedJsonRpcSigner2;\n        }(JsonRpcSigner2)\n      );\n      var allowedTransactionKeys = {\n        chainId: true,\n        data: true,\n        gasLimit: true,\n        gasPrice: true,\n        nonce: true,\n        to: true,\n        value: true,\n        type: true,\n        accessList: true,\n        maxFeePerGas: true,\n        maxPriorityFeePerGas: true\n      };\n      var JsonRpcProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(JsonRpcProvider3, _super);\n          function JsonRpcProvider3(url, network) {\n            var _this = this;\n            var networkOrReady = network;\n            if (networkOrReady == null) {\n              networkOrReady = new Promise(function(resolve, reject) {\n                setTimeout(function() {\n                  _this.detectNetwork().then(function(network2) {\n                    resolve(network2);\n                  }, function(error) {\n                    reject(error);\n                  });\n                }, 0);\n              });\n            }\n            _this = _super.call(this, networkOrReady) || this;\n            if (!url) {\n              url = (0, properties_1.getStatic)(_this.constructor, \"defaultUrl\")();\n            }\n            if (typeof url === \"string\") {\n              (0, properties_1.defineReadOnly)(_this, \"connection\", Object.freeze({\n                url\n              }));\n            } else {\n              (0, properties_1.defineReadOnly)(_this, \"connection\", Object.freeze((0, properties_1.shallowCopy)(url)));\n            }\n            _this._nextId = 42;\n            return _this;\n          }\n          Object.defineProperty(JsonRpcProvider3.prototype, \"_cache\", {\n            get: function() {\n              if (this._eventLoopCache == null) {\n                this._eventLoopCache = {};\n              }\n              return this._eventLoopCache;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          JsonRpcProvider3.defaultUrl = function() {\n            return \"http://localhost:8545\";\n          };\n          JsonRpcProvider3.prototype.detectNetwork = function() {\n            var _this = this;\n            if (!this._cache[\"detectNetwork\"]) {\n              this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n              setTimeout(function() {\n                _this._cache[\"detectNetwork\"] = null;\n              }, 0);\n            }\n            return this._cache[\"detectNetwork\"];\n          };\n          JsonRpcProvider3.prototype._uncachedDetectNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var chainId, error_5, error_6, getNetwork;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, timer(0)];\n                  case 1:\n                    _a.sent();\n                    chainId = null;\n                    _a.label = 2;\n                  case 2:\n                    _a.trys.push([2, 4, , 9]);\n                    return [4, this.send(\"eth_chainId\", [])];\n                  case 3:\n                    chainId = _a.sent();\n                    return [3, 9];\n                  case 4:\n                    error_5 = _a.sent();\n                    _a.label = 5;\n                  case 5:\n                    _a.trys.push([5, 7, , 8]);\n                    return [4, this.send(\"net_version\", [])];\n                  case 6:\n                    chainId = _a.sent();\n                    return [3, 8];\n                  case 7:\n                    error_6 = _a.sent();\n                    return [3, 8];\n                  case 8:\n                    return [3, 9];\n                  case 9:\n                    if (chainId != null) {\n                      getNetwork = (0, properties_1.getStatic)(this.constructor, \"getNetwork\");\n                      try {\n                        return [2, getNetwork(bignumber_1.BigNumber.from(chainId).toNumber())];\n                      } catch (error) {\n                        return [2, logger.throwError(\"could not detect network\", logger_1.Logger.errors.NETWORK_ERROR, {\n                          chainId,\n                          event: \"invalidNetwork\",\n                          serverError: error\n                        })];\n                      }\n                    }\n                    return [2, logger.throwError(\"could not detect network\", logger_1.Logger.errors.NETWORK_ERROR, {\n                      event: \"noNetwork\"\n                    })];\n                }\n              });\n            });\n          };\n          JsonRpcProvider3.prototype.getSigner = function(addressOrIndex) {\n            return new JsonRpcSigner2(_constructorGuard, this, addressOrIndex);\n          };\n          JsonRpcProvider3.prototype.getUncheckedSigner = function(addressOrIndex) {\n            return this.getSigner(addressOrIndex).connectUnchecked();\n          };\n          JsonRpcProvider3.prototype.listAccounts = function() {\n            var _this = this;\n            return this.send(\"eth_accounts\", []).then(function(accounts) {\n              return accounts.map(function(a) {\n                return _this.formatter.address(a);\n              });\n            });\n          };\n          JsonRpcProvider3.prototype.send = function(method, params) {\n            var _this = this;\n            var request = {\n              method,\n              params,\n              id: this._nextId++,\n              jsonrpc: \"2.0\"\n            };\n            this.emit(\"debug\", {\n              action: \"request\",\n              request: (0, properties_1.deepCopy)(request),\n              provider: this\n            });\n            var cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n            if (cache && this._cache[method]) {\n              return this._cache[method];\n            }\n            var result = (0, web_1.fetchJson)(this.connection, JSON.stringify(request), getResult).then(function(result2) {\n              _this.emit(\"debug\", {\n                action: \"response\",\n                request,\n                response: result2,\n                provider: _this\n              });\n              return result2;\n            }, function(error) {\n              _this.emit(\"debug\", {\n                action: \"response\",\n                error,\n                request,\n                provider: _this\n              });\n              throw error;\n            });\n            if (cache) {\n              this._cache[method] = result;\n              setTimeout(function() {\n                _this._cache[method] = null;\n              }, 0);\n            }\n            return result;\n          };\n          JsonRpcProvider3.prototype.prepareRequest = function(method, params) {\n            switch (method) {\n              case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n              case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n              case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase2(params.address), params.blockTag]];\n              case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase2(params.address), params.blockTag]];\n              case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase2(params.address), params.blockTag]];\n              case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase2(params.address), (0, bytes_1.hexZeroPad)(params.position, 32), params.blockTag]];\n              case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n              case \"getBlock\":\n                if (params.blockTag) {\n                  return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                } else if (params.blockHash) {\n                  return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n              case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n              case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n              case \"call\": {\n                var hexlifyTransaction = (0, properties_1.getStatic)(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n              }\n              case \"estimateGas\": {\n                var hexlifyTransaction = (0, properties_1.getStatic)(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n              }\n              case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                  params.filter.address = getLowerCase2(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n              default:\n                break;\n            }\n            return null;\n          };\n          JsonRpcProvider3.prototype.perform = function(method, params) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var tx, feeData, args, error_7;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(method === \"call\" || method === \"estimateGas\"))\n                      return [3, 2];\n                    tx = params.transaction;\n                    if (!(tx && tx.type != null && bignumber_1.BigNumber.from(tx.type).isZero()))\n                      return [3, 2];\n                    if (!(tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null))\n                      return [3, 2];\n                    return [4, this.getFeeData()];\n                  case 1:\n                    feeData = _a.sent();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                      params = (0, properties_1.shallowCopy)(params);\n                      params.transaction = (0, properties_1.shallowCopy)(tx);\n                      delete params.transaction.type;\n                    }\n                    _a.label = 2;\n                  case 2:\n                    args = this.prepareRequest(method, params);\n                    if (args == null) {\n                      logger.throwError(method + \" not implemented\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\n                    }\n                    _a.label = 3;\n                  case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4, this.send(args[0], args[1])];\n                  case 4:\n                    return [2, _a.sent()];\n                  case 5:\n                    error_7 = _a.sent();\n                    return [2, checkError(method, error_7, params)];\n                  case 6:\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          JsonRpcProvider3.prototype._startEvent = function(event) {\n            if (event.tag === \"pending\") {\n              this._startPending();\n            }\n            _super.prototype._startEvent.call(this, event);\n          };\n          JsonRpcProvider3.prototype._startPending = function() {\n            if (this._pendingFilter != null) {\n              return;\n            }\n            var self2 = this;\n            var pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n            this._pendingFilter = pendingFilter;\n            pendingFilter.then(function(filterId) {\n              function poll() {\n                self2.send(\"eth_getFilterChanges\", [filterId]).then(function(hashes) {\n                  if (self2._pendingFilter != pendingFilter) {\n                    return null;\n                  }\n                  var seq = Promise.resolve();\n                  hashes.forEach(function(hash2) {\n                    self2._emitted[\"t:\" + hash2.toLowerCase()] = \"pending\";\n                    seq = seq.then(function() {\n                      return self2.getTransaction(hash2).then(function(tx) {\n                        self2.emit(\"pending\", tx);\n                        return null;\n                      });\n                    });\n                  });\n                  return seq.then(function() {\n                    return timer(1e3);\n                  });\n                }).then(function() {\n                  if (self2._pendingFilter != pendingFilter) {\n                    self2.send(\"eth_uninstallFilter\", [filterId]);\n                    return;\n                  }\n                  setTimeout(function() {\n                    poll();\n                  }, 0);\n                  return null;\n                }).catch(function(error) {\n                });\n              }\n              poll();\n              return filterId;\n            }).catch(function(error) {\n            });\n          };\n          JsonRpcProvider3.prototype._stopEvent = function(event) {\n            if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n              this._pendingFilter = null;\n            }\n            _super.prototype._stopEvent.call(this, event);\n          };\n          JsonRpcProvider3.hexlifyTransaction = function(transaction, allowExtra) {\n            var allowed = (0, properties_1.shallowCopy)(allowedTransactionKeys);\n            if (allowExtra) {\n              for (var key in allowExtra) {\n                if (allowExtra[key]) {\n                  allowed[key] = true;\n                }\n              }\n            }\n            (0, properties_1.checkProperties)(transaction, allowed);\n            var result = {};\n            [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key2) {\n              if (transaction[key2] == null) {\n                return;\n              }\n              var value = (0, bytes_1.hexValue)(bignumber_1.BigNumber.from(transaction[key2]));\n              if (key2 === \"gasLimit\") {\n                key2 = \"gas\";\n              }\n              result[key2] = value;\n            });\n            [\"from\", \"to\", \"data\"].forEach(function(key2) {\n              if (transaction[key2] == null) {\n                return;\n              }\n              result[key2] = (0, bytes_1.hexlify)(transaction[key2]);\n            });\n            if (transaction.accessList) {\n              result[\"accessList\"] = (0, transactions_1.accessListify)(transaction.accessList);\n            }\n            return result;\n          };\n          return JsonRpcProvider3;\n        }(base_provider_1.BaseProvider)\n      );\n      exports3.JsonRpcProvider = JsonRpcProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/browser-ws.js\n  var require_browser_ws = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/browser-ws.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.WebSocket = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var WS = null;\n      exports3.WebSocket = WS;\n      try {\n        exports3.WebSocket = WS = WebSocket;\n        if (WS == null) {\n          throw new Error(\"inject please\");\n        }\n      } catch (error) {\n        logger_2 = new logger_1.Logger(_version_1.version);\n        exports3.WebSocket = WS = function() {\n          logger_2.throwError(\"WebSockets not supported in this environment\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n          });\n        };\n      }\n      var logger_2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/websocket-provider.js\n  var require_websocket_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/websocket-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.WebSocketProvider = void 0;\n      var bignumber_1 = require_lib3();\n      var properties_1 = require_lib4();\n      var json_rpc_provider_1 = require_json_rpc_provider();\n      var ws_1 = require_browser_ws();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var NextId = 1;\n      var WebSocketProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(WebSocketProvider3, _super);\n          function WebSocketProvider3(url, network) {\n            var _this = this;\n            if (network === \"any\") {\n              logger.throwError(\"WebSocketProvider does not support 'any' network yet\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n              });\n            }\n            if (typeof url === \"string\") {\n              _this = _super.call(this, url, network) || this;\n            } else {\n              _this = _super.call(this, \"_websocket\", network) || this;\n            }\n            _this._pollingInterval = -1;\n            _this._wsReady = false;\n            if (typeof url === \"string\") {\n              (0, properties_1.defineReadOnly)(_this, \"_websocket\", new ws_1.WebSocket(_this.connection.url));\n            } else {\n              (0, properties_1.defineReadOnly)(_this, \"_websocket\", url);\n            }\n            (0, properties_1.defineReadOnly)(_this, \"_requests\", {});\n            (0, properties_1.defineReadOnly)(_this, \"_subs\", {});\n            (0, properties_1.defineReadOnly)(_this, \"_subIds\", {});\n            (0, properties_1.defineReadOnly)(_this, \"_detectNetwork\", _super.prototype.detectNetwork.call(_this));\n            _this.websocket.onopen = function() {\n              _this._wsReady = true;\n              Object.keys(_this._requests).forEach(function(id2) {\n                _this.websocket.send(_this._requests[id2].payload);\n              });\n            };\n            _this.websocket.onmessage = function(messageEvent) {\n              var data = messageEvent.data;\n              var result = JSON.parse(data);\n              if (result.id != null) {\n                var id2 = String(result.id);\n                var request = _this._requests[id2];\n                delete _this._requests[id2];\n                if (result.result !== void 0) {\n                  request.callback(null, result.result);\n                  _this.emit(\"debug\", {\n                    action: \"response\",\n                    request: JSON.parse(request.payload),\n                    response: result.result,\n                    provider: _this\n                  });\n                } else {\n                  var error = null;\n                  if (result.error) {\n                    error = new Error(result.error.message || \"unknown error\");\n                    (0, properties_1.defineReadOnly)(error, \"code\", result.error.code || null);\n                    (0, properties_1.defineReadOnly)(error, \"response\", data);\n                  } else {\n                    error = new Error(\"unknown error\");\n                  }\n                  request.callback(error, void 0);\n                  _this.emit(\"debug\", {\n                    action: \"response\",\n                    error,\n                    request: JSON.parse(request.payload),\n                    provider: _this\n                  });\n                }\n              } else if (result.method === \"eth_subscription\") {\n                var sub = _this._subs[result.params.subscription];\n                if (sub) {\n                  sub.processFunc(result.params.result);\n                }\n              } else {\n                console.warn(\"this should not happen\");\n              }\n            };\n            var fauxPoll = setInterval(function() {\n              _this.emit(\"poll\");\n            }, 1e3);\n            if (fauxPoll.unref) {\n              fauxPoll.unref();\n            }\n            return _this;\n          }\n          Object.defineProperty(WebSocketProvider3.prototype, \"websocket\", {\n            // Cannot narrow the type of _websocket, as that is not backwards compatible\n            // so we add a getter and let the WebSocket be a public API.\n            get: function() {\n              return this._websocket;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          WebSocketProvider3.prototype.detectNetwork = function() {\n            return this._detectNetwork;\n          };\n          Object.defineProperty(WebSocketProvider3.prototype, \"pollingInterval\", {\n            get: function() {\n              return 0;\n            },\n            set: function(value) {\n              logger.throwError(\"cannot set polling interval on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setPollingInterval\"\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          WebSocketProvider3.prototype.resetEventsBlock = function(blockNumber) {\n            logger.throwError(\"cannot reset events block on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"resetEventBlock\"\n            });\n          };\n          WebSocketProvider3.prototype.poll = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, null];\n              });\n            });\n          };\n          Object.defineProperty(WebSocketProvider3.prototype, \"polling\", {\n            set: function(value) {\n              if (!value) {\n                return;\n              }\n              logger.throwError(\"cannot set polling on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setPolling\"\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          WebSocketProvider3.prototype.send = function(method, params) {\n            var _this = this;\n            var rid = NextId++;\n            return new Promise(function(resolve, reject) {\n              function callback(error, result) {\n                if (error) {\n                  return reject(error);\n                }\n                return resolve(result);\n              }\n              var payload = JSON.stringify({\n                method,\n                params,\n                id: rid,\n                jsonrpc: \"2.0\"\n              });\n              _this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: _this\n              });\n              _this._requests[String(rid)] = { callback, payload };\n              if (_this._wsReady) {\n                _this.websocket.send(payload);\n              }\n            });\n          };\n          WebSocketProvider3.defaultUrl = function() {\n            return \"ws://localhost:8546\";\n          };\n          WebSocketProvider3.prototype._subscribe = function(tag, param, processFunc) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var subIdPromise, subId;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    subIdPromise = this._subIds[tag];\n                    if (subIdPromise == null) {\n                      subIdPromise = Promise.all(param).then(function(param2) {\n                        return _this.send(\"eth_subscribe\", param2);\n                      });\n                      this._subIds[tag] = subIdPromise;\n                    }\n                    return [4, subIdPromise];\n                  case 1:\n                    subId = _a.sent();\n                    this._subs[subId] = { tag, processFunc };\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          WebSocketProvider3.prototype._startEvent = function(event) {\n            var _this = this;\n            switch (event.type) {\n              case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], function(result) {\n                  var blockNumber = bignumber_1.BigNumber.from(result.number).toNumber();\n                  _this._emitted.block = blockNumber;\n                  _this.emit(\"block\", blockNumber);\n                });\n                break;\n              case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], function(result) {\n                  _this.emit(\"pending\", result);\n                });\n                break;\n              case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], function(result) {\n                  if (result.removed == null) {\n                    result.removed = false;\n                  }\n                  _this.emit(event.filter, _this.formatter.filterLog(result));\n                });\n                break;\n              case \"tx\": {\n                var emitReceipt_1 = function(event2) {\n                  var hash2 = event2.hash;\n                  _this.getTransactionReceipt(hash2).then(function(receipt) {\n                    if (!receipt) {\n                      return;\n                    }\n                    _this.emit(hash2, receipt);\n                  });\n                };\n                emitReceipt_1(event);\n                this._subscribe(\"tx\", [\"newHeads\"], function(result) {\n                  _this._events.filter(function(e) {\n                    return e.type === \"tx\";\n                  }).forEach(emitReceipt_1);\n                });\n                break;\n              }\n              case \"debug\":\n              case \"poll\":\n              case \"willPoll\":\n              case \"didPoll\":\n              case \"error\":\n                break;\n              default:\n                console.log(\"unhandled:\", event);\n                break;\n            }\n          };\n          WebSocketProvider3.prototype._stopEvent = function(event) {\n            var _this = this;\n            var tag = event.tag;\n            if (event.type === \"tx\") {\n              if (this._events.filter(function(e) {\n                return e.type === \"tx\";\n              }).length) {\n                return;\n              }\n              tag = \"tx\";\n            } else if (this.listenerCount(event.event)) {\n              return;\n            }\n            var subId = this._subIds[tag];\n            if (!subId) {\n              return;\n            }\n            delete this._subIds[tag];\n            subId.then(function(subId2) {\n              if (!_this._subs[subId2]) {\n                return;\n              }\n              delete _this._subs[subId2];\n              _this.send(\"eth_unsubscribe\", [subId2]);\n            });\n          };\n          WebSocketProvider3.prototype.destroy = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(this.websocket.readyState === ws_1.WebSocket.CONNECTING))\n                      return [3, 2];\n                    return [4, new Promise(function(resolve) {\n                      _this.websocket.onopen = function() {\n                        resolve(true);\n                      };\n                      _this.websocket.onerror = function() {\n                        resolve(false);\n                      };\n                    })];\n                  case 1:\n                    _a.sent();\n                    _a.label = 2;\n                  case 2:\n                    this.websocket.close(1e3);\n                    return [\n                      2\n                      /*return*/\n                    ];\n                }\n              });\n            });\n          };\n          return WebSocketProvider3;\n        }(json_rpc_provider_1.JsonRpcProvider)\n      );\n      exports3.WebSocketProvider = WebSocketProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/url-json-rpc-provider.js\n  var require_url_json_rpc_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/url-json-rpc-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.UrlJsonRpcProvider = exports3.StaticJsonRpcProvider = void 0;\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var json_rpc_provider_1 = require_json_rpc_provider();\n      var StaticJsonRpcProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(StaticJsonRpcProvider2, _super);\n          function StaticJsonRpcProvider2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          StaticJsonRpcProvider2.prototype.detectNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var network;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    network = this.network;\n                    if (!(network == null))\n                      return [3, 2];\n                    return [4, _super.prototype.detectNetwork.call(this)];\n                  case 1:\n                    network = _a.sent();\n                    if (!network) {\n                      logger.throwError(\"no network detected\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\n                    }\n                    if (this._network == null) {\n                      (0, properties_1.defineReadOnly)(this, \"_network\", network);\n                      this.emit(\"network\", network, null);\n                    }\n                    _a.label = 2;\n                  case 2:\n                    return [2, network];\n                }\n              });\n            });\n          };\n          return StaticJsonRpcProvider2;\n        }(json_rpc_provider_1.JsonRpcProvider)\n      );\n      exports3.StaticJsonRpcProvider = StaticJsonRpcProvider;\n      var UrlJsonRpcProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(UrlJsonRpcProvider2, _super);\n          function UrlJsonRpcProvider2(network, apiKey) {\n            var _newTarget = this.constructor;\n            var _this = this;\n            logger.checkAbstract(_newTarget, UrlJsonRpcProvider2);\n            network = (0, properties_1.getStatic)(_newTarget, \"getNetwork\")(network);\n            apiKey = (0, properties_1.getStatic)(_newTarget, \"getApiKey\")(apiKey);\n            var connection = (0, properties_1.getStatic)(_newTarget, \"getUrl\")(network, apiKey);\n            _this = _super.call(this, connection, network) || this;\n            if (typeof apiKey === \"string\") {\n              (0, properties_1.defineReadOnly)(_this, \"apiKey\", apiKey);\n            } else if (apiKey != null) {\n              Object.keys(apiKey).forEach(function(key) {\n                (0, properties_1.defineReadOnly)(_this, key, apiKey[key]);\n              });\n            }\n            return _this;\n          }\n          UrlJsonRpcProvider2.prototype._startPending = function() {\n            logger.warn(\"WARNING: API provider does not support pending filters\");\n          };\n          UrlJsonRpcProvider2.prototype.isCommunityResource = function() {\n            return false;\n          };\n          UrlJsonRpcProvider2.prototype.getSigner = function(address) {\n            return logger.throwError(\"API provider does not support signing\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n          };\n          UrlJsonRpcProvider2.prototype.listAccounts = function() {\n            return Promise.resolve([]);\n          };\n          UrlJsonRpcProvider2.getApiKey = function(apiKey) {\n            return apiKey;\n          };\n          UrlJsonRpcProvider2.getUrl = function(network, apiKey) {\n            return logger.throwError(\"not implemented; sub-classes must override getUrl\", logger_1.Logger.errors.NOT_IMPLEMENTED, {\n              operation: \"getUrl\"\n            });\n          };\n          return UrlJsonRpcProvider2;\n        }(StaticJsonRpcProvider)\n      );\n      exports3.UrlJsonRpcProvider = UrlJsonRpcProvider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/alchemy-provider.js\n  var require_alchemy_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/alchemy-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.AlchemyProvider = exports3.AlchemyWebSocketProvider = void 0;\n      var properties_1 = require_lib4();\n      var formatter_1 = require_formatter();\n      var websocket_provider_1 = require_websocket_provider();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\n      var AlchemyWebSocketProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(AlchemyWebSocketProvider2, _super);\n          function AlchemyWebSocketProvider2(network, apiKey) {\n            var _this = this;\n            var provider = new AlchemyProvider2(network, apiKey);\n            var url = provider.connection.url.replace(/^http/i, \"ws\").replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n            _this = _super.call(this, url, provider.network) || this;\n            (0, properties_1.defineReadOnly)(_this, \"apiKey\", provider.apiKey);\n            return _this;\n          }\n          AlchemyWebSocketProvider2.prototype.isCommunityResource = function() {\n            return this.apiKey === defaultApiKey;\n          };\n          return AlchemyWebSocketProvider2;\n        }(websocket_provider_1.WebSocketProvider)\n      );\n      exports3.AlchemyWebSocketProvider = AlchemyWebSocketProvider;\n      var AlchemyProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(AlchemyProvider3, _super);\n          function AlchemyProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          AlchemyProvider3.getWebSocketProvider = function(network, apiKey) {\n            return new AlchemyWebSocketProvider(network, apiKey);\n          };\n          AlchemyProvider3.getApiKey = function(apiKey) {\n            if (apiKey == null) {\n              return defaultApiKey;\n            }\n            if (apiKey && typeof apiKey !== \"string\") {\n              logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n            }\n            return apiKey;\n          };\n          AlchemyProvider3.getUrl = function(network, apiKey) {\n            var host = null;\n            switch (network.name) {\n              case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n              case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n              case \"sepolia\":\n                host = \"eth-sepolia.g.alchemy.com/v2/\";\n                break;\n              case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n              case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n              case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n              case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n              case \"arbitrum-sepolia\":\n                host = \"arb-sepolia.g.alchemy.com/v2/\";\n                break;\n              case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n              case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\";\n                break;\n              case \"optimism-sepolia\":\n                host = \"opt-sepolia.g.alchemy.com/v2/\";\n                break;\n              default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n            }\n            return {\n              allowGzip: true,\n              url: \"https://\" + host + apiKey,\n              throttleCallback: function(attempt, url) {\n                if (apiKey === defaultApiKey) {\n                  (0, formatter_1.showThrottleMessage)();\n                }\n                return Promise.resolve(true);\n              }\n            };\n          };\n          AlchemyProvider3.prototype.isCommunityResource = function() {\n            return this.apiKey === defaultApiKey;\n          };\n          return AlchemyProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.AlchemyProvider = AlchemyProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/ankr-provider.js\n  var require_ankr_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/ankr-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.AnkrProvider = void 0;\n      var formatter_1 = require_formatter();\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n      function getHost(name) {\n        switch (name) {\n          case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n          case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n          case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n          case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n          case \"sepolia\":\n            return \"rpc.ankr.com/eth_sepolia/\";\n          case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n          case \"maticmum\":\n            return \"rpc.ankr.com/polygon_mumbai/\";\n          case \"optimism\":\n            return \"rpc.ankr.com/optimism/\";\n          case \"optimism-goerli\":\n            return \"rpc.ankr.com/optimism_testnet/\";\n          case \"optimism-sepolia\":\n            return \"rpc.ankr.com/optimism_sepolia/\";\n          case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n      }\n      var AnkrProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(AnkrProvider3, _super);\n          function AnkrProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          AnkrProvider3.prototype.isCommunityResource = function() {\n            return this.apiKey === defaultApiKey;\n          };\n          AnkrProvider3.getApiKey = function(apiKey) {\n            if (apiKey == null) {\n              return defaultApiKey;\n            }\n            return apiKey;\n          };\n          AnkrProvider3.getUrl = function(network, apiKey) {\n            if (apiKey == null) {\n              apiKey = defaultApiKey;\n            }\n            var connection = {\n              allowGzip: true,\n              url: \"https://\" + getHost(network.name) + apiKey,\n              throttleCallback: function(attempt, url) {\n                if (apiKey.apiKey === defaultApiKey) {\n                  (0, formatter_1.showThrottleMessage)();\n                }\n                return Promise.resolve(true);\n              }\n            };\n            if (apiKey.projectSecret != null) {\n              connection.user = \"\";\n              connection.password = apiKey.projectSecret;\n            }\n            return connection;\n          };\n          return AnkrProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.AnkrProvider = AnkrProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/cloudflare-provider.js\n  var require_cloudflare_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/cloudflare-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.CloudflareProvider = void 0;\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var CloudflareProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(CloudflareProvider3, _super);\n          function CloudflareProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          CloudflareProvider3.getApiKey = function(apiKey) {\n            if (apiKey != null) {\n              logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n            }\n            return null;\n          };\n          CloudflareProvider3.getUrl = function(network, apiKey) {\n            var host = null;\n            switch (network.name) {\n              case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n              default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n            }\n            return host;\n          };\n          CloudflareProvider3.prototype.perform = function(method, params) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var block;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(method === \"getBlockNumber\"))\n                      return [3, 2];\n                    return [4, _super.prototype.perform.call(this, \"getBlock\", { blockTag: \"latest\" })];\n                  case 1:\n                    block = _a.sent();\n                    return [2, block.number];\n                  case 2:\n                    return [2, _super.prototype.perform.call(this, method, params)];\n                }\n              });\n            });\n          };\n          return CloudflareProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.CloudflareProvider = CloudflareProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/etherscan-provider.js\n  var require_etherscan_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/etherscan-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.EtherscanProvider = void 0;\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var transactions_1 = require_lib17();\n      var web_1 = require_lib28();\n      var formatter_1 = require_formatter();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var base_provider_1 = require_base_provider();\n      function getTransactionPostData(transaction) {\n        var result = {};\n        for (var key in transaction) {\n          if (transaction[key] == null) {\n            continue;\n          }\n          var value = transaction[key];\n          if (key === \"type\" && value === 0) {\n            continue;\n          }\n          if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = (0, bytes_1.hexValue)((0, bytes_1.hexlify)(value));\n          } else if (key === \"accessList\") {\n            value = \"[\" + (0, transactions_1.accessListify)(value).map(function(set) {\n              return '{address:\"' + set.address + '\",storageKeys:[\"' + set.storageKeys.join('\",\"') + '\"]}';\n            }).join(\",\") + \"]\";\n          } else {\n            value = (0, bytes_1.hexlify)(value);\n          }\n          result[key] = value;\n        }\n        return result;\n      }\n      function getResult(result) {\n        if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n          return result.result;\n        }\n        if (result.status != 1 || typeof result.message !== \"string\" || !result.message.match(/^OK/)) {\n          var error = new Error(\"invalid response\");\n          error.result = JSON.stringify(result);\n          if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n          }\n          throw error;\n        }\n        return result.result;\n      }\n      function getJsonResult(result) {\n        if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n          var error = new Error(\"throttled response\");\n          error.result = JSON.stringify(result);\n          error.throttleRetry = true;\n          throw error;\n        }\n        if (result.jsonrpc != \"2.0\") {\n          var error = new Error(\"invalid response\");\n          error.result = JSON.stringify(result);\n          throw error;\n        }\n        if (result.error) {\n          var error = new Error(result.error.message || \"unknown error\");\n          if (result.error.code) {\n            error.code = result.error.code;\n          }\n          if (result.error.data) {\n            error.data = result.error.data;\n          }\n          throw error;\n        }\n        return result.result;\n      }\n      function checkLogTag(blockTag) {\n        if (blockTag === \"pending\") {\n          throw new Error(\"pending not supported\");\n        }\n        if (blockTag === \"latest\") {\n          return blockTag;\n        }\n        return parseInt(blockTag.substring(2), 16);\n      }\n      function checkError(method, error, transaction) {\n        if (method === \"call\" && error.code === logger_1.Logger.errors.SERVER_ERROR) {\n          var e = error.error;\n          if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            var data = e.data;\n            if (data) {\n              data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if ((0, bytes_1.isHexString)(data)) {\n              return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", logger_1.Logger.errors.CALL_EXCEPTION, {\n              error,\n              data: \"0x\"\n            });\n          }\n        }\n        var message = error.message;\n        if (error.code === logger_1.Logger.errors.SERVER_ERROR) {\n          if (error.error && typeof error.error.message === \"string\") {\n            message = error.error.message;\n          } else if (typeof error.body === \"string\") {\n            message = error.body;\n          } else if (typeof error.responseText === \"string\") {\n            message = error.responseText;\n          }\n        }\n        message = (message || \"\").toLowerCase();\n        if (message.match(/insufficient funds/)) {\n          logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_1.Logger.errors.INSUFFICIENT_FUNDS, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n          logger.throwError(\"nonce has already been used\", logger_1.Logger.errors.NONCE_EXPIRED, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/another transaction with same nonce/)) {\n          logger.throwError(\"replacement fee too low\", logger_1.Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error,\n            method,\n            transaction\n          });\n        }\n        if (message.match(/execution failed due to an exception|execution reverted/)) {\n          logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error,\n            method,\n            transaction\n          });\n        }\n        throw error;\n      }\n      var EtherscanProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(EtherscanProvider3, _super);\n          function EtherscanProvider3(network, apiKey) {\n            var _this = _super.call(this, network) || this;\n            (0, properties_1.defineReadOnly)(_this, \"baseUrl\", _this.getBaseUrl());\n            (0, properties_1.defineReadOnly)(_this, \"apiKey\", apiKey || null);\n            return _this;\n          }\n          EtherscanProvider3.prototype.getBaseUrl = function() {\n            switch (this.network ? this.network.name : \"invalid\") {\n              case \"homestead\":\n                return \"https://api.etherscan.io\";\n              case \"goerli\":\n                return \"https://api-goerli.etherscan.io\";\n              case \"sepolia\":\n                return \"https://api-sepolia.etherscan.io\";\n              case \"matic\":\n                return \"https://api.polygonscan.com\";\n              case \"maticmum\":\n                return \"https://api-testnet.polygonscan.com\";\n              case \"arbitrum\":\n                return \"https://api.arbiscan.io\";\n              case \"arbitrum-goerli\":\n                return \"https://api-goerli.arbiscan.io\";\n              case \"optimism\":\n                return \"https://api-optimistic.etherscan.io\";\n              case \"optimism-goerli\":\n                return \"https://api-goerli-optimistic.etherscan.io\";\n              default:\n            }\n            return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n          };\n          EtherscanProvider3.prototype.getUrl = function(module2, params) {\n            var query = Object.keys(params).reduce(function(accum, key) {\n              var value = params[key];\n              if (value != null) {\n                accum += \"&\" + key + \"=\" + value;\n              }\n              return accum;\n            }, \"\");\n            var apiKey = this.apiKey ? \"&apikey=\" + this.apiKey : \"\";\n            return this.baseUrl + \"/api?module=\" + module2 + query + apiKey;\n          };\n          EtherscanProvider3.prototype.getPostUrl = function() {\n            return this.baseUrl + \"/api\";\n          };\n          EtherscanProvider3.prototype.getPostData = function(module2, params) {\n            params.module = module2;\n            params.apikey = this.apiKey;\n            return params;\n          };\n          EtherscanProvider3.prototype.fetch = function(module2, params, post) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var url, payload, procFunc, connection, payloadStr, result;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    url = post ? this.getPostUrl() : this.getUrl(module2, params);\n                    payload = post ? this.getPostData(module2, params) : null;\n                    procFunc = module2 === \"proxy\" ? getJsonResult : getResult;\n                    this.emit(\"debug\", {\n                      action: \"request\",\n                      request: url,\n                      provider: this\n                    });\n                    connection = {\n                      url,\n                      throttleSlotInterval: 1e3,\n                      throttleCallback: function(attempt, url2) {\n                        if (_this.isCommunityResource()) {\n                          (0, formatter_1.showThrottleMessage)();\n                        }\n                        return Promise.resolve(true);\n                      }\n                    };\n                    payloadStr = null;\n                    if (payload) {\n                      connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                      payloadStr = Object.keys(payload).map(function(key) {\n                        return key + \"=\" + payload[key];\n                      }).join(\"&\");\n                    }\n                    return [4, (0, web_1.fetchJson)(connection, payloadStr, procFunc || getJsonResult)];\n                  case 1:\n                    result = _a.sent();\n                    this.emit(\"debug\", {\n                      action: \"response\",\n                      request: url,\n                      response: (0, properties_1.deepCopy)(result),\n                      provider: this\n                    });\n                    return [2, result];\n                }\n              });\n            });\n          };\n          EtherscanProvider3.prototype.detectNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              return __generator2(this, function(_a) {\n                return [2, this.network];\n              });\n            });\n          };\n          EtherscanProvider3.prototype.perform = function(method, params) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var _a, postData, error_1, postData, error_2, args, topic0, logs, blocks, i, log, block, _b;\n              return __generator2(this, function(_c) {\n                switch (_c.label) {\n                  case 0:\n                    _a = method;\n                    switch (_a) {\n                      case \"getBlockNumber\":\n                        return [3, 1];\n                      case \"getGasPrice\":\n                        return [3, 2];\n                      case \"getBalance\":\n                        return [3, 3];\n                      case \"getTransactionCount\":\n                        return [3, 4];\n                      case \"getCode\":\n                        return [3, 5];\n                      case \"getStorageAt\":\n                        return [3, 6];\n                      case \"sendTransaction\":\n                        return [3, 7];\n                      case \"getBlock\":\n                        return [3, 8];\n                      case \"getTransaction\":\n                        return [3, 9];\n                      case \"getTransactionReceipt\":\n                        return [3, 10];\n                      case \"call\":\n                        return [3, 11];\n                      case \"estimateGas\":\n                        return [3, 15];\n                      case \"getLogs\":\n                        return [3, 19];\n                      case \"getEtherPrice\":\n                        return [3, 26];\n                    }\n                    return [3, 28];\n                  case 1:\n                    return [2, this.fetch(\"proxy\", { action: \"eth_blockNumber\" })];\n                  case 2:\n                    return [2, this.fetch(\"proxy\", { action: \"eth_gasPrice\" })];\n                  case 3:\n                    return [2, this.fetch(\"account\", {\n                      action: \"balance\",\n                      address: params.address,\n                      tag: params.blockTag\n                    })];\n                  case 4:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_getTransactionCount\",\n                      address: params.address,\n                      tag: params.blockTag\n                    })];\n                  case 5:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_getCode\",\n                      address: params.address,\n                      tag: params.blockTag\n                    })];\n                  case 6:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_getStorageAt\",\n                      address: params.address,\n                      position: params.position,\n                      tag: params.blockTag\n                    })];\n                  case 7:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_sendRawTransaction\",\n                      hex: params.signedTransaction\n                    }, true).catch(function(error) {\n                      return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    })];\n                  case 8:\n                    if (params.blockTag) {\n                      return [2, this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: params.includeTransactions ? \"true\" : \"false\"\n                      })];\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                  case 9:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_getTransactionByHash\",\n                      txhash: params.transactionHash\n                    })];\n                  case 10:\n                    return [2, this.fetch(\"proxy\", {\n                      action: \"eth_getTransactionReceipt\",\n                      txhash: params.transactionHash\n                    })];\n                  case 11:\n                    if (params.blockTag !== \"latest\") {\n                      throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    _c.label = 12;\n                  case 12:\n                    _c.trys.push([12, 14, , 15]);\n                    return [4, this.fetch(\"proxy\", postData, true)];\n                  case 13:\n                    return [2, _c.sent()];\n                  case 14:\n                    error_1 = _c.sent();\n                    return [2, checkError(\"call\", error_1, params.transaction)];\n                  case 15:\n                    postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    _c.label = 16;\n                  case 16:\n                    _c.trys.push([16, 18, , 19]);\n                    return [4, this.fetch(\"proxy\", postData, true)];\n                  case 17:\n                    return [2, _c.sent()];\n                  case 18:\n                    error_2 = _c.sent();\n                    return [2, checkError(\"estimateGas\", error_2, params.transaction)];\n                  case 19:\n                    args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                      args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                      args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                      args.address = params.filter.address;\n                    }\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                      if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                      }\n                      if (params.filter.topics.length === 1) {\n                        topic0 = params.filter.topics[0];\n                        if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                          logger.throwError(\"unsupported topic format\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { topic0 });\n                        }\n                        args.topic0 = topic0;\n                      }\n                    }\n                    return [4, this.fetch(\"logs\", args)];\n                  case 20:\n                    logs = _c.sent();\n                    blocks = {};\n                    i = 0;\n                    _c.label = 21;\n                  case 21:\n                    if (!(i < logs.length))\n                      return [3, 25];\n                    log = logs[i];\n                    if (log.blockHash != null) {\n                      return [3, 24];\n                    }\n                    if (!(blocks[log.blockNumber] == null))\n                      return [3, 23];\n                    return [4, this.getBlock(log.blockNumber)];\n                  case 22:\n                    block = _c.sent();\n                    if (block) {\n                      blocks[log.blockNumber] = block.hash;\n                    }\n                    _c.label = 23;\n                  case 23:\n                    log.blockHash = blocks[log.blockNumber];\n                    _c.label = 24;\n                  case 24:\n                    i++;\n                    return [3, 21];\n                  case 25:\n                    return [2, logs];\n                  case 26:\n                    if (this.network.name !== \"homestead\") {\n                      return [2, 0];\n                    }\n                    _b = parseFloat;\n                    return [4, this.fetch(\"stats\", { action: \"ethprice\" })];\n                  case 27:\n                    return [2, _b.apply(void 0, [_c.sent().ethusd])];\n                  case 28:\n                    return [3, 29];\n                  case 29:\n                    return [2, _super.prototype.perform.call(this, method, params)];\n                }\n              });\n            });\n          };\n          EtherscanProvider3.prototype.getHistory = function(addressOrName, startBlock, endBlock) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var params, result;\n              var _a;\n              var _this = this;\n              return __generator2(this, function(_b) {\n                switch (_b.label) {\n                  case 0:\n                    _a = {\n                      action: \"txlist\"\n                    };\n                    return [4, this.resolveName(addressOrName)];\n                  case 1:\n                    params = (_a.address = _b.sent(), _a.startblock = startBlock == null ? 0 : startBlock, _a.endblock = endBlock == null ? 99999999 : endBlock, _a.sort = \"asc\", _a);\n                    return [4, this.fetch(\"account\", params)];\n                  case 2:\n                    result = _b.sent();\n                    return [2, result.map(function(tx) {\n                      [\"contractAddress\", \"to\"].forEach(function(key) {\n                        if (tx[key] == \"\") {\n                          delete tx[key];\n                        }\n                      });\n                      if (tx.creates == null && tx.contractAddress != null) {\n                        tx.creates = tx.contractAddress;\n                      }\n                      var item = _this.formatter.transactionResponse(tx);\n                      if (tx.timeStamp) {\n                        item.timestamp = parseInt(tx.timeStamp);\n                      }\n                      return item;\n                    })];\n                }\n              });\n            });\n          };\n          EtherscanProvider3.prototype.isCommunityResource = function() {\n            return this.apiKey == null;\n          };\n          return EtherscanProvider3;\n        }(base_provider_1.BaseProvider)\n      );\n      exports3.EtherscanProvider = EtherscanProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/fallback-provider.js\n  var require_fallback_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/fallback-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      var __awaiter2 = exports3 && exports3.__awaiter || function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      var __generator2 = exports3 && exports3.__generator || function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n2) {\n          return function(v) {\n            return step([n2, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.FallbackProvider = void 0;\n      var abstract_provider_1 = require_lib14();\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var properties_1 = require_lib4();\n      var random_1 = require_lib24();\n      var web_1 = require_lib28();\n      var base_provider_1 = require_base_provider();\n      var formatter_1 = require_formatter();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      function now() {\n        return (/* @__PURE__ */ new Date()).getTime();\n      }\n      function checkNetworks(networks) {\n        var result = null;\n        for (var i = 0; i < networks.length; i++) {\n          var network = networks[i];\n          if (network == null) {\n            return null;\n          }\n          if (result) {\n            if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) {\n              logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n          } else {\n            result = network;\n          }\n        }\n        return result;\n      }\n      function median(values, maxDelta) {\n        values = values.slice().sort();\n        var middle = Math.floor(values.length / 2);\n        if (values.length % 2) {\n          return values[middle];\n        }\n        var a = values[middle - 1], b2 = values[middle];\n        if (maxDelta != null && Math.abs(a - b2) > maxDelta) {\n          return null;\n        }\n        return (a + b2) / 2;\n      }\n      function serialize(value) {\n        if (value === null) {\n          return \"null\";\n        } else if (typeof value === \"number\" || typeof value === \"boolean\") {\n          return JSON.stringify(value);\n        } else if (typeof value === \"string\") {\n          return value;\n        } else if (bignumber_1.BigNumber.isBigNumber(value)) {\n          return value.toString();\n        } else if (Array.isArray(value)) {\n          return JSON.stringify(value.map(function(i) {\n            return serialize(i);\n          }));\n        } else if (typeof value === \"object\") {\n          var keys = Object.keys(value);\n          keys.sort();\n          return \"{\" + keys.map(function(key) {\n            var v = value[key];\n            if (typeof v === \"function\") {\n              v = \"[function]\";\n            } else {\n              v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n          }).join(\",\") + \"}\";\n        }\n        throw new Error(\"unknown value type: \" + typeof value);\n      }\n      var nextRid = 1;\n      function stall2(duration) {\n        var cancel = null;\n        var timer = null;\n        var promise = new Promise(function(resolve) {\n          cancel = function() {\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n            }\n            resolve();\n          };\n          timer = setTimeout(cancel, duration);\n        });\n        var wait2 = function(func) {\n          promise = promise.then(func);\n          return promise;\n        };\n        function getPromise() {\n          return promise;\n        }\n        return { cancel, getPromise, wait: wait2 };\n      }\n      var ForwardErrors = [\n        logger_1.Logger.errors.CALL_EXCEPTION,\n        logger_1.Logger.errors.INSUFFICIENT_FUNDS,\n        logger_1.Logger.errors.NONCE_EXPIRED,\n        logger_1.Logger.errors.REPLACEMENT_UNDERPRICED,\n        logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT\n      ];\n      var ForwardProperties = [\n        \"address\",\n        \"args\",\n        \"errorArgs\",\n        \"errorSignature\",\n        \"method\",\n        \"transaction\"\n      ];\n      function exposeDebugConfig(config2, now2) {\n        var result = {\n          weight: config2.weight\n        };\n        Object.defineProperty(result, \"provider\", { get: function() {\n          return config2.provider;\n        } });\n        if (config2.start) {\n          result.start = config2.start;\n        }\n        if (now2) {\n          result.duration = now2 - config2.start;\n        }\n        if (config2.done) {\n          if (config2.error) {\n            result.error = config2.error;\n          } else {\n            result.result = config2.result || null;\n          }\n        }\n        return result;\n      }\n      function normalizedTally(normalize, quorum) {\n        return function(configs) {\n          var tally = {};\n          configs.forEach(function(c) {\n            var value = normalize(c.result);\n            if (!tally[value]) {\n              tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n          });\n          var keys = Object.keys(tally);\n          for (var i = 0; i < keys.length; i++) {\n            var check = tally[keys[i]];\n            if (check.count >= quorum) {\n              return check.result;\n            }\n          }\n          return void 0;\n        };\n      }\n      function getProcessFunc(provider, method, params) {\n        var normalize = serialize;\n        switch (method) {\n          case \"getBlockNumber\":\n            return function(configs) {\n              var values = configs.map(function(c) {\n                return c.result;\n              });\n              var blockNumber = median(configs.map(function(c) {\n                return c.result;\n              }), 2);\n              if (blockNumber == null) {\n                return void 0;\n              }\n              blockNumber = Math.ceil(blockNumber);\n              if (values.indexOf(blockNumber + 1) >= 0) {\n                blockNumber++;\n              }\n              if (blockNumber >= provider._highestBlockNumber) {\n                provider._highestBlockNumber = blockNumber;\n              }\n              return provider._highestBlockNumber;\n            };\n          case \"getGasPrice\":\n            return function(configs) {\n              var values = configs.map(function(c) {\n                return c.result;\n              });\n              values.sort();\n              return values[Math.floor(values.length / 2)];\n            };\n          case \"getEtherPrice\":\n            return function(configs) {\n              return median(configs.map(function(c) {\n                return c.result;\n              }));\n            };\n          case \"getBalance\":\n          case \"getTransactionCount\":\n          case \"getCode\":\n          case \"getStorageAt\":\n          case \"call\":\n          case \"estimateGas\":\n          case \"getLogs\":\n            break;\n          case \"getTransaction\":\n          case \"getTransactionReceipt\":\n            normalize = function(tx) {\n              if (tx == null) {\n                return null;\n              }\n              tx = (0, properties_1.shallowCopy)(tx);\n              tx.confirmations = -1;\n              return serialize(tx);\n            };\n            break;\n          case \"getBlock\":\n            if (params.includeTransactions) {\n              normalize = function(block) {\n                if (block == null) {\n                  return null;\n                }\n                block = (0, properties_1.shallowCopy)(block);\n                block.transactions = block.transactions.map(function(tx) {\n                  tx = (0, properties_1.shallowCopy)(tx);\n                  tx.confirmations = -1;\n                  return tx;\n                });\n                return serialize(block);\n              };\n            } else {\n              normalize = function(block) {\n                if (block == null) {\n                  return null;\n                }\n                return serialize(block);\n              };\n            }\n            break;\n          default:\n            throw new Error(\"unknown method: \" + method);\n        }\n        return normalizedTally(normalize, provider.quorum);\n      }\n      function waitForSync(config2, blockNumber) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var provider;\n          return __generator2(this, function(_a) {\n            provider = config2.provider;\n            if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) {\n              return [2, provider];\n            }\n            return [2, (0, web_1.poll)(function() {\n              return new Promise(function(resolve, reject) {\n                setTimeout(function() {\n                  if (provider.blockNumber >= blockNumber) {\n                    return resolve(provider);\n                  }\n                  if (config2.cancelled) {\n                    return resolve(null);\n                  }\n                  return resolve(void 0);\n                }, 0);\n              });\n            }, { oncePoll: provider })];\n          });\n        });\n      }\n      function getRunner2(config2, currentBlockNumber, method, params) {\n        return __awaiter2(this, void 0, void 0, function() {\n          var provider, _a, filter;\n          return __generator2(this, function(_b) {\n            switch (_b.label) {\n              case 0:\n                provider = config2.provider;\n                _a = method;\n                switch (_a) {\n                  case \"getBlockNumber\":\n                    return [3, 1];\n                  case \"getGasPrice\":\n                    return [3, 1];\n                  case \"getEtherPrice\":\n                    return [3, 2];\n                  case \"getBalance\":\n                    return [3, 3];\n                  case \"getTransactionCount\":\n                    return [3, 3];\n                  case \"getCode\":\n                    return [3, 3];\n                  case \"getStorageAt\":\n                    return [3, 6];\n                  case \"getBlock\":\n                    return [3, 9];\n                  case \"call\":\n                    return [3, 12];\n                  case \"estimateGas\":\n                    return [3, 12];\n                  case \"getTransaction\":\n                    return [3, 15];\n                  case \"getTransactionReceipt\":\n                    return [3, 15];\n                  case \"getLogs\":\n                    return [3, 16];\n                }\n                return [3, 19];\n              case 1:\n                return [2, provider[method]()];\n              case 2:\n                if (provider.getEtherPrice) {\n                  return [2, provider.getEtherPrice()];\n                }\n                return [3, 19];\n              case 3:\n                if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag)))\n                  return [3, 5];\n                return [4, waitForSync(config2, currentBlockNumber)];\n              case 4:\n                provider = _b.sent();\n                _b.label = 5;\n              case 5:\n                return [2, provider[method](params.address, params.blockTag || \"latest\")];\n              case 6:\n                if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag)))\n                  return [3, 8];\n                return [4, waitForSync(config2, currentBlockNumber)];\n              case 7:\n                provider = _b.sent();\n                _b.label = 8;\n              case 8:\n                return [2, provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\")];\n              case 9:\n                if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag)))\n                  return [3, 11];\n                return [4, waitForSync(config2, currentBlockNumber)];\n              case 10:\n                provider = _b.sent();\n                _b.label = 11;\n              case 11:\n                return [2, provider[params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\"](params.blockTag || params.blockHash)];\n              case 12:\n                if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag)))\n                  return [3, 14];\n                return [4, waitForSync(config2, currentBlockNumber)];\n              case 13:\n                provider = _b.sent();\n                _b.label = 14;\n              case 14:\n                if (method === \"call\" && params.blockTag) {\n                  return [2, provider[method](params.transaction, params.blockTag)];\n                }\n                return [2, provider[method](params.transaction)];\n              case 15:\n                return [2, provider[method](params.transactionHash)];\n              case 16:\n                filter = params.filter;\n                if (!(filter.fromBlock && (0, bytes_1.isHexString)(filter.fromBlock) || filter.toBlock && (0, bytes_1.isHexString)(filter.toBlock)))\n                  return [3, 18];\n                return [4, waitForSync(config2, currentBlockNumber)];\n              case 17:\n                provider = _b.sent();\n                _b.label = 18;\n              case 18:\n                return [2, provider.getLogs(filter)];\n              case 19:\n                return [2, logger.throwError(\"unknown method error\", logger_1.Logger.errors.UNKNOWN_ERROR, {\n                  method,\n                  params\n                })];\n            }\n          });\n        });\n      }\n      var FallbackProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(FallbackProvider3, _super);\n          function FallbackProvider3(providers, quorum) {\n            var _this = this;\n            if (providers.length === 0) {\n              logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n            }\n            var providerConfigs = providers.map(function(configOrProvider, index) {\n              if (abstract_provider_1.Provider.isProvider(configOrProvider)) {\n                var stallTimeout = (0, formatter_1.isCommunityResource)(configOrProvider) ? 2e3 : 750;\n                var priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n              }\n              var config2 = (0, properties_1.shallowCopy)(configOrProvider);\n              if (config2.priority == null) {\n                config2.priority = 1;\n              }\n              if (config2.stallTimeout == null) {\n                config2.stallTimeout = (0, formatter_1.isCommunityResource)(configOrProvider) ? 2e3 : 750;\n              }\n              if (config2.weight == null) {\n                config2.weight = 1;\n              }\n              var weight = config2.weight;\n              if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", \"providers[\" + index + \"].weight\", weight);\n              }\n              return Object.freeze(config2);\n            });\n            var total = providerConfigs.reduce(function(accum, c) {\n              return accum + c.weight;\n            }, 0);\n            if (quorum == null) {\n              quorum = total / 2;\n            } else if (quorum > total) {\n              logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n            }\n            var networkOrReady = checkNetworks(providerConfigs.map(function(c) {\n              return c.provider.network;\n            }));\n            if (networkOrReady == null) {\n              networkOrReady = new Promise(function(resolve, reject) {\n                setTimeout(function() {\n                  _this.detectNetwork().then(resolve, reject);\n                }, 0);\n              });\n            }\n            _this = _super.call(this, networkOrReady) || this;\n            (0, properties_1.defineReadOnly)(_this, \"providerConfigs\", Object.freeze(providerConfigs));\n            (0, properties_1.defineReadOnly)(_this, \"quorum\", quorum);\n            _this._highestBlockNumber = -1;\n            return _this;\n          }\n          FallbackProvider3.prototype.detectNetwork = function() {\n            return __awaiter2(this, void 0, void 0, function() {\n              var networks;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4, Promise.all(this.providerConfigs.map(function(c) {\n                      return c.provider.getNetwork();\n                    }))];\n                  case 1:\n                    networks = _a.sent();\n                    return [2, checkNetworks(networks)];\n                }\n              });\n            });\n          };\n          FallbackProvider3.prototype.perform = function(method, params) {\n            return __awaiter2(this, void 0, void 0, function() {\n              var results, i_1, result, processFunc, configs, currentBlockNumber, i, first, _loop_1, this_1, state_1;\n              var _this = this;\n              return __generator2(this, function(_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(method === \"sendTransaction\"))\n                      return [3, 2];\n                    return [4, Promise.all(this.providerConfigs.map(function(c) {\n                      return c.provider.sendTransaction(params.signedTransaction).then(function(result2) {\n                        return result2.hash;\n                      }, function(error) {\n                        return error;\n                      });\n                    }))];\n                  case 1:\n                    results = _a.sent();\n                    for (i_1 = 0; i_1 < results.length; i_1++) {\n                      result = results[i_1];\n                      if (typeof result === \"string\") {\n                        return [2, result];\n                      }\n                    }\n                    throw results[0];\n                  case 2:\n                    if (!(this._highestBlockNumber === -1 && method !== \"getBlockNumber\"))\n                      return [3, 4];\n                    return [4, this.getBlockNumber()];\n                  case 3:\n                    _a.sent();\n                    _a.label = 4;\n                  case 4:\n                    processFunc = getProcessFunc(this, method, params);\n                    configs = (0, random_1.shuffled)(this.providerConfigs.map(properties_1.shallowCopy));\n                    configs.sort(function(a, b2) {\n                      return a.priority - b2.priority;\n                    });\n                    currentBlockNumber = this._highestBlockNumber;\n                    i = 0;\n                    first = true;\n                    _loop_1 = function() {\n                      var t0, inflightWeight, _loop_2, waiting, results2, result2, errors;\n                      return __generator2(this, function(_b) {\n                        switch (_b.label) {\n                          case 0:\n                            t0 = now();\n                            inflightWeight = configs.filter(function(c) {\n                              return c.runner && t0 - c.start < c.stallTimeout;\n                            }).reduce(function(accum, c) {\n                              return accum + c.weight;\n                            }, 0);\n                            _loop_2 = function() {\n                              var config2 = configs[i++];\n                              var rid = nextRid++;\n                              config2.start = now();\n                              config2.staller = stall2(config2.stallTimeout);\n                              config2.staller.wait(function() {\n                                config2.staller = null;\n                              });\n                              config2.runner = getRunner2(config2, currentBlockNumber, method, params).then(function(result3) {\n                                config2.done = true;\n                                config2.result = result3;\n                                if (_this.listenerCount(\"debug\")) {\n                                  _this.emit(\"debug\", {\n                                    action: \"request\",\n                                    rid,\n                                    backend: exposeDebugConfig(config2, now()),\n                                    request: { method, params: (0, properties_1.deepCopy)(params) },\n                                    provider: _this\n                                  });\n                                }\n                              }, function(error) {\n                                config2.done = true;\n                                config2.error = error;\n                                if (_this.listenerCount(\"debug\")) {\n                                  _this.emit(\"debug\", {\n                                    action: \"request\",\n                                    rid,\n                                    backend: exposeDebugConfig(config2, now()),\n                                    request: { method, params: (0, properties_1.deepCopy)(params) },\n                                    provider: _this\n                                  });\n                                }\n                              });\n                              if (this_1.listenerCount(\"debug\")) {\n                                this_1.emit(\"debug\", {\n                                  action: \"request\",\n                                  rid,\n                                  backend: exposeDebugConfig(config2, null),\n                                  request: { method, params: (0, properties_1.deepCopy)(params) },\n                                  provider: this_1\n                                });\n                              }\n                              inflightWeight += config2.weight;\n                            };\n                            while (inflightWeight < this_1.quorum && i < configs.length) {\n                              _loop_2();\n                            }\n                            waiting = [];\n                            configs.forEach(function(c) {\n                              if (c.done || !c.runner) {\n                                return;\n                              }\n                              waiting.push(c.runner);\n                              if (c.staller) {\n                                waiting.push(c.staller.getPromise());\n                              }\n                            });\n                            if (!waiting.length)\n                              return [3, 2];\n                            return [4, Promise.race(waiting)];\n                          case 1:\n                            _b.sent();\n                            _b.label = 2;\n                          case 2:\n                            results2 = configs.filter(function(c) {\n                              return c.done && c.error == null;\n                            });\n                            if (!(results2.length >= this_1.quorum))\n                              return [3, 5];\n                            result2 = processFunc(results2);\n                            if (result2 !== void 0) {\n                              configs.forEach(function(c) {\n                                if (c.staller) {\n                                  c.staller.cancel();\n                                }\n                                c.cancelled = true;\n                              });\n                              return [2, { value: result2 }];\n                            }\n                            if (!!first)\n                              return [3, 4];\n                            return [4, stall2(100).getPromise()];\n                          case 3:\n                            _b.sent();\n                            _b.label = 4;\n                          case 4:\n                            first = false;\n                            _b.label = 5;\n                          case 5:\n                            errors = configs.reduce(function(accum, c) {\n                              if (!c.done || c.error == null) {\n                                return accum;\n                              }\n                              var code = c.error.code;\n                              if (ForwardErrors.indexOf(code) >= 0) {\n                                if (!accum[code]) {\n                                  accum[code] = { error: c.error, weight: 0 };\n                                }\n                                accum[code].weight += c.weight;\n                              }\n                              return accum;\n                            }, {});\n                            Object.keys(errors).forEach(function(errorCode) {\n                              var tally = errors[errorCode];\n                              if (tally.weight < _this.quorum) {\n                                return;\n                              }\n                              configs.forEach(function(c) {\n                                if (c.staller) {\n                                  c.staller.cancel();\n                                }\n                                c.cancelled = true;\n                              });\n                              var e = tally.error;\n                              var props = {};\n                              ForwardProperties.forEach(function(name) {\n                                if (e[name] == null) {\n                                  return;\n                                }\n                                props[name] = e[name];\n                              });\n                              logger.throwError(e.reason || e.message, errorCode, props);\n                            });\n                            if (configs.filter(function(c) {\n                              return !c.done;\n                            }).length === 0) {\n                              return [2, \"break\"];\n                            }\n                            return [\n                              2\n                              /*return*/\n                            ];\n                        }\n                      });\n                    };\n                    this_1 = this;\n                    _a.label = 5;\n                  case 5:\n                    if (false)\n                      return [3, 7];\n                    return [5, _loop_1()];\n                  case 6:\n                    state_1 = _a.sent();\n                    if (typeof state_1 === \"object\")\n                      return [2, state_1.value];\n                    if (state_1 === \"break\")\n                      return [3, 7];\n                    return [3, 5];\n                  case 7:\n                    configs.forEach(function(c) {\n                      if (c.staller) {\n                        c.staller.cancel();\n                      }\n                      c.cancelled = true;\n                    });\n                    return [2, logger.throwError(\"failed to meet quorum\", logger_1.Logger.errors.SERVER_ERROR, {\n                      method,\n                      params,\n                      //results: configs.map((c) => c.result),\n                      //errors: configs.map((c) => c.error),\n                      results: configs.map(function(c) {\n                        return exposeDebugConfig(c);\n                      }),\n                      provider: this\n                    })];\n                }\n              });\n            });\n          };\n          return FallbackProvider3;\n        }(base_provider_1.BaseProvider)\n      );\n      exports3.FallbackProvider = FallbackProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/browser-ipc-provider.js\n  var require_browser_ipc_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/browser-ipc-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.IpcProvider = void 0;\n      var IpcProvider = null;\n      exports3.IpcProvider = IpcProvider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/infura-provider.js\n  var require_infura_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/infura-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.InfuraProvider = exports3.InfuraWebSocketProvider = void 0;\n      var properties_1 = require_lib4();\n      var websocket_provider_1 = require_websocket_provider();\n      var formatter_1 = require_formatter();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var defaultProjectId = \"84842078b09946638c03157f83405213\";\n      var InfuraWebSocketProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(InfuraWebSocketProvider3, _super);\n          function InfuraWebSocketProvider3(network, apiKey) {\n            var _this = this;\n            var provider = new InfuraProvider2(network, apiKey);\n            var connection = provider.connection;\n            if (connection.password) {\n              logger.throwError(\"INFURA WebSocket project secrets unsupported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n              });\n            }\n            var url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n            _this = _super.call(this, url, network) || this;\n            (0, properties_1.defineReadOnly)(_this, \"apiKey\", provider.projectId);\n            (0, properties_1.defineReadOnly)(_this, \"projectId\", provider.projectId);\n            (0, properties_1.defineReadOnly)(_this, \"projectSecret\", provider.projectSecret);\n            return _this;\n          }\n          InfuraWebSocketProvider3.prototype.isCommunityResource = function() {\n            return this.projectId === defaultProjectId;\n          };\n          return InfuraWebSocketProvider3;\n        }(websocket_provider_1.WebSocketProvider)\n      );\n      exports3.InfuraWebSocketProvider = InfuraWebSocketProvider2;\n      var InfuraProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(InfuraProvider3, _super);\n          function InfuraProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          InfuraProvider3.getWebSocketProvider = function(network, apiKey) {\n            return new InfuraWebSocketProvider2(network, apiKey);\n          };\n          InfuraProvider3.getApiKey = function(apiKey) {\n            var apiKeyObj = {\n              apiKey: defaultProjectId,\n              projectId: defaultProjectId,\n              projectSecret: null\n            };\n            if (apiKey == null) {\n              return apiKeyObj;\n            }\n            if (typeof apiKey === \"string\") {\n              apiKeyObj.projectId = apiKey;\n            } else if (apiKey.projectSecret != null) {\n              logger.assertArgument(typeof apiKey.projectId === \"string\", \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n              logger.assertArgument(typeof apiKey.projectSecret === \"string\", \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n              apiKeyObj.projectId = apiKey.projectId;\n              apiKeyObj.projectSecret = apiKey.projectSecret;\n            } else if (apiKey.projectId) {\n              apiKeyObj.projectId = apiKey.projectId;\n            }\n            apiKeyObj.apiKey = apiKeyObj.projectId;\n            return apiKeyObj;\n          };\n          InfuraProvider3.getUrl = function(network, apiKey) {\n            var host = null;\n            switch (network ? network.name : \"unknown\") {\n              case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n              case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n              case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n              case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n              case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n              case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n              case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n              case \"optimism-sepolia\":\n                host = \"optimism-sepolia.infura.io\";\n                break;\n              case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n              case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n              case \"arbitrum-sepolia\":\n                host = \"arbitrum-sepolia.infura.io\";\n                break;\n              default:\n                logger.throwError(\"unsupported network\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                  argument: \"network\",\n                  value: network\n                });\n            }\n            var connection = {\n              allowGzip: true,\n              url: \"https://\" + host + \"/v3/\" + apiKey.projectId,\n              throttleCallback: function(attempt, url) {\n                if (apiKey.projectId === defaultProjectId) {\n                  (0, formatter_1.showThrottleMessage)();\n                }\n                return Promise.resolve(true);\n              }\n            };\n            if (apiKey.projectSecret != null) {\n              connection.user = \"\";\n              connection.password = apiKey.projectSecret;\n            }\n            return connection;\n          };\n          InfuraProvider3.prototype.isCommunityResource = function() {\n            return this.projectId === defaultProjectId;\n          };\n          return InfuraProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.InfuraProvider = InfuraProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.js\n  var require_json_rpc_batch_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.JsonRpcBatchProvider = void 0;\n      var properties_1 = require_lib4();\n      var web_1 = require_lib28();\n      var json_rpc_provider_1 = require_json_rpc_provider();\n      var JsonRpcBatchProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(JsonRpcBatchProvider2, _super);\n          function JsonRpcBatchProvider2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          JsonRpcBatchProvider2.prototype.send = function(method, params) {\n            var _this = this;\n            var request = {\n              method,\n              params,\n              id: this._nextId++,\n              jsonrpc: \"2.0\"\n            };\n            if (this._pendingBatch == null) {\n              this._pendingBatch = [];\n            }\n            var inflightRequest = { request, resolve: null, reject: null };\n            var promise = new Promise(function(resolve, reject) {\n              inflightRequest.resolve = resolve;\n              inflightRequest.reject = reject;\n            });\n            this._pendingBatch.push(inflightRequest);\n            if (!this._pendingBatchAggregator) {\n              this._pendingBatchAggregator = setTimeout(function() {\n                var batch = _this._pendingBatch;\n                _this._pendingBatch = null;\n                _this._pendingBatchAggregator = null;\n                var request2 = batch.map(function(inflight) {\n                  return inflight.request;\n                });\n                _this.emit(\"debug\", {\n                  action: \"requestBatch\",\n                  request: (0, properties_1.deepCopy)(request2),\n                  provider: _this\n                });\n                return (0, web_1.fetchJson)(_this.connection, JSON.stringify(request2)).then(function(result) {\n                  _this.emit(\"debug\", {\n                    action: \"response\",\n                    request: request2,\n                    response: result,\n                    provider: _this\n                  });\n                  batch.forEach(function(inflightRequest2, index) {\n                    var payload = result[index];\n                    if (payload.error) {\n                      var error = new Error(payload.error.message);\n                      error.code = payload.error.code;\n                      error.data = payload.error.data;\n                      inflightRequest2.reject(error);\n                    } else {\n                      inflightRequest2.resolve(payload.result);\n                    }\n                  });\n                }, function(error) {\n                  _this.emit(\"debug\", {\n                    action: \"response\",\n                    error,\n                    request: request2,\n                    provider: _this\n                  });\n                  batch.forEach(function(inflightRequest2) {\n                    inflightRequest2.reject(error);\n                  });\n                });\n              }, 10);\n            }\n            return promise;\n          };\n          return JsonRpcBatchProvider2;\n        }(json_rpc_provider_1.JsonRpcProvider)\n      );\n      exports3.JsonRpcBatchProvider = JsonRpcBatchProvider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/nodesmith-provider.js\n  var require_nodesmith_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/nodesmith-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.NodesmithProvider = void 0;\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var defaultApiKey = \"ETHERS_JS_SHARED\";\n      var NodesmithProvider = (\n        /** @class */\n        function(_super) {\n          __extends2(NodesmithProvider2, _super);\n          function NodesmithProvider2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          NodesmithProvider2.getApiKey = function(apiKey) {\n            if (apiKey && typeof apiKey !== \"string\") {\n              logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n            }\n            return apiKey || defaultApiKey;\n          };\n          NodesmithProvider2.getUrl = function(network, apiKey) {\n            logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n            var host = null;\n            switch (network.name) {\n              case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n              case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n              case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n              case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n              case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n              default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n            }\n            return host + \"?apiKey=\" + apiKey;\n          };\n          return NodesmithProvider2;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.NodesmithProvider = NodesmithProvider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/pocket-provider.js\n  var require_pocket_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/pocket-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.PocketProvider = void 0;\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n      var PocketProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(PocketProvider3, _super);\n          function PocketProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          PocketProvider3.getApiKey = function(apiKey) {\n            var apiKeyObj = {\n              applicationId: null,\n              loadBalancer: true,\n              applicationSecretKey: null\n            };\n            if (apiKey == null) {\n              apiKeyObj.applicationId = defaultApplicationId;\n            } else if (typeof apiKey === \"string\") {\n              apiKeyObj.applicationId = apiKey;\n            } else if (apiKey.applicationSecretKey != null) {\n              apiKeyObj.applicationId = apiKey.applicationId;\n              apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            } else if (apiKey.applicationId) {\n              apiKeyObj.applicationId = apiKey.applicationId;\n            } else {\n              logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n            }\n            return apiKeyObj;\n          };\n          PocketProvider3.getUrl = function(network, apiKey) {\n            var host = null;\n            switch (network ? network.name : \"unknown\") {\n              case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n              case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n              case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n              case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n              case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n              case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n              case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n              default:\n                logger.throwError(\"unsupported network\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                  argument: \"network\",\n                  value: network\n                });\n            }\n            var url = \"https://\" + host + \"/v1/lb/\" + apiKey.applicationId;\n            var connection = { headers: {}, url };\n            if (apiKey.applicationSecretKey != null) {\n              connection.user = \"\";\n              connection.password = apiKey.applicationSecretKey;\n            }\n            return connection;\n          };\n          PocketProvider3.prototype.isCommunityResource = function() {\n            return this.applicationId === defaultApplicationId;\n          };\n          return PocketProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.PocketProvider = PocketProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/quicknode-provider.js\n  var require_quicknode_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/quicknode-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.QuickNodeProvider = void 0;\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var defaultApiKey = \"919b412a057b5e9c9b6dce193c5a60242d6efadb\";\n      var QuickNodeProvider2 = (\n        /** @class */\n        function(_super) {\n          __extends2(QuickNodeProvider3, _super);\n          function QuickNodeProvider3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n          QuickNodeProvider3.getApiKey = function(apiKey) {\n            if (apiKey && typeof apiKey !== \"string\") {\n              logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n            }\n            return apiKey || defaultApiKey;\n          };\n          QuickNodeProvider3.getUrl = function(network, apiKey) {\n            var host = null;\n            switch (network.name) {\n              case \"homestead\":\n                host = \"ethers.quiknode.pro\";\n                break;\n              case \"goerli\":\n                host = \"ethers.ethereum-goerli.quiknode.pro\";\n                break;\n              case \"sepolia\":\n                host = \"ethers.ethereum-sepolia.quiknode.pro\";\n                break;\n              case \"holesky\":\n                host = \"ethers.ethereum-holesky.quiknode.pro\";\n                break;\n              case \"arbitrum\":\n                host = \"ethers.arbitrum-mainnet.quiknode.pro\";\n                break;\n              case \"arbitrum-goerli\":\n                host = \"ethers.arbitrum-goerli.quiknode.pro\";\n                break;\n              case \"arbitrum-sepolia\":\n                host = \"ethers.arbitrum-sepolia.quiknode.pro\";\n                break;\n              case \"base\":\n                host = \"ethers.base-mainnet.quiknode.pro\";\n                break;\n              case \"base-goerli\":\n                host = \"ethers.base-goerli.quiknode.pro\";\n                break;\n              case \"base-spolia\":\n                host = \"ethers.base-sepolia.quiknode.pro\";\n                break;\n              case \"bnb\":\n                host = \"ethers.bsc.quiknode.pro\";\n                break;\n              case \"bnbt\":\n                host = \"ethers.bsc-testnet.quiknode.pro\";\n                break;\n              case \"matic\":\n                host = \"ethers.matic.quiknode.pro\";\n                break;\n              case \"maticmum\":\n                host = \"ethers.matic-testnet.quiknode.pro\";\n                break;\n              case \"optimism\":\n                host = \"ethers.optimism.quiknode.pro\";\n                break;\n              case \"optimism-goerli\":\n                host = \"ethers.optimism-goerli.quiknode.pro\";\n                break;\n              case \"optimism-sepolia\":\n                host = \"ethers.optimism-sepolia.quiknode.pro\";\n                break;\n              case \"xdai\":\n                host = \"ethers.xdai.quiknode.pro\";\n                break;\n              default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n            }\n            return \"https://\" + host + \"/\" + apiKey;\n          };\n          return QuickNodeProvider3;\n        }(url_json_rpc_provider_1.UrlJsonRpcProvider)\n      );\n      exports3.QuickNodeProvider = QuickNodeProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/web3-provider.js\n  var require_web3_provider = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/web3-provider.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __extends2 = exports3 && exports3.__extends || /* @__PURE__ */ function() {\n        var extendStatics2 = function(d, b2) {\n          extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n            d2.__proto__ = b3;\n          } || function(d2, b3) {\n            for (var p in b3)\n              if (Object.prototype.hasOwnProperty.call(b3, p))\n                d2[p] = b3[p];\n          };\n          return extendStatics2(d, b2);\n        };\n        return function(d, b2) {\n          if (typeof b2 !== \"function\" && b2 !== null)\n            throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n          extendStatics2(d, b2);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Web3Provider = void 0;\n      var properties_1 = require_lib4();\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      var json_rpc_provider_1 = require_json_rpc_provider();\n      var _nextId = 1;\n      function buildWeb3LegacyFetcher(provider, sendFunc) {\n        var fetcher = \"Web3LegacyFetcher\";\n        return function(method, params) {\n          var _this = this;\n          var request = {\n            method,\n            params,\n            id: _nextId++,\n            jsonrpc: \"2.0\"\n          };\n          return new Promise(function(resolve, reject) {\n            _this.emit(\"debug\", {\n              action: \"request\",\n              fetcher,\n              request: (0, properties_1.deepCopy)(request),\n              provider: _this\n            });\n            sendFunc(request, function(error, response) {\n              if (error) {\n                _this.emit(\"debug\", {\n                  action: \"response\",\n                  fetcher,\n                  error,\n                  request,\n                  provider: _this\n                });\n                return reject(error);\n              }\n              _this.emit(\"debug\", {\n                action: \"response\",\n                fetcher,\n                request,\n                response,\n                provider: _this\n              });\n              if (response.error) {\n                var error_1 = new Error(response.error.message);\n                error_1.code = response.error.code;\n                error_1.data = response.error.data;\n                return reject(error_1);\n              }\n              resolve(response.result);\n            });\n          });\n        };\n      }\n      function buildEip1193Fetcher(provider) {\n        return function(method, params) {\n          var _this = this;\n          if (params == null) {\n            params = [];\n          }\n          var request = { method, params };\n          this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: (0, properties_1.deepCopy)(request),\n            provider: this\n          });\n          return provider.request(request).then(function(response) {\n            _this.emit(\"debug\", {\n              action: \"response\",\n              fetcher: \"Eip1193Fetcher\",\n              request,\n              response,\n              provider: _this\n            });\n            return response;\n          }, function(error) {\n            _this.emit(\"debug\", {\n              action: \"response\",\n              fetcher: \"Eip1193Fetcher\",\n              request,\n              error,\n              provider: _this\n            });\n            throw error;\n          });\n        };\n      }\n      var Web3Provider = (\n        /** @class */\n        function(_super) {\n          __extends2(Web3Provider2, _super);\n          function Web3Provider2(provider, network) {\n            var _this = this;\n            if (provider == null) {\n              logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n            }\n            var path = null;\n            var jsonRpcFetchFunc = null;\n            var subprovider = null;\n            if (typeof provider === \"function\") {\n              path = \"unknown:\";\n              jsonRpcFetchFunc = provider;\n            } else {\n              path = provider.host || provider.path || \"\";\n              if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n              }\n              subprovider = provider;\n              if (provider.request) {\n                if (path === \"\") {\n                  path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n              } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n              } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n              } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n              }\n              if (!path) {\n                path = \"unknown:\";\n              }\n            }\n            _this = _super.call(this, path, network) || this;\n            (0, properties_1.defineReadOnly)(_this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n            (0, properties_1.defineReadOnly)(_this, \"provider\", subprovider);\n            return _this;\n          }\n          Web3Provider2.prototype.send = function(method, params) {\n            return this.jsonRpcFetchFunc(method, params);\n          };\n          return Web3Provider2;\n        }(json_rpc_provider_1.JsonRpcProvider)\n      );\n      exports3.Web3Provider = Web3Provider;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/index.js\n  var require_lib29 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+providers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Formatter = exports3.showThrottleMessage = exports3.isCommunityResourcable = exports3.isCommunityResource = exports3.getNetwork = exports3.getDefaultProvider = exports3.JsonRpcSigner = exports3.IpcProvider = exports3.WebSocketProvider = exports3.Web3Provider = exports3.StaticJsonRpcProvider = exports3.QuickNodeProvider = exports3.PocketProvider = exports3.NodesmithProvider = exports3.JsonRpcBatchProvider = exports3.JsonRpcProvider = exports3.InfuraWebSocketProvider = exports3.InfuraProvider = exports3.EtherscanProvider = exports3.CloudflareProvider = exports3.AnkrProvider = exports3.AlchemyWebSocketProvider = exports3.AlchemyProvider = exports3.FallbackProvider = exports3.UrlJsonRpcProvider = exports3.Resolver = exports3.BaseProvider = exports3.Provider = void 0;\n      var abstract_provider_1 = require_lib14();\n      Object.defineProperty(exports3, \"Provider\", { enumerable: true, get: function() {\n        return abstract_provider_1.Provider;\n      } });\n      var networks_1 = require_lib27();\n      Object.defineProperty(exports3, \"getNetwork\", { enumerable: true, get: function() {\n        return networks_1.getNetwork;\n      } });\n      var base_provider_1 = require_base_provider();\n      Object.defineProperty(exports3, \"BaseProvider\", { enumerable: true, get: function() {\n        return base_provider_1.BaseProvider;\n      } });\n      Object.defineProperty(exports3, \"Resolver\", { enumerable: true, get: function() {\n        return base_provider_1.Resolver;\n      } });\n      var alchemy_provider_1 = require_alchemy_provider();\n      Object.defineProperty(exports3, \"AlchemyProvider\", { enumerable: true, get: function() {\n        return alchemy_provider_1.AlchemyProvider;\n      } });\n      Object.defineProperty(exports3, \"AlchemyWebSocketProvider\", { enumerable: true, get: function() {\n        return alchemy_provider_1.AlchemyWebSocketProvider;\n      } });\n      var ankr_provider_1 = require_ankr_provider();\n      Object.defineProperty(exports3, \"AnkrProvider\", { enumerable: true, get: function() {\n        return ankr_provider_1.AnkrProvider;\n      } });\n      var cloudflare_provider_1 = require_cloudflare_provider();\n      Object.defineProperty(exports3, \"CloudflareProvider\", { enumerable: true, get: function() {\n        return cloudflare_provider_1.CloudflareProvider;\n      } });\n      var etherscan_provider_1 = require_etherscan_provider();\n      Object.defineProperty(exports3, \"EtherscanProvider\", { enumerable: true, get: function() {\n        return etherscan_provider_1.EtherscanProvider;\n      } });\n      var fallback_provider_1 = require_fallback_provider();\n      Object.defineProperty(exports3, \"FallbackProvider\", { enumerable: true, get: function() {\n        return fallback_provider_1.FallbackProvider;\n      } });\n      var ipc_provider_1 = require_browser_ipc_provider();\n      Object.defineProperty(exports3, \"IpcProvider\", { enumerable: true, get: function() {\n        return ipc_provider_1.IpcProvider;\n      } });\n      var infura_provider_1 = require_infura_provider();\n      Object.defineProperty(exports3, \"InfuraProvider\", { enumerable: true, get: function() {\n        return infura_provider_1.InfuraProvider;\n      } });\n      Object.defineProperty(exports3, \"InfuraWebSocketProvider\", { enumerable: true, get: function() {\n        return infura_provider_1.InfuraWebSocketProvider;\n      } });\n      var json_rpc_provider_1 = require_json_rpc_provider();\n      Object.defineProperty(exports3, \"JsonRpcProvider\", { enumerable: true, get: function() {\n        return json_rpc_provider_1.JsonRpcProvider;\n      } });\n      Object.defineProperty(exports3, \"JsonRpcSigner\", { enumerable: true, get: function() {\n        return json_rpc_provider_1.JsonRpcSigner;\n      } });\n      var json_rpc_batch_provider_1 = require_json_rpc_batch_provider();\n      Object.defineProperty(exports3, \"JsonRpcBatchProvider\", { enumerable: true, get: function() {\n        return json_rpc_batch_provider_1.JsonRpcBatchProvider;\n      } });\n      var nodesmith_provider_1 = require_nodesmith_provider();\n      Object.defineProperty(exports3, \"NodesmithProvider\", { enumerable: true, get: function() {\n        return nodesmith_provider_1.NodesmithProvider;\n      } });\n      var pocket_provider_1 = require_pocket_provider();\n      Object.defineProperty(exports3, \"PocketProvider\", { enumerable: true, get: function() {\n        return pocket_provider_1.PocketProvider;\n      } });\n      var quicknode_provider_1 = require_quicknode_provider();\n      Object.defineProperty(exports3, \"QuickNodeProvider\", { enumerable: true, get: function() {\n        return quicknode_provider_1.QuickNodeProvider;\n      } });\n      var url_json_rpc_provider_1 = require_url_json_rpc_provider();\n      Object.defineProperty(exports3, \"StaticJsonRpcProvider\", { enumerable: true, get: function() {\n        return url_json_rpc_provider_1.StaticJsonRpcProvider;\n      } });\n      Object.defineProperty(exports3, \"UrlJsonRpcProvider\", { enumerable: true, get: function() {\n        return url_json_rpc_provider_1.UrlJsonRpcProvider;\n      } });\n      var web3_provider_1 = require_web3_provider();\n      Object.defineProperty(exports3, \"Web3Provider\", { enumerable: true, get: function() {\n        return web3_provider_1.Web3Provider;\n      } });\n      var websocket_provider_1 = require_websocket_provider();\n      Object.defineProperty(exports3, \"WebSocketProvider\", { enumerable: true, get: function() {\n        return websocket_provider_1.WebSocketProvider;\n      } });\n      var formatter_1 = require_formatter();\n      Object.defineProperty(exports3, \"Formatter\", { enumerable: true, get: function() {\n        return formatter_1.Formatter;\n      } });\n      Object.defineProperty(exports3, \"isCommunityResourcable\", { enumerable: true, get: function() {\n        return formatter_1.isCommunityResourcable;\n      } });\n      Object.defineProperty(exports3, \"isCommunityResource\", { enumerable: true, get: function() {\n        return formatter_1.isCommunityResource;\n      } });\n      Object.defineProperty(exports3, \"showThrottleMessage\", { enumerable: true, get: function() {\n        return formatter_1.showThrottleMessage;\n      } });\n      var logger_1 = require_lib();\n      var _version_1 = require_version23();\n      var logger = new logger_1.Logger(_version_1.version);\n      function getDefaultProvider2(network, options) {\n        if (network == null) {\n          network = \"homestead\";\n        }\n        if (typeof network === \"string\") {\n          var match = network.match(/^(ws|http)s?:/i);\n          if (match) {\n            switch (match[1].toLowerCase()) {\n              case \"http\":\n              case \"https\":\n                return new json_rpc_provider_1.JsonRpcProvider(network);\n              case \"ws\":\n              case \"wss\":\n                return new websocket_provider_1.WebSocketProvider(network);\n              default:\n                logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n          }\n        }\n        var n2 = (0, networks_1.getNetwork)(network);\n        if (!n2 || !n2._defaultProvider) {\n          logger.throwError(\"unsupported getDefaultProvider network\", logger_1.Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network\n          });\n        }\n        return n2._defaultProvider({\n          FallbackProvider: fallback_provider_1.FallbackProvider,\n          AlchemyProvider: alchemy_provider_1.AlchemyProvider,\n          AnkrProvider: ankr_provider_1.AnkrProvider,\n          CloudflareProvider: cloudflare_provider_1.CloudflareProvider,\n          EtherscanProvider: etherscan_provider_1.EtherscanProvider,\n          InfuraProvider: infura_provider_1.InfuraProvider,\n          JsonRpcProvider: json_rpc_provider_1.JsonRpcProvider,\n          NodesmithProvider: nodesmith_provider_1.NodesmithProvider,\n          PocketProvider: pocket_provider_1.PocketProvider,\n          QuickNodeProvider: quicknode_provider_1.QuickNodeProvider,\n          Web3Provider: web3_provider_1.Web3Provider,\n          IpcProvider: ipc_provider_1.IpcProvider\n        }, options);\n      }\n      exports3.getDefaultProvider = getDefaultProvider2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+solidity@5.8.0/node_modules/@ethersproject/solidity/lib/_version.js\n  var require_version24 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+solidity@5.8.0/node_modules/@ethersproject/solidity/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"solidity/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+solidity@5.8.0/node_modules/@ethersproject/solidity/lib/index.js\n  var require_lib30 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+solidity@5.8.0/node_modules/@ethersproject/solidity/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.sha256 = exports3.keccak256 = exports3.pack = void 0;\n      var bignumber_1 = require_lib3();\n      var bytes_1 = require_lib2();\n      var keccak256_1 = require_lib5();\n      var sha2_1 = require_lib20();\n      var strings_1 = require_lib9();\n      var regexBytes = new RegExp(\"^bytes([0-9]+)$\");\n      var regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\n      var regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n      var Zeros2 = \"0000000000000000000000000000000000000000000000000000000000000000\";\n      var logger_1 = require_lib();\n      var _version_1 = require_version24();\n      var logger = new logger_1.Logger(_version_1.version);\n      function _pack(type, value, isArray) {\n        switch (type) {\n          case \"address\":\n            if (isArray) {\n              return (0, bytes_1.zeroPad)(value, 32);\n            }\n            return (0, bytes_1.arrayify)(value);\n          case \"string\":\n            return (0, strings_1.toUtf8Bytes)(value);\n          case \"bytes\":\n            return (0, bytes_1.arrayify)(value);\n          case \"bool\":\n            value = value ? \"0x01\" : \"0x00\";\n            if (isArray) {\n              return (0, bytes_1.zeroPad)(value, 32);\n            }\n            return (0, bytes_1.arrayify)(value);\n        }\n        var match = type.match(regexNumber);\n        if (match) {\n          var size = parseInt(match[2] || \"256\");\n          if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n          }\n          if (isArray) {\n            size = 256;\n          }\n          value = bignumber_1.BigNumber.from(value).toTwos(size);\n          return (0, bytes_1.zeroPad)(value, size / 8);\n        }\n        match = type.match(regexBytes);\n        if (match) {\n          var size = parseInt(match[1]);\n          if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n          }\n          if ((0, bytes_1.arrayify)(value).byteLength !== size) {\n            logger.throwArgumentError(\"invalid value for \" + type, \"value\", value);\n          }\n          if (isArray) {\n            return (0, bytes_1.arrayify)((value + Zeros2).substring(0, 66));\n          }\n          return value;\n        }\n        match = type.match(regexArray);\n        if (match && Array.isArray(value)) {\n          var baseType_1 = match[1];\n          var count = parseInt(match[2] || String(value.length));\n          if (count != value.length) {\n            logger.throwArgumentError(\"invalid array length for \" + type, \"value\", value);\n          }\n          var result_1 = [];\n          value.forEach(function(value2) {\n            result_1.push(_pack(baseType_1, value2, true));\n          });\n          return (0, bytes_1.concat)(result_1);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", type);\n      }\n      function pack2(types, values) {\n        if (types.length != values.length) {\n          logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n        }\n        var tight = [];\n        types.forEach(function(type, index) {\n          tight.push(_pack(type, values[index]));\n        });\n        return (0, bytes_1.hexlify)((0, bytes_1.concat)(tight));\n      }\n      exports3.pack = pack2;\n      function keccak2562(types, values) {\n        return (0, keccak256_1.keccak256)(pack2(types, values));\n      }\n      exports3.keccak256 = keccak2562;\n      function sha2563(types, values) {\n        return (0, sha2_1.sha256)(pack2(types, values));\n      }\n      exports3.sha256 = sha2563;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+units@5.8.0/node_modules/@ethersproject/units/lib/_version.js\n  var require_version25 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+units@5.8.0/node_modules/@ethersproject/units/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"units/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+units@5.8.0/node_modules/@ethersproject/units/lib/index.js\n  var require_lib31 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+units@5.8.0/node_modules/@ethersproject/units/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.parseEther = exports3.formatEther = exports3.parseUnits = exports3.formatUnits = exports3.commify = void 0;\n      var bignumber_1 = require_lib3();\n      var logger_1 = require_lib();\n      var _version_1 = require_version25();\n      var logger = new logger_1.Logger(_version_1.version);\n      var names = [\n        \"wei\",\n        \"kwei\",\n        \"mwei\",\n        \"gwei\",\n        \"szabo\",\n        \"finney\",\n        \"ether\"\n      ];\n      function commify(value) {\n        var comps = String(value).split(\".\");\n        if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === \".\" || value === \"-.\") {\n          logger.throwArgumentError(\"invalid value\", \"value\", value);\n        }\n        var whole = comps[0];\n        var negative = \"\";\n        if (whole.substring(0, 1) === \"-\") {\n          negative = \"-\";\n          whole = whole.substring(1);\n        }\n        while (whole.substring(0, 1) === \"0\") {\n          whole = whole.substring(1);\n        }\n        if (whole === \"\") {\n          whole = \"0\";\n        }\n        var suffix = \"\";\n        if (comps.length === 2) {\n          suffix = \".\" + (comps[1] || \"0\");\n        }\n        while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n          suffix = suffix.substring(0, suffix.length - 1);\n        }\n        var formatted = [];\n        while (whole.length) {\n          if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n          } else {\n            var index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n          }\n        }\n        return negative + formatted.join(\",\") + suffix;\n      }\n      exports3.commify = commify;\n      function formatUnits(value, unitName) {\n        if (typeof unitName === \"string\") {\n          var index = names.indexOf(unitName);\n          if (index !== -1) {\n            unitName = 3 * index;\n          }\n        }\n        return (0, bignumber_1.formatFixed)(value, unitName != null ? unitName : 18);\n      }\n      exports3.formatUnits = formatUnits;\n      function parseUnits2(value, unitName) {\n        if (typeof value !== \"string\") {\n          logger.throwArgumentError(\"value must be a string\", \"value\", value);\n        }\n        if (typeof unitName === \"string\") {\n          var index = names.indexOf(unitName);\n          if (index !== -1) {\n            unitName = 3 * index;\n          }\n        }\n        return (0, bignumber_1.parseFixed)(value, unitName != null ? unitName : 18);\n      }\n      exports3.parseUnits = parseUnits2;\n      function formatEther(wei) {\n        return formatUnits(wei, 18);\n      }\n      exports3.formatEther = formatEther;\n      function parseEther(ether) {\n        return parseUnits2(ether, 18);\n      }\n      exports3.parseEther = parseEther;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/utils.js\n  var require_utils5 = __commonJS({\n    \"../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/utils.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function() {\n          return m[k];\n        } });\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __setModuleDefault2 = exports3 && exports3.__setModuleDefault || (Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      });\n      var __importStar2 = exports3 && exports3.__importStar || function(mod2) {\n        if (mod2 && mod2.__esModule)\n          return mod2;\n        var result = {};\n        if (mod2 != null) {\n          for (var k in mod2)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod2, k))\n              __createBinding2(result, mod2, k);\n        }\n        __setModuleDefault2(result, mod2);\n        return result;\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.formatBytes32String = exports3.Utf8ErrorFuncs = exports3.toUtf8String = exports3.toUtf8CodePoints = exports3.toUtf8Bytes = exports3._toEscapedUtf8String = exports3.nameprep = exports3.hexDataSlice = exports3.hexDataLength = exports3.hexZeroPad = exports3.hexValue = exports3.hexStripZeros = exports3.hexConcat = exports3.isHexString = exports3.hexlify = exports3.base64 = exports3.base58 = exports3.TransactionDescription = exports3.LogDescription = exports3.Interface = exports3.SigningKey = exports3.HDNode = exports3.defaultPath = exports3.isBytesLike = exports3.isBytes = exports3.zeroPad = exports3.stripZeros = exports3.concat = exports3.arrayify = exports3.shallowCopy = exports3.resolveProperties = exports3.getStatic = exports3.defineReadOnly = exports3.deepCopy = exports3.checkProperties = exports3.poll = exports3.fetchJson = exports3._fetchData = exports3.RLP = exports3.Logger = exports3.checkResultErrors = exports3.FormatTypes = exports3.ParamType = exports3.FunctionFragment = exports3.EventFragment = exports3.ErrorFragment = exports3.ConstructorFragment = exports3.Fragment = exports3.defaultAbiCoder = exports3.AbiCoder = void 0;\n      exports3.Indexed = exports3.Utf8ErrorReason = exports3.UnicodeNormalizationForm = exports3.SupportedAlgorithm = exports3.mnemonicToSeed = exports3.isValidMnemonic = exports3.entropyToMnemonic = exports3.mnemonicToEntropy = exports3.getAccountPath = exports3.verifyTypedData = exports3.verifyMessage = exports3.recoverPublicKey = exports3.computePublicKey = exports3.recoverAddress = exports3.computeAddress = exports3.getJsonWalletAddress = exports3.TransactionTypes = exports3.serializeTransaction = exports3.parseTransaction = exports3.accessListify = exports3.joinSignature = exports3.splitSignature = exports3.soliditySha256 = exports3.solidityKeccak256 = exports3.solidityPack = exports3.shuffled = exports3.randomBytes = exports3.sha512 = exports3.sha256 = exports3.ripemd160 = exports3.keccak256 = exports3.computeHmac = exports3.commify = exports3.parseUnits = exports3.formatUnits = exports3.parseEther = exports3.formatEther = exports3.isAddress = exports3.getCreate2Address = exports3.getContractAddress = exports3.getIcapAddress = exports3.getAddress = exports3._TypedDataEncoder = exports3.id = exports3.isValidName = exports3.namehash = exports3.hashMessage = exports3.dnsEncode = exports3.parseBytes32String = void 0;\n      var abi_1 = require_lib13();\n      Object.defineProperty(exports3, \"AbiCoder\", { enumerable: true, get: function() {\n        return abi_1.AbiCoder;\n      } });\n      Object.defineProperty(exports3, \"checkResultErrors\", { enumerable: true, get: function() {\n        return abi_1.checkResultErrors;\n      } });\n      Object.defineProperty(exports3, \"ConstructorFragment\", { enumerable: true, get: function() {\n        return abi_1.ConstructorFragment;\n      } });\n      Object.defineProperty(exports3, \"defaultAbiCoder\", { enumerable: true, get: function() {\n        return abi_1.defaultAbiCoder;\n      } });\n      Object.defineProperty(exports3, \"ErrorFragment\", { enumerable: true, get: function() {\n        return abi_1.ErrorFragment;\n      } });\n      Object.defineProperty(exports3, \"EventFragment\", { enumerable: true, get: function() {\n        return abi_1.EventFragment;\n      } });\n      Object.defineProperty(exports3, \"FormatTypes\", { enumerable: true, get: function() {\n        return abi_1.FormatTypes;\n      } });\n      Object.defineProperty(exports3, \"Fragment\", { enumerable: true, get: function() {\n        return abi_1.Fragment;\n      } });\n      Object.defineProperty(exports3, \"FunctionFragment\", { enumerable: true, get: function() {\n        return abi_1.FunctionFragment;\n      } });\n      Object.defineProperty(exports3, \"Indexed\", { enumerable: true, get: function() {\n        return abi_1.Indexed;\n      } });\n      Object.defineProperty(exports3, \"Interface\", { enumerable: true, get: function() {\n        return abi_1.Interface;\n      } });\n      Object.defineProperty(exports3, \"LogDescription\", { enumerable: true, get: function() {\n        return abi_1.LogDescription;\n      } });\n      Object.defineProperty(exports3, \"ParamType\", { enumerable: true, get: function() {\n        return abi_1.ParamType;\n      } });\n      Object.defineProperty(exports3, \"TransactionDescription\", { enumerable: true, get: function() {\n        return abi_1.TransactionDescription;\n      } });\n      var address_1 = require_lib7();\n      Object.defineProperty(exports3, \"getAddress\", { enumerable: true, get: function() {\n        return address_1.getAddress;\n      } });\n      Object.defineProperty(exports3, \"getCreate2Address\", { enumerable: true, get: function() {\n        return address_1.getCreate2Address;\n      } });\n      Object.defineProperty(exports3, \"getContractAddress\", { enumerable: true, get: function() {\n        return address_1.getContractAddress;\n      } });\n      Object.defineProperty(exports3, \"getIcapAddress\", { enumerable: true, get: function() {\n        return address_1.getIcapAddress;\n      } });\n      Object.defineProperty(exports3, \"isAddress\", { enumerable: true, get: function() {\n        return address_1.isAddress;\n      } });\n      var base64 = __importStar2(require_lib10());\n      exports3.base64 = base64;\n      var basex_1 = require_lib19();\n      Object.defineProperty(exports3, \"base58\", { enumerable: true, get: function() {\n        return basex_1.Base58;\n      } });\n      var bytes_1 = require_lib2();\n      Object.defineProperty(exports3, \"arrayify\", { enumerable: true, get: function() {\n        return bytes_1.arrayify;\n      } });\n      Object.defineProperty(exports3, \"concat\", { enumerable: true, get: function() {\n        return bytes_1.concat;\n      } });\n      Object.defineProperty(exports3, \"hexConcat\", { enumerable: true, get: function() {\n        return bytes_1.hexConcat;\n      } });\n      Object.defineProperty(exports3, \"hexDataSlice\", { enumerable: true, get: function() {\n        return bytes_1.hexDataSlice;\n      } });\n      Object.defineProperty(exports3, \"hexDataLength\", { enumerable: true, get: function() {\n        return bytes_1.hexDataLength;\n      } });\n      Object.defineProperty(exports3, \"hexlify\", { enumerable: true, get: function() {\n        return bytes_1.hexlify;\n      } });\n      Object.defineProperty(exports3, \"hexStripZeros\", { enumerable: true, get: function() {\n        return bytes_1.hexStripZeros;\n      } });\n      Object.defineProperty(exports3, \"hexValue\", { enumerable: true, get: function() {\n        return bytes_1.hexValue;\n      } });\n      Object.defineProperty(exports3, \"hexZeroPad\", { enumerable: true, get: function() {\n        return bytes_1.hexZeroPad;\n      } });\n      Object.defineProperty(exports3, \"isBytes\", { enumerable: true, get: function() {\n        return bytes_1.isBytes;\n      } });\n      Object.defineProperty(exports3, \"isBytesLike\", { enumerable: true, get: function() {\n        return bytes_1.isBytesLike;\n      } });\n      Object.defineProperty(exports3, \"isHexString\", { enumerable: true, get: function() {\n        return bytes_1.isHexString;\n      } });\n      Object.defineProperty(exports3, \"joinSignature\", { enumerable: true, get: function() {\n        return bytes_1.joinSignature;\n      } });\n      Object.defineProperty(exports3, \"zeroPad\", { enumerable: true, get: function() {\n        return bytes_1.zeroPad;\n      } });\n      Object.defineProperty(exports3, \"splitSignature\", { enumerable: true, get: function() {\n        return bytes_1.splitSignature;\n      } });\n      Object.defineProperty(exports3, \"stripZeros\", { enumerable: true, get: function() {\n        return bytes_1.stripZeros;\n      } });\n      var hash_1 = require_lib12();\n      Object.defineProperty(exports3, \"_TypedDataEncoder\", { enumerable: true, get: function() {\n        return hash_1._TypedDataEncoder;\n      } });\n      Object.defineProperty(exports3, \"dnsEncode\", { enumerable: true, get: function() {\n        return hash_1.dnsEncode;\n      } });\n      Object.defineProperty(exports3, \"hashMessage\", { enumerable: true, get: function() {\n        return hash_1.hashMessage;\n      } });\n      Object.defineProperty(exports3, \"id\", { enumerable: true, get: function() {\n        return hash_1.id;\n      } });\n      Object.defineProperty(exports3, \"isValidName\", { enumerable: true, get: function() {\n        return hash_1.isValidName;\n      } });\n      Object.defineProperty(exports3, \"namehash\", { enumerable: true, get: function() {\n        return hash_1.namehash;\n      } });\n      var hdnode_1 = require_lib23();\n      Object.defineProperty(exports3, \"defaultPath\", { enumerable: true, get: function() {\n        return hdnode_1.defaultPath;\n      } });\n      Object.defineProperty(exports3, \"entropyToMnemonic\", { enumerable: true, get: function() {\n        return hdnode_1.entropyToMnemonic;\n      } });\n      Object.defineProperty(exports3, \"getAccountPath\", { enumerable: true, get: function() {\n        return hdnode_1.getAccountPath;\n      } });\n      Object.defineProperty(exports3, \"HDNode\", { enumerable: true, get: function() {\n        return hdnode_1.HDNode;\n      } });\n      Object.defineProperty(exports3, \"isValidMnemonic\", { enumerable: true, get: function() {\n        return hdnode_1.isValidMnemonic;\n      } });\n      Object.defineProperty(exports3, \"mnemonicToEntropy\", { enumerable: true, get: function() {\n        return hdnode_1.mnemonicToEntropy;\n      } });\n      Object.defineProperty(exports3, \"mnemonicToSeed\", { enumerable: true, get: function() {\n        return hdnode_1.mnemonicToSeed;\n      } });\n      var json_wallets_1 = require_lib25();\n      Object.defineProperty(exports3, \"getJsonWalletAddress\", { enumerable: true, get: function() {\n        return json_wallets_1.getJsonWalletAddress;\n      } });\n      var keccak256_1 = require_lib5();\n      Object.defineProperty(exports3, \"keccak256\", { enumerable: true, get: function() {\n        return keccak256_1.keccak256;\n      } });\n      var logger_1 = require_lib();\n      Object.defineProperty(exports3, \"Logger\", { enumerable: true, get: function() {\n        return logger_1.Logger;\n      } });\n      var sha2_1 = require_lib20();\n      Object.defineProperty(exports3, \"computeHmac\", { enumerable: true, get: function() {\n        return sha2_1.computeHmac;\n      } });\n      Object.defineProperty(exports3, \"ripemd160\", { enumerable: true, get: function() {\n        return sha2_1.ripemd160;\n      } });\n      Object.defineProperty(exports3, \"sha256\", { enumerable: true, get: function() {\n        return sha2_1.sha256;\n      } });\n      Object.defineProperty(exports3, \"sha512\", { enumerable: true, get: function() {\n        return sha2_1.sha512;\n      } });\n      var solidity_1 = require_lib30();\n      Object.defineProperty(exports3, \"solidityKeccak256\", { enumerable: true, get: function() {\n        return solidity_1.keccak256;\n      } });\n      Object.defineProperty(exports3, \"solidityPack\", { enumerable: true, get: function() {\n        return solidity_1.pack;\n      } });\n      Object.defineProperty(exports3, \"soliditySha256\", { enumerable: true, get: function() {\n        return solidity_1.sha256;\n      } });\n      var random_1 = require_lib24();\n      Object.defineProperty(exports3, \"randomBytes\", { enumerable: true, get: function() {\n        return random_1.randomBytes;\n      } });\n      Object.defineProperty(exports3, \"shuffled\", { enumerable: true, get: function() {\n        return random_1.shuffled;\n      } });\n      var properties_1 = require_lib4();\n      Object.defineProperty(exports3, \"checkProperties\", { enumerable: true, get: function() {\n        return properties_1.checkProperties;\n      } });\n      Object.defineProperty(exports3, \"deepCopy\", { enumerable: true, get: function() {\n        return properties_1.deepCopy;\n      } });\n      Object.defineProperty(exports3, \"defineReadOnly\", { enumerable: true, get: function() {\n        return properties_1.defineReadOnly;\n      } });\n      Object.defineProperty(exports3, \"getStatic\", { enumerable: true, get: function() {\n        return properties_1.getStatic;\n      } });\n      Object.defineProperty(exports3, \"resolveProperties\", { enumerable: true, get: function() {\n        return properties_1.resolveProperties;\n      } });\n      Object.defineProperty(exports3, \"shallowCopy\", { enumerable: true, get: function() {\n        return properties_1.shallowCopy;\n      } });\n      var RLP = __importStar2(require_lib6());\n      exports3.RLP = RLP;\n      var signing_key_1 = require_lib16();\n      Object.defineProperty(exports3, \"computePublicKey\", { enumerable: true, get: function() {\n        return signing_key_1.computePublicKey;\n      } });\n      Object.defineProperty(exports3, \"recoverPublicKey\", { enumerable: true, get: function() {\n        return signing_key_1.recoverPublicKey;\n      } });\n      Object.defineProperty(exports3, \"SigningKey\", { enumerable: true, get: function() {\n        return signing_key_1.SigningKey;\n      } });\n      var strings_1 = require_lib9();\n      Object.defineProperty(exports3, \"formatBytes32String\", { enumerable: true, get: function() {\n        return strings_1.formatBytes32String;\n      } });\n      Object.defineProperty(exports3, \"nameprep\", { enumerable: true, get: function() {\n        return strings_1.nameprep;\n      } });\n      Object.defineProperty(exports3, \"parseBytes32String\", { enumerable: true, get: function() {\n        return strings_1.parseBytes32String;\n      } });\n      Object.defineProperty(exports3, \"_toEscapedUtf8String\", { enumerable: true, get: function() {\n        return strings_1._toEscapedUtf8String;\n      } });\n      Object.defineProperty(exports3, \"toUtf8Bytes\", { enumerable: true, get: function() {\n        return strings_1.toUtf8Bytes;\n      } });\n      Object.defineProperty(exports3, \"toUtf8CodePoints\", { enumerable: true, get: function() {\n        return strings_1.toUtf8CodePoints;\n      } });\n      Object.defineProperty(exports3, \"toUtf8String\", { enumerable: true, get: function() {\n        return strings_1.toUtf8String;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorFuncs\", { enumerable: true, get: function() {\n        return strings_1.Utf8ErrorFuncs;\n      } });\n      var transactions_1 = require_lib17();\n      Object.defineProperty(exports3, \"accessListify\", { enumerable: true, get: function() {\n        return transactions_1.accessListify;\n      } });\n      Object.defineProperty(exports3, \"computeAddress\", { enumerable: true, get: function() {\n        return transactions_1.computeAddress;\n      } });\n      Object.defineProperty(exports3, \"parseTransaction\", { enumerable: true, get: function() {\n        return transactions_1.parse;\n      } });\n      Object.defineProperty(exports3, \"recoverAddress\", { enumerable: true, get: function() {\n        return transactions_1.recoverAddress;\n      } });\n      Object.defineProperty(exports3, \"serializeTransaction\", { enumerable: true, get: function() {\n        return transactions_1.serialize;\n      } });\n      Object.defineProperty(exports3, \"TransactionTypes\", { enumerable: true, get: function() {\n        return transactions_1.TransactionTypes;\n      } });\n      var units_1 = require_lib31();\n      Object.defineProperty(exports3, \"commify\", { enumerable: true, get: function() {\n        return units_1.commify;\n      } });\n      Object.defineProperty(exports3, \"formatEther\", { enumerable: true, get: function() {\n        return units_1.formatEther;\n      } });\n      Object.defineProperty(exports3, \"parseEther\", { enumerable: true, get: function() {\n        return units_1.parseEther;\n      } });\n      Object.defineProperty(exports3, \"formatUnits\", { enumerable: true, get: function() {\n        return units_1.formatUnits;\n      } });\n      Object.defineProperty(exports3, \"parseUnits\", { enumerable: true, get: function() {\n        return units_1.parseUnits;\n      } });\n      var wallet_1 = require_lib26();\n      Object.defineProperty(exports3, \"verifyMessage\", { enumerable: true, get: function() {\n        return wallet_1.verifyMessage;\n      } });\n      Object.defineProperty(exports3, \"verifyTypedData\", { enumerable: true, get: function() {\n        return wallet_1.verifyTypedData;\n      } });\n      var web_1 = require_lib28();\n      Object.defineProperty(exports3, \"_fetchData\", { enumerable: true, get: function() {\n        return web_1._fetchData;\n      } });\n      Object.defineProperty(exports3, \"fetchJson\", { enumerable: true, get: function() {\n        return web_1.fetchJson;\n      } });\n      Object.defineProperty(exports3, \"poll\", { enumerable: true, get: function() {\n        return web_1.poll;\n      } });\n      var sha2_2 = require_lib20();\n      Object.defineProperty(exports3, \"SupportedAlgorithm\", { enumerable: true, get: function() {\n        return sha2_2.SupportedAlgorithm;\n      } });\n      var strings_2 = require_lib9();\n      Object.defineProperty(exports3, \"UnicodeNormalizationForm\", { enumerable: true, get: function() {\n        return strings_2.UnicodeNormalizationForm;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorReason\", { enumerable: true, get: function() {\n        return strings_2.Utf8ErrorReason;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/_version.js\n  var require_version26 = __commonJS({\n    \"../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"ethers/5.8.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/ethers.js\n  var require_ethers = __commonJS({\n    \"../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/ethers.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function() {\n          return m[k];\n        } });\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __setModuleDefault2 = exports3 && exports3.__setModuleDefault || (Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      });\n      var __importStar2 = exports3 && exports3.__importStar || function(mod2) {\n        if (mod2 && mod2.__esModule)\n          return mod2;\n        var result = {};\n        if (mod2 != null) {\n          for (var k in mod2)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod2, k))\n              __createBinding2(result, mod2, k);\n        }\n        __setModuleDefault2(result, mod2);\n        return result;\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Wordlist = exports3.version = exports3.wordlists = exports3.utils = exports3.logger = exports3.errors = exports3.constants = exports3.FixedNumber = exports3.BigNumber = exports3.ContractFactory = exports3.Contract = exports3.BaseContract = exports3.providers = exports3.getDefaultProvider = exports3.VoidSigner = exports3.Wallet = exports3.Signer = void 0;\n      var contracts_1 = require_lib18();\n      Object.defineProperty(exports3, \"BaseContract\", { enumerable: true, get: function() {\n        return contracts_1.BaseContract;\n      } });\n      Object.defineProperty(exports3, \"Contract\", { enumerable: true, get: function() {\n        return contracts_1.Contract;\n      } });\n      Object.defineProperty(exports3, \"ContractFactory\", { enumerable: true, get: function() {\n        return contracts_1.ContractFactory;\n      } });\n      var bignumber_1 = require_lib3();\n      Object.defineProperty(exports3, \"BigNumber\", { enumerable: true, get: function() {\n        return bignumber_1.BigNumber;\n      } });\n      Object.defineProperty(exports3, \"FixedNumber\", { enumerable: true, get: function() {\n        return bignumber_1.FixedNumber;\n      } });\n      var abstract_signer_1 = require_lib15();\n      Object.defineProperty(exports3, \"Signer\", { enumerable: true, get: function() {\n        return abstract_signer_1.Signer;\n      } });\n      Object.defineProperty(exports3, \"VoidSigner\", { enumerable: true, get: function() {\n        return abstract_signer_1.VoidSigner;\n      } });\n      var wallet_1 = require_lib26();\n      Object.defineProperty(exports3, \"Wallet\", { enumerable: true, get: function() {\n        return wallet_1.Wallet;\n      } });\n      var constants = __importStar2(require_lib8());\n      exports3.constants = constants;\n      var providers = __importStar2(require_lib29());\n      exports3.providers = providers;\n      var providers_1 = require_lib29();\n      Object.defineProperty(exports3, \"getDefaultProvider\", { enumerable: true, get: function() {\n        return providers_1.getDefaultProvider;\n      } });\n      var wordlists_1 = require_lib22();\n      Object.defineProperty(exports3, \"Wordlist\", { enumerable: true, get: function() {\n        return wordlists_1.Wordlist;\n      } });\n      Object.defineProperty(exports3, \"wordlists\", { enumerable: true, get: function() {\n        return wordlists_1.wordlists;\n      } });\n      var utils = __importStar2(require_utils5());\n      exports3.utils = utils;\n      var logger_1 = require_lib();\n      Object.defineProperty(exports3, \"errors\", { enumerable: true, get: function() {\n        return logger_1.ErrorCode;\n      } });\n      var _version_1 = require_version26();\n      Object.defineProperty(exports3, \"version\", { enumerable: true, get: function() {\n        return _version_1.version;\n      } });\n      var logger = new logger_1.Logger(_version_1.version);\n      exports3.logger = logger;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/index.js\n  var require_lib32 = __commonJS({\n    \"../../../node_modules/.pnpm/ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function() {\n          return m[k];\n        } });\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __setModuleDefault2 = exports3 && exports3.__setModuleDefault || (Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      });\n      var __importStar2 = exports3 && exports3.__importStar || function(mod2) {\n        if (mod2 && mod2.__esModule)\n          return mod2;\n        var result = {};\n        if (mod2 != null) {\n          for (var k in mod2)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod2, k))\n              __createBinding2(result, mod2, k);\n        }\n        __setModuleDefault2(result, mod2);\n        return result;\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.Wordlist = exports3.version = exports3.wordlists = exports3.utils = exports3.logger = exports3.errors = exports3.constants = exports3.FixedNumber = exports3.BigNumber = exports3.ContractFactory = exports3.Contract = exports3.BaseContract = exports3.providers = exports3.getDefaultProvider = exports3.VoidSigner = exports3.Wallet = exports3.Signer = exports3.ethers = void 0;\n      var ethers17 = __importStar2(require_ethers());\n      exports3.ethers = ethers17;\n      try {\n        anyGlobal2 = window;\n        if (anyGlobal2._ethers == null) {\n          anyGlobal2._ethers = ethers17;\n        }\n      } catch (error) {\n      }\n      var anyGlobal2;\n      var ethers_1 = require_ethers();\n      Object.defineProperty(exports3, \"Signer\", { enumerable: true, get: function() {\n        return ethers_1.Signer;\n      } });\n      Object.defineProperty(exports3, \"Wallet\", { enumerable: true, get: function() {\n        return ethers_1.Wallet;\n      } });\n      Object.defineProperty(exports3, \"VoidSigner\", { enumerable: true, get: function() {\n        return ethers_1.VoidSigner;\n      } });\n      Object.defineProperty(exports3, \"getDefaultProvider\", { enumerable: true, get: function() {\n        return ethers_1.getDefaultProvider;\n      } });\n      Object.defineProperty(exports3, \"providers\", { enumerable: true, get: function() {\n        return ethers_1.providers;\n      } });\n      Object.defineProperty(exports3, \"BaseContract\", { enumerable: true, get: function() {\n        return ethers_1.BaseContract;\n      } });\n      Object.defineProperty(exports3, \"Contract\", { enumerable: true, get: function() {\n        return ethers_1.Contract;\n      } });\n      Object.defineProperty(exports3, \"ContractFactory\", { enumerable: true, get: function() {\n        return ethers_1.ContractFactory;\n      } });\n      Object.defineProperty(exports3, \"BigNumber\", { enumerable: true, get: function() {\n        return ethers_1.BigNumber;\n      } });\n      Object.defineProperty(exports3, \"FixedNumber\", { enumerable: true, get: function() {\n        return ethers_1.FixedNumber;\n      } });\n      Object.defineProperty(exports3, \"constants\", { enumerable: true, get: function() {\n        return ethers_1.constants;\n      } });\n      Object.defineProperty(exports3, \"errors\", { enumerable: true, get: function() {\n        return ethers_1.errors;\n      } });\n      Object.defineProperty(exports3, \"logger\", { enumerable: true, get: function() {\n        return ethers_1.logger;\n      } });\n      Object.defineProperty(exports3, \"utils\", { enumerable: true, get: function() {\n        return ethers_1.utils;\n      } });\n      Object.defineProperty(exports3, \"wordlists\", { enumerable: true, get: function() {\n        return ethers_1.wordlists;\n      } });\n      Object.defineProperty(exports3, \"version\", { enumerable: true, get: function() {\n        return ethers_1.version;\n      } });\n      Object.defineProperty(exports3, \"Wordlist\", { enumerable: true, get: function() {\n        return ethers_1.Wordlist;\n      } });\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/policyParameters/decodePolicyParams.ts\n  var import_ethers, OnChainPolicyParamType, toBigInt, toBigIntArray, toUint8Array, toUint8ArrayArray, decodePolicyParams;\n  var init_decodePolicyParams = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/policyParameters/decodePolicyParams.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers = __toESM(require_lib32());\n      OnChainPolicyParamType = {\n        INT256: 0,\n        INT256_ARRAY: 1,\n        UINT256: 2,\n        UINT256_ARRAY: 3,\n        BOOL: 4,\n        BOOL_ARRAY: 5,\n        ADDRESS: 6,\n        ADDRESS_ARRAY: 7,\n        STRING: 8,\n        STRING_ARRAY: 9,\n        BYTES: 10,\n        BYTES_ARRAY: 11\n      };\n      toBigInt = (value) => {\n        return BigInt(value.toString());\n      };\n      toBigIntArray = (values) => {\n        return values.map((value) => BigInt(value.toString()));\n      };\n      toUint8Array = (value) => {\n        return import_ethers.ethers.utils.arrayify(value);\n      };\n      toUint8ArrayArray = (values) => {\n        return values.map((value) => import_ethers.ethers.utils.arrayify(value));\n      };\n      decodePolicyParams = ({\n        params\n      }) => {\n        try {\n          const result = {};\n          for (const param of params) {\n            console.log(\n              \"decoding param:\",\n              JSON.stringify({\n                name: param.name,\n                paramType: param.paramType,\n                value: param.value\n              })\n            );\n            const { name, paramType, value } = param;\n            switch (paramType) {\n              case OnChainPolicyParamType.INT256:\n                result[name] = toBigInt(import_ethers.ethers.utils.defaultAbiCoder.decode([\"int256\"], value)[0]);\n                break;\n              case OnChainPolicyParamType.INT256_ARRAY:\n                result[name] = toBigIntArray(import_ethers.ethers.utils.defaultAbiCoder.decode([\"int256[]\"], value)[0]);\n                break;\n              case OnChainPolicyParamType.UINT256:\n                result[name] = toBigInt(import_ethers.ethers.utils.defaultAbiCoder.decode([\"uint256\"], value)[0]);\n                break;\n              case OnChainPolicyParamType.UINT256_ARRAY:\n                result[name] = toBigIntArray(\n                  import_ethers.ethers.utils.defaultAbiCoder.decode([\"uint256[]\"], value)[0]\n                );\n                break;\n              case OnChainPolicyParamType.BOOL:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"bool\"], value)[0];\n                break;\n              case OnChainPolicyParamType.BOOL_ARRAY:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"bool[]\"], value)[0];\n                break;\n              case OnChainPolicyParamType.ADDRESS:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"address\"], value)[0];\n                break;\n              case OnChainPolicyParamType.ADDRESS_ARRAY:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"address[]\"], value)[0];\n                break;\n              case OnChainPolicyParamType.STRING:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"string\"], value)[0];\n                break;\n              case OnChainPolicyParamType.STRING_ARRAY:\n                result[name] = import_ethers.ethers.utils.defaultAbiCoder.decode([\"string[]\"], value)[0];\n                break;\n              case OnChainPolicyParamType.BYTES:\n                result[name] = toUint8Array(import_ethers.ethers.utils.defaultAbiCoder.decode([\"bytes\"], value)[0]);\n                break;\n              case OnChainPolicyParamType.BYTES_ARRAY:\n                result[name] = toUint8ArrayArray(\n                  import_ethers.ethers.utils.defaultAbiCoder.decode([\"bytes[]\"], value)[0]\n                );\n                break;\n              default:\n                throw new Error(`Unknown parameter type: ${paramType}`);\n            }\n          }\n          return result;\n        } catch (error) {\n          throw new Error(\n            `Error decoding policy parameters (abiDecodePolicyParameters): ${error instanceof Error ? error.message : String(error)}`\n          );\n        }\n      };\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/policyParameters/getOnchainPolicyParams.ts\n  async function _fetchAllOnChainParams({\n    vincentContractAddress,\n    delegationRpcUrl,\n    appDelegateeAddress,\n    agentWalletPkpTokenId,\n    toolIpfsCid\n  }) {\n    console.log(\"_fetchAllOnChainParams\", {\n      vincentContractAddress,\n      delegationRpcUrl,\n      appDelegateeAddress,\n      agentWalletPkpTokenId,\n      toolIpfsCid\n    });\n    try {\n      const VINCENT_CONTRACT_ABI = [\n        `function validateToolExecutionAndGetPolicies(address delegatee, uint256 pkpTokenId, string calldata toolIpfsCid) external view returns (tuple(bool isPermitted, uint256 appId, uint256 appVersion, tuple(string policyIpfsCid, tuple(string name, uint8 paramType, bytes value)[] parameters)[] policies) validation)`\n      ];\n      const vincentContract = new import_ethers2.ethers.Contract(\n        vincentContractAddress,\n        VINCENT_CONTRACT_ABI,\n        new import_ethers2.ethers.providers.StaticJsonRpcProvider(delegationRpcUrl)\n      );\n      return vincentContract.validateToolExecutionAndGetPolicies(\n        appDelegateeAddress,\n        agentWalletPkpTokenId,\n        toolIpfsCid\n      );\n    } catch (error) {\n      throw new Error(\n        `Error getting on-chain policy parameters from Vincent contract: ${vincentContractAddress} using App Delegatee: ${appDelegateeAddress} and Agent Wallet PKP Token ID: ${agentWalletPkpTokenId} and Vincent Tool: ${toolIpfsCid}: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n  var import_ethers2, getDecodedPolicyParams, getPoliciesAndAppVersion, _getAllOnChainPolicyParams;\n  var init_getOnchainPolicyParams = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/policyParameters/getOnchainPolicyParams.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers2 = __toESM(require_lib32());\n      init_decodePolicyParams();\n      getDecodedPolicyParams = async ({\n        policies,\n        policyIpfsCid\n      }) => {\n        console.log(\"All on-chain policy params:\", JSON.stringify(policies));\n        const onChainPolicyParams = policies.find(\n          (policy) => policy.policyIpfsCid === policyIpfsCid\n        );\n        if (onChainPolicyParams) {\n          return decodePolicyParams({\n            params: onChainPolicyParams.parameters\n          });\n        }\n        console.log(\"Found no on-chain parameters for policy IPFS CID:\", policyIpfsCid);\n        return void 0;\n      };\n      getPoliciesAndAppVersion = async ({\n        delegationRpcUrl,\n        vincentContractAddress,\n        appDelegateeAddress,\n        agentWalletPkpTokenId,\n        toolIpfsCid\n      }) => {\n        const allOnChainPolicyParams = await _getAllOnChainPolicyParams({\n          delegationRpcUrl,\n          vincentContractAddress,\n          appDelegateeAddress,\n          agentWalletPkpTokenId,\n          toolIpfsCid\n        });\n        return {\n          policies: allOnChainPolicyParams.policies,\n          appId: allOnChainPolicyParams.appId,\n          appVersion: allOnChainPolicyParams.appVersion\n        };\n      };\n      _getAllOnChainPolicyParams = async ({\n        delegationRpcUrl,\n        vincentContractAddress,\n        appDelegateeAddress,\n        agentWalletPkpTokenId,\n        toolIpfsCid\n      }) => {\n        const allOnChainPolicyParams = await _fetchAllOnChainParams({\n          vincentContractAddress,\n          delegationRpcUrl,\n          appDelegateeAddress,\n          agentWalletPkpTokenId,\n          toolIpfsCid\n        });\n        if (!allOnChainPolicyParams.isPermitted) {\n          throw new Error(\n            `App Delegatee: ${appDelegateeAddress} is not permitted to execute Vincent Tool: ${toolIpfsCid} for App ID: ${allOnChainPolicyParams.appId.toString()} App Version: ${allOnChainPolicyParams.appVersion.toString()} using Agent Wallet PKP Token ID: ${agentWalletPkpTokenId}`\n          );\n        }\n        return allOnChainPolicyParams;\n      };\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/handlers/constants.ts\n  var LIT_DATIL_VINCENT_ADDRESS, LIT_DATIL_PUBKEY_ROUTER_ADDRESS;\n  var init_constants = __esm({\n    \"../vincent-tool-sdk/src/lib/handlers/constants.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      LIT_DATIL_VINCENT_ADDRESS = \"0x78Cd1d270Ff12BA55e98BDff1f3646426E25D932\";\n      LIT_DATIL_PUBKEY_ROUTER_ADDRESS = \"0xF182d6bEf16Ba77e69372dD096D8B70Bc3d5B475\";\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/getMappedToolPolicyParams.ts\n  function getMappedToolPolicyParams({\n    toolParameterMappings,\n    parsedToolParams\n  }) {\n    const mappedToolParams = {};\n    for (const [toolParamKey, policyParamKey] of Object.entries(toolParameterMappings)) {\n      if (!policyParamKey) {\n        throw new Error(\n          `Missing policy param key for tool param \"${toolParamKey}\" (evaluateSupportedPolicies)`\n        );\n      }\n      if (!(toolParamKey in parsedToolParams)) {\n        throw new Error(`Tool param \"${toolParamKey}\" expected in toolParams but was not provided`);\n      }\n      mappedToolParams[policyParamKey] = parsedToolParams[toolParamKey];\n    }\n    return mappedToolParams;\n  }\n  var init_getMappedToolPolicyParams = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/getMappedToolPolicyParams.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/getPkpInfo.ts\n  var import_ethers3, getPkpInfo;\n  var init_getPkpInfo = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/getPkpInfo.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers3 = __toESM(require_lib32());\n      getPkpInfo = async ({\n        litPubkeyRouterAddress,\n        yellowstoneRpcUrl,\n        pkpEthAddress\n      }) => {\n        try {\n          const PUBKEY_ROUTER_ABI = [\n            \"function ethAddressToPkpId(address ethAddress) public view returns (uint256)\",\n            \"function getPubkey(uint256 tokenId) public view returns (bytes memory)\"\n          ];\n          const pubkeyRouter = new import_ethers3.ethers.Contract(\n            litPubkeyRouterAddress,\n            PUBKEY_ROUTER_ABI,\n            new import_ethers3.ethers.providers.StaticJsonRpcProvider(yellowstoneRpcUrl)\n          );\n          const pkpTokenId = await pubkeyRouter.ethAddressToPkpId(pkpEthAddress);\n          const publicKey = await pubkeyRouter.getPubkey(pkpTokenId);\n          return {\n            tokenId: pkpTokenId.toString(),\n            ethAddress: pkpEthAddress,\n            publicKey: publicKey.toString(\"hex\")\n          };\n        } catch (error) {\n          throw new Error(\n            `Error getting PKP info for PKP Eth Address: ${pkpEthAddress} using Lit Pubkey Router: ${litPubkeyRouterAddress} and Yellowstone RPC URL: ${yellowstoneRpcUrl}: ${error instanceof Error ? error.message : String(error)}`\n          );\n        }\n      };\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts\n  function supportedPoliciesForTool(policies) {\n    const policyByPackageName = {};\n    const policyByIpfsCid = {};\n    const cidToPackageName = /* @__PURE__ */ new Map();\n    const packageNameToCid = /* @__PURE__ */ new Map();\n    for (const policy of policies) {\n      const pkg = policy.vincentPolicy.packageName;\n      const cid = policy.ipfsCid;\n      if (!pkg)\n        throw new Error(\"Missing policy packageName\");\n      if (pkg in policyByPackageName) {\n        throw new Error(`Duplicate policy packageName: ${pkg}`);\n      }\n      policyByPackageName[pkg] = policy;\n      policyByIpfsCid[cid] = policy;\n      cidToPackageName.set(cid, pkg);\n      packageNameToCid.set(pkg, cid);\n    }\n    return {\n      policyByPackageName,\n      policyByIpfsCid,\n      cidToPackageName,\n      packageNameToCid\n    };\n  }\n  var init_supportedPoliciesForTool = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/supportedPoliciesForTool.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/index.ts\n  var init_helpers2 = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/index.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_getMappedToolPolicyParams();\n      init_getPkpInfo();\n      init_supportedPoliciesForTool();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/handlers/vincentPolicyHandler.ts\n  async function vincentPolicyHandler({\n    vincentPolicy: vincentPolicy2,\n    context: context2,\n    toolParams: toolParams2\n  }) {\n    const { delegatorPkpEthAddress, toolIpfsCid } = context2;\n    console.log(\"actionIpfsIds:\", LitAuth.actionIpfsIds.join(\",\"));\n    const policyIpfsCid = LitAuth.actionIpfsIds[0];\n    console.log(\"context:\", JSON.stringify(context2));\n    try {\n      const delegationRpcUrl = await Lit.Actions.getRpcUrl({\n        chain: \"yellowstone\"\n      });\n      const userPkpInfo = await getPkpInfo({\n        litPubkeyRouterAddress: LIT_DATIL_PUBKEY_ROUTER_ADDRESS,\n        yellowstoneRpcUrl: \"https://yellowstone-rpc.litprotocol.com/\",\n        pkpEthAddress: delegatorPkpEthAddress\n      });\n      const appDelegateeAddress = import_ethers4.ethers.utils.getAddress(LitAuth.authSigAddress);\n      console.log(\"appDelegateeAddress\", appDelegateeAddress);\n      const { policies, appId, appVersion } = await getPoliciesAndAppVersion({\n        delegationRpcUrl,\n        vincentContractAddress: LIT_DATIL_VINCENT_ADDRESS,\n        appDelegateeAddress,\n        agentWalletPkpTokenId: userPkpInfo.tokenId,\n        toolIpfsCid\n      });\n      const baseContext = {\n        delegation: {\n          delegateeAddress: appDelegateeAddress,\n          delegatorPkpInfo: userPkpInfo\n        },\n        toolIpfsCid,\n        appId: appId.toNumber(),\n        appVersion: appVersion.toNumber()\n      };\n      const onChainPolicyParams = await getDecodedPolicyParams({\n        policies,\n        policyIpfsCid\n      });\n      console.log(\"onChainPolicyParams:\", JSON.stringify(onChainPolicyParams, bigintReplacer));\n      const evaluateResult = await vincentPolicy2.evaluate(\n        {\n          toolParams: toolParams2,\n          userParams: onChainPolicyParams\n        },\n        baseContext\n      );\n      console.log(\"evaluateResult:\", JSON.stringify(evaluateResult, bigintReplacer));\n      Lit.Actions.setResponse({\n        response: JSON.stringify({\n          ...evaluateResult\n        })\n      });\n    } catch (error) {\n      console.log(\"Policy evaluation failed:\", error.message, error.stack);\n      Lit.Actions.setResponse({\n        response: JSON.stringify(\n          createDenyResult({\n            message: error instanceof Error ? error.message : String(error)\n          })\n        )\n      });\n    }\n  }\n  var import_ethers4, bigintReplacer;\n  var init_vincentPolicyHandler = __esm({\n    \"../vincent-tool-sdk/src/lib/handlers/vincentPolicyHandler.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers4 = __toESM(require_lib32());\n      init_getOnchainPolicyParams();\n      init_constants();\n      init_helpers();\n      init_helpers2();\n      bigintReplacer = (key, value) => {\n        return typeof value === \"bigint\" ? value.toString() : value;\n      };\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/handlers/evaluatePolicies.ts\n  async function evaluatePolicies({\n    vincentTool: vincentTool2,\n    context: context2,\n    validatedPolicies\n  }) {\n    const evaluatedPolicies = [];\n    let policyDeniedResult = void 0;\n    const rawAllowedPolicies = {};\n    for (const { policyPackageName, toolPolicyParams } of validatedPolicies) {\n      evaluatedPolicies.push(policyPackageName);\n      const policy = vincentTool2.supportedPolicies.policyByPackageName[policyPackageName];\n      try {\n        const litActionResponse = await Lit.Actions.call({\n          ipfsId: policy.ipfsCid,\n          params: {\n            toolParams: toolPolicyParams,\n            context: {\n              toolIpfsCid: context2.toolIpfsCid,\n              delegatorPkpEthAddress: context2.delegation.delegatorPkpInfo.ethAddress\n            }\n          }\n        });\n        console.log(\n          `evaluated ${String(policyPackageName)} policy, result is:`,\n          JSON.stringify(litActionResponse)\n        );\n        const result = parseAndValidateEvaluateResult({\n          litActionResponse,\n          vincentPolicy: policy.vincentPolicy\n        });\n        if (isPolicyDenyResponse(result)) {\n          policyDeniedResult = {\n            ...result,\n            packageName: policyPackageName\n          };\n        } else {\n          rawAllowedPolicies[policyPackageName] = {\n            result\n          };\n        }\n      } catch (err) {\n        const denyResult = createDenyResult({\n          message: err instanceof Error ? err.message : \"Unknown error\"\n        });\n        policyDeniedResult = { ...denyResult, packageName: policyPackageName };\n      }\n    }\n    if (policyDeniedResult) {\n      return createDenyEvaluationResult({\n        allowedPolicies: rawAllowedPolicies,\n        evaluatedPolicies,\n        deniedPolicy: policyDeniedResult\n      });\n    }\n    return createAllowEvaluationResult({\n      evaluatedPolicies,\n      allowedPolicies: rawAllowedPolicies\n    });\n  }\n  function parseAndValidateEvaluateResult({\n    litActionResponse,\n    vincentPolicy: vincentPolicy2\n  }) {\n    let parsedLitActionResponse;\n    try {\n      parsedLitActionResponse = JSON.parse(litActionResponse);\n    } catch (error) {\n      console.log(\"rawLitActionResponse (parsePolicyExecutionResult)\", litActionResponse);\n      throw new Error(\n        `Failed to JSON parse Lit Action Response: ${error instanceof Error ? error.message : String(error)}. rawLitActionResponse in request logs (parsePolicyExecutionResult)`\n      );\n    }\n    try {\n      console.log(\"parseAndValidateEvaluateResult\", JSON.stringify(parsedLitActionResponse));\n      if (isPolicyDenyResponse(parsedLitActionResponse)) {\n        console.log(\"parsedLitActionResponse is a deny response; returning it as-is.\");\n        return parsedLitActionResponse;\n      }\n      const { schemaToUse, parsedType } = getSchemaForPolicyResponseResult({\n        value: parsedLitActionResponse,\n        denyResultSchema: vincentPolicy2.evalDenyResultSchema || external_exports.undefined(),\n        allowResultSchema: vincentPolicy2.evalAllowResultSchema || external_exports.undefined()\n      });\n      console.log(\"schemaToUse\", parsedType);\n      return validateOrDeny(\n        parsedLitActionResponse.result,\n        schemaToUse,\n        \"evaluate\",\n        \"output\"\n      );\n    } catch (err) {\n      console.log(\n        \"parseAndValidateEvaluateResult error; returning noResultDeny\",\n        err.message,\n        err.stack\n      );\n      return returnNoResultDeny(\n        err instanceof Error ? err.message : \"Unknown error\"\n      );\n    }\n  }\n  var init_evaluatePolicies = __esm({\n    \"../vincent-tool-sdk/src/lib/handlers/evaluatePolicies.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      init_helpers();\n      init_resultCreators();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/toolCore/helpers/validatePolicies.ts\n  async function validatePolicies({\n    policies,\n    vincentTool: vincentTool2,\n    toolIpfsCid,\n    parsedToolParams\n  }) {\n    const validatedPolicies = [];\n    for (const policy of policies) {\n      const { policyIpfsCid, parameters } = policy;\n      const toolPolicy = vincentTool2.supportedPolicies.policyByIpfsCid[policyIpfsCid];\n      console.log(\n        \"vincentTool.supportedPolicies\",\n        Object.keys(vincentTool2.supportedPolicies.policyByIpfsCid)\n      );\n      if (!toolPolicy) {\n        throw new Error(\n          `Policy with IPFS CID ${policyIpfsCid} is registered on-chain but not supported by this tool. Vincent Tool: ${toolIpfsCid}`\n        );\n      }\n      const policyPackageName = toolPolicy.vincentPolicy.packageName;\n      if (!toolPolicy.toolParameterMappings) {\n        throw new Error(\"toolParameterMappings missing on policy\");\n      }\n      console.log(\n        \"toolPolicy.toolParameterMappings\",\n        JSON.stringify(toolPolicy.toolParameterMappings)\n      );\n      const toolPolicyParams = getMappedToolPolicyParams({\n        toolParameterMappings: toolPolicy.toolParameterMappings,\n        parsedToolParams\n      });\n      validatedPolicies.push({ parameters, policyPackageName, toolPolicyParams });\n    }\n    return validatedPolicies;\n  }\n  var init_validatePolicies = __esm({\n    \"../vincent-tool-sdk/src/lib/toolCore/helpers/validatePolicies.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_getMappedToolPolicyParams();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/handlers/vincentToolHandler.ts\n  function createToolExecutionContext({\n    vincentTool: vincentTool2,\n    policyEvaluationResults,\n    baseContext\n  }) {\n    if (!policyEvaluationResults.allow) {\n      throw new Error(\"Received denied policies to createToolExecutionContext()\");\n    }\n    const newContext = {\n      allow: true,\n      evaluatedPolicies: policyEvaluationResults.evaluatedPolicies,\n      allowedPolicies: {}\n    };\n    const policyByPackageName = vincentTool2.supportedPolicies.policyByPackageName;\n    const allowedKeys = Object.keys(policyEvaluationResults.allowedPolicies);\n    for (const packageName of allowedKeys) {\n      const entry = policyEvaluationResults.allowedPolicies[packageName];\n      const policy = policyByPackageName[packageName];\n      const vincentPolicy2 = policy.vincentPolicy;\n      if (!entry) {\n        throw new Error(`Missing entry on allowedPolicies for policy: ${packageName}`);\n      }\n      const resultWrapper = {\n        result: entry.result\n      };\n      if (vincentPolicy2.commit) {\n        const commitFn = vincentPolicy2.commit;\n        resultWrapper.commit = (commitParams) => {\n          return commitFn(commitParams, baseContext);\n        };\n      }\n      newContext.allowedPolicies[packageName] = resultWrapper;\n    }\n    return newContext;\n  }\n  var import_ethers5, vincentToolHandler;\n  var init_vincentToolHandler = __esm({\n    \"../vincent-tool-sdk/src/lib/handlers/vincentToolHandler.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers5 = __toESM(require_lib32());\n      init_helpers2();\n      init_evaluatePolicies();\n      init_zod2();\n      init_typeGuards2();\n      init_constants();\n      init_validatePolicies();\n      init_getOnchainPolicyParams();\n      vincentToolHandler = ({\n        vincentTool: vincentTool2,\n        toolParams: toolParams2,\n        context: context2\n      }) => {\n        return async () => {\n          let policyEvalResults = void 0;\n          const toolIpfsCid = LitAuth.actionIpfsIds[0];\n          try {\n            const delegationRpcUrl = await Lit.Actions.getRpcUrl({ chain: \"yellowstone\" });\n            const appDelegateeAddress = import_ethers5.ethers.utils.getAddress(LitAuth.authSigAddress);\n            const parsedOrFail = validateOrFail(\n              toolParams2,\n              vincentTool2.toolParamsSchema,\n              \"execute\",\n              \"input\"\n            );\n            if (isToolFailureResult(parsedOrFail)) {\n              Lit.Actions.setResponse({\n                response: JSON.stringify({\n                  toolExecutionResult: parsedOrFail\n                })\n              });\n              return;\n            }\n            const userPkpInfo = await getPkpInfo({\n              litPubkeyRouterAddress: LIT_DATIL_PUBKEY_ROUTER_ADDRESS,\n              yellowstoneRpcUrl: \"https://yellowstone-rpc.litprotocol.com/\",\n              pkpEthAddress: context2.delegatorPkpEthAddress\n            });\n            const { policies, appId, appVersion } = await getPoliciesAndAppVersion({\n              delegationRpcUrl,\n              vincentContractAddress: LIT_DATIL_VINCENT_ADDRESS,\n              appDelegateeAddress,\n              agentWalletPkpTokenId: userPkpInfo.tokenId,\n              toolIpfsCid\n            });\n            const baseContext = {\n              delegation: {\n                delegateeAddress: appDelegateeAddress,\n                delegatorPkpInfo: userPkpInfo\n              },\n              toolIpfsCid,\n              appId: appId.toNumber(),\n              appVersion: appVersion.toNumber()\n            };\n            const validatedPolicies = await validatePolicies({\n              policies,\n              vincentTool: vincentTool2,\n              parsedToolParams: parsedOrFail,\n              toolIpfsCid\n            });\n            console.log(\"validatedPolicies\", JSON.stringify(validatedPolicies));\n            const policyEvaluationResults = await evaluatePolicies({\n              validatedPolicies,\n              vincentTool: vincentTool2,\n              context: baseContext\n            });\n            console.log(\"policyEvaluationResults\", JSON.stringify(policyEvaluationResults));\n            policyEvalResults = policyEvaluationResults;\n            if (!policyEvalResults.allow) {\n              Lit.Actions.setResponse({\n                response: JSON.stringify({\n                  policyEvaluationResults: policyEvalResults,\n                  toolExecutionResult: {\n                    success: false\n                  }\n                })\n              });\n              return;\n            }\n            const executeContext = createToolExecutionContext({\n              vincentTool: vincentTool2,\n              policyEvaluationResults,\n              baseContext\n            });\n            const toolExecutionResult = await vincentTool2.execute(\n              {\n                toolParams: parsedOrFail\n              },\n              {\n                ...baseContext,\n                policiesContext: executeContext\n              }\n            );\n            console.log(\"toolExecutionResult\", toolExecutionResult);\n            Lit.Actions.setResponse({\n              response: JSON.stringify({\n                policyEvaluationResults,\n                toolExecutionResult\n              })\n            });\n          } catch (err) {\n            Lit.Actions.setResponse({\n              response: JSON.stringify({\n                policyEvaluationResults: policyEvalResults,\n                toolExecutionResult: {\n                  success: false,\n                  error: err instanceof Error ? err.message : String(err)\n                }\n              })\n            });\n          }\n        };\n      };\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/bundledPolicy/types.ts\n  var __bundledPolicyBrand;\n  var init_types3 = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/bundledPolicy/types.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      __bundledPolicyBrand = Symbol(\"__bundledPolicyBrand\");\n    }\n  });\n\n  // ../vincent-tool-sdk/src/lib/policyCore/bundledPolicy/bundledPolicy.ts\n  function asBundledVincentPolicy(vincentPolicy2, ipfsCid) {\n    return {\n      ipfsCid,\n      vincentPolicy: vincentPolicy2,\n      [__bundledPolicyBrand]: \"BundledVincentPolicy\"\n    };\n  }\n  var init_bundledPolicy = __esm({\n    \"../vincent-tool-sdk/src/lib/policyCore/bundledPolicy/bundledPolicy.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_types3();\n    }\n  });\n\n  // ../vincent-tool-sdk/src/index.ts\n  var src_exports = {};\n  __export(src_exports, {\n    asBundledVincentPolicy: () => asBundledVincentPolicy,\n    createVincentPolicy: () => createVincentPolicy,\n    createVincentTool: () => createVincentTool,\n    createVincentToolPolicy: () => createVincentToolPolicy,\n    supportedPoliciesForTool: () => supportedPoliciesForTool,\n    vincentPolicyHandler: () => vincentPolicyHandler,\n    vincentToolHandler: () => vincentToolHandler\n  });\n  var init_src = __esm({\n    \"../vincent-tool-sdk/src/index.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_vincentPolicy();\n      init_vincentTool();\n      init_vincentPolicyHandler();\n      init_vincentToolHandler();\n      init_bundledPolicy();\n      init_supportedPoliciesForTool();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\n  var tslib_es6_exports = {};\n  __export(tslib_es6_exports, {\n    __addDisposableResource: () => __addDisposableResource,\n    __assign: () => __assign,\n    __asyncDelegator: () => __asyncDelegator,\n    __asyncGenerator: () => __asyncGenerator,\n    __asyncValues: () => __asyncValues,\n    __await: () => __await,\n    __awaiter: () => __awaiter,\n    __classPrivateFieldGet: () => __classPrivateFieldGet,\n    __classPrivateFieldIn: () => __classPrivateFieldIn,\n    __classPrivateFieldSet: () => __classPrivateFieldSet,\n    __createBinding: () => __createBinding,\n    __decorate: () => __decorate,\n    __disposeResources: () => __disposeResources,\n    __esDecorate: () => __esDecorate,\n    __exportStar: () => __exportStar,\n    __extends: () => __extends,\n    __generator: () => __generator,\n    __importDefault: () => __importDefault,\n    __importStar: () => __importStar,\n    __makeTemplateObject: () => __makeTemplateObject,\n    __metadata: () => __metadata,\n    __param: () => __param,\n    __propKey: () => __propKey,\n    __read: () => __read,\n    __rest: () => __rest,\n    __rewriteRelativeImportExtension: () => __rewriteRelativeImportExtension,\n    __runInitializers: () => __runInitializers,\n    __setFunctionName: () => __setFunctionName,\n    __spread: () => __spread,\n    __spreadArray: () => __spreadArray,\n    __spreadArrays: () => __spreadArrays,\n    __values: () => __values,\n    default: () => tslib_es6_default\n  });\n  function __extends(d, b2) {\n    if (typeof b2 !== \"function\" && b2 !== null)\n      throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n    extendStatics(d, b2);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n  }\n  function __rest(s, e) {\n    var t = {};\n    for (var p in s)\n      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n          t[p[i]] = s[p[i]];\n      }\n    return t;\n  }\n  function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n      r = Reflect.decorate(decorators, target, key, desc);\n    else\n      for (var i = decorators.length - 1; i >= 0; i--)\n        if (d = decorators[i])\n          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n  function __param(paramIndex, decorator) {\n    return function(target, key) {\n      decorator(target, key, paramIndex);\n    };\n  }\n  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n      if (f !== void 0 && typeof f !== \"function\")\n        throw new TypeError(\"Function expected\");\n      return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n      var context2 = {};\n      for (var p in contextIn)\n        context2[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access)\n        context2.access[p] = contextIn.access[p];\n      context2.addInitializer = function(f) {\n        if (done)\n          throw new TypeError(\"Cannot add initializers after decoration has completed\");\n        extraInitializers.push(accept(f || null));\n      };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context2);\n      if (kind === \"accessor\") {\n        if (result === void 0)\n          continue;\n        if (result === null || typeof result !== \"object\")\n          throw new TypeError(\"Object expected\");\n        if (_ = accept(result.get))\n          descriptor.get = _;\n        if (_ = accept(result.set))\n          descriptor.set = _;\n        if (_ = accept(result.init))\n          initializers.unshift(_);\n      } else if (_ = accept(result)) {\n        if (kind === \"field\")\n          initializers.unshift(_);\n        else\n          descriptor[key] = _;\n      }\n    }\n    if (target)\n      Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n  }\n  function __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n  }\n  function __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n  }\n  function __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\")\n      name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n  }\n  function __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n      return Reflect.metadata(metadataKey, metadataValue);\n  }\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n  function __generator(thisArg, body) {\n    var _ = { label: 0, sent: function() {\n      if (t[0] & 1)\n        throw t[1];\n      return t[1];\n    }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n      return this;\n    }), g;\n    function verb(n2) {\n      return function(v) {\n        return step([n2, v]);\n      };\n    }\n    function step(op) {\n      if (f)\n        throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _)\n        try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n            return t;\n          if (y = 0, t)\n            op = [op[0] & 2, t.value];\n          switch (op[0]) {\n            case 0:\n            case 1:\n              t = op;\n              break;\n            case 4:\n              _.label++;\n              return { value: op[1], done: false };\n            case 5:\n              _.label++;\n              y = op[1];\n              op = [0];\n              continue;\n            case 7:\n              op = _.ops.pop();\n              _.trys.pop();\n              continue;\n            default:\n              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                _ = 0;\n                continue;\n              }\n              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                _.label = op[1];\n                break;\n              }\n              if (op[0] === 6 && _.label < t[1]) {\n                _.label = t[1];\n                t = op;\n                break;\n              }\n              if (t && _.label < t[2]) {\n                _.label = t[2];\n                _.ops.push(op);\n                break;\n              }\n              if (t[2])\n                _.ops.pop();\n              _.trys.pop();\n              continue;\n          }\n          op = body.call(thisArg, _);\n        } catch (e) {\n          op = [6, e];\n          y = 0;\n        } finally {\n          f = t = 0;\n        }\n      if (op[0] & 5)\n        throw op[1];\n      return { value: op[0] ? op[1] : void 0, done: true };\n    }\n  }\n  function __exportStar(m, o) {\n    for (var p in m)\n      if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n        __createBinding(o, m, p);\n  }\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m)\n      return m.call(o);\n    if (o && typeof o.length === \"number\")\n      return {\n        next: function() {\n          if (o && i >= o.length)\n            o = void 0;\n          return { value: o && o[i++], done: !o };\n        }\n      };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n  function __read(o, n2) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n      return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n      while ((n2 === void 0 || n2-- > 0) && !(r = i.next()).done)\n        ar.push(r.value);\n    } catch (error) {\n      e = { error };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"]))\n          m.call(i);\n      } finally {\n        if (e)\n          throw e.error;\n      }\n    }\n    return ar;\n  }\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n  function __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n      s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n        r[k] = a[j];\n    return r;\n  }\n  function __spreadArray(to, from, pack2) {\n    if (pack2 || arguments.length === 2)\n      for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n          if (!ar)\n            ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n        }\n      }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  }\n  function __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n  }\n  function __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator)\n      throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n      return this;\n    }, i;\n    function awaitReturn(f) {\n      return function(v) {\n        return Promise.resolve(v).then(f, reject);\n      };\n    }\n    function verb(n2, f) {\n      if (g[n2]) {\n        i[n2] = function(v) {\n          return new Promise(function(a, b2) {\n            q.push([n2, v, a, b2]) > 1 || resume(n2, v);\n          });\n        };\n        if (f)\n          i[n2] = f(i[n2]);\n      }\n    }\n    function resume(n2, v) {\n      try {\n        step(g[n2](v));\n      } catch (e) {\n        settle(q[0][3], e);\n      }\n    }\n    function step(r) {\n      r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n      resume(\"next\", value);\n    }\n    function reject(value) {\n      resume(\"throw\", value);\n    }\n    function settle(f, v) {\n      if (f(v), q.shift(), q.length)\n        resume(q[0][0], q[0][1]);\n    }\n  }\n  function __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n      throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n      return this;\n    }, i;\n    function verb(n2, f) {\n      i[n2] = o[n2] ? function(v) {\n        return (p = !p) ? { value: __await(o[n2](v)), done: false } : f ? f(v) : v;\n      } : f;\n    }\n  }\n  function __asyncValues(o) {\n    if (!Symbol.asyncIterator)\n      throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n      return this;\n    }, i);\n    function verb(n2) {\n      i[n2] = o[n2] && function(v) {\n        return new Promise(function(resolve, reject) {\n          v = o[n2](v), settle(resolve, reject, v.done, v.value);\n        });\n      };\n    }\n    function settle(resolve, reject, d, v) {\n      Promise.resolve(v).then(function(v2) {\n        resolve({ value: v2, done: d });\n      }, reject);\n    }\n  }\n  function __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n      Object.defineProperty(cooked, \"raw\", { value: raw });\n    } else {\n      cooked.raw = raw;\n    }\n    return cooked;\n  }\n  function __importStar(mod2) {\n    if (mod2 && mod2.__esModule)\n      return mod2;\n    var result = {};\n    if (mod2 != null) {\n      for (var k = ownKeys(mod2), i = 0; i < k.length; i++)\n        if (k[i] !== \"default\")\n          __createBinding(result, mod2, k[i]);\n    }\n    __setModuleDefault(result, mod2);\n    return result;\n  }\n  function __importDefault(mod2) {\n    return mod2 && mod2.__esModule ? mod2 : { default: mod2 };\n  }\n  function __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n      throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n      throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n  }\n  function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n      throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n      throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n      throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n  }\n  function __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\")\n      throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n  }\n  function __addDisposableResource(env2, value, async) {\n    if (value !== null && value !== void 0) {\n      if (typeof value !== \"object\" && typeof value !== \"function\")\n        throw new TypeError(\"Object expected.\");\n      var dispose, inner;\n      if (async) {\n        if (!Symbol.asyncDispose)\n          throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n      }\n      if (dispose === void 0) {\n        if (!Symbol.dispose)\n          throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n        if (async)\n          inner = dispose;\n      }\n      if (typeof dispose !== \"function\")\n        throw new TypeError(\"Object not disposable.\");\n      if (inner)\n        dispose = function() {\n          try {\n            inner.call(this);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        };\n      env2.stack.push({ value, dispose, async });\n    } else if (async) {\n      env2.stack.push({ async: true });\n    }\n    return value;\n  }\n  function __disposeResources(env2) {\n    function fail(e) {\n      env2.error = env2.hasError ? new _SuppressedError(e, env2.error, \"An error was suppressed during disposal.\") : e;\n      env2.hasError = true;\n    }\n    var r, s = 0;\n    function next() {\n      while (r = env2.stack.pop()) {\n        try {\n          if (!r.async && s === 1)\n            return s = 0, env2.stack.push(r), Promise.resolve().then(next);\n          if (r.dispose) {\n            var result = r.dispose.call(r.value);\n            if (r.async)\n              return s |= 2, Promise.resolve(result).then(next, function(e) {\n                fail(e);\n                return next();\n              });\n          } else\n            s |= 1;\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (s === 1)\n        return env2.hasError ? Promise.reject(env2.error) : Promise.resolve();\n      if (env2.hasError)\n        throw env2.error;\n    }\n    return next();\n  }\n  function __rewriteRelativeImportExtension(path, preserveJsx) {\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {\n        return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : d + ext + \".\" + cm.toLowerCase() + \"js\";\n      });\n    }\n    return path;\n  }\n  var extendStatics, __assign, __createBinding, __setModuleDefault, ownKeys, _SuppressedError, tslib_es6_default;\n  var init_tslib_es6 = __esm({\n    \"../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      extendStatics = function(d, b2) {\n        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {\n          d2.__proto__ = b3;\n        } || function(d2, b3) {\n          for (var p in b3)\n            if (Object.prototype.hasOwnProperty.call(b3, p))\n              d2[p] = b3[p];\n        };\n        return extendStatics(d, b2);\n      };\n      __assign = function() {\n        __assign = Object.assign || function __assign2(t) {\n          for (var s, i = 1, n2 = arguments.length; i < n2; i++) {\n            s = arguments[i];\n            for (var p in s)\n              if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n          }\n          return t;\n        };\n        return __assign.apply(this, arguments);\n      };\n      __createBinding = Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        var desc = Object.getOwnPropertyDescriptor(m, k);\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n          desc = { enumerable: true, get: function() {\n            return m[k];\n          } };\n        }\n        Object.defineProperty(o, k2, desc);\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      };\n      __setModuleDefault = Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      };\n      ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function(o2) {\n          var ar = [];\n          for (var k in o2)\n            if (Object.prototype.hasOwnProperty.call(o2, k))\n              ar[ar.length] = k;\n          return ar;\n        };\n        return ownKeys(o);\n      };\n      _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n        var e = new Error(message);\n        return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n      };\n      tslib_es6_default = {\n        __extends,\n        __assign,\n        __rest,\n        __decorate,\n        __param,\n        __esDecorate,\n        __runInitializers,\n        __propKey,\n        __setFunctionName,\n        __metadata,\n        __awaiter,\n        __generator,\n        __createBinding,\n        __exportStar,\n        __values,\n        __read,\n        __spread,\n        __spreadArrays,\n        __spreadArray,\n        __await,\n        __asyncGenerator,\n        __asyncDelegator,\n        __asyncValues,\n        __makeTemplateObject,\n        __importStar,\n        __importDefault,\n        __classPrivateFieldGet,\n        __classPrivateFieldSet,\n        __classPrivateFieldIn,\n        __addDisposableResource,\n        __disposeResources,\n        __rewriteRelativeImportExtension\n      };\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/spending-limit-contract.js\n  var require_spending_limit_contract = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/spending-limit-contract.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getSpendingLimitContractInstance = exports3.SPENDING_LIMIT_CONTRACT_ADDRESS = void 0;\n      var ethers_1 = require_lib32();\n      var SPENDING_LIMIT_CONTRACT_ABI = [\n        \"event Spent(address indexed spender, uint256 indexed appId, uint256 amount, uint256 timestamp)\",\n        \"error EmptyAppIdsArray(address user)\",\n        \"error SpendLimitExceeded(address user, uint256 appId, uint256 amount, uint256 limit)\",\n        \"error ZeroAppIdNotAllowed(address user)\",\n        \"error ZeroDurationQuery(address user)\",\n        \"function checkLimit(address user, uint256 appId, uint256 amountToSpend, uint256 userMaxSpendLimit, uint256 duration) view returns (bool)\",\n        \"function getAppSpendHistory(address user, uint256 appId, uint256 duration) view returns ((uint256 timestamp, uint256 runningSpend)[] history)\",\n        \"function getAppsSpentInDuration(address user, uint256[] appIds, uint256 duration) view returns (uint256)\",\n        \"function getTotalSpent(address user, uint256 duration) view returns (uint256)\",\n        \"function spend(uint256 appId, uint256 amount, uint256 userMaxSpendLimit, uint256 duration)\"\n      ];\n      exports3.SPENDING_LIMIT_CONTRACT_ADDRESS = \"0x756fa449de893446b26e10c6c66e62ccabee908c\";\n      var getSpendingLimitContractInstance = () => {\n        return new ethers_1.ethers.Contract(exports3.SPENDING_LIMIT_CONTRACT_ADDRESS, SPENDING_LIMIT_CONTRACT_ABI, new ethers_1.ethers.providers.StaticJsonRpcProvider(\"https://yellowstone-rpc.litprotocol.com/\"));\n      };\n      exports3.getSpendingLimitContractInstance = getSpendingLimitContractInstance;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/sign-tx.js\n  var require_sign_tx = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/sign-tx.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.signTx = void 0;\n      var ethers_1 = require_lib32();\n      var signTx2 = async (pkpPublicKey, tx, sigName) => {\n        const publicKeyForLit = pkpPublicKey.replace(/^0x/, \"\");\n        console.log(`Signing using PKP Public Key: ${publicKeyForLit} (signTx)`);\n        const unsignedSerializedTx = ethers_1.ethers.utils.serializeTransaction(tx);\n        const txHash = ethers_1.ethers.utils.keccak256(unsignedSerializedTx);\n        console.log(\"Tx hash (signTx)\", txHash);\n        const signatureResponse = await Lit.Actions.signAndCombineEcdsa({\n          toSign: ethers_1.ethers.utils.arrayify(txHash),\n          publicKey: publicKeyForLit,\n          sigName\n        });\n        const { r, s, v } = JSON.parse(signatureResponse);\n        const ethersJoinedSignature = ethers_1.ethers.utils.joinSignature({\n          r: \"0x\" + r.substring(2),\n          s: \"0x\" + s,\n          v\n        });\n        const signedSerializedTx = ethers_1.ethers.utils.serializeTransaction(tx, ethersJoinedSignature);\n        console.log(\"Signed serialized tx (signTx)\", signedSerializedTx);\n        return signedSerializedTx;\n      };\n      exports3.signTx = signTx2;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/send-spend-tx.js\n  var require_send_spend_tx = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/send-spend-tx.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.sendSpendTx = void 0;\n      var ethers_1 = require_lib32();\n      var spending_limit_contract_1 = require_spending_limit_contract();\n      var sign_tx_1 = require_sign_tx();\n      var sendSpendTx = async ({ appId, amountSpentUsd, maxSpendingLimitInUsd, spendingLimitDuration, pkpEthAddress, pkpPubKey }) => {\n        const spendingLimitContract = (0, spending_limit_contract_1.getSpendingLimitContractInstance)();\n        const buildPartialSpendTxResponse = await Lit.Actions.runOnce({ waitForResponse: true, name: \"send spend tx gas estimation\" }, async () => {\n          console.log(`Preparing transaction to send to Spending Limit Contract: ${spending_limit_contract_1.SPENDING_LIMIT_CONTRACT_ADDRESS} (sendSpendTx)`);\n          try {\n            console.log(`Estimating gas for spending limit transaction...`);\n            const [feeData, nonce2] = await Promise.all([\n              spendingLimitContract.provider.getFeeData(),\n              spendingLimitContract.provider.getTransactionCount(pkpEthAddress)\n            ]);\n            const txData = spendingLimitContract.interface.encodeFunctionData(\"spend\", [\n              BigInt(appId),\n              BigInt(amountSpentUsd),\n              BigInt(maxSpendingLimitInUsd),\n              BigInt(spendingLimitDuration)\n            ]);\n            const estimatedGas = await spendingLimitContract.estimateGas.spend(BigInt(appId), BigInt(amountSpentUsd), BigInt(maxSpendingLimitInUsd), BigInt(spendingLimitDuration), { from: pkpEthAddress });\n            console.log(\"fetching nonce for pkpEthAddress: \", pkpEthAddress, \" (sendSpendTx)\");\n            return JSON.stringify({\n              status: \"success\",\n              data: txData,\n              gasLimit: estimatedGas.toString(),\n              maxFeePerGas: feeData.maxFeePerGas?.toString() || \"0\",\n              maxPriorityFeePerGas: feeData.maxPriorityFeePerGas?.toString() || \"0\",\n              nonce: nonce2.toString()\n            });\n          } catch (error) {\n            return attemptToDecodeSpendLimitExceededError(error, spendingLimitContract);\n          }\n        });\n        const parsedBuildPartialSpendTxResponse = JSON.parse(buildPartialSpendTxResponse);\n        if (parsedBuildPartialSpendTxResponse.status === \"error\") {\n          throw new Error(`Error estimating gas for spending limit transaction: ${parsedBuildPartialSpendTxResponse.error}`);\n        }\n        const { gasLimit, maxFeePerGas, maxPriorityFeePerGas, nonce, data } = parsedBuildPartialSpendTxResponse;\n        const unsignedSpendTx = {\n          to: spending_limit_contract_1.SPENDING_LIMIT_CONTRACT_ADDRESS,\n          data,\n          value: ethers_1.ethers.BigNumber.from(0),\n          gasLimit: ethers_1.ethers.BigNumber.from(gasLimit),\n          maxFeePerGas: ethers_1.ethers.BigNumber.from(maxFeePerGas),\n          maxPriorityFeePerGas: ethers_1.ethers.BigNumber.from(maxPriorityFeePerGas),\n          nonce: Number(nonce),\n          chainId: 175188,\n          type: 2\n          // EIP-1559 transaction type\n        };\n        console.log(`Signing spend transaction: ${safeStringify(unsignedSpendTx)} (sendSpendTx)`);\n        const signedSpendTx = await (0, sign_tx_1.signTx)(pkpPubKey, unsignedSpendTx, \"spendingLimitSig\");\n        console.log(`Broadcasting spend transaction...`);\n        const spendTxResponse = await Lit.Actions.runOnce({ waitForResponse: true, name: \"spendTxSender\" }, async () => {\n          try {\n            const txResponse = await spendingLimitContract.provider.sendTransaction(signedSpendTx);\n            return JSON.stringify({\n              status: \"success\",\n              txHash: txResponse.hash\n            });\n          } catch (error) {\n            return attemptToDecodeSpendLimitExceededError(error, spendingLimitContract);\n          }\n        });\n        console.log(`Spend transaction response: ${spendTxResponse} (sendSpendTx)`);\n        const parsedSpendTxResponse = JSON.parse(spendTxResponse);\n        if (parsedSpendTxResponse.status === \"error\") {\n          throw new Error(`Error sending spend transaction: ${parsedSpendTxResponse.error}`);\n        }\n        return parsedSpendTxResponse.txHash;\n      };\n      exports3.sendSpendTx = sendSpendTx;\n      var safeStringify = (obj) => {\n        return JSON.stringify(obj, (_, value) => {\n          if (typeof value === \"bigint\") {\n            return value.toString();\n          }\n          if (ethers_1.ethers.BigNumber.isBigNumber(value)) {\n            return value.toString();\n          }\n          return value;\n        });\n      };\n      var attemptToDecodeSpendLimitExceededError = (error, contract) => {\n        try {\n          if (error && typeof error === \"object\" && \"reason\" in error) {\n            const ethersError = error;\n            if (ethersError.data) {\n              try {\n                const decoded = contract.interface.parseError(ethersError.data);\n                if (decoded.name === \"SpendLimitExceeded\" && decoded.args) {\n                  const [user, appId, amount, limit] = decoded.args;\n                  return JSON.stringify({\n                    status: \"error\",\n                    error: `Spending limit exceeded. User: ${user}, App ID: ${appId.toString()}, Attempted spend amount: ${amount.toString()}, Daily spend limit: ${limit.toString()}`\n                  });\n                }\n              } catch (parseError) {\n              }\n            }\n            if (ethersError.reason) {\n              return JSON.stringify({\n                status: \"error\",\n                error: `Contract reverted: ${ethersError.reason}`\n              });\n            }\n          }\n          if (error && typeof error === \"object\" && \"code\" in error) {\n            const ethersError = error;\n            if (ethersError.code === \"CALL_EXCEPTION\" && ethersError.errorArgs) {\n              const [user, appId, amount, limit] = ethersError.errorArgs;\n              return JSON.stringify({\n                status: \"error\",\n                error: `Spending limit exceeded. User: ${user}, App ID: ${appId.toString()}, Attempted spend amount: ${amount.toString()}, Daily spend limit: ${limit.toString()}`\n              });\n            }\n          }\n        } catch (decodingError) {\n          return JSON.stringify({\n            status: \"error\",\n            error: `Failed to decode revert reason: ${decodingError}`\n          });\n        }\n        return JSON.stringify({\n          status: \"error\",\n          error: error?.toString() || \"Unknown error\"\n        });\n      };\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-eth-usd-price.js\n  var require_get_eth_usd_price = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-eth-usd-price.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getEthUsdPriceFromChainlink = void 0;\n      var ethers_1 = require_lib32();\n      var CHAINLINK_AGGREGATOR_ABI2 = [\n        \"function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\"\n      ];\n      var getEthUsdPriceFromChainlink2 = async ({ chainlinkPriceFeedAddress, ethRpcUrl }) => {\n        console.log(`Getting ETH price in USD from Chainlink (getEthUsdPriceFromChainlink)`, {\n          chainlinkPriceFeedAddress,\n          ethRpcUrl\n        });\n        const provider = new ethers_1.ethers.providers.StaticJsonRpcProvider(ethRpcUrl);\n        const contract = new ethers_1.ethers.Contract(chainlinkPriceFeedAddress, CHAINLINK_AGGREGATOR_ABI2, provider);\n        const [_, answer] = await contract.latestRoundData();\n        console.log(`Got ETH price in USD (getEthUsdPriceFromChainlink)`, {\n          ethPriceInUsd: ethers_1.ethers.utils.formatUnits(answer, 8)\n        });\n        return answer;\n      };\n      exports3.getEthUsdPriceFromChainlink = getEthUsdPriceFromChainlink2;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/calculate-usd-value.js\n  var require_calculate_usd_value = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/calculate-usd-value.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.calculateUsdValue = void 0;\n      var ethers_1 = require_lib32();\n      var get_eth_usd_price_1 = require_get_eth_usd_price();\n      var calculateUsdValue2 = async ({ ethRpcUrl, chainlinkPriceFeedAddress, amountInWeth }) => {\n        const ethPriceInUsd = await (0, get_eth_usd_price_1.getEthUsdPriceFromChainlink)({ ethRpcUrl, chainlinkPriceFeedAddress });\n        const CHAINLINK_DECIMALS = 8;\n        const WETH_DECIMALS = 18;\n        const amountInUsd = amountInWeth.mul(ethPriceInUsd).div(ethers_1.ethers.utils.parseUnits(\"1\", WETH_DECIMALS));\n        console.log(`Calculate token amount in USDC (calculateUsdValue)`, {\n          tokenAmountInWeth: ethers_1.ethers.utils.formatUnits(amountInWeth, WETH_DECIMALS),\n          ethPriceInUsd: ethers_1.ethers.utils.formatUnits(ethPriceInUsd, CHAINLINK_DECIMALS),\n          tokenAmountInUsd: ethers_1.ethers.utils.formatUnits(amountInUsd, CHAINLINK_DECIMALS)\n        });\n        return amountInUsd;\n      };\n      exports3.calculateUsdValue = calculateUsdValue2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/jsbi@3.2.5/node_modules/jsbi/dist/jsbi-umd.js\n  var require_jsbi_umd = __commonJS({\n    \"../../../node_modules/.pnpm/jsbi@3.2.5/node_modules/jsbi/dist/jsbi-umd.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(i, _) {\n        \"object\" == typeof exports3 && \"undefined\" != typeof module ? module.exports = _() : \"function\" == typeof define && define.amd ? define(_) : (i = i || self, i.JSBI = _());\n      })(exports3, function() {\n        \"use strict\";\n        var i = Math.imul, _ = Math.clz32, t = Math.abs, e = Math.max, g = Math.floor;\n        class o extends Array {\n          constructor(i2, _2) {\n            if (super(i2), this.sign = _2, i2 > o.__kMaxLength)\n              throw new RangeError(\"Maximum BigInt size exceeded\");\n          }\n          static BigInt(i2) {\n            var _2 = Number.isFinite;\n            if (\"number\" == typeof i2) {\n              if (0 === i2)\n                return o.__zero();\n              if (o.__isOneDigitInt(i2))\n                return 0 > i2 ? o.__oneDigit(-i2, true) : o.__oneDigit(i2, false);\n              if (!_2(i2) || g(i2) !== i2)\n                throw new RangeError(\"The number \" + i2 + \" cannot be converted to BigInt because it is not an integer\");\n              return o.__fromDouble(i2);\n            }\n            if (\"string\" == typeof i2) {\n              const _3 = o.__fromString(i2);\n              if (null === _3)\n                throw new SyntaxError(\"Cannot convert \" + i2 + \" to a BigInt\");\n              return _3;\n            }\n            if (\"boolean\" == typeof i2)\n              return true === i2 ? o.__oneDigit(1, false) : o.__zero();\n            if (\"object\" == typeof i2) {\n              if (i2.constructor === o)\n                return i2;\n              const _3 = o.__toPrimitive(i2);\n              return o.BigInt(_3);\n            }\n            throw new TypeError(\"Cannot convert \" + i2 + \" to a BigInt\");\n          }\n          toDebugString() {\n            const i2 = [\"BigInt[\"];\n            for (const _2 of this)\n              i2.push((_2 ? (_2 >>> 0).toString(16) : _2) + \", \");\n            return i2.push(\"]\"), i2.join(\"\");\n          }\n          toString(i2 = 10) {\n            if (2 > i2 || 36 < i2)\n              throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n            return 0 === this.length ? \"0\" : 0 == (i2 & i2 - 1) ? o.__toStringBasePowerOfTwo(this, i2) : o.__toStringGeneric(this, i2, false);\n          }\n          static toNumber(i2) {\n            const _2 = i2.length;\n            if (0 === _2)\n              return 0;\n            if (1 === _2) {\n              const _3 = i2.__unsignedDigit(0);\n              return i2.sign ? -_3 : _3;\n            }\n            const t2 = i2.__digit(_2 - 1), e2 = o.__clz30(t2), n2 = 30 * _2 - e2;\n            if (1024 < n2)\n              return i2.sign ? -Infinity : 1 / 0;\n            let g2 = n2 - 1, s = t2, l = _2 - 1;\n            const r = e2 + 3;\n            let a = 32 === r ? 0 : s << r;\n            a >>>= 12;\n            const u = r - 12;\n            let d = 12 <= r ? 0 : s << 20 + r, h = 20 + r;\n            for (0 < u && 0 < l && (l--, s = i2.__digit(l), a |= s >>> 30 - u, d = s << u + 2, h = u + 2); 0 < h && 0 < l; )\n              l--, s = i2.__digit(l), d |= 30 <= h ? s << h - 30 : s >>> 30 - h, h -= 30;\n            const m = o.__decideRounding(i2, h, l, s);\n            if ((1 === m || 0 === m && 1 == (1 & d)) && (d = d + 1 >>> 0, 0 === d && (a++, 0 != a >>> 20 && (a = 0, g2++, 1023 < g2))))\n              return i2.sign ? -Infinity : 1 / 0;\n            const b2 = i2.sign ? -2147483648 : 0;\n            return g2 = g2 + 1023 << 20, o.__kBitConversionInts[1] = b2 | g2 | a, o.__kBitConversionInts[0] = d, o.__kBitConversionDouble[0];\n          }\n          static unaryMinus(i2) {\n            if (0 === i2.length)\n              return i2;\n            const _2 = i2.__copy();\n            return _2.sign = !i2.sign, _2;\n          }\n          static bitwiseNot(i2) {\n            return i2.sign ? o.__absoluteSubOne(i2).__trim() : o.__absoluteAddOne(i2, true);\n          }\n          static exponentiate(i2, _2) {\n            if (_2.sign)\n              throw new RangeError(\"Exponent must be positive\");\n            if (0 === _2.length)\n              return o.__oneDigit(1, false);\n            if (0 === i2.length)\n              return i2;\n            if (1 === i2.length && 1 === i2.__digit(0))\n              return i2.sign && 0 == (1 & _2.__digit(0)) ? o.unaryMinus(i2) : i2;\n            if (1 < _2.length)\n              throw new RangeError(\"BigInt too big\");\n            let t2 = _2.__unsignedDigit(0);\n            if (1 === t2)\n              return i2;\n            if (t2 >= o.__kMaxLengthBits)\n              throw new RangeError(\"BigInt too big\");\n            if (1 === i2.length && 2 === i2.__digit(0)) {\n              const _3 = 1 + (0 | t2 / 30), e3 = i2.sign && 0 != (1 & t2), n3 = new o(_3, e3);\n              n3.__initializeDigits();\n              const g2 = 1 << t2 % 30;\n              return n3.__setDigit(_3 - 1, g2), n3;\n            }\n            let e2 = null, n2 = i2;\n            for (0 != (1 & t2) && (e2 = i2), t2 >>= 1; 0 !== t2; t2 >>= 1)\n              n2 = o.multiply(n2, n2), 0 != (1 & t2) && (null === e2 ? e2 = n2 : e2 = o.multiply(e2, n2));\n            return e2;\n          }\n          static multiply(_2, t2) {\n            if (0 === _2.length)\n              return _2;\n            if (0 === t2.length)\n              return t2;\n            let i2 = _2.length + t2.length;\n            30 <= _2.__clzmsd() + t2.__clzmsd() && i2--;\n            const e2 = new o(i2, _2.sign !== t2.sign);\n            e2.__initializeDigits();\n            for (let n2 = 0; n2 < _2.length; n2++)\n              o.__multiplyAccumulate(t2, _2.__digit(n2), e2, n2);\n            return e2.__trim();\n          }\n          static divide(i2, _2) {\n            if (0 === _2.length)\n              throw new RangeError(\"Division by zero\");\n            if (0 > o.__absoluteCompare(i2, _2))\n              return o.__zero();\n            const t2 = i2.sign !== _2.sign, e2 = _2.__unsignedDigit(0);\n            let n2;\n            if (1 === _2.length && 32767 >= e2) {\n              if (1 === e2)\n                return t2 === i2.sign ? i2 : o.unaryMinus(i2);\n              n2 = o.__absoluteDivSmall(i2, e2, null);\n            } else\n              n2 = o.__absoluteDivLarge(i2, _2, true, false);\n            return n2.sign = t2, n2.__trim();\n          }\n          static remainder(i2, _2) {\n            if (0 === _2.length)\n              throw new RangeError(\"Division by zero\");\n            if (0 > o.__absoluteCompare(i2, _2))\n              return i2;\n            const t2 = _2.__unsignedDigit(0);\n            if (1 === _2.length && 32767 >= t2) {\n              if (1 === t2)\n                return o.__zero();\n              const _3 = o.__absoluteModSmall(i2, t2);\n              return 0 === _3 ? o.__zero() : o.__oneDigit(_3, i2.sign);\n            }\n            const e2 = o.__absoluteDivLarge(i2, _2, false, true);\n            return e2.sign = i2.sign, e2.__trim();\n          }\n          static add(i2, _2) {\n            const t2 = i2.sign;\n            return t2 === _2.sign ? o.__absoluteAdd(i2, _2, t2) : 0 <= o.__absoluteCompare(i2, _2) ? o.__absoluteSub(i2, _2, t2) : o.__absoluteSub(_2, i2, !t2);\n          }\n          static subtract(i2, _2) {\n            const t2 = i2.sign;\n            return t2 === _2.sign ? 0 <= o.__absoluteCompare(i2, _2) ? o.__absoluteSub(i2, _2, t2) : o.__absoluteSub(_2, i2, !t2) : o.__absoluteAdd(i2, _2, t2);\n          }\n          static leftShift(i2, _2) {\n            return 0 === _2.length || 0 === i2.length ? i2 : _2.sign ? o.__rightShiftByAbsolute(i2, _2) : o.__leftShiftByAbsolute(i2, _2);\n          }\n          static signedRightShift(i2, _2) {\n            return 0 === _2.length || 0 === i2.length ? i2 : _2.sign ? o.__leftShiftByAbsolute(i2, _2) : o.__rightShiftByAbsolute(i2, _2);\n          }\n          static unsignedRightShift() {\n            throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n          }\n          static lessThan(i2, _2) {\n            return 0 > o.__compareToBigInt(i2, _2);\n          }\n          static lessThanOrEqual(i2, _2) {\n            return 0 >= o.__compareToBigInt(i2, _2);\n          }\n          static greaterThan(i2, _2) {\n            return 0 < o.__compareToBigInt(i2, _2);\n          }\n          static greaterThanOrEqual(i2, _2) {\n            return 0 <= o.__compareToBigInt(i2, _2);\n          }\n          static equal(_2, t2) {\n            if (_2.sign !== t2.sign)\n              return false;\n            if (_2.length !== t2.length)\n              return false;\n            for (let e2 = 0; e2 < _2.length; e2++)\n              if (_2.__digit(e2) !== t2.__digit(e2))\n                return false;\n            return true;\n          }\n          static notEqual(i2, _2) {\n            return !o.equal(i2, _2);\n          }\n          static bitwiseAnd(i2, _2) {\n            if (!i2.sign && !_2.sign)\n              return o.__absoluteAnd(i2, _2).__trim();\n            if (i2.sign && _2.sign) {\n              const t2 = e(i2.length, _2.length) + 1;\n              let n2 = o.__absoluteSubOne(i2, t2);\n              const g2 = o.__absoluteSubOne(_2);\n              return n2 = o.__absoluteOr(n2, g2, n2), o.__absoluteAddOne(n2, true, n2).__trim();\n            }\n            return i2.sign && ([i2, _2] = [_2, i2]), o.__absoluteAndNot(i2, o.__absoluteSubOne(_2)).__trim();\n          }\n          static bitwiseXor(i2, _2) {\n            if (!i2.sign && !_2.sign)\n              return o.__absoluteXor(i2, _2).__trim();\n            if (i2.sign && _2.sign) {\n              const t3 = e(i2.length, _2.length), n3 = o.__absoluteSubOne(i2, t3), g2 = o.__absoluteSubOne(_2);\n              return o.__absoluteXor(n3, g2, n3).__trim();\n            }\n            const t2 = e(i2.length, _2.length) + 1;\n            i2.sign && ([i2, _2] = [_2, i2]);\n            let n2 = o.__absoluteSubOne(_2, t2);\n            return n2 = o.__absoluteXor(n2, i2, n2), o.__absoluteAddOne(n2, true, n2).__trim();\n          }\n          static bitwiseOr(i2, _2) {\n            const t2 = e(i2.length, _2.length);\n            if (!i2.sign && !_2.sign)\n              return o.__absoluteOr(i2, _2).__trim();\n            if (i2.sign && _2.sign) {\n              let e2 = o.__absoluteSubOne(i2, t2);\n              const n3 = o.__absoluteSubOne(_2);\n              return e2 = o.__absoluteAnd(e2, n3, e2), o.__absoluteAddOne(e2, true, e2).__trim();\n            }\n            i2.sign && ([i2, _2] = [_2, i2]);\n            let n2 = o.__absoluteSubOne(_2, t2);\n            return n2 = o.__absoluteAndNot(n2, i2, n2), o.__absoluteAddOne(n2, true, n2).__trim();\n          }\n          static asIntN(_2, t2) {\n            if (0 === t2.length)\n              return t2;\n            if (_2 = g(_2), 0 > _2)\n              throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n            if (0 === _2)\n              return o.__zero();\n            if (_2 >= o.__kMaxLengthBits)\n              return t2;\n            const e2 = 0 | (_2 + 29) / 30;\n            if (t2.length < e2)\n              return t2;\n            const s = t2.__unsignedDigit(e2 - 1), l = 1 << (_2 - 1) % 30;\n            if (t2.length === e2 && s < l)\n              return t2;\n            if (!((s & l) === l))\n              return o.__truncateToNBits(_2, t2);\n            if (!t2.sign)\n              return o.__truncateAndSubFromPowerOfTwo(_2, t2, true);\n            if (0 == (s & l - 1)) {\n              for (let n2 = e2 - 2; 0 <= n2; n2--)\n                if (0 !== t2.__digit(n2))\n                  return o.__truncateAndSubFromPowerOfTwo(_2, t2, false);\n              return t2.length === e2 && s === l ? t2 : o.__truncateToNBits(_2, t2);\n            }\n            return o.__truncateAndSubFromPowerOfTwo(_2, t2, false);\n          }\n          static asUintN(i2, _2) {\n            if (0 === _2.length)\n              return _2;\n            if (i2 = g(i2), 0 > i2)\n              throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n            if (0 === i2)\n              return o.__zero();\n            if (_2.sign) {\n              if (i2 > o.__kMaxLengthBits)\n                throw new RangeError(\"BigInt too big\");\n              return o.__truncateAndSubFromPowerOfTwo(i2, _2, false);\n            }\n            if (i2 >= o.__kMaxLengthBits)\n              return _2;\n            const t2 = 0 | (i2 + 29) / 30;\n            if (_2.length < t2)\n              return _2;\n            const e2 = i2 % 30;\n            if (_2.length == t2) {\n              if (0 === e2)\n                return _2;\n              const i3 = _2.__digit(t2 - 1);\n              if (0 == i3 >>> e2)\n                return _2;\n            }\n            return o.__truncateToNBits(i2, _2);\n          }\n          static ADD(i2, _2) {\n            if (i2 = o.__toPrimitive(i2), _2 = o.__toPrimitive(_2), \"string\" == typeof i2)\n              return \"string\" != typeof _2 && (_2 = _2.toString()), i2 + _2;\n            if (\"string\" == typeof _2)\n              return i2.toString() + _2;\n            if (i2 = o.__toNumeric(i2), _2 = o.__toNumeric(_2), o.__isBigInt(i2) && o.__isBigInt(_2))\n              return o.add(i2, _2);\n            if (\"number\" == typeof i2 && \"number\" == typeof _2)\n              return i2 + _2;\n            throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n          }\n          static LT(i2, _2) {\n            return o.__compare(i2, _2, 0);\n          }\n          static LE(i2, _2) {\n            return o.__compare(i2, _2, 1);\n          }\n          static GT(i2, _2) {\n            return o.__compare(i2, _2, 2);\n          }\n          static GE(i2, _2) {\n            return o.__compare(i2, _2, 3);\n          }\n          static EQ(i2, _2) {\n            for (; ; ) {\n              if (o.__isBigInt(i2))\n                return o.__isBigInt(_2) ? o.equal(i2, _2) : o.EQ(_2, i2);\n              if (\"number\" == typeof i2) {\n                if (o.__isBigInt(_2))\n                  return o.__equalToNumber(_2, i2);\n                if (\"object\" != typeof _2)\n                  return i2 == _2;\n                _2 = o.__toPrimitive(_2);\n              } else if (\"string\" == typeof i2) {\n                if (o.__isBigInt(_2))\n                  return i2 = o.__fromString(i2), null !== i2 && o.equal(i2, _2);\n                if (\"object\" != typeof _2)\n                  return i2 == _2;\n                _2 = o.__toPrimitive(_2);\n              } else if (\"boolean\" == typeof i2) {\n                if (o.__isBigInt(_2))\n                  return o.__equalToNumber(_2, +i2);\n                if (\"object\" != typeof _2)\n                  return i2 == _2;\n                _2 = o.__toPrimitive(_2);\n              } else if (\"symbol\" == typeof i2) {\n                if (o.__isBigInt(_2))\n                  return false;\n                if (\"object\" != typeof _2)\n                  return i2 == _2;\n                _2 = o.__toPrimitive(_2);\n              } else if (\"object\" == typeof i2) {\n                if (\"object\" == typeof _2 && _2.constructor !== o)\n                  return i2 == _2;\n                i2 = o.__toPrimitive(i2);\n              } else\n                return i2 == _2;\n            }\n          }\n          static NE(i2, _2) {\n            return !o.EQ(i2, _2);\n          }\n          static __zero() {\n            return new o(0, false);\n          }\n          static __oneDigit(i2, _2) {\n            const t2 = new o(1, _2);\n            return t2.__setDigit(0, i2), t2;\n          }\n          __copy() {\n            const _2 = new o(this.length, this.sign);\n            for (let t2 = 0; t2 < this.length; t2++)\n              _2[t2] = this[t2];\n            return _2;\n          }\n          __trim() {\n            let i2 = this.length, _2 = this[i2 - 1];\n            for (; 0 === _2; )\n              i2--, _2 = this[i2 - 1], this.pop();\n            return 0 === i2 && (this.sign = false), this;\n          }\n          __initializeDigits() {\n            for (let _2 = 0; _2 < this.length; _2++)\n              this[_2] = 0;\n          }\n          static __decideRounding(i2, _2, t2, e2) {\n            if (0 < _2)\n              return -1;\n            let n2;\n            if (0 > _2)\n              n2 = -_2 - 1;\n            else {\n              if (0 === t2)\n                return -1;\n              t2--, e2 = i2.__digit(t2), n2 = 29;\n            }\n            let g2 = 1 << n2;\n            if (0 == (e2 & g2))\n              return -1;\n            if (g2 -= 1, 0 != (e2 & g2))\n              return 1;\n            for (; 0 < t2; )\n              if (t2--, 0 !== i2.__digit(t2))\n                return 1;\n            return 0;\n          }\n          static __fromDouble(i2) {\n            o.__kBitConversionDouble[0] = i2;\n            const _2 = 2047 & o.__kBitConversionInts[1] >>> 20, t2 = _2 - 1023, e2 = (0 | t2 / 30) + 1, n2 = new o(e2, 0 > i2);\n            let g2 = 1048575 & o.__kBitConversionInts[1] | 1048576, s = o.__kBitConversionInts[0];\n            const l = 20, r = t2 % 30;\n            let a, u = 0;\n            if (20 > r) {\n              const i3 = l - r;\n              u = i3 + 32, a = g2 >>> i3, g2 = g2 << 32 - i3 | s >>> i3, s <<= 32 - i3;\n            } else if (20 === r)\n              u = 32, a = g2, g2 = s, s = 0;\n            else {\n              const i3 = r - l;\n              u = 32 - i3, a = g2 << i3 | s >>> 32 - i3, g2 = s << i3, s = 0;\n            }\n            n2.__setDigit(e2 - 1, a);\n            for (let _3 = e2 - 2; 0 <= _3; _3--)\n              0 < u ? (u -= 30, a = g2 >>> 2, g2 = g2 << 30 | s >>> 2, s <<= 30) : a = 0, n2.__setDigit(_3, a);\n            return n2.__trim();\n          }\n          static __isWhitespace(i2) {\n            return !!(13 >= i2 && 9 <= i2) || (159 >= i2 ? 32 == i2 : 131071 >= i2 ? 160 == i2 || 5760 == i2 : 196607 >= i2 ? (i2 &= 131071, 10 >= i2 || 40 == i2 || 41 == i2 || 47 == i2 || 95 == i2 || 4096 == i2) : 65279 == i2);\n          }\n          static __fromString(i2, _2 = 0) {\n            let t2 = 0;\n            const e2 = i2.length;\n            let n2 = 0;\n            if (n2 === e2)\n              return o.__zero();\n            let g2 = i2.charCodeAt(n2);\n            for (; o.__isWhitespace(g2); ) {\n              if (++n2 === e2)\n                return o.__zero();\n              g2 = i2.charCodeAt(n2);\n            }\n            if (43 === g2) {\n              if (++n2 === e2)\n                return null;\n              g2 = i2.charCodeAt(n2), t2 = 1;\n            } else if (45 === g2) {\n              if (++n2 === e2)\n                return null;\n              g2 = i2.charCodeAt(n2), t2 = -1;\n            }\n            if (0 === _2) {\n              if (_2 = 10, 48 === g2) {\n                if (++n2 === e2)\n                  return o.__zero();\n                if (g2 = i2.charCodeAt(n2), 88 === g2 || 120 === g2) {\n                  if (_2 = 16, ++n2 === e2)\n                    return null;\n                  g2 = i2.charCodeAt(n2);\n                } else if (79 === g2 || 111 === g2) {\n                  if (_2 = 8, ++n2 === e2)\n                    return null;\n                  g2 = i2.charCodeAt(n2);\n                } else if (66 === g2 || 98 === g2) {\n                  if (_2 = 2, ++n2 === e2)\n                    return null;\n                  g2 = i2.charCodeAt(n2);\n                }\n              }\n            } else if (16 === _2 && 48 === g2) {\n              if (++n2 === e2)\n                return o.__zero();\n              if (g2 = i2.charCodeAt(n2), 88 === g2 || 120 === g2) {\n                if (++n2 === e2)\n                  return null;\n                g2 = i2.charCodeAt(n2);\n              }\n            }\n            if (0 != t2 && 10 !== _2)\n              return null;\n            for (; 48 === g2; ) {\n              if (++n2 === e2)\n                return o.__zero();\n              g2 = i2.charCodeAt(n2);\n            }\n            const s = e2 - n2;\n            let l = o.__kMaxBitsPerChar[_2], r = o.__kBitsPerCharTableMultiplier - 1;\n            if (s > 1073741824 / l)\n              return null;\n            const a = l * s + r >>> o.__kBitsPerCharTableShift, u = new o(0 | (a + 29) / 30, false), h = 10 > _2 ? _2 : 10, b2 = 10 < _2 ? _2 - 10 : 0;\n            if (0 == (_2 & _2 - 1)) {\n              l >>= o.__kBitsPerCharTableShift;\n              const _3 = [], t3 = [];\n              let s2 = false;\n              do {\n                let o2 = 0, r2 = 0;\n                for (; ; ) {\n                  let _4;\n                  if (g2 - 48 >>> 0 < h)\n                    _4 = g2 - 48;\n                  else if ((32 | g2) - 97 >>> 0 < b2)\n                    _4 = (32 | g2) - 87;\n                  else {\n                    s2 = true;\n                    break;\n                  }\n                  if (r2 += l, o2 = o2 << l | _4, ++n2 === e2) {\n                    s2 = true;\n                    break;\n                  }\n                  if (g2 = i2.charCodeAt(n2), 30 < r2 + l)\n                    break;\n                }\n                _3.push(o2), t3.push(r2);\n              } while (!s2);\n              o.__fillFromParts(u, _3, t3);\n            } else {\n              u.__initializeDigits();\n              let t3 = false, s2 = 0;\n              do {\n                let a2 = 0, D = 1;\n                for (; ; ) {\n                  let o2;\n                  if (g2 - 48 >>> 0 < h)\n                    o2 = g2 - 48;\n                  else if ((32 | g2) - 97 >>> 0 < b2)\n                    o2 = (32 | g2) - 87;\n                  else {\n                    t3 = true;\n                    break;\n                  }\n                  const l2 = D * _2;\n                  if (1073741823 < l2)\n                    break;\n                  if (D = l2, a2 = a2 * _2 + o2, s2++, ++n2 === e2) {\n                    t3 = true;\n                    break;\n                  }\n                  g2 = i2.charCodeAt(n2);\n                }\n                r = 30 * o.__kBitsPerCharTableMultiplier - 1;\n                const c = 0 | (l * s2 + r >>> o.__kBitsPerCharTableShift) / 30;\n                u.__inplaceMultiplyAdd(D, a2, c);\n              } while (!t3);\n            }\n            if (n2 !== e2) {\n              if (!o.__isWhitespace(g2))\n                return null;\n              for (n2++; n2 < e2; n2++)\n                if (g2 = i2.charCodeAt(n2), !o.__isWhitespace(g2))\n                  return null;\n            }\n            return u.sign = -1 == t2, u.__trim();\n          }\n          static __fillFromParts(_2, t2, e2) {\n            let n2 = 0, g2 = 0, o2 = 0;\n            for (let s = t2.length - 1; 0 <= s; s--) {\n              const i2 = t2[s], l = e2[s];\n              g2 |= i2 << o2, o2 += l, 30 === o2 ? (_2.__setDigit(n2++, g2), o2 = 0, g2 = 0) : 30 < o2 && (_2.__setDigit(n2++, 1073741823 & g2), o2 -= 30, g2 = i2 >>> l - o2);\n            }\n            if (0 !== g2) {\n              if (n2 >= _2.length)\n                throw new Error(\"implementation bug\");\n              _2.__setDigit(n2++, g2);\n            }\n            for (; n2 < _2.length; n2++)\n              _2.__setDigit(n2, 0);\n          }\n          static __toStringBasePowerOfTwo(_2, i2) {\n            const t2 = _2.length;\n            let e2 = i2 - 1;\n            e2 = (85 & e2 >>> 1) + (85 & e2), e2 = (51 & e2 >>> 2) + (51 & e2), e2 = (15 & e2 >>> 4) + (15 & e2);\n            const n2 = e2, g2 = i2 - 1, s = _2.__digit(t2 - 1), l = o.__clz30(s);\n            let r = 0 | (30 * t2 - l + n2 - 1) / n2;\n            if (_2.sign && r++, 268435456 < r)\n              throw new Error(\"string too long\");\n            const a = Array(r);\n            let u = r - 1, d = 0, h = 0;\n            for (let e3 = 0; e3 < t2 - 1; e3++) {\n              const i3 = _2.__digit(e3), t3 = (d | i3 << h) & g2;\n              a[u--] = o.__kConversionChars[t3];\n              const s2 = n2 - h;\n              for (d = i3 >>> s2, h = 30 - s2; h >= n2; )\n                a[u--] = o.__kConversionChars[d & g2], d >>>= n2, h -= n2;\n            }\n            const m = (d | s << h) & g2;\n            for (a[u--] = o.__kConversionChars[m], d = s >>> n2 - h; 0 !== d; )\n              a[u--] = o.__kConversionChars[d & g2], d >>>= n2;\n            if (_2.sign && (a[u--] = \"-\"), -1 != u)\n              throw new Error(\"implementation bug\");\n            return a.join(\"\");\n          }\n          static __toStringGeneric(_2, i2, t2) {\n            const e2 = _2.length;\n            if (0 === e2)\n              return \"\";\n            if (1 === e2) {\n              let e3 = _2.__unsignedDigit(0).toString(i2);\n              return false === t2 && _2.sign && (e3 = \"-\" + e3), e3;\n            }\n            const n2 = 30 * e2 - o.__clz30(_2.__digit(e2 - 1)), g2 = o.__kMaxBitsPerChar[i2], s = g2 - 1;\n            let l = n2 * o.__kBitsPerCharTableMultiplier;\n            l += s - 1, l = 0 | l / s;\n            const r = l + 1 >> 1, a = o.exponentiate(o.__oneDigit(i2, false), o.__oneDigit(r, false));\n            let u, d;\n            const h = a.__unsignedDigit(0);\n            if (1 === a.length && 32767 >= h) {\n              u = new o(_2.length, false), u.__initializeDigits();\n              let t3 = 0;\n              for (let e3 = 2 * _2.length - 1; 0 <= e3; e3--) {\n                const i3 = t3 << 15 | _2.__halfDigit(e3);\n                u.__setHalfDigit(e3, 0 | i3 / h), t3 = 0 | i3 % h;\n              }\n              d = t3.toString(i2);\n            } else {\n              const t3 = o.__absoluteDivLarge(_2, a, true, true);\n              u = t3.quotient;\n              const e3 = t3.remainder.__trim();\n              d = o.__toStringGeneric(e3, i2, true);\n            }\n            u.__trim();\n            let m = o.__toStringGeneric(u, i2, true);\n            for (; d.length < r; )\n              d = \"0\" + d;\n            return false === t2 && _2.sign && (m = \"-\" + m), m + d;\n          }\n          static __unequalSign(i2) {\n            return i2 ? -1 : 1;\n          }\n          static __absoluteGreater(i2) {\n            return i2 ? -1 : 1;\n          }\n          static __absoluteLess(i2) {\n            return i2 ? 1 : -1;\n          }\n          static __compareToBigInt(i2, _2) {\n            const t2 = i2.sign;\n            if (t2 !== _2.sign)\n              return o.__unequalSign(t2);\n            const e2 = o.__absoluteCompare(i2, _2);\n            return 0 < e2 ? o.__absoluteGreater(t2) : 0 > e2 ? o.__absoluteLess(t2) : 0;\n          }\n          static __compareToNumber(i2, _2) {\n            if (o.__isOneDigitInt(_2)) {\n              const e2 = i2.sign, n2 = 0 > _2;\n              if (e2 !== n2)\n                return o.__unequalSign(e2);\n              if (0 === i2.length) {\n                if (n2)\n                  throw new Error(\"implementation bug\");\n                return 0 === _2 ? 0 : -1;\n              }\n              if (1 < i2.length)\n                return o.__absoluteGreater(e2);\n              const g2 = t(_2), s = i2.__unsignedDigit(0);\n              return s > g2 ? o.__absoluteGreater(e2) : s < g2 ? o.__absoluteLess(e2) : 0;\n            }\n            return o.__compareToDouble(i2, _2);\n          }\n          static __compareToDouble(i2, _2) {\n            if (_2 !== _2)\n              return _2;\n            if (_2 === 1 / 0)\n              return -1;\n            if (_2 === -Infinity)\n              return 1;\n            const t2 = i2.sign;\n            if (t2 !== 0 > _2)\n              return o.__unequalSign(t2);\n            if (0 === _2)\n              throw new Error(\"implementation bug: should be handled elsewhere\");\n            if (0 === i2.length)\n              return -1;\n            o.__kBitConversionDouble[0] = _2;\n            const e2 = 2047 & o.__kBitConversionInts[1] >>> 20;\n            if (2047 == e2)\n              throw new Error(\"implementation bug: handled elsewhere\");\n            const n2 = e2 - 1023;\n            if (0 > n2)\n              return o.__absoluteGreater(t2);\n            const g2 = i2.length;\n            let s = i2.__digit(g2 - 1);\n            const l = o.__clz30(s), r = 30 * g2 - l, a = n2 + 1;\n            if (r < a)\n              return o.__absoluteLess(t2);\n            if (r > a)\n              return o.__absoluteGreater(t2);\n            let u = 1048576 | 1048575 & o.__kBitConversionInts[1], d = o.__kBitConversionInts[0];\n            const h = 20, m = 29 - l;\n            if (m !== (0 | (r - 1) % 30))\n              throw new Error(\"implementation bug\");\n            let b2, D = 0;\n            if (20 > m) {\n              const i3 = h - m;\n              D = i3 + 32, b2 = u >>> i3, u = u << 32 - i3 | d >>> i3, d <<= 32 - i3;\n            } else if (20 === m)\n              D = 32, b2 = u, u = d, d = 0;\n            else {\n              const i3 = m - h;\n              D = 32 - i3, b2 = u << i3 | d >>> 32 - i3, u = d << i3, d = 0;\n            }\n            if (s >>>= 0, b2 >>>= 0, s > b2)\n              return o.__absoluteGreater(t2);\n            if (s < b2)\n              return o.__absoluteLess(t2);\n            for (let e3 = g2 - 2; 0 <= e3; e3--) {\n              0 < D ? (D -= 30, b2 = u >>> 2, u = u << 30 | d >>> 2, d <<= 30) : b2 = 0;\n              const _3 = i2.__unsignedDigit(e3);\n              if (_3 > b2)\n                return o.__absoluteGreater(t2);\n              if (_3 < b2)\n                return o.__absoluteLess(t2);\n            }\n            if (0 !== u || 0 !== d) {\n              if (0 === D)\n                throw new Error(\"implementation bug\");\n              return o.__absoluteLess(t2);\n            }\n            return 0;\n          }\n          static __equalToNumber(i2, _2) {\n            return o.__isOneDigitInt(_2) ? 0 === _2 ? 0 === i2.length : 1 === i2.length && i2.sign === 0 > _2 && i2.__unsignedDigit(0) === t(_2) : 0 === o.__compareToDouble(i2, _2);\n          }\n          static __comparisonResultToBool(i2, _2) {\n            return 0 === _2 ? 0 > i2 : 1 === _2 ? 0 >= i2 : 2 === _2 ? 0 < i2 : 3 === _2 ? 0 <= i2 : void 0;\n          }\n          static __compare(i2, _2, t2) {\n            if (i2 = o.__toPrimitive(i2), _2 = o.__toPrimitive(_2), \"string\" == typeof i2 && \"string\" == typeof _2)\n              switch (t2) {\n                case 0:\n                  return i2 < _2;\n                case 1:\n                  return i2 <= _2;\n                case 2:\n                  return i2 > _2;\n                case 3:\n                  return i2 >= _2;\n              }\n            if (o.__isBigInt(i2) && \"string\" == typeof _2)\n              return _2 = o.__fromString(_2), null !== _2 && o.__comparisonResultToBool(o.__compareToBigInt(i2, _2), t2);\n            if (\"string\" == typeof i2 && o.__isBigInt(_2))\n              return i2 = o.__fromString(i2), null !== i2 && o.__comparisonResultToBool(o.__compareToBigInt(i2, _2), t2);\n            if (i2 = o.__toNumeric(i2), _2 = o.__toNumeric(_2), o.__isBigInt(i2)) {\n              if (o.__isBigInt(_2))\n                return o.__comparisonResultToBool(o.__compareToBigInt(i2, _2), t2);\n              if (\"number\" != typeof _2)\n                throw new Error(\"implementation bug\");\n              return o.__comparisonResultToBool(o.__compareToNumber(i2, _2), t2);\n            }\n            if (\"number\" != typeof i2)\n              throw new Error(\"implementation bug\");\n            if (o.__isBigInt(_2))\n              return o.__comparisonResultToBool(o.__compareToNumber(_2, i2), 2 ^ t2);\n            if (\"number\" != typeof _2)\n              throw new Error(\"implementation bug\");\n            return 0 === t2 ? i2 < _2 : 1 === t2 ? i2 <= _2 : 2 === t2 ? i2 > _2 : 3 === t2 ? i2 >= _2 : void 0;\n          }\n          __clzmsd() {\n            return o.__clz30(this.__digit(this.length - 1));\n          }\n          static __absoluteAdd(_2, t2, e2) {\n            if (_2.length < t2.length)\n              return o.__absoluteAdd(t2, _2, e2);\n            if (0 === _2.length)\n              return _2;\n            if (0 === t2.length)\n              return _2.sign === e2 ? _2 : o.unaryMinus(_2);\n            let n2 = _2.length;\n            (0 === _2.__clzmsd() || t2.length === _2.length && 0 === t2.__clzmsd()) && n2++;\n            const g2 = new o(n2, e2);\n            let s = 0, l = 0;\n            for (; l < t2.length; l++) {\n              const i2 = _2.__digit(l) + t2.__digit(l) + s;\n              s = i2 >>> 30, g2.__setDigit(l, 1073741823 & i2);\n            }\n            for (; l < _2.length; l++) {\n              const i2 = _2.__digit(l) + s;\n              s = i2 >>> 30, g2.__setDigit(l, 1073741823 & i2);\n            }\n            return l < g2.length && g2.__setDigit(l, s), g2.__trim();\n          }\n          static __absoluteSub(_2, t2, e2) {\n            if (0 === _2.length)\n              return _2;\n            if (0 === t2.length)\n              return _2.sign === e2 ? _2 : o.unaryMinus(_2);\n            const n2 = new o(_2.length, e2);\n            let g2 = 0, s = 0;\n            for (; s < t2.length; s++) {\n              const i2 = _2.__digit(s) - t2.__digit(s) - g2;\n              g2 = 1 & i2 >>> 30, n2.__setDigit(s, 1073741823 & i2);\n            }\n            for (; s < _2.length; s++) {\n              const i2 = _2.__digit(s) - g2;\n              g2 = 1 & i2 >>> 30, n2.__setDigit(s, 1073741823 & i2);\n            }\n            return n2.__trim();\n          }\n          static __absoluteAddOne(_2, i2, t2 = null) {\n            const e2 = _2.length;\n            null === t2 ? t2 = new o(e2, i2) : t2.sign = i2;\n            let n2 = 1;\n            for (let g2 = 0; g2 < e2; g2++) {\n              const i3 = _2.__digit(g2) + n2;\n              n2 = i3 >>> 30, t2.__setDigit(g2, 1073741823 & i3);\n            }\n            return 0 != n2 && t2.__setDigitGrow(e2, 1), t2;\n          }\n          static __absoluteSubOne(_2, t2) {\n            const e2 = _2.length;\n            t2 = t2 || e2;\n            const n2 = new o(t2, false);\n            let g2 = 1;\n            for (let o2 = 0; o2 < e2; o2++) {\n              const i2 = _2.__digit(o2) - g2;\n              g2 = 1 & i2 >>> 30, n2.__setDigit(o2, 1073741823 & i2);\n            }\n            if (0 != g2)\n              throw new Error(\"implementation bug\");\n            for (let g3 = e2; g3 < t2; g3++)\n              n2.__setDigit(g3, 0);\n            return n2;\n          }\n          static __absoluteAnd(_2, t2, e2 = null) {\n            let n2 = _2.length, g2 = t2.length, s = g2;\n            if (n2 < g2) {\n              s = n2;\n              const i2 = _2, e3 = n2;\n              _2 = t2, n2 = g2, t2 = i2, g2 = e3;\n            }\n            let l = s;\n            null === e2 ? e2 = new o(l, false) : l = e2.length;\n            let r = 0;\n            for (; r < s; r++)\n              e2.__setDigit(r, _2.__digit(r) & t2.__digit(r));\n            for (; r < l; r++)\n              e2.__setDigit(r, 0);\n            return e2;\n          }\n          static __absoluteAndNot(_2, t2, e2 = null) {\n            const n2 = _2.length, g2 = t2.length;\n            let s = g2;\n            n2 < g2 && (s = n2);\n            let l = n2;\n            null === e2 ? e2 = new o(l, false) : l = e2.length;\n            let r = 0;\n            for (; r < s; r++)\n              e2.__setDigit(r, _2.__digit(r) & ~t2.__digit(r));\n            for (; r < n2; r++)\n              e2.__setDigit(r, _2.__digit(r));\n            for (; r < l; r++)\n              e2.__setDigit(r, 0);\n            return e2;\n          }\n          static __absoluteOr(_2, t2, e2 = null) {\n            let n2 = _2.length, g2 = t2.length, s = g2;\n            if (n2 < g2) {\n              s = n2;\n              const i2 = _2, e3 = n2;\n              _2 = t2, n2 = g2, t2 = i2, g2 = e3;\n            }\n            let l = n2;\n            null === e2 ? e2 = new o(l, false) : l = e2.length;\n            let r = 0;\n            for (; r < s; r++)\n              e2.__setDigit(r, _2.__digit(r) | t2.__digit(r));\n            for (; r < n2; r++)\n              e2.__setDigit(r, _2.__digit(r));\n            for (; r < l; r++)\n              e2.__setDigit(r, 0);\n            return e2;\n          }\n          static __absoluteXor(_2, t2, e2 = null) {\n            let n2 = _2.length, g2 = t2.length, s = g2;\n            if (n2 < g2) {\n              s = n2;\n              const i2 = _2, e3 = n2;\n              _2 = t2, n2 = g2, t2 = i2, g2 = e3;\n            }\n            let l = n2;\n            null === e2 ? e2 = new o(l, false) : l = e2.length;\n            let r = 0;\n            for (; r < s; r++)\n              e2.__setDigit(r, _2.__digit(r) ^ t2.__digit(r));\n            for (; r < n2; r++)\n              e2.__setDigit(r, _2.__digit(r));\n            for (; r < l; r++)\n              e2.__setDigit(r, 0);\n            return e2;\n          }\n          static __absoluteCompare(_2, t2) {\n            const e2 = _2.length - t2.length;\n            if (0 != e2)\n              return e2;\n            let n2 = _2.length - 1;\n            for (; 0 <= n2 && _2.__digit(n2) === t2.__digit(n2); )\n              n2--;\n            return 0 > n2 ? 0 : _2.__unsignedDigit(n2) > t2.__unsignedDigit(n2) ? 1 : -1;\n          }\n          static __multiplyAccumulate(_2, t2, e2, n2) {\n            if (0 === t2)\n              return;\n            const g2 = 32767 & t2, s = t2 >>> 15;\n            let l = 0, r = 0;\n            for (let a, u = 0; u < _2.length; u++, n2++) {\n              a = e2.__digit(n2);\n              const i2 = _2.__digit(u), t3 = 32767 & i2, d = i2 >>> 15, h = o.__imul(t3, g2), m = o.__imul(t3, s), b2 = o.__imul(d, g2), D = o.__imul(d, s);\n              a += r + h + l, l = a >>> 30, a &= 1073741823, a += ((32767 & m) << 15) + ((32767 & b2) << 15), l += a >>> 30, r = D + (m >>> 15) + (b2 >>> 15), e2.__setDigit(n2, 1073741823 & a);\n            }\n            for (; 0 != l || 0 !== r; n2++) {\n              let i2 = e2.__digit(n2);\n              i2 += l + r, r = 0, l = i2 >>> 30, e2.__setDigit(n2, 1073741823 & i2);\n            }\n          }\n          static __internalMultiplyAdd(_2, t2, e2, g2, s) {\n            let l = e2, a = 0;\n            for (let n2 = 0; n2 < g2; n2++) {\n              const i2 = _2.__digit(n2), e3 = o.__imul(32767 & i2, t2), g3 = o.__imul(i2 >>> 15, t2), u = e3 + ((32767 & g3) << 15) + a + l;\n              l = u >>> 30, a = g3 >>> 15, s.__setDigit(n2, 1073741823 & u);\n            }\n            if (s.length > g2)\n              for (s.__setDigit(g2++, l + a); g2 < s.length; )\n                s.__setDigit(g2++, 0);\n            else if (0 !== l + a)\n              throw new Error(\"implementation bug\");\n          }\n          __inplaceMultiplyAdd(i2, _2, t2) {\n            t2 > this.length && (t2 = this.length);\n            const e2 = 32767 & i2, n2 = i2 >>> 15;\n            let g2 = 0, s = _2;\n            for (let l = 0; l < t2; l++) {\n              const i3 = this.__digit(l), _3 = 32767 & i3, t3 = i3 >>> 15, r = o.__imul(_3, e2), a = o.__imul(_3, n2), u = o.__imul(t3, e2), d = o.__imul(t3, n2);\n              let h = s + r + g2;\n              g2 = h >>> 30, h &= 1073741823, h += ((32767 & a) << 15) + ((32767 & u) << 15), g2 += h >>> 30, s = d + (a >>> 15) + (u >>> 15), this.__setDigit(l, 1073741823 & h);\n            }\n            if (0 != g2 || 0 !== s)\n              throw new Error(\"implementation bug\");\n          }\n          static __absoluteDivSmall(_2, t2, e2 = null) {\n            null === e2 && (e2 = new o(_2.length, false));\n            let n2 = 0;\n            for (let g2, o2 = 2 * _2.length - 1; 0 <= o2; o2 -= 2) {\n              g2 = (n2 << 15 | _2.__halfDigit(o2)) >>> 0;\n              const i2 = 0 | g2 / t2;\n              n2 = 0 | g2 % t2, g2 = (n2 << 15 | _2.__halfDigit(o2 - 1)) >>> 0;\n              const s = 0 | g2 / t2;\n              n2 = 0 | g2 % t2, e2.__setDigit(o2 >>> 1, i2 << 15 | s);\n            }\n            return e2;\n          }\n          static __absoluteModSmall(_2, t2) {\n            let e2 = 0;\n            for (let n2 = 2 * _2.length - 1; 0 <= n2; n2--) {\n              const i2 = (e2 << 15 | _2.__halfDigit(n2)) >>> 0;\n              e2 = 0 | i2 % t2;\n            }\n            return e2;\n          }\n          static __absoluteDivLarge(i2, _2, t2, e2) {\n            const g2 = _2.__halfDigitLength(), n2 = _2.length, s = i2.__halfDigitLength() - g2;\n            let l = null;\n            t2 && (l = new o(s + 2 >>> 1, false), l.__initializeDigits());\n            const r = new o(g2 + 2 >>> 1, false);\n            r.__initializeDigits();\n            const a = o.__clz15(_2.__halfDigit(g2 - 1));\n            0 < a && (_2 = o.__specialLeftShift(_2, a, 0));\n            const d = o.__specialLeftShift(i2, a, 1), u = _2.__halfDigit(g2 - 1);\n            let h = 0;\n            for (let a2, m = s; 0 <= m; m--) {\n              a2 = 32767;\n              const i3 = d.__halfDigit(m + g2);\n              if (i3 !== u) {\n                const t3 = (i3 << 15 | d.__halfDigit(m + g2 - 1)) >>> 0;\n                a2 = 0 | t3 / u;\n                let e4 = 0 | t3 % u;\n                const n3 = _2.__halfDigit(g2 - 2), s2 = d.__halfDigit(m + g2 - 2);\n                for (; o.__imul(a2, n3) >>> 0 > (e4 << 16 | s2) >>> 0 && (a2--, e4 += u, !(32767 < e4)); )\n                  ;\n              }\n              o.__internalMultiplyAdd(_2, a2, 0, n2, r);\n              let e3 = d.__inplaceSub(r, m, g2 + 1);\n              0 !== e3 && (e3 = d.__inplaceAdd(_2, m, g2), d.__setHalfDigit(m + g2, 32767 & d.__halfDigit(m + g2) + e3), a2--), t2 && (1 & m ? h = a2 << 15 : l.__setDigit(m >>> 1, h | a2));\n            }\n            if (e2)\n              return d.__inplaceRightShift(a), t2 ? { quotient: l, remainder: d } : d;\n            if (t2)\n              return l;\n            throw new Error(\"unreachable\");\n          }\n          static __clz15(i2) {\n            return o.__clz30(i2) - 15;\n          }\n          __inplaceAdd(_2, t2, e2) {\n            let n2 = 0;\n            for (let g2 = 0; g2 < e2; g2++) {\n              const i2 = this.__halfDigit(t2 + g2) + _2.__halfDigit(g2) + n2;\n              n2 = i2 >>> 15, this.__setHalfDigit(t2 + g2, 32767 & i2);\n            }\n            return n2;\n          }\n          __inplaceSub(_2, t2, e2) {\n            let n2 = 0;\n            if (1 & t2) {\n              t2 >>= 1;\n              let g2 = this.__digit(t2), o2 = 32767 & g2, s = 0;\n              for (; s < e2 - 1 >>> 1; s++) {\n                const i3 = _2.__digit(s), e3 = (g2 >>> 15) - (32767 & i3) - n2;\n                n2 = 1 & e3 >>> 15, this.__setDigit(t2 + s, (32767 & e3) << 15 | 32767 & o2), g2 = this.__digit(t2 + s + 1), o2 = (32767 & g2) - (i3 >>> 15) - n2, n2 = 1 & o2 >>> 15;\n              }\n              const i2 = _2.__digit(s), l = (g2 >>> 15) - (32767 & i2) - n2;\n              n2 = 1 & l >>> 15, this.__setDigit(t2 + s, (32767 & l) << 15 | 32767 & o2);\n              if (t2 + s + 1 >= this.length)\n                throw new RangeError(\"out of bounds\");\n              0 == (1 & e2) && (g2 = this.__digit(t2 + s + 1), o2 = (32767 & g2) - (i2 >>> 15) - n2, n2 = 1 & o2 >>> 15, this.__setDigit(t2 + _2.length, 1073709056 & g2 | 32767 & o2));\n            } else {\n              t2 >>= 1;\n              let g2 = 0;\n              for (; g2 < _2.length - 1; g2++) {\n                const i3 = this.__digit(t2 + g2), e3 = _2.__digit(g2), o3 = (32767 & i3) - (32767 & e3) - n2;\n                n2 = 1 & o3 >>> 15;\n                const s2 = (i3 >>> 15) - (e3 >>> 15) - n2;\n                n2 = 1 & s2 >>> 15, this.__setDigit(t2 + g2, (32767 & s2) << 15 | 32767 & o3);\n              }\n              const i2 = this.__digit(t2 + g2), o2 = _2.__digit(g2), s = (32767 & i2) - (32767 & o2) - n2;\n              n2 = 1 & s >>> 15;\n              let l = 0;\n              0 == (1 & e2) && (l = (i2 >>> 15) - (o2 >>> 15) - n2, n2 = 1 & l >>> 15), this.__setDigit(t2 + g2, (32767 & l) << 15 | 32767 & s);\n            }\n            return n2;\n          }\n          __inplaceRightShift(_2) {\n            if (0 === _2)\n              return;\n            let t2 = this.__digit(0) >>> _2;\n            const e2 = this.length - 1;\n            for (let n2 = 0; n2 < e2; n2++) {\n              const i2 = this.__digit(n2 + 1);\n              this.__setDigit(n2, 1073741823 & i2 << 30 - _2 | t2), t2 = i2 >>> _2;\n            }\n            this.__setDigit(e2, t2);\n          }\n          static __specialLeftShift(_2, t2, e2) {\n            const g2 = _2.length, n2 = new o(g2 + e2, false);\n            if (0 === t2) {\n              for (let t3 = 0; t3 < g2; t3++)\n                n2.__setDigit(t3, _2.__digit(t3));\n              return 0 < e2 && n2.__setDigit(g2, 0), n2;\n            }\n            let s = 0;\n            for (let o2 = 0; o2 < g2; o2++) {\n              const i2 = _2.__digit(o2);\n              n2.__setDigit(o2, 1073741823 & i2 << t2 | s), s = i2 >>> 30 - t2;\n            }\n            return 0 < e2 && n2.__setDigit(g2, s), n2;\n          }\n          static __leftShiftByAbsolute(_2, i2) {\n            const t2 = o.__toShiftAmount(i2);\n            if (0 > t2)\n              throw new RangeError(\"BigInt too big\");\n            const e2 = 0 | t2 / 30, n2 = t2 % 30, g2 = _2.length, s = 0 !== n2 && 0 != _2.__digit(g2 - 1) >>> 30 - n2, l = g2 + e2 + (s ? 1 : 0), r = new o(l, _2.sign);\n            if (0 === n2) {\n              let t3 = 0;\n              for (; t3 < e2; t3++)\n                r.__setDigit(t3, 0);\n              for (; t3 < l; t3++)\n                r.__setDigit(t3, _2.__digit(t3 - e2));\n            } else {\n              let t3 = 0;\n              for (let _3 = 0; _3 < e2; _3++)\n                r.__setDigit(_3, 0);\n              for (let o2 = 0; o2 < g2; o2++) {\n                const i3 = _2.__digit(o2);\n                r.__setDigit(o2 + e2, 1073741823 & i3 << n2 | t3), t3 = i3 >>> 30 - n2;\n              }\n              if (s)\n                r.__setDigit(g2 + e2, t3);\n              else if (0 !== t3)\n                throw new Error(\"implementation bug\");\n            }\n            return r.__trim();\n          }\n          static __rightShiftByAbsolute(_2, i2) {\n            const t2 = _2.length, e2 = _2.sign, n2 = o.__toShiftAmount(i2);\n            if (0 > n2)\n              return o.__rightShiftByMaximum(e2);\n            const g2 = 0 | n2 / 30, s = n2 % 30;\n            let l = t2 - g2;\n            if (0 >= l)\n              return o.__rightShiftByMaximum(e2);\n            let r = false;\n            if (e2) {\n              if (0 != (_2.__digit(g2) & (1 << s) - 1))\n                r = true;\n              else\n                for (let t3 = 0; t3 < g2; t3++)\n                  if (0 !== _2.__digit(t3)) {\n                    r = true;\n                    break;\n                  }\n            }\n            if (r && 0 === s) {\n              const i3 = _2.__digit(t2 - 1);\n              0 == ~i3 && l++;\n            }\n            let a = new o(l, e2);\n            if (0 === s) {\n              a.__setDigit(l - 1, 0);\n              for (let e3 = g2; e3 < t2; e3++)\n                a.__setDigit(e3 - g2, _2.__digit(e3));\n            } else {\n              let e3 = _2.__digit(g2) >>> s;\n              const n3 = t2 - g2 - 1;\n              for (let t3 = 0; t3 < n3; t3++) {\n                const i3 = _2.__digit(t3 + g2 + 1);\n                a.__setDigit(t3, 1073741823 & i3 << 30 - s | e3), e3 = i3 >>> s;\n              }\n              a.__setDigit(n3, e3);\n            }\n            return r && (a = o.__absoluteAddOne(a, true, a)), a.__trim();\n          }\n          static __rightShiftByMaximum(i2) {\n            return i2 ? o.__oneDigit(1, true) : o.__zero();\n          }\n          static __toShiftAmount(i2) {\n            if (1 < i2.length)\n              return -1;\n            const _2 = i2.__unsignedDigit(0);\n            return _2 > o.__kMaxLengthBits ? -1 : _2;\n          }\n          static __toPrimitive(i2, _2 = \"default\") {\n            if (\"object\" != typeof i2)\n              return i2;\n            if (i2.constructor === o)\n              return i2;\n            if (\"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol.toPrimitive) {\n              const t3 = i2[Symbol.toPrimitive];\n              if (t3) {\n                const i3 = t3(_2);\n                if (\"object\" != typeof i3)\n                  return i3;\n                throw new TypeError(\"Cannot convert object to primitive value\");\n              }\n            }\n            const t2 = i2.valueOf;\n            if (t2) {\n              const _3 = t2.call(i2);\n              if (\"object\" != typeof _3)\n                return _3;\n            }\n            const e2 = i2.toString;\n            if (e2) {\n              const _3 = e2.call(i2);\n              if (\"object\" != typeof _3)\n                return _3;\n            }\n            throw new TypeError(\"Cannot convert object to primitive value\");\n          }\n          static __toNumeric(i2) {\n            return o.__isBigInt(i2) ? i2 : +i2;\n          }\n          static __isBigInt(i2) {\n            return \"object\" == typeof i2 && null !== i2 && i2.constructor === o;\n          }\n          static __truncateToNBits(i2, _2) {\n            const t2 = 0 | (i2 + 29) / 30, e2 = new o(t2, _2.sign), n2 = t2 - 1;\n            for (let t3 = 0; t3 < n2; t3++)\n              e2.__setDigit(t3, _2.__digit(t3));\n            let g2 = _2.__digit(n2);\n            if (0 != i2 % 30) {\n              const _3 = 32 - i2 % 30;\n              g2 = g2 << _3 >>> _3;\n            }\n            return e2.__setDigit(n2, g2), e2.__trim();\n          }\n          static __truncateAndSubFromPowerOfTwo(_2, t2, e2) {\n            var n2 = Math.min;\n            const g2 = 0 | (_2 + 29) / 30, s = new o(g2, e2);\n            let l = 0;\n            const r = g2 - 1;\n            let a = 0;\n            for (const i2 = n2(r, t2.length); l < i2; l++) {\n              const i3 = 0 - t2.__digit(l) - a;\n              a = 1 & i3 >>> 30, s.__setDigit(l, 1073741823 & i3);\n            }\n            for (; l < r; l++)\n              s.__setDigit(l, 0 | 1073741823 & -a);\n            let u = r < t2.length ? t2.__digit(r) : 0;\n            const d = _2 % 30;\n            let h;\n            if (0 == d)\n              h = 0 - u - a, h &= 1073741823;\n            else {\n              const i2 = 32 - d;\n              u = u << i2 >>> i2;\n              const _3 = 1 << 32 - i2;\n              h = _3 - u - a, h &= _3 - 1;\n            }\n            return s.__setDigit(r, h), s.__trim();\n          }\n          __digit(_2) {\n            return this[_2];\n          }\n          __unsignedDigit(_2) {\n            return this[_2] >>> 0;\n          }\n          __setDigit(_2, i2) {\n            this[_2] = 0 | i2;\n          }\n          __setDigitGrow(_2, i2) {\n            this[_2] = 0 | i2;\n          }\n          __halfDigitLength() {\n            const i2 = this.length;\n            return 32767 >= this.__unsignedDigit(i2 - 1) ? 2 * i2 - 1 : 2 * i2;\n          }\n          __halfDigit(_2) {\n            return 32767 & this[_2 >>> 1] >>> 15 * (1 & _2);\n          }\n          __setHalfDigit(_2, i2) {\n            const t2 = _2 >>> 1, e2 = this.__digit(t2), n2 = 1 & _2 ? 32767 & e2 | i2 << 15 : 1073709056 & e2 | 32767 & i2;\n            this.__setDigit(t2, n2);\n          }\n          static __digitPow(i2, _2) {\n            let t2 = 1;\n            for (; 0 < _2; )\n              1 & _2 && (t2 *= i2), _2 >>>= 1, i2 *= i2;\n            return t2;\n          }\n          static __isOneDigitInt(i2) {\n            return (1073741823 & i2) === i2;\n          }\n        }\n        return o.__kMaxLength = 33554432, o.__kMaxLengthBits = o.__kMaxLength << 5, o.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], o.__kBitsPerCharTableShift = 5, o.__kBitsPerCharTableMultiplier = 1 << o.__kBitsPerCharTableShift, o.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], o.__kBitConversionBuffer = new ArrayBuffer(8), o.__kBitConversionDouble = new Float64Array(o.__kBitConversionBuffer), o.__kBitConversionInts = new Int32Array(o.__kBitConversionBuffer), o.__clz30 = _ ? function(i2) {\n          return _(i2) - 2;\n        } : function(i2) {\n          var _2 = Math.LN2, t2 = Math.log;\n          return 0 === i2 ? 30 : 0 | 29 - (0 | t2(i2 >>> 0) / _2);\n        }, o.__imul = i || function(i2, _2) {\n          return 0 | i2 * _2;\n        }, o;\n      });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\n  var require_tiny_invariant_cjs = __commonJS({\n    \"../../../node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var isProduction = false;\n      var prefix = \"Invariant failed\";\n      function invariant(condition, message) {\n        if (condition) {\n          return;\n        }\n        if (isProduction) {\n          throw new Error(prefix);\n        }\n        var provided = typeof message === \"function\" ? message() : message;\n        var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n        throw new Error(value);\n      }\n      module.exports = invariant;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.js\n  var require_decimal = __commonJS({\n    \"../../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(globalScope) {\n        \"use strict\";\n        var MAX_DIGITS = 1e9, Decimal = {\n          // These values must be integers within the stated ranges (inclusive).\n          // Most of these values can be changed during run-time using `Decimal.config`.\n          // The maximum number of significant digits of the result of a calculation or base conversion.\n          // E.g. `Decimal.config({ precision: 20 });`\n          precision: 20,\n          // 1 to MAX_DIGITS\n          // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\n          // `toFixed`, `toPrecision` and `toSignificantDigits`.\n          //\n          // ROUND_UP         0 Away from zero.\n          // ROUND_DOWN       1 Towards zero.\n          // ROUND_CEIL       2 Towards +Infinity.\n          // ROUND_FLOOR      3 Towards -Infinity.\n          // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n          // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n          // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n          // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n          // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n          //\n          // E.g.\n          // `Decimal.rounding = 4;`\n          // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\n          rounding: 4,\n          // 0 to 8\n          // The exponent value at and beneath which `toString` returns exponential notation.\n          // JavaScript numbers: -7\n          toExpNeg: -7,\n          // 0 to -MAX_E\n          // The exponent value at and above which `toString` returns exponential notation.\n          // JavaScript numbers: 21\n          toExpPos: 21,\n          // 0 to MAX_E\n          // The natural logarithm of 10.\n          // 115 digits\n          LN10: \"2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286\"\n        }, external = true, decimalError = \"[DecimalError] \", invalidArgument = decimalError + \"Invalid argument: \", exponentOutOfRange = decimalError + \"Exponent out of range: \", mathfloor = Math.floor, mathpow = Math.pow, isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i, ONE, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE), P = {};\n        P.absoluteValue = P.abs = function() {\n          var x = new this.constructor(this);\n          if (x.s)\n            x.s = 1;\n          return x;\n        };\n        P.comparedTo = P.cmp = function(y) {\n          var i, j, xdL, ydL, x = this;\n          y = new x.constructor(y);\n          if (x.s !== y.s)\n            return x.s || -y.s;\n          if (x.e !== y.e)\n            return x.e > y.e ^ x.s < 0 ? 1 : -1;\n          xdL = x.d.length;\n          ydL = y.d.length;\n          for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n            if (x.d[i] !== y.d[i])\n              return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\n          }\n          return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\n        };\n        P.decimalPlaces = P.dp = function() {\n          var x = this, w = x.d.length - 1, dp = (w - x.e) * LOG_BASE;\n          w = x.d[w];\n          if (w)\n            for (; w % 10 == 0; w /= 10)\n              dp--;\n          return dp < 0 ? 0 : dp;\n        };\n        P.dividedBy = P.div = function(y) {\n          return divide(this, new this.constructor(y));\n        };\n        P.dividedToIntegerBy = P.idiv = function(y) {\n          var x = this, Ctor = x.constructor;\n          return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\n        };\n        P.equals = P.eq = function(y) {\n          return !this.cmp(y);\n        };\n        P.exponent = function() {\n          return getBase10Exponent(this);\n        };\n        P.greaterThan = P.gt = function(y) {\n          return this.cmp(y) > 0;\n        };\n        P.greaterThanOrEqualTo = P.gte = function(y) {\n          return this.cmp(y) >= 0;\n        };\n        P.isInteger = P.isint = function() {\n          return this.e > this.d.length - 2;\n        };\n        P.isNegative = P.isneg = function() {\n          return this.s < 0;\n        };\n        P.isPositive = P.ispos = function() {\n          return this.s > 0;\n        };\n        P.isZero = function() {\n          return this.s === 0;\n        };\n        P.lessThan = P.lt = function(y) {\n          return this.cmp(y) < 0;\n        };\n        P.lessThanOrEqualTo = P.lte = function(y) {\n          return this.cmp(y) < 1;\n        };\n        P.logarithm = P.log = function(base) {\n          var r, x = this, Ctor = x.constructor, pr = Ctor.precision, wpr = pr + 5;\n          if (base === void 0) {\n            base = new Ctor(10);\n          } else {\n            base = new Ctor(base);\n            if (base.s < 1 || base.eq(ONE))\n              throw Error(decimalError + \"NaN\");\n          }\n          if (x.s < 1)\n            throw Error(decimalError + (x.s ? \"NaN\" : \"-Infinity\"));\n          if (x.eq(ONE))\n            return new Ctor(0);\n          external = false;\n          r = divide(ln(x, wpr), ln(base, wpr), wpr);\n          external = true;\n          return round(r, pr);\n        };\n        P.minus = P.sub = function(y) {\n          var x = this;\n          y = new x.constructor(y);\n          return x.s == y.s ? subtract(x, y) : add2(x, (y.s = -y.s, y));\n        };\n        P.modulo = P.mod = function(y) {\n          var q, x = this, Ctor = x.constructor, pr = Ctor.precision;\n          y = new Ctor(y);\n          if (!y.s)\n            throw Error(decimalError + \"NaN\");\n          if (!x.s)\n            return round(new Ctor(x), pr);\n          external = false;\n          q = divide(x, y, 0, 1).times(y);\n          external = true;\n          return x.minus(q);\n        };\n        P.naturalExponential = P.exp = function() {\n          return exp(this);\n        };\n        P.naturalLogarithm = P.ln = function() {\n          return ln(this);\n        };\n        P.negated = P.neg = function() {\n          var x = new this.constructor(this);\n          x.s = -x.s || 0;\n          return x;\n        };\n        P.plus = P.add = function(y) {\n          var x = this;\n          y = new x.constructor(y);\n          return x.s == y.s ? add2(x, y) : subtract(x, (y.s = -y.s, y));\n        };\n        P.precision = P.sd = function(z) {\n          var e, sd, w, x = this;\n          if (z !== void 0 && z !== !!z && z !== 1 && z !== 0)\n            throw Error(invalidArgument + z);\n          e = getBase10Exponent(x) + 1;\n          w = x.d.length - 1;\n          sd = w * LOG_BASE + 1;\n          w = x.d[w];\n          if (w) {\n            for (; w % 10 == 0; w /= 10)\n              sd--;\n            for (w = x.d[0]; w >= 10; w /= 10)\n              sd++;\n          }\n          return z && e > sd ? e : sd;\n        };\n        P.squareRoot = P.sqrt = function() {\n          var e, n2, pr, r, s, t, wpr, x = this, Ctor = x.constructor;\n          if (x.s < 1) {\n            if (!x.s)\n              return new Ctor(0);\n            throw Error(decimalError + \"NaN\");\n          }\n          e = getBase10Exponent(x);\n          external = false;\n          s = Math.sqrt(+x);\n          if (s == 0 || s == 1 / 0) {\n            n2 = digitsToString(x.d);\n            if ((n2.length + e) % 2 == 0)\n              n2 += \"0\";\n            s = Math.sqrt(n2);\n            e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n            if (s == 1 / 0) {\n              n2 = \"5e\" + e;\n            } else {\n              n2 = s.toExponential();\n              n2 = n2.slice(0, n2.indexOf(\"e\") + 1) + e;\n            }\n            r = new Ctor(n2);\n          } else {\n            r = new Ctor(s.toString());\n          }\n          pr = Ctor.precision;\n          s = wpr = pr + 3;\n          for (; ; ) {\n            t = r;\n            r = t.plus(divide(x, t, wpr + 2)).times(0.5);\n            if (digitsToString(t.d).slice(0, wpr) === (n2 = digitsToString(r.d)).slice(0, wpr)) {\n              n2 = n2.slice(wpr - 3, wpr + 1);\n              if (s == wpr && n2 == \"4999\") {\n                round(t, pr + 1, 0);\n                if (t.times(t).eq(x)) {\n                  r = t;\n                  break;\n                }\n              } else if (n2 != \"9999\") {\n                break;\n              }\n              wpr += 4;\n            }\n          }\n          external = true;\n          return round(r, pr);\n        };\n        P.times = P.mul = function(y) {\n          var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;\n          if (!x.s || !y.s)\n            return new Ctor(0);\n          y.s *= x.s;\n          e = x.e + y.e;\n          xdL = xd.length;\n          ydL = yd.length;\n          if (xdL < ydL) {\n            r = xd;\n            xd = yd;\n            yd = r;\n            rL = xdL;\n            xdL = ydL;\n            ydL = rL;\n          }\n          r = [];\n          rL = xdL + ydL;\n          for (i = rL; i--; )\n            r.push(0);\n          for (i = ydL; --i >= 0; ) {\n            carry = 0;\n            for (k = xdL + i; k > i; ) {\n              t = r[k] + yd[i] * xd[k - i - 1] + carry;\n              r[k--] = t % BASE | 0;\n              carry = t / BASE | 0;\n            }\n            r[k] = (r[k] + carry) % BASE | 0;\n          }\n          for (; !r[--rL]; )\n            r.pop();\n          if (carry)\n            ++e;\n          else\n            r.shift();\n          y.d = r;\n          y.e = e;\n          return external ? round(y, Ctor.precision) : y;\n        };\n        P.toDecimalPlaces = P.todp = function(dp, rm) {\n          var x = this, Ctor = x.constructor;\n          x = new Ctor(x);\n          if (dp === void 0)\n            return x;\n          checkInt32(dp, 0, MAX_DIGITS);\n          if (rm === void 0)\n            rm = Ctor.rounding;\n          else\n            checkInt32(rm, 0, 8);\n          return round(x, dp + getBase10Exponent(x) + 1, rm);\n        };\n        P.toExponential = function(dp, rm) {\n          var str, x = this, Ctor = x.constructor;\n          if (dp === void 0) {\n            str = toString(x, true);\n          } else {\n            checkInt32(dp, 0, MAX_DIGITS);\n            if (rm === void 0)\n              rm = Ctor.rounding;\n            else\n              checkInt32(rm, 0, 8);\n            x = round(new Ctor(x), dp + 1, rm);\n            str = toString(x, true, dp + 1);\n          }\n          return str;\n        };\n        P.toFixed = function(dp, rm) {\n          var str, y, x = this, Ctor = x.constructor;\n          if (dp === void 0)\n            return toString(x);\n          checkInt32(dp, 0, MAX_DIGITS);\n          if (rm === void 0)\n            rm = Ctor.rounding;\n          else\n            checkInt32(rm, 0, 8);\n          y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\n          str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\n          return x.isneg() && !x.isZero() ? \"-\" + str : str;\n        };\n        P.toInteger = P.toint = function() {\n          var x = this, Ctor = x.constructor;\n          return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\n        };\n        P.toNumber = function() {\n          return +this;\n        };\n        P.toPower = P.pow = function(y) {\n          var e, k, pr, r, sign, yIsInt, x = this, Ctor = x.constructor, guard = 12, yn = +(y = new Ctor(y));\n          if (!y.s)\n            return new Ctor(ONE);\n          x = new Ctor(x);\n          if (!x.s) {\n            if (y.s < 1)\n              throw Error(decimalError + \"Infinity\");\n            return x;\n          }\n          if (x.eq(ONE))\n            return x;\n          pr = Ctor.precision;\n          if (y.eq(ONE))\n            return round(x, pr);\n          e = y.e;\n          k = y.d.length - 1;\n          yIsInt = e >= k;\n          sign = x.s;\n          if (!yIsInt) {\n            if (sign < 0)\n              throw Error(decimalError + \"NaN\");\n          } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n            r = new Ctor(ONE);\n            e = Math.ceil(pr / LOG_BASE + 4);\n            external = false;\n            for (; ; ) {\n              if (k % 2) {\n                r = r.times(x);\n                truncate(r.d, e);\n              }\n              k = mathfloor(k / 2);\n              if (k === 0)\n                break;\n              x = x.times(x);\n              truncate(x.d, e);\n            }\n            external = true;\n            return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\n          }\n          sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\n          x.s = 1;\n          external = false;\n          r = y.times(ln(x, pr + guard));\n          external = true;\n          r = exp(r);\n          r.s = sign;\n          return r;\n        };\n        P.toPrecision = function(sd, rm) {\n          var e, str, x = this, Ctor = x.constructor;\n          if (sd === void 0) {\n            e = getBase10Exponent(x);\n            str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\n          } else {\n            checkInt32(sd, 1, MAX_DIGITS);\n            if (rm === void 0)\n              rm = Ctor.rounding;\n            else\n              checkInt32(rm, 0, 8);\n            x = round(new Ctor(x), sd, rm);\n            e = getBase10Exponent(x);\n            str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\n          }\n          return str;\n        };\n        P.toSignificantDigits = P.tosd = function(sd, rm) {\n          var x = this, Ctor = x.constructor;\n          if (sd === void 0) {\n            sd = Ctor.precision;\n            rm = Ctor.rounding;\n          } else {\n            checkInt32(sd, 1, MAX_DIGITS);\n            if (rm === void 0)\n              rm = Ctor.rounding;\n            else\n              checkInt32(rm, 0, 8);\n          }\n          return round(new Ctor(x), sd, rm);\n        };\n        P.toString = P.valueOf = P.val = P.toJSON = function() {\n          var x = this, e = getBase10Exponent(x), Ctor = x.constructor;\n          return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\n        };\n        function add2(x, y) {\n          var carry, d, e, i, k, len, xd, yd, Ctor = x.constructor, pr = Ctor.precision;\n          if (!x.s || !y.s) {\n            if (!y.s)\n              y = new Ctor(x);\n            return external ? round(y, pr) : y;\n          }\n          xd = x.d;\n          yd = y.d;\n          k = x.e;\n          e = y.e;\n          xd = xd.slice();\n          i = k - e;\n          if (i) {\n            if (i < 0) {\n              d = xd;\n              i = -i;\n              len = yd.length;\n            } else {\n              d = yd;\n              e = k;\n              len = xd.length;\n            }\n            k = Math.ceil(pr / LOG_BASE);\n            len = k > len ? k + 1 : len + 1;\n            if (i > len) {\n              i = len;\n              d.length = 1;\n            }\n            d.reverse();\n            for (; i--; )\n              d.push(0);\n            d.reverse();\n          }\n          len = xd.length;\n          i = yd.length;\n          if (len - i < 0) {\n            i = len;\n            d = yd;\n            yd = xd;\n            xd = d;\n          }\n          for (carry = 0; i; ) {\n            carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n            xd[i] %= BASE;\n          }\n          if (carry) {\n            xd.unshift(carry);\n            ++e;\n          }\n          for (len = xd.length; xd[--len] == 0; )\n            xd.pop();\n          y.d = xd;\n          y.e = e;\n          return external ? round(y, pr) : y;\n        }\n        function checkInt32(i, min, max) {\n          if (i !== ~~i || i < min || i > max) {\n            throw Error(invalidArgument + i);\n          }\n        }\n        function digitsToString(d) {\n          var i, k, ws, indexOfLastWord = d.length - 1, str = \"\", w = d[0];\n          if (indexOfLastWord > 0) {\n            str += w;\n            for (i = 1; i < indexOfLastWord; i++) {\n              ws = d[i] + \"\";\n              k = LOG_BASE - ws.length;\n              if (k)\n                str += getZeroString(k);\n              str += ws;\n            }\n            w = d[i];\n            ws = w + \"\";\n            k = LOG_BASE - ws.length;\n            if (k)\n              str += getZeroString(k);\n          } else if (w === 0) {\n            return \"0\";\n          }\n          for (; w % 10 === 0; )\n            w /= 10;\n          return str + w;\n        }\n        var divide = /* @__PURE__ */ function() {\n          function multiplyInteger(x, k) {\n            var temp, carry = 0, i = x.length;\n            for (x = x.slice(); i--; ) {\n              temp = x[i] * k + carry;\n              x[i] = temp % BASE | 0;\n              carry = temp / BASE | 0;\n            }\n            if (carry)\n              x.unshift(carry);\n            return x;\n          }\n          function compare(a, b2, aL, bL) {\n            var i, r;\n            if (aL != bL) {\n              r = aL > bL ? 1 : -1;\n            } else {\n              for (i = r = 0; i < aL; i++) {\n                if (a[i] != b2[i]) {\n                  r = a[i] > b2[i] ? 1 : -1;\n                  break;\n                }\n              }\n            }\n            return r;\n          }\n          function subtract2(a, b2, aL) {\n            var i = 0;\n            for (; aL--; ) {\n              a[aL] -= i;\n              i = a[aL] < b2[aL] ? 1 : 0;\n              a[aL] = i * BASE + a[aL] - b2[aL];\n            }\n            for (; !a[0] && a.length > 1; )\n              a.shift();\n          }\n          return function(x, y, pr, dp) {\n            var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;\n            if (!x.s)\n              return new Ctor(x);\n            if (!y.s)\n              throw Error(decimalError + \"Division by zero\");\n            e = x.e - y.e;\n            yL = yd.length;\n            xL = xd.length;\n            q = new Ctor(sign);\n            qd = q.d = [];\n            for (i = 0; yd[i] == (xd[i] || 0); )\n              ++i;\n            if (yd[i] > (xd[i] || 0))\n              --e;\n            if (pr == null) {\n              sd = pr = Ctor.precision;\n            } else if (dp) {\n              sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\n            } else {\n              sd = pr;\n            }\n            if (sd < 0)\n              return new Ctor(0);\n            sd = sd / LOG_BASE + 2 | 0;\n            i = 0;\n            if (yL == 1) {\n              k = 0;\n              yd = yd[0];\n              sd++;\n              for (; (i < xL || k) && sd--; i++) {\n                t = k * BASE + (xd[i] || 0);\n                qd[i] = t / yd | 0;\n                k = t % yd | 0;\n              }\n            } else {\n              k = BASE / (yd[0] + 1) | 0;\n              if (k > 1) {\n                yd = multiplyInteger(yd, k);\n                xd = multiplyInteger(xd, k);\n                yL = yd.length;\n                xL = xd.length;\n              }\n              xi = yL;\n              rem = xd.slice(0, yL);\n              remL = rem.length;\n              for (; remL < yL; )\n                rem[remL++] = 0;\n              yz = yd.slice();\n              yz.unshift(0);\n              yd0 = yd[0];\n              if (yd[1] >= BASE / 2)\n                ++yd0;\n              do {\n                k = 0;\n                cmp = compare(yd, rem, yL, remL);\n                if (cmp < 0) {\n                  rem0 = rem[0];\n                  if (yL != remL)\n                    rem0 = rem0 * BASE + (rem[1] || 0);\n                  k = rem0 / yd0 | 0;\n                  if (k > 1) {\n                    if (k >= BASE)\n                      k = BASE - 1;\n                    prod = multiplyInteger(yd, k);\n                    prodL = prod.length;\n                    remL = rem.length;\n                    cmp = compare(prod, rem, prodL, remL);\n                    if (cmp == 1) {\n                      k--;\n                      subtract2(prod, yL < prodL ? yz : yd, prodL);\n                    }\n                  } else {\n                    if (k == 0)\n                      cmp = k = 1;\n                    prod = yd.slice();\n                  }\n                  prodL = prod.length;\n                  if (prodL < remL)\n                    prod.unshift(0);\n                  subtract2(rem, prod, remL);\n                  if (cmp == -1) {\n                    remL = rem.length;\n                    cmp = compare(yd, rem, yL, remL);\n                    if (cmp < 1) {\n                      k++;\n                      subtract2(rem, yL < remL ? yz : yd, remL);\n                    }\n                  }\n                  remL = rem.length;\n                } else if (cmp === 0) {\n                  k++;\n                  rem = [0];\n                }\n                qd[i++] = k;\n                if (cmp && rem[0]) {\n                  rem[remL++] = xd[xi] || 0;\n                } else {\n                  rem = [xd[xi]];\n                  remL = 1;\n                }\n              } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n            }\n            if (!qd[0])\n              qd.shift();\n            q.e = e;\n            return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\n          };\n        }();\n        function exp(x, sd) {\n          var denominator, guard, pow3, sum, t, wpr, i = 0, k = 0, Ctor = x.constructor, pr = Ctor.precision;\n          if (getBase10Exponent(x) > 16)\n            throw Error(exponentOutOfRange + getBase10Exponent(x));\n          if (!x.s)\n            return new Ctor(ONE);\n          if (sd == null) {\n            external = false;\n            wpr = pr;\n          } else {\n            wpr = sd;\n          }\n          t = new Ctor(0.03125);\n          while (x.abs().gte(0.1)) {\n            x = x.times(t);\n            k += 5;\n          }\n          guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n          wpr += guard;\n          denominator = pow3 = sum = new Ctor(ONE);\n          Ctor.precision = wpr;\n          for (; ; ) {\n            pow3 = round(pow3.times(x), wpr);\n            denominator = denominator.times(++i);\n            t = sum.plus(divide(pow3, denominator, wpr));\n            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n              while (k--)\n                sum = round(sum.times(sum), wpr);\n              Ctor.precision = pr;\n              return sd == null ? (external = true, round(sum, pr)) : sum;\n            }\n            sum = t;\n          }\n        }\n        function getBase10Exponent(x) {\n          var e = x.e * LOG_BASE, w = x.d[0];\n          for (; w >= 10; w /= 10)\n            e++;\n          return e;\n        }\n        function getLn10(Ctor, sd, pr) {\n          if (sd > Ctor.LN10.sd()) {\n            external = true;\n            if (pr)\n              Ctor.precision = pr;\n            throw Error(decimalError + \"LN10 precision limit exceeded\");\n          }\n          return round(new Ctor(Ctor.LN10), sd);\n        }\n        function getZeroString(k) {\n          var zs = \"\";\n          for (; k--; )\n            zs += \"0\";\n          return zs;\n        }\n        function ln(y, sd) {\n          var c, c0, denominator, e, numerator, sum, t, wpr, x2, n2 = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, pr = Ctor.precision;\n          if (x.s < 1)\n            throw Error(decimalError + (x.s ? \"NaN\" : \"-Infinity\"));\n          if (x.eq(ONE))\n            return new Ctor(0);\n          if (sd == null) {\n            external = false;\n            wpr = pr;\n          } else {\n            wpr = sd;\n          }\n          if (x.eq(10)) {\n            if (sd == null)\n              external = true;\n            return getLn10(Ctor, wpr);\n          }\n          wpr += guard;\n          Ctor.precision = wpr;\n          c = digitsToString(xd);\n          c0 = c.charAt(0);\n          e = getBase10Exponent(x);\n          if (Math.abs(e) < 15e14) {\n            while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n              x = x.times(y);\n              c = digitsToString(x.d);\n              c0 = c.charAt(0);\n              n2++;\n            }\n            e = getBase10Exponent(x);\n            if (c0 > 1) {\n              x = new Ctor(\"0.\" + c);\n              e++;\n            } else {\n              x = new Ctor(c0 + \".\" + c.slice(1));\n            }\n          } else {\n            t = getLn10(Ctor, wpr + 2, pr).times(e + \"\");\n            x = ln(new Ctor(c0 + \".\" + c.slice(1)), wpr - guard).plus(t);\n            Ctor.precision = pr;\n            return sd == null ? (external = true, round(x, pr)) : x;\n          }\n          sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\n          x2 = round(x.times(x), wpr);\n          denominator = 3;\n          for (; ; ) {\n            numerator = round(numerator.times(x2), wpr);\n            t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\n            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n              sum = sum.times(2);\n              if (e !== 0)\n                sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + \"\"));\n              sum = divide(sum, new Ctor(n2), wpr);\n              Ctor.precision = pr;\n              return sd == null ? (external = true, round(sum, pr)) : sum;\n            }\n            sum = t;\n            denominator += 2;\n          }\n        }\n        function parseDecimal(x, str) {\n          var e, i, len;\n          if ((e = str.indexOf(\".\")) > -1)\n            str = str.replace(\".\", \"\");\n          if ((i = str.search(/e/i)) > 0) {\n            if (e < 0)\n              e = i;\n            e += +str.slice(i + 1);\n            str = str.substring(0, i);\n          } else if (e < 0) {\n            e = str.length;\n          }\n          for (i = 0; str.charCodeAt(i) === 48; )\n            ++i;\n          for (len = str.length; str.charCodeAt(len - 1) === 48; )\n            --len;\n          str = str.slice(i, len);\n          if (str) {\n            len -= i;\n            e = e - i - 1;\n            x.e = mathfloor(e / LOG_BASE);\n            x.d = [];\n            i = (e + 1) % LOG_BASE;\n            if (e < 0)\n              i += LOG_BASE;\n            if (i < len) {\n              if (i)\n                x.d.push(+str.slice(0, i));\n              for (len -= LOG_BASE; i < len; )\n                x.d.push(+str.slice(i, i += LOG_BASE));\n              str = str.slice(i);\n              i = LOG_BASE - str.length;\n            } else {\n              i -= len;\n            }\n            for (; i--; )\n              str += \"0\";\n            x.d.push(+str);\n            if (external && (x.e > MAX_E || x.e < -MAX_E))\n              throw Error(exponentOutOfRange + e);\n          } else {\n            x.s = 0;\n            x.e = 0;\n            x.d = [0];\n          }\n          return x;\n        }\n        function round(x, sd, rm) {\n          var i, j, k, n2, rd, doRound, w, xdi, xd = x.d;\n          for (n2 = 1, k = xd[0]; k >= 10; k /= 10)\n            n2++;\n          i = sd - n2;\n          if (i < 0) {\n            i += LOG_BASE;\n            j = sd;\n            w = xd[xdi = 0];\n          } else {\n            xdi = Math.ceil((i + 1) / LOG_BASE);\n            k = xd.length;\n            if (xdi >= k)\n              return x;\n            w = k = xd[xdi];\n            for (n2 = 1; k >= 10; k /= 10)\n              n2++;\n            i %= LOG_BASE;\n            j = i - LOG_BASE + n2;\n          }\n          if (rm !== void 0) {\n            k = mathpow(10, n2 - j - 1);\n            rd = w / k % 10 | 0;\n            doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\n            doRound = rm < 4 ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.\n            (i > 0 ? j > 0 ? w / mathpow(10, n2 - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n          }\n          if (sd < 1 || !xd[0]) {\n            if (doRound) {\n              k = getBase10Exponent(x);\n              xd.length = 1;\n              sd = sd - k - 1;\n              xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n              x.e = mathfloor(-sd / LOG_BASE) || 0;\n            } else {\n              xd.length = 1;\n              xd[0] = x.e = x.s = 0;\n            }\n            return x;\n          }\n          if (i == 0) {\n            xd.length = xdi;\n            k = 1;\n            xdi--;\n          } else {\n            xd.length = xdi + 1;\n            k = mathpow(10, LOG_BASE - i);\n            xd[xdi] = j > 0 ? (w / mathpow(10, n2 - j) % mathpow(10, j) | 0) * k : 0;\n          }\n          if (doRound) {\n            for (; ; ) {\n              if (xdi == 0) {\n                if ((xd[0] += k) == BASE) {\n                  xd[0] = 1;\n                  ++x.e;\n                }\n                break;\n              } else {\n                xd[xdi] += k;\n                if (xd[xdi] != BASE)\n                  break;\n                xd[xdi--] = 0;\n                k = 1;\n              }\n            }\n          }\n          for (i = xd.length; xd[--i] === 0; )\n            xd.pop();\n          if (external && (x.e > MAX_E || x.e < -MAX_E)) {\n            throw Error(exponentOutOfRange + getBase10Exponent(x));\n          }\n          return x;\n        }\n        function subtract(x, y) {\n          var d, e, i, j, k, len, xd, xe, xLTy, yd, Ctor = x.constructor, pr = Ctor.precision;\n          if (!x.s || !y.s) {\n            if (y.s)\n              y.s = -y.s;\n            else\n              y = new Ctor(x);\n            return external ? round(y, pr) : y;\n          }\n          xd = x.d;\n          yd = y.d;\n          e = y.e;\n          xe = x.e;\n          xd = xd.slice();\n          k = xe - e;\n          if (k) {\n            xLTy = k < 0;\n            if (xLTy) {\n              d = xd;\n              k = -k;\n              len = yd.length;\n            } else {\n              d = yd;\n              e = xe;\n              len = xd.length;\n            }\n            i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n            if (k > i) {\n              k = i;\n              d.length = 1;\n            }\n            d.reverse();\n            for (i = k; i--; )\n              d.push(0);\n            d.reverse();\n          } else {\n            i = xd.length;\n            len = yd.length;\n            xLTy = i < len;\n            if (xLTy)\n              len = i;\n            for (i = 0; i < len; i++) {\n              if (xd[i] != yd[i]) {\n                xLTy = xd[i] < yd[i];\n                break;\n              }\n            }\n            k = 0;\n          }\n          if (xLTy) {\n            d = xd;\n            xd = yd;\n            yd = d;\n            y.s = -y.s;\n          }\n          len = xd.length;\n          for (i = yd.length - len; i > 0; --i)\n            xd[len++] = 0;\n          for (i = yd.length; i > k; ) {\n            if (xd[--i] < yd[i]) {\n              for (j = i; j && xd[--j] === 0; )\n                xd[j] = BASE - 1;\n              --xd[j];\n              xd[i] += BASE;\n            }\n            xd[i] -= yd[i];\n          }\n          for (; xd[--len] === 0; )\n            xd.pop();\n          for (; xd[0] === 0; xd.shift())\n            --e;\n          if (!xd[0])\n            return new Ctor(0);\n          y.d = xd;\n          y.e = e;\n          return external ? round(y, pr) : y;\n        }\n        function toString(x, isExp, sd) {\n          var k, e = getBase10Exponent(x), str = digitsToString(x.d), len = str.length;\n          if (isExp) {\n            if (sd && (k = sd - len) > 0) {\n              str = str.charAt(0) + \".\" + str.slice(1) + getZeroString(k);\n            } else if (len > 1) {\n              str = str.charAt(0) + \".\" + str.slice(1);\n            }\n            str = str + (e < 0 ? \"e\" : \"e+\") + e;\n          } else if (e < 0) {\n            str = \"0.\" + getZeroString(-e - 1) + str;\n            if (sd && (k = sd - len) > 0)\n              str += getZeroString(k);\n          } else if (e >= len) {\n            str += getZeroString(e + 1 - len);\n            if (sd && (k = sd - e - 1) > 0)\n              str = str + \".\" + getZeroString(k);\n          } else {\n            if ((k = e + 1) < len)\n              str = str.slice(0, k) + \".\" + str.slice(k);\n            if (sd && (k = sd - len) > 0) {\n              if (e + 1 === len)\n                str += \".\";\n              str += getZeroString(k);\n            }\n          }\n          return x.s < 0 ? \"-\" + str : str;\n        }\n        function truncate(arr, len) {\n          if (arr.length > len) {\n            arr.length = len;\n            return true;\n          }\n        }\n        function clone(obj) {\n          var i, p, ps;\n          function Decimal2(value) {\n            var x = this;\n            if (!(x instanceof Decimal2))\n              return new Decimal2(value);\n            x.constructor = Decimal2;\n            if (value instanceof Decimal2) {\n              x.s = value.s;\n              x.e = value.e;\n              x.d = (value = value.d) ? value.slice() : value;\n              return;\n            }\n            if (typeof value === \"number\") {\n              if (value * 0 !== 0) {\n                throw Error(invalidArgument + value);\n              }\n              if (value > 0) {\n                x.s = 1;\n              } else if (value < 0) {\n                value = -value;\n                x.s = -1;\n              } else {\n                x.s = 0;\n                x.e = 0;\n                x.d = [0];\n                return;\n              }\n              if (value === ~~value && value < 1e7) {\n                x.e = 0;\n                x.d = [value];\n                return;\n              }\n              return parseDecimal(x, value.toString());\n            } else if (typeof value !== \"string\") {\n              throw Error(invalidArgument + value);\n            }\n            if (value.charCodeAt(0) === 45) {\n              value = value.slice(1);\n              x.s = -1;\n            } else {\n              x.s = 1;\n            }\n            if (isDecimal.test(value))\n              parseDecimal(x, value);\n            else\n              throw Error(invalidArgument + value);\n          }\n          Decimal2.prototype = P;\n          Decimal2.ROUND_UP = 0;\n          Decimal2.ROUND_DOWN = 1;\n          Decimal2.ROUND_CEIL = 2;\n          Decimal2.ROUND_FLOOR = 3;\n          Decimal2.ROUND_HALF_UP = 4;\n          Decimal2.ROUND_HALF_DOWN = 5;\n          Decimal2.ROUND_HALF_EVEN = 6;\n          Decimal2.ROUND_HALF_CEIL = 7;\n          Decimal2.ROUND_HALF_FLOOR = 8;\n          Decimal2.clone = clone;\n          Decimal2.config = Decimal2.set = config2;\n          if (obj === void 0)\n            obj = {};\n          if (obj) {\n            ps = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"LN10\"];\n            for (i = 0; i < ps.length; )\n              if (!obj.hasOwnProperty(p = ps[i++]))\n                obj[p] = this[p];\n          }\n          Decimal2.config(obj);\n          return Decimal2;\n        }\n        function config2(obj) {\n          if (!obj || typeof obj !== \"object\") {\n            throw Error(decimalError + \"Object expected\");\n          }\n          var i, p, v, ps = [\n            \"precision\",\n            1,\n            MAX_DIGITS,\n            \"rounding\",\n            0,\n            8,\n            \"toExpNeg\",\n            -1 / 0,\n            0,\n            \"toExpPos\",\n            0,\n            1 / 0\n          ];\n          for (i = 0; i < ps.length; i += 3) {\n            if ((v = obj[p = ps[i]]) !== void 0) {\n              if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2])\n                this[p] = v;\n              else\n                throw Error(invalidArgument + p + \": \" + v);\n            }\n          }\n          if ((v = obj[p = \"LN10\"]) !== void 0) {\n            if (v == Math.LN10)\n              this[p] = new this(v);\n            else\n              throw Error(invalidArgument + p + \": \" + v);\n          }\n          return this;\n        }\n        Decimal = clone(Decimal);\n        Decimal[\"default\"] = Decimal.Decimal = Decimal;\n        ONE = new Decimal(1);\n        if (typeof define == \"function\" && define.amd) {\n          define(function() {\n            return Decimal;\n          });\n        } else if (typeof module != \"undefined\" && module.exports) {\n          module.exports = Decimal;\n        } else {\n          if (!globalScope) {\n            globalScope = typeof self != \"undefined\" && self && self.self == self ? self : Function(\"return this\")();\n          }\n          globalScope.Decimal = Decimal;\n        }\n      })(exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/big.js@5.2.2/node_modules/big.js/big.js\n  var require_big = __commonJS({\n    \"../../../node_modules/.pnpm/big.js@5.2.2/node_modules/big.js/big.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      (function(GLOBAL) {\n        \"use strict\";\n        var Big, DP = 20, RM = 1, MAX_DP = 1e6, MAX_POWER = 1e6, NE = -7, PE = 21, NAME = \"[big.js] \", INVALID2 = NAME + \"Invalid \", INVALID_DP = INVALID2 + \"decimal places\", INVALID_RM = INVALID2 + \"rounding mode\", DIV_BY_ZERO = NAME + \"Division by zero\", P = {}, UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n        function _Big_() {\n          function Big2(n2) {\n            var x = this;\n            if (!(x instanceof Big2))\n              return n2 === UNDEFINED ? _Big_() : new Big2(n2);\n            if (n2 instanceof Big2) {\n              x.s = n2.s;\n              x.e = n2.e;\n              x.c = n2.c.slice();\n            } else {\n              parse(x, n2);\n            }\n            x.constructor = Big2;\n          }\n          Big2.prototype = P;\n          Big2.DP = DP;\n          Big2.RM = RM;\n          Big2.NE = NE;\n          Big2.PE = PE;\n          Big2.version = \"5.2.2\";\n          return Big2;\n        }\n        function parse(x, n2) {\n          var e, i, nl;\n          if (n2 === 0 && 1 / n2 < 0)\n            n2 = \"-0\";\n          else if (!NUMERIC.test(n2 += \"\"))\n            throw Error(INVALID2 + \"number\");\n          x.s = n2.charAt(0) == \"-\" ? (n2 = n2.slice(1), -1) : 1;\n          if ((e = n2.indexOf(\".\")) > -1)\n            n2 = n2.replace(\".\", \"\");\n          if ((i = n2.search(/e/i)) > 0) {\n            if (e < 0)\n              e = i;\n            e += +n2.slice(i + 1);\n            n2 = n2.substring(0, i);\n          } else if (e < 0) {\n            e = n2.length;\n          }\n          nl = n2.length;\n          for (i = 0; i < nl && n2.charAt(i) == \"0\"; )\n            ++i;\n          if (i == nl) {\n            x.c = [x.e = 0];\n          } else {\n            for (; nl > 0 && n2.charAt(--nl) == \"0\"; )\n              ;\n            x.e = e - i - 1;\n            x.c = [];\n            for (e = 0; i <= nl; )\n              x.c[e++] = +n2.charAt(i++);\n          }\n          return x;\n        }\n        function round(x, dp, rm, more) {\n          var xc = x.c, i = x.e + dp + 1;\n          if (i < xc.length) {\n            if (rm === 1) {\n              more = xc[i] >= 5;\n            } else if (rm === 2) {\n              more = xc[i] > 5 || xc[i] == 5 && (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n            } else if (rm === 3) {\n              more = more || !!xc[0];\n            } else {\n              more = false;\n              if (rm !== 0)\n                throw Error(INVALID_RM);\n            }\n            if (i < 1) {\n              xc.length = 1;\n              if (more) {\n                x.e = -dp;\n                xc[0] = 1;\n              } else {\n                xc[0] = x.e = 0;\n              }\n            } else {\n              xc.length = i--;\n              if (more) {\n                for (; ++xc[i] > 9; ) {\n                  xc[i] = 0;\n                  if (!i--) {\n                    ++x.e;\n                    xc.unshift(1);\n                  }\n                }\n              }\n              for (i = xc.length; !xc[--i]; )\n                xc.pop();\n            }\n          } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n            throw Error(INVALID_RM);\n          }\n          return x;\n        }\n        function stringify2(x, id2, n2, k) {\n          var e, s, Big2 = x.constructor, z = !x.c[0];\n          if (n2 !== UNDEFINED) {\n            if (n2 !== ~~n2 || n2 < (id2 == 3) || n2 > MAX_DP) {\n              throw Error(id2 == 3 ? INVALID2 + \"precision\" : INVALID_DP);\n            }\n            x = new Big2(x);\n            n2 = k - x.e;\n            if (x.c.length > ++k)\n              round(x, n2, Big2.RM);\n            if (id2 == 2)\n              k = x.e + n2 + 1;\n            for (; x.c.length < k; )\n              x.c.push(0);\n          }\n          e = x.e;\n          s = x.c.join(\"\");\n          n2 = s.length;\n          if (id2 != 2 && (id2 == 1 || id2 == 3 && k <= e || e <= Big2.NE || e >= Big2.PE)) {\n            s = s.charAt(0) + (n2 > 1 ? \".\" + s.slice(1) : \"\") + (e < 0 ? \"e\" : \"e+\") + e;\n          } else if (e < 0) {\n            for (; ++e; )\n              s = \"0\" + s;\n            s = \"0.\" + s;\n          } else if (e > 0) {\n            if (++e > n2)\n              for (e -= n2; e--; )\n                s += \"0\";\n            else if (e < n2)\n              s = s.slice(0, e) + \".\" + s.slice(e);\n          } else if (n2 > 1) {\n            s = s.charAt(0) + \".\" + s.slice(1);\n          }\n          return x.s < 0 && (!z || id2 == 4) ? \"-\" + s : s;\n        }\n        P.abs = function() {\n          var x = new this.constructor(this);\n          x.s = 1;\n          return x;\n        };\n        P.cmp = function(y) {\n          var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;\n          if (!xc[0] || !yc[0])\n            return !xc[0] ? !yc[0] ? 0 : -j : i;\n          if (i != j)\n            return i;\n          isneg = i < 0;\n          if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n          j = (k = xc.length) < (l = yc.length) ? k : l;\n          for (i = -1; ++i < j; ) {\n            if (xc[i] != yc[i])\n              return xc[i] > yc[i] ^ isneg ? 1 : -1;\n          }\n          return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n        };\n        P.div = function(y) {\n          var x = this, Big2 = x.constructor, a = x.c, b2 = (y = new Big2(y)).c, k = x.s == y.s ? 1 : -1, dp = Big2.DP;\n          if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n            throw Error(INVALID_DP);\n          if (!b2[0])\n            throw Error(DIV_BY_ZERO);\n          if (!a[0])\n            return new Big2(k * 0);\n          var bl, bt, n2, cmp, ri, bz = b2.slice(), ai = bl = b2.length, al = a.length, r = a.slice(0, bl), rl = r.length, q = y, qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1;\n          q.s = k;\n          k = d < 0 ? 0 : d;\n          bz.unshift(0);\n          for (; rl++ < bl; )\n            r.push(0);\n          do {\n            for (n2 = 0; n2 < 10; n2++) {\n              if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n              } else {\n                for (ri = -1, cmp = 0; ++ri < bl; ) {\n                  if (b2[ri] != r[ri]) {\n                    cmp = b2[ri] > r[ri] ? 1 : -1;\n                    break;\n                  }\n                }\n              }\n              if (cmp < 0) {\n                for (bt = rl == bl ? b2 : bz; rl; ) {\n                  if (r[--rl] < bt[rl]) {\n                    ri = rl;\n                    for (; ri && !r[--ri]; )\n                      r[ri] = 9;\n                    --r[ri];\n                    r[rl] += 10;\n                  }\n                  r[rl] -= bt[rl];\n                }\n                for (; !r[0]; )\n                  r.shift();\n              } else {\n                break;\n              }\n            }\n            qc[qi++] = cmp ? n2 : ++n2;\n            if (r[0] && cmp)\n              r[rl] = a[ai] || 0;\n            else\n              r = [a[ai]];\n          } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n          if (!qc[0] && qi != 1) {\n            qc.shift();\n            q.e--;\n          }\n          if (qi > d)\n            round(q, dp, Big2.RM, r[0] !== UNDEFINED);\n          return q;\n        };\n        P.eq = function(y) {\n          return !this.cmp(y);\n        };\n        P.gt = function(y) {\n          return this.cmp(y) > 0;\n        };\n        P.gte = function(y) {\n          return this.cmp(y) > -1;\n        };\n        P.lt = function(y) {\n          return this.cmp(y) < 0;\n        };\n        P.lte = function(y) {\n          return this.cmp(y) < 1;\n        };\n        P.minus = P.sub = function(y) {\n          var i, j, t, xlty, x = this, Big2 = x.constructor, a = x.s, b2 = (y = new Big2(y)).s;\n          if (a != b2) {\n            y.s = -b2;\n            return x.plus(y);\n          }\n          var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n          if (!xc[0] || !yc[0]) {\n            return yc[0] ? (y.s = -b2, y) : new Big2(xc[0] ? x : 0);\n          }\n          if (a = xe - ye) {\n            if (xlty = a < 0) {\n              a = -a;\n              t = xc;\n            } else {\n              ye = xe;\n              t = yc;\n            }\n            t.reverse();\n            for (b2 = a; b2--; )\n              t.push(0);\n            t.reverse();\n          } else {\n            j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n            for (a = b2 = 0; b2 < j; b2++) {\n              if (xc[b2] != yc[b2]) {\n                xlty = xc[b2] < yc[b2];\n                break;\n              }\n            }\n          }\n          if (xlty) {\n            t = xc;\n            xc = yc;\n            yc = t;\n            y.s = -y.s;\n          }\n          if ((b2 = (j = yc.length) - (i = xc.length)) > 0)\n            for (; b2--; )\n              xc[i++] = 0;\n          for (b2 = i; j > a; ) {\n            if (xc[--j] < yc[j]) {\n              for (i = j; i && !xc[--i]; )\n                xc[i] = 9;\n              --xc[i];\n              xc[j] += 10;\n            }\n            xc[j] -= yc[j];\n          }\n          for (; xc[--b2] === 0; )\n            xc.pop();\n          for (; xc[0] === 0; ) {\n            xc.shift();\n            --ye;\n          }\n          if (!xc[0]) {\n            y.s = 1;\n            xc = [ye = 0];\n          }\n          y.c = xc;\n          y.e = ye;\n          return y;\n        };\n        P.mod = function(y) {\n          var ygtx, x = this, Big2 = x.constructor, a = x.s, b2 = (y = new Big2(y)).s;\n          if (!y.c[0])\n            throw Error(DIV_BY_ZERO);\n          x.s = y.s = 1;\n          ygtx = y.cmp(x) == 1;\n          x.s = a;\n          y.s = b2;\n          if (ygtx)\n            return new Big2(x);\n          a = Big2.DP;\n          b2 = Big2.RM;\n          Big2.DP = Big2.RM = 0;\n          x = x.div(y);\n          Big2.DP = a;\n          Big2.RM = b2;\n          return this.minus(x.times(y));\n        };\n        P.plus = P.add = function(y) {\n          var t, x = this, Big2 = x.constructor, a = x.s, b2 = (y = new Big2(y)).s;\n          if (a != b2) {\n            y.s = -b2;\n            return x.minus(y);\n          }\n          var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n          if (!xc[0] || !yc[0])\n            return yc[0] ? y : new Big2(xc[0] ? x : a * 0);\n          xc = xc.slice();\n          if (a = xe - ye) {\n            if (a > 0) {\n              ye = xe;\n              t = yc;\n            } else {\n              a = -a;\n              t = xc;\n            }\n            t.reverse();\n            for (; a--; )\n              t.push(0);\n            t.reverse();\n          }\n          if (xc.length - yc.length < 0) {\n            t = yc;\n            yc = xc;\n            xc = t;\n          }\n          a = yc.length;\n          for (b2 = 0; a; xc[a] %= 10)\n            b2 = (xc[--a] = xc[a] + yc[a] + b2) / 10 | 0;\n          if (b2) {\n            xc.unshift(b2);\n            ++ye;\n          }\n          for (a = xc.length; xc[--a] === 0; )\n            xc.pop();\n          y.c = xc;\n          y.e = ye;\n          return y;\n        };\n        P.pow = function(n2) {\n          var x = this, one = new x.constructor(1), y = one, isneg = n2 < 0;\n          if (n2 !== ~~n2 || n2 < -MAX_POWER || n2 > MAX_POWER)\n            throw Error(INVALID2 + \"exponent\");\n          if (isneg)\n            n2 = -n2;\n          for (; ; ) {\n            if (n2 & 1)\n              y = y.times(x);\n            n2 >>= 1;\n            if (!n2)\n              break;\n            x = x.times(x);\n          }\n          return isneg ? one.div(y) : y;\n        };\n        P.round = function(dp, rm) {\n          var Big2 = this.constructor;\n          if (dp === UNDEFINED)\n            dp = 0;\n          else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n            throw Error(INVALID_DP);\n          return round(new Big2(this), dp, rm === UNDEFINED ? Big2.RM : rm);\n        };\n        P.sqrt = function() {\n          var r, c, t, x = this, Big2 = x.constructor, s = x.s, e = x.e, half = new Big2(0.5);\n          if (!x.c[0])\n            return new Big2(x);\n          if (s < 0)\n            throw Error(NAME + \"No square root\");\n          s = Math.sqrt(x + \"\");\n          if (s === 0 || s === 1 / 0) {\n            c = x.c.join(\"\");\n            if (!(c.length + e & 1))\n              c += \"0\";\n            s = Math.sqrt(c);\n            e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n            r = new Big2((s == 1 / 0 ? \"1e\" : (s = s.toExponential()).slice(0, s.indexOf(\"e\") + 1)) + e);\n          } else {\n            r = new Big2(s);\n          }\n          e = r.e + (Big2.DP += 4);\n          do {\n            t = r;\n            r = half.times(t.plus(x.div(t)));\n          } while (t.c.slice(0, e).join(\"\") !== r.c.slice(0, e).join(\"\"));\n          return round(r, Big2.DP -= 4, Big2.RM);\n        };\n        P.times = P.mul = function(y) {\n          var c, x = this, Big2 = x.constructor, xc = x.c, yc = (y = new Big2(y)).c, a = xc.length, b2 = yc.length, i = x.e, j = y.e;\n          y.s = x.s == y.s ? 1 : -1;\n          if (!xc[0] || !yc[0])\n            return new Big2(y.s * 0);\n          y.e = i + j;\n          if (a < b2) {\n            c = xc;\n            xc = yc;\n            yc = c;\n            j = a;\n            a = b2;\n            b2 = j;\n          }\n          for (c = new Array(j = a + b2); j--; )\n            c[j] = 0;\n          for (i = b2; i--; ) {\n            b2 = 0;\n            for (j = a + i; j > i; ) {\n              b2 = c[j] + yc[i] * xc[j - i - 1] + b2;\n              c[j--] = b2 % 10;\n              b2 = b2 / 10 | 0;\n            }\n            c[j] = (c[j] + b2) % 10;\n          }\n          if (b2)\n            ++y.e;\n          else\n            c.shift();\n          for (i = c.length; !c[--i]; )\n            c.pop();\n          y.c = c;\n          return y;\n        };\n        P.toExponential = function(dp) {\n          return stringify2(this, 1, dp, dp);\n        };\n        P.toFixed = function(dp) {\n          return stringify2(this, 2, dp, this.e + dp);\n        };\n        P.toPrecision = function(sd) {\n          return stringify2(this, 3, sd, sd - 1);\n        };\n        P.toString = function() {\n          return stringify2(this);\n        };\n        P.valueOf = P.toJSON = function() {\n          return stringify2(this, 4);\n        };\n        Big = _Big_();\n        Big[\"default\"] = Big.Big = Big;\n        if (typeof define === \"function\" && define.amd) {\n          define(function() {\n            return Big;\n          });\n        } else if (typeof module !== \"undefined\" && module.exports) {\n          module.exports = Big;\n        } else {\n          GLOBAL.Big = Big;\n        }\n      })(exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/toformat@2.0.0/node_modules/toformat/toFormat.js\n  var require_toFormat = __commonJS({\n    \"../../../node_modules/.pnpm/toformat@2.0.0/node_modules/toformat/toFormat.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      function toFormat(Ctor) {\n        \"use strict\";\n        Ctor.prototype.toFormat = function toFormat2(dp, rm, fmt) {\n          if (!this.e && this.e !== 0)\n            return this.toString();\n          var arr, g1, g2, i, u, nd, intd, intp, fracp, dsep, gsep, gsize, sgsize, fgsep, fgsize, tfmt = this.format || {}, cfmt = this.constructor.format || {};\n          if (dp != u) {\n            if (typeof dp == \"object\") {\n              fmt = dp;\n              dp = u;\n            } else if (rm != u) {\n              if (typeof rm == \"object\") {\n                fmt = rm;\n                rm = u;\n              } else if (typeof fmt != \"object\") {\n                fmt = {};\n              }\n            } else {\n              fmt = {};\n            }\n          } else {\n            fmt = {};\n          }\n          arr = this.toFixed(dp, rm).split(\".\");\n          intp = arr[0];\n          fracp = arr[1];\n          intd = this.s < 0 ? intp.slice(1) : intp;\n          nd = intd.length;\n          dsep = fmt.decimalSeparator;\n          if (dsep == u) {\n            dsep = tfmt.decimalSeparator;\n            if (dsep == u) {\n              dsep = cfmt.decimalSeparator;\n              if (dsep == u)\n                dsep = \".\";\n            }\n          }\n          gsep = fmt.groupSeparator;\n          if (gsep == u) {\n            gsep = tfmt.groupSeparator;\n            if (gsep == u)\n              gsep = cfmt.groupSeparator;\n          }\n          if (gsep) {\n            gsize = fmt.groupSize;\n            if (gsize == u) {\n              gsize = tfmt.groupSize;\n              if (gsize == u) {\n                gsize = cfmt.groupSize;\n                if (gsize == u)\n                  gsize = 0;\n              }\n            }\n            sgsize = fmt.secondaryGroupSize;\n            if (sgsize == u) {\n              sgsize = tfmt.secondaryGroupSize;\n              if (sgsize == u) {\n                sgsize = cfmt.secondaryGroupSize;\n                if (sgsize == u)\n                  sgsize = 0;\n              }\n            }\n            if (sgsize) {\n              g1 = +sgsize;\n              g2 = +gsize;\n              nd -= g2;\n            } else {\n              g1 = +gsize;\n              g2 = +sgsize;\n            }\n            if (g1 > 0 && nd > 0) {\n              i = nd % g1 || g1;\n              intp = intd.substr(0, i);\n              for (; i < nd; i += g1)\n                intp += gsep + intd.substr(i, g1);\n              if (g2 > 0)\n                intp += gsep + intd.slice(i);\n              if (this.s < 0)\n                intp = \"-\" + intp;\n            }\n          }\n          if (fracp) {\n            fgsep = fmt.fractionGroupSeparator;\n            if (fgsep == u) {\n              fgsep = tfmt.fractionGroupSeparator;\n              if (fgsep == u)\n                fgsep = cfmt.fractionGroupSeparator;\n            }\n            if (fgsep) {\n              fgsize = fmt.fractionGroupSize;\n              if (fgsize == u) {\n                fgsize = tfmt.fractionGroupSize;\n                if (fgsize == u) {\n                  fgsize = cfmt.fractionGroupSize;\n                  if (fgsize == u)\n                    fgsize = 0;\n                }\n              }\n              fgsize = +fgsize;\n              if (fgsize) {\n                fracp = fracp.replace(new RegExp(\"\\\\d{\" + fgsize + \"}\\\\B\", \"g\"), \"$&\" + fgsep);\n              }\n            }\n            return intp + dsep + fracp;\n          } else {\n            return intp;\n          }\n        };\n        Ctor.format = {\n          decimalSeparator: \".\",\n          groupSeparator: \",\",\n          groupSize: 3,\n          secondaryGroupSize: 0,\n          fractionGroupSeparator: \"\",\n          fractionGroupSize: 0\n        };\n        return Ctor;\n      }\n      if (typeof module !== \"undefined\" && module.exports)\n        module.exports = toFormat;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/_version.js\n  var require_version27 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"bignumber/5.7.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/bignumber.js\n  var require_bignumber2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/bignumber.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3._base16To36 = exports3._base36To16 = exports3.BigNumber = exports3.isBigNumberish = void 0;\n      var bn_js_1 = __importDefault2(require_bn());\n      var BN = bn_js_1.default.BN;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version27();\n      var logger = new logger_1.Logger(_version_1.version);\n      var _constructorGuard = {};\n      var MAX_SAFE = 9007199254740991;\n      function isBigNumberish(value) {\n        return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || (0, bytes_1.isHexString)(value) || typeof value === \"bigint\" || (0, bytes_1.isBytes)(value));\n      }\n      exports3.isBigNumberish = isBigNumberish;\n      var _warnedToStringRadix = false;\n      var BigNumber = (\n        /** @class */\n        function() {\n          function BigNumber2(constructorGuard, hex) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot call constructor directly; use BigNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n              });\n            }\n            this._hex = hex;\n            this._isBigNumber = true;\n            Object.freeze(this);\n          }\n          BigNumber2.prototype.fromTwos = function(value) {\n            return toBigNumber(toBN(this).fromTwos(value));\n          };\n          BigNumber2.prototype.toTwos = function(value) {\n            return toBigNumber(toBN(this).toTwos(value));\n          };\n          BigNumber2.prototype.abs = function() {\n            if (this._hex[0] === \"-\") {\n              return BigNumber2.from(this._hex.substring(1));\n            }\n            return this;\n          };\n          BigNumber2.prototype.add = function(other) {\n            return toBigNumber(toBN(this).add(toBN(other)));\n          };\n          BigNumber2.prototype.sub = function(other) {\n            return toBigNumber(toBN(this).sub(toBN(other)));\n          };\n          BigNumber2.prototype.div = function(other) {\n            var o = BigNumber2.from(other);\n            if (o.isZero()) {\n              throwFault(\"division-by-zero\", \"div\");\n            }\n            return toBigNumber(toBN(this).div(toBN(other)));\n          };\n          BigNumber2.prototype.mul = function(other) {\n            return toBigNumber(toBN(this).mul(toBN(other)));\n          };\n          BigNumber2.prototype.mod = function(other) {\n            var value = toBN(other);\n            if (value.isNeg()) {\n              throwFault(\"division-by-zero\", \"mod\");\n            }\n            return toBigNumber(toBN(this).umod(value));\n          };\n          BigNumber2.prototype.pow = function(other) {\n            var value = toBN(other);\n            if (value.isNeg()) {\n              throwFault(\"negative-power\", \"pow\");\n            }\n            return toBigNumber(toBN(this).pow(value));\n          };\n          BigNumber2.prototype.and = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"and\");\n            }\n            return toBigNumber(toBN(this).and(value));\n          };\n          BigNumber2.prototype.or = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"or\");\n            }\n            return toBigNumber(toBN(this).or(value));\n          };\n          BigNumber2.prototype.xor = function(other) {\n            var value = toBN(other);\n            if (this.isNegative() || value.isNeg()) {\n              throwFault(\"unbound-bitwise-result\", \"xor\");\n            }\n            return toBigNumber(toBN(this).xor(value));\n          };\n          BigNumber2.prototype.mask = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"mask\");\n            }\n            return toBigNumber(toBN(this).maskn(value));\n          };\n          BigNumber2.prototype.shl = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"shl\");\n            }\n            return toBigNumber(toBN(this).shln(value));\n          };\n          BigNumber2.prototype.shr = function(value) {\n            if (this.isNegative() || value < 0) {\n              throwFault(\"negative-width\", \"shr\");\n            }\n            return toBigNumber(toBN(this).shrn(value));\n          };\n          BigNumber2.prototype.eq = function(other) {\n            return toBN(this).eq(toBN(other));\n          };\n          BigNumber2.prototype.lt = function(other) {\n            return toBN(this).lt(toBN(other));\n          };\n          BigNumber2.prototype.lte = function(other) {\n            return toBN(this).lte(toBN(other));\n          };\n          BigNumber2.prototype.gt = function(other) {\n            return toBN(this).gt(toBN(other));\n          };\n          BigNumber2.prototype.gte = function(other) {\n            return toBN(this).gte(toBN(other));\n          };\n          BigNumber2.prototype.isNegative = function() {\n            return this._hex[0] === \"-\";\n          };\n          BigNumber2.prototype.isZero = function() {\n            return toBN(this).isZero();\n          };\n          BigNumber2.prototype.toNumber = function() {\n            try {\n              return toBN(this).toNumber();\n            } catch (error) {\n              throwFault(\"overflow\", \"toNumber\", this.toString());\n            }\n            return null;\n          };\n          BigNumber2.prototype.toBigInt = function() {\n            try {\n              return BigInt(this.toString());\n            } catch (e) {\n            }\n            return logger.throwError(\"this platform does not support BigInt\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n              value: this.toString()\n            });\n          };\n          BigNumber2.prototype.toString = function() {\n            if (arguments.length > 0) {\n              if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                  _warnedToStringRadix = true;\n                  logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n              } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n              } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n              }\n            }\n            return toBN(this).toString(10);\n          };\n          BigNumber2.prototype.toHexString = function() {\n            return this._hex;\n          };\n          BigNumber2.prototype.toJSON = function(key) {\n            return { type: \"BigNumber\", hex: this.toHexString() };\n          };\n          BigNumber2.from = function(value) {\n            if (value instanceof BigNumber2) {\n              return value;\n            }\n            if (typeof value === \"string\") {\n              if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber2(_constructorGuard, toHex(value));\n              }\n              if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber2(_constructorGuard, toHex(new BN(value)));\n              }\n              return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n            }\n            if (typeof value === \"number\") {\n              if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n              }\n              if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n              }\n              return BigNumber2.from(String(value));\n            }\n            var anyValue = value;\n            if (typeof anyValue === \"bigint\") {\n              return BigNumber2.from(anyValue.toString());\n            }\n            if ((0, bytes_1.isBytes)(anyValue)) {\n              return BigNumber2.from((0, bytes_1.hexlify)(anyValue));\n            }\n            if (anyValue) {\n              if (anyValue.toHexString) {\n                var hex = anyValue.toHexString();\n                if (typeof hex === \"string\") {\n                  return BigNumber2.from(hex);\n                }\n              } else {\n                var hex = anyValue._hex;\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                  hex = anyValue.hex;\n                }\n                if (typeof hex === \"string\") {\n                  if ((0, bytes_1.isHexString)(hex) || hex[0] === \"-\" && (0, bytes_1.isHexString)(hex.substring(1))) {\n                    return BigNumber2.from(hex);\n                  }\n                }\n              }\n            }\n            return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n          };\n          BigNumber2.isBigNumber = function(value) {\n            return !!(value && value._isBigNumber);\n          };\n          return BigNumber2;\n        }()\n      );\n      exports3.BigNumber = BigNumber;\n      function toHex(value) {\n        if (typeof value !== \"string\") {\n          return toHex(value.toString(16));\n        }\n        if (value[0] === \"-\") {\n          value = value.substring(1);\n          if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n          }\n          value = toHex(value);\n          if (value === \"0x00\") {\n            return value;\n          }\n          return \"-\" + value;\n        }\n        if (value.substring(0, 2) !== \"0x\") {\n          value = \"0x\" + value;\n        }\n        if (value === \"0x\") {\n          return \"0x00\";\n        }\n        if (value.length % 2) {\n          value = \"0x0\" + value.substring(2);\n        }\n        while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n          value = \"0x\" + value.substring(4);\n        }\n        return value;\n      }\n      function toBigNumber(value) {\n        return BigNumber.from(toHex(value));\n      }\n      function toBN(value) {\n        var hex = BigNumber.from(value).toHexString();\n        if (hex[0] === \"-\") {\n          return new BN(\"-\" + hex.substring(3), 16);\n        }\n        return new BN(hex.substring(2), 16);\n      }\n      function throwFault(fault, operation, value) {\n        var params = { fault, operation };\n        if (value != null) {\n          params.value = value;\n        }\n        return logger.throwError(fault, logger_1.Logger.errors.NUMERIC_FAULT, params);\n      }\n      function _base36To16(value) {\n        return new BN(value, 36).toString(16);\n      }\n      exports3._base36To16 = _base36To16;\n      function _base16To36(value) {\n        return new BN(value, 16).toString(36);\n      }\n      exports3._base16To36 = _base16To36;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/fixednumber.js\n  var require_fixednumber2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/fixednumber.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.FixedNumber = exports3.FixedFormat = exports3.parseFixed = exports3.formatFixed = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version27();\n      var logger = new logger_1.Logger(_version_1.version);\n      var bignumber_1 = require_bignumber2();\n      var _constructorGuard = {};\n      var Zero = bignumber_1.BigNumber.from(0);\n      var NegativeOne = bignumber_1.BigNumber.from(-1);\n      function throwFault(message, fault, operation, value) {\n        var params = { fault, operation };\n        if (value !== void 0) {\n          params.value = value;\n        }\n        return logger.throwError(message, logger_1.Logger.errors.NUMERIC_FAULT, params);\n      }\n      var zeros2 = \"0\";\n      while (zeros2.length < 256) {\n        zeros2 += zeros2;\n      }\n      function getMultiplier(decimals) {\n        if (typeof decimals !== \"number\") {\n          try {\n            decimals = bignumber_1.BigNumber.from(decimals).toNumber();\n          } catch (e) {\n          }\n        }\n        if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n          return \"1\" + zeros2.substring(0, decimals);\n        }\n        return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n      }\n      function formatFixed(value, decimals) {\n        if (decimals == null) {\n          decimals = 0;\n        }\n        var multiplier = getMultiplier(decimals);\n        value = bignumber_1.BigNumber.from(value);\n        var negative = value.lt(Zero);\n        if (negative) {\n          value = value.mul(NegativeOne);\n        }\n        var fraction = value.mod(multiplier).toString();\n        while (fraction.length < multiplier.length - 1) {\n          fraction = \"0\" + fraction;\n        }\n        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n        var whole = value.div(multiplier).toString();\n        if (multiplier.length === 1) {\n          value = whole;\n        } else {\n          value = whole + \".\" + fraction;\n        }\n        if (negative) {\n          value = \"-\" + value;\n        }\n        return value;\n      }\n      exports3.formatFixed = formatFixed;\n      function parseFixed(value, decimals) {\n        if (decimals == null) {\n          decimals = 0;\n        }\n        var multiplier = getMultiplier(decimals);\n        if (typeof value !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n          logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n        }\n        var negative = value.substring(0, 1) === \"-\";\n        if (negative) {\n          value = value.substring(1);\n        }\n        if (value === \".\") {\n          logger.throwArgumentError(\"missing value\", \"value\", value);\n        }\n        var comps = value.split(\".\");\n        if (comps.length > 2) {\n          logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n        }\n        var whole = comps[0], fraction = comps[1];\n        if (!whole) {\n          whole = \"0\";\n        }\n        if (!fraction) {\n          fraction = \"0\";\n        }\n        while (fraction[fraction.length - 1] === \"0\") {\n          fraction = fraction.substring(0, fraction.length - 1);\n        }\n        if (fraction.length > multiplier.length - 1) {\n          throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n        }\n        if (fraction === \"\") {\n          fraction = \"0\";\n        }\n        while (fraction.length < multiplier.length - 1) {\n          fraction += \"0\";\n        }\n        var wholeValue = bignumber_1.BigNumber.from(whole);\n        var fractionValue = bignumber_1.BigNumber.from(fraction);\n        var wei = wholeValue.mul(multiplier).add(fractionValue);\n        if (negative) {\n          wei = wei.mul(NegativeOne);\n        }\n        return wei;\n      }\n      exports3.parseFixed = parseFixed;\n      var FixedFormat = (\n        /** @class */\n        function() {\n          function FixedFormat2(constructorGuard, signed2, width, decimals) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n              });\n            }\n            this.signed = signed2;\n            this.width = width;\n            this.decimals = decimals;\n            this.name = (signed2 ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n            this._multiplier = getMultiplier(decimals);\n            Object.freeze(this);\n          }\n          FixedFormat2.from = function(value) {\n            if (value instanceof FixedFormat2) {\n              return value;\n            }\n            if (typeof value === \"number\") {\n              value = \"fixed128x\" + value;\n            }\n            var signed2 = true;\n            var width = 128;\n            var decimals = 18;\n            if (typeof value === \"string\") {\n              if (value === \"fixed\") {\n              } else if (value === \"ufixed\") {\n                signed2 = false;\n              } else {\n                var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                  logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed2 = match[1] !== \"u\";\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n              }\n            } else if (value) {\n              var check = function(key, type, defaultValue) {\n                if (value[key] == null) {\n                  return defaultValue;\n                }\n                if (typeof value[key] !== type) {\n                  logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n              };\n              signed2 = check(\"signed\", \"boolean\", signed2);\n              width = check(\"width\", \"number\", width);\n              decimals = check(\"decimals\", \"number\", decimals);\n            }\n            if (width % 8) {\n              logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n            }\n            if (decimals > 80) {\n              logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n            }\n            return new FixedFormat2(_constructorGuard, signed2, width, decimals);\n          };\n          return FixedFormat2;\n        }()\n      );\n      exports3.FixedFormat = FixedFormat;\n      var FixedNumber = (\n        /** @class */\n        function() {\n          function FixedNumber2(constructorGuard, hex, value, format) {\n            if (constructorGuard !== _constructorGuard) {\n              logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n              });\n            }\n            this.format = format;\n            this._hex = hex;\n            this._value = value;\n            this._isFixedNumber = true;\n            Object.freeze(this);\n          }\n          FixedNumber2.prototype._checkFormat = function(other) {\n            if (this.format.name !== other.format.name) {\n              logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n            }\n          };\n          FixedNumber2.prototype.addUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.add(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.subUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.sub(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.mulUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.mul(b2).div(this.format._multiplier), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.divUnsafe = function(other) {\n            this._checkFormat(other);\n            var a = parseFixed(this._value, this.format.decimals);\n            var b2 = parseFixed(other._value, other.format.decimals);\n            return FixedNumber2.fromValue(a.mul(this.format._multiplier).div(b2), this.format.decimals, this.format);\n          };\n          FixedNumber2.prototype.floor = function() {\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            var result = FixedNumber2.from(comps[0], this.format);\n            var hasFraction = !comps[1].match(/^(0*)$/);\n            if (this.isNegative() && hasFraction) {\n              result = result.subUnsafe(ONE.toFormat(result.format));\n            }\n            return result;\n          };\n          FixedNumber2.prototype.ceiling = function() {\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            var result = FixedNumber2.from(comps[0], this.format);\n            var hasFraction = !comps[1].match(/^(0*)$/);\n            if (!this.isNegative() && hasFraction) {\n              result = result.addUnsafe(ONE.toFormat(result.format));\n            }\n            return result;\n          };\n          FixedNumber2.prototype.round = function(decimals) {\n            if (decimals == null) {\n              decimals = 0;\n            }\n            var comps = this.toString().split(\".\");\n            if (comps.length === 1) {\n              comps.push(\"0\");\n            }\n            if (decimals < 0 || decimals > 80 || decimals % 1) {\n              logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n            }\n            if (comps[1].length <= decimals) {\n              return this;\n            }\n            var factor = FixedNumber2.from(\"1\" + zeros2.substring(0, decimals), this.format);\n            var bump = BUMP.toFormat(this.format);\n            return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n          };\n          FixedNumber2.prototype.isZero = function() {\n            return this._value === \"0.0\" || this._value === \"0\";\n          };\n          FixedNumber2.prototype.isNegative = function() {\n            return this._value[0] === \"-\";\n          };\n          FixedNumber2.prototype.toString = function() {\n            return this._value;\n          };\n          FixedNumber2.prototype.toHexString = function(width) {\n            if (width == null) {\n              return this._hex;\n            }\n            if (width % 8) {\n              logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n            }\n            var hex = bignumber_1.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n            return (0, bytes_1.hexZeroPad)(hex, width / 8);\n          };\n          FixedNumber2.prototype.toUnsafeFloat = function() {\n            return parseFloat(this.toString());\n          };\n          FixedNumber2.prototype.toFormat = function(format) {\n            return FixedNumber2.fromString(this._value, format);\n          };\n          FixedNumber2.fromValue = function(value, decimals, format) {\n            if (format == null && decimals != null && !(0, bignumber_1.isBigNumberish)(decimals)) {\n              format = decimals;\n              decimals = null;\n            }\n            if (decimals == null) {\n              decimals = 0;\n            }\n            if (format == null) {\n              format = \"fixed\";\n            }\n            return FixedNumber2.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n          };\n          FixedNumber2.fromString = function(value, format) {\n            if (format == null) {\n              format = \"fixed\";\n            }\n            var fixedFormat = FixedFormat.from(format);\n            var numeric = parseFixed(value, fixedFormat.decimals);\n            if (!fixedFormat.signed && numeric.lt(Zero)) {\n              throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n            }\n            var hex = null;\n            if (fixedFormat.signed) {\n              hex = numeric.toTwos(fixedFormat.width).toHexString();\n            } else {\n              hex = numeric.toHexString();\n              hex = (0, bytes_1.hexZeroPad)(hex, fixedFormat.width / 8);\n            }\n            var decimal = formatFixed(numeric, fixedFormat.decimals);\n            return new FixedNumber2(_constructorGuard, hex, decimal, fixedFormat);\n          };\n          FixedNumber2.fromBytes = function(value, format) {\n            if (format == null) {\n              format = \"fixed\";\n            }\n            var fixedFormat = FixedFormat.from(format);\n            if ((0, bytes_1.arrayify)(value).length > fixedFormat.width / 8) {\n              throw new Error(\"overflow\");\n            }\n            var numeric = bignumber_1.BigNumber.from(value);\n            if (fixedFormat.signed) {\n              numeric = numeric.fromTwos(fixedFormat.width);\n            }\n            var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n            var decimal = formatFixed(numeric, fixedFormat.decimals);\n            return new FixedNumber2(_constructorGuard, hex, decimal, fixedFormat);\n          };\n          FixedNumber2.from = function(value, format) {\n            if (typeof value === \"string\") {\n              return FixedNumber2.fromString(value, format);\n            }\n            if ((0, bytes_1.isBytes)(value)) {\n              return FixedNumber2.fromBytes(value, format);\n            }\n            try {\n              return FixedNumber2.fromValue(value, 0, format);\n            } catch (error) {\n              if (error.code !== logger_1.Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n              }\n            }\n            return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n          };\n          FixedNumber2.isFixedNumber = function(value) {\n            return !!(value && value._isFixedNumber);\n          };\n          return FixedNumber2;\n        }()\n      );\n      exports3.FixedNumber = FixedNumber;\n      var ONE = FixedNumber.from(1);\n      var BUMP = FixedNumber.from(\"0.5\");\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/index.js\n  var require_lib33 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3._base36To16 = exports3._base16To36 = exports3.parseFixed = exports3.FixedNumber = exports3.FixedFormat = exports3.formatFixed = exports3.BigNumber = void 0;\n      var bignumber_1 = require_bignumber2();\n      Object.defineProperty(exports3, \"BigNumber\", { enumerable: true, get: function() {\n        return bignumber_1.BigNumber;\n      } });\n      var fixednumber_1 = require_fixednumber2();\n      Object.defineProperty(exports3, \"formatFixed\", { enumerable: true, get: function() {\n        return fixednumber_1.formatFixed;\n      } });\n      Object.defineProperty(exports3, \"FixedFormat\", { enumerable: true, get: function() {\n        return fixednumber_1.FixedFormat;\n      } });\n      Object.defineProperty(exports3, \"FixedNumber\", { enumerable: true, get: function() {\n        return fixednumber_1.FixedNumber;\n      } });\n      Object.defineProperty(exports3, \"parseFixed\", { enumerable: true, get: function() {\n        return fixednumber_1.parseFixed;\n      } });\n      var bignumber_2 = require_bignumber2();\n      Object.defineProperty(exports3, \"_base16To36\", { enumerable: true, get: function() {\n        return bignumber_2._base16To36;\n      } });\n      Object.defineProperty(exports3, \"_base36To16\", { enumerable: true, get: function() {\n        return bignumber_2._base36To16;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib/index.js\n  var require_lib34 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.keccak256 = void 0;\n      var js_sha3_1 = __importDefault2(require_sha3());\n      var bytes_1 = require_lib2();\n      function keccak2562(data) {\n        return \"0x\" + js_sha3_1.default.keccak_256((0, bytes_1.arrayify)(data));\n      }\n      exports3.keccak256 = keccak2562;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/_version.js\n  var require_version28 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/_version.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.version = void 0;\n      exports3.version = \"strings/5.7.0\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/utf8.js\n  var require_utf82 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/utf8.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.toUtf8CodePoints = exports3.toUtf8String = exports3._toUtf8String = exports3._toEscapedUtf8String = exports3.toUtf8Bytes = exports3.Utf8ErrorFuncs = exports3.Utf8ErrorReason = exports3.UnicodeNormalizationForm = void 0;\n      var bytes_1 = require_lib2();\n      var logger_1 = require_lib();\n      var _version_1 = require_version28();\n      var logger = new logger_1.Logger(_version_1.version);\n      var UnicodeNormalizationForm;\n      (function(UnicodeNormalizationForm2) {\n        UnicodeNormalizationForm2[\"current\"] = \"\";\n        UnicodeNormalizationForm2[\"NFC\"] = \"NFC\";\n        UnicodeNormalizationForm2[\"NFD\"] = \"NFD\";\n        UnicodeNormalizationForm2[\"NFKC\"] = \"NFKC\";\n        UnicodeNormalizationForm2[\"NFKD\"] = \"NFKD\";\n      })(UnicodeNormalizationForm = exports3.UnicodeNormalizationForm || (exports3.UnicodeNormalizationForm = {}));\n      var Utf8ErrorReason;\n      (function(Utf8ErrorReason2) {\n        Utf8ErrorReason2[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n        Utf8ErrorReason2[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n        Utf8ErrorReason2[\"OVERRUN\"] = \"string overrun\";\n        Utf8ErrorReason2[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n        Utf8ErrorReason2[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n        Utf8ErrorReason2[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n        Utf8ErrorReason2[\"OVERLONG\"] = \"overlong representation\";\n      })(Utf8ErrorReason = exports3.Utf8ErrorReason || (exports3.Utf8ErrorReason = {}));\n      function errorFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        return logger.throwArgumentError(\"invalid codepoint at offset \" + offset + \"; \" + reason, \"bytes\", bytes2);\n      }\n      function ignoreFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n          var i = 0;\n          for (var o = offset + 1; o < bytes2.length; o++) {\n            if (bytes2[o] >> 6 !== 2) {\n              break;\n            }\n            i++;\n          }\n          return i;\n        }\n        if (reason === Utf8ErrorReason.OVERRUN) {\n          return bytes2.length - offset - 1;\n        }\n        return 0;\n      }\n      function replaceFunc2(reason, offset, bytes2, output2, badCodepoint) {\n        if (reason === Utf8ErrorReason.OVERLONG) {\n          output2.push(badCodepoint);\n          return 0;\n        }\n        output2.push(65533);\n        return ignoreFunc2(reason, offset, bytes2, output2, badCodepoint);\n      }\n      exports3.Utf8ErrorFuncs = Object.freeze({\n        error: errorFunc2,\n        ignore: ignoreFunc2,\n        replace: replaceFunc2\n      });\n      function getUtf8CodePoints2(bytes2, onError) {\n        if (onError == null) {\n          onError = exports3.Utf8ErrorFuncs.error;\n        }\n        bytes2 = (0, bytes_1.arrayify)(bytes2);\n        var result = [];\n        var i = 0;\n        while (i < bytes2.length) {\n          var c = bytes2[i++];\n          if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n          }\n          var extraLength = null;\n          var overlongMask = null;\n          if ((c & 224) === 192) {\n            extraLength = 1;\n            overlongMask = 127;\n          } else if ((c & 240) === 224) {\n            extraLength = 2;\n            overlongMask = 2047;\n          } else if ((c & 248) === 240) {\n            extraLength = 3;\n            overlongMask = 65535;\n          } else {\n            if ((c & 192) === 128) {\n              i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes2, result);\n            } else {\n              i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes2, result);\n            }\n            continue;\n          }\n          if (i - 1 + extraLength >= bytes2.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes2, result);\n            continue;\n          }\n          var res = c & (1 << 8 - extraLength - 1) - 1;\n          for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes2[i];\n            if ((nextChar & 192) != 128) {\n              i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes2, result);\n              res = null;\n              break;\n            }\n            ;\n            res = res << 6 | nextChar & 63;\n            i++;\n          }\n          if (res === null) {\n            continue;\n          }\n          if (res > 1114111) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          if (res >= 55296 && res <= 57343) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes2, result, res);\n            continue;\n          }\n          result.push(res);\n        }\n        return result;\n      }\n      function toUtf8Bytes2(str, form) {\n        if (form === void 0) {\n          form = UnicodeNormalizationForm.current;\n        }\n        if (form != UnicodeNormalizationForm.current) {\n          logger.checkNormalize();\n          str = str.normalize(form);\n        }\n        var result = [];\n        for (var i = 0; i < str.length; i++) {\n          var c = str.charCodeAt(i);\n          if (c < 128) {\n            result.push(c);\n          } else if (c < 2048) {\n            result.push(c >> 6 | 192);\n            result.push(c & 63 | 128);\n          } else if ((c & 64512) == 55296) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 64512) !== 56320) {\n              throw new Error(\"invalid utf-8 string\");\n            }\n            var pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);\n            result.push(pair >> 18 | 240);\n            result.push(pair >> 12 & 63 | 128);\n            result.push(pair >> 6 & 63 | 128);\n            result.push(pair & 63 | 128);\n          } else {\n            result.push(c >> 12 | 224);\n            result.push(c >> 6 & 63 | 128);\n            result.push(c & 63 | 128);\n          }\n        }\n        return (0, bytes_1.arrayify)(result);\n      }\n      exports3.toUtf8Bytes = toUtf8Bytes2;\n      function escapeChar(value) {\n        var hex = \"0000\" + value.toString(16);\n        return \"\\\\u\" + hex.substring(hex.length - 4);\n      }\n      function _toEscapedUtf8String(bytes2, onError) {\n        return '\"' + getUtf8CodePoints2(bytes2, onError).map(function(codePoint) {\n          if (codePoint < 256) {\n            switch (codePoint) {\n              case 8:\n                return \"\\\\b\";\n              case 9:\n                return \"\\\\t\";\n              case 10:\n                return \"\\\\n\";\n              case 13:\n                return \"\\\\r\";\n              case 34:\n                return '\\\\\"';\n              case 92:\n                return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n              return String.fromCharCode(codePoint);\n            }\n          }\n          if (codePoint <= 65535) {\n            return escapeChar(codePoint);\n          }\n          codePoint -= 65536;\n          return escapeChar((codePoint >> 10 & 1023) + 55296) + escapeChar((codePoint & 1023) + 56320);\n        }).join(\"\") + '\"';\n      }\n      exports3._toEscapedUtf8String = _toEscapedUtf8String;\n      function _toUtf8String2(codePoints) {\n        return codePoints.map(function(codePoint) {\n          if (codePoint <= 65535) {\n            return String.fromCharCode(codePoint);\n          }\n          codePoint -= 65536;\n          return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);\n        }).join(\"\");\n      }\n      exports3._toUtf8String = _toUtf8String2;\n      function toUtf8String2(bytes2, onError) {\n        return _toUtf8String2(getUtf8CodePoints2(bytes2, onError));\n      }\n      exports3.toUtf8String = toUtf8String2;\n      function toUtf8CodePoints2(str, form) {\n        if (form === void 0) {\n          form = UnicodeNormalizationForm.current;\n        }\n        return getUtf8CodePoints2(toUtf8Bytes2(str, form));\n      }\n      exports3.toUtf8CodePoints = toUtf8CodePoints2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/bytes32.js\n  var require_bytes322 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/bytes32.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.parseBytes32String = exports3.formatBytes32String = void 0;\n      var constants_1 = require_lib8();\n      var bytes_1 = require_lib2();\n      var utf8_1 = require_utf82();\n      function formatBytes32String(text) {\n        var bytes2 = (0, utf8_1.toUtf8Bytes)(text);\n        if (bytes2.length > 31) {\n          throw new Error(\"bytes32 string must be less than 32 bytes\");\n        }\n        return (0, bytes_1.hexlify)((0, bytes_1.concat)([bytes2, constants_1.HashZero]).slice(0, 32));\n      }\n      exports3.formatBytes32String = formatBytes32String;\n      function parseBytes32String(bytes2) {\n        var data = (0, bytes_1.arrayify)(bytes2);\n        if (data.length !== 32) {\n          throw new Error(\"invalid bytes32 - not 32 bytes long\");\n        }\n        if (data[31] !== 0) {\n          throw new Error(\"invalid bytes32 string - no null terminator\");\n        }\n        var length = 31;\n        while (data[length - 1] === 0) {\n          length--;\n        }\n        return (0, utf8_1.toUtf8String)(data.slice(0, length));\n      }\n      exports3.parseBytes32String = parseBytes32String;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/idna.js\n  var require_idna2 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/idna.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.nameprep = exports3._nameprepTableC = exports3._nameprepTableB2 = exports3._nameprepTableA1 = void 0;\n      var utf8_1 = require_utf82();\n      function bytes2(data) {\n        if (data.length % 4 !== 0) {\n          throw new Error(\"bad data\");\n        }\n        var result = [];\n        for (var i = 0; i < data.length; i += 4) {\n          result.push(parseInt(data.substring(i, i + 4), 16));\n        }\n        return result;\n      }\n      function createTable(data, func) {\n        if (!func) {\n          func = function(value) {\n            return [parseInt(value, 16)];\n          };\n        }\n        var lo = 0;\n        var result = {};\n        data.split(\",\").forEach(function(pair) {\n          var comps = pair.split(\":\");\n          lo += parseInt(comps[0], 16);\n          result[lo] = func(comps[1]);\n        });\n        return result;\n      }\n      function createRangeTable(data) {\n        var hi = 0;\n        return data.split(\",\").map(function(v) {\n          var comps = v.split(\"-\");\n          if (comps.length === 1) {\n            comps[1] = \"0\";\n          } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n          }\n          var lo = hi + parseInt(comps[0], 16);\n          hi = parseInt(comps[1], 16);\n          return { l: lo, h: hi };\n        });\n      }\n      function matchMap(value, ranges) {\n        var lo = 0;\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i];\n          lo += range.l;\n          if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n              continue;\n            }\n            return range;\n          }\n        }\n        return null;\n      }\n      var Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n      var Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(function(v) {\n        return parseInt(v, 16);\n      });\n      var Table_B_2_ranges = [\n        { h: 25, s: 32, l: 65 },\n        { h: 30, s: 32, e: [23], l: 127 },\n        { h: 54, s: 1, e: [48], l: 64, d: 2 },\n        { h: 14, s: 1, l: 57, d: 2 },\n        { h: 44, s: 1, l: 17, d: 2 },\n        { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n        { h: 16, s: 1, l: 68, d: 2 },\n        { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n        { h: 26, s: 32, e: [17], l: 435 },\n        { h: 22, s: 1, l: 71, d: 2 },\n        { h: 15, s: 80, l: 40 },\n        { h: 31, s: 32, l: 16 },\n        { h: 32, s: 1, l: 80, d: 2 },\n        { h: 52, s: 1, l: 42, d: 2 },\n        { h: 12, s: 1, l: 55, d: 2 },\n        { h: 40, s: 1, e: [38], l: 15, d: 2 },\n        { h: 14, s: 1, l: 48, d: 2 },\n        { h: 37, s: 48, l: 49 },\n        { h: 148, s: 1, l: 6351, d: 2 },\n        { h: 88, s: 1, l: 160, d: 2 },\n        { h: 15, s: 16, l: 704 },\n        { h: 25, s: 26, l: 854 },\n        { h: 25, s: 32, l: 55915 },\n        { h: 37, s: 40, l: 1247 },\n        { h: 25, s: -119711, l: 53248 },\n        { h: 25, s: -119763, l: 52 },\n        { h: 25, s: -119815, l: 52 },\n        { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n        { h: 25, s: -119919, l: 52 },\n        { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n        { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n        { h: 25, s: -120075, l: 52 },\n        { h: 25, s: -120127, l: 52 },\n        { h: 25, s: -120179, l: 52 },\n        { h: 25, s: -120231, l: 52 },\n        { h: 25, s: -120283, l: 52 },\n        { h: 25, s: -120335, l: 52 },\n        { h: 24, s: -119543, e: [17], l: 56 },\n        { h: 24, s: -119601, e: [17], l: 58 },\n        { h: 24, s: -119659, e: [17], l: 58 },\n        { h: 24, s: -119717, e: [17], l: 58 },\n        { h: 24, s: -119775, e: [17], l: 58 }\n      ];\n      var Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\n      var Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\n      var Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n      var Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n      function flatten2(values) {\n        return values.reduce(function(accum, value) {\n          value.forEach(function(value2) {\n            accum.push(value2);\n          });\n          return accum;\n        }, []);\n      }\n      function _nameprepTableA1(codepoint) {\n        return !!matchMap(codepoint, Table_A_1_ranges);\n      }\n      exports3._nameprepTableA1 = _nameprepTableA1;\n      function _nameprepTableB2(codepoint) {\n        var range = matchMap(codepoint, Table_B_2_ranges);\n        if (range) {\n          return [codepoint + range.s];\n        }\n        var codes = Table_B_2_lut_abs[codepoint];\n        if (codes) {\n          return codes;\n        }\n        var shift = Table_B_2_lut_rel[codepoint];\n        if (shift) {\n          return [codepoint + shift[0]];\n        }\n        var complex = Table_B_2_complex[codepoint];\n        if (complex) {\n          return complex;\n        }\n        return null;\n      }\n      exports3._nameprepTableB2 = _nameprepTableB2;\n      function _nameprepTableC(codepoint) {\n        return !!matchMap(codepoint, Table_C_ranges);\n      }\n      exports3._nameprepTableC = _nameprepTableC;\n      function nameprep(value) {\n        if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n          return value.toLowerCase();\n        }\n        var codes = (0, utf8_1.toUtf8CodePoints)(value);\n        codes = flatten2(codes.map(function(code) {\n          if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n          }\n          if (code >= 65024 && code <= 65039) {\n            return [];\n          }\n          var codesTableB2 = _nameprepTableB2(code);\n          if (codesTableB2) {\n            return codesTableB2;\n          }\n          return [code];\n        }));\n        codes = (0, utf8_1.toUtf8CodePoints)((0, utf8_1._toUtf8String)(codes), utf8_1.UnicodeNormalizationForm.NFKC);\n        codes.forEach(function(code) {\n          if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n          }\n        });\n        codes.forEach(function(code) {\n          if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n          }\n        });\n        var name = (0, utf8_1._toUtf8String)(codes);\n        if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n          throw new Error(\"invalid hyphen\");\n        }\n        return name;\n      }\n      exports3.nameprep = nameprep;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/index.js\n  var require_lib35 = __commonJS({\n    \"../../../node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.nameprep = exports3.parseBytes32String = exports3.formatBytes32String = exports3.UnicodeNormalizationForm = exports3.Utf8ErrorReason = exports3.Utf8ErrorFuncs = exports3.toUtf8String = exports3.toUtf8CodePoints = exports3.toUtf8Bytes = exports3._toEscapedUtf8String = void 0;\n      var bytes32_1 = require_bytes322();\n      Object.defineProperty(exports3, \"formatBytes32String\", { enumerable: true, get: function() {\n        return bytes32_1.formatBytes32String;\n      } });\n      Object.defineProperty(exports3, \"parseBytes32String\", { enumerable: true, get: function() {\n        return bytes32_1.parseBytes32String;\n      } });\n      var idna_1 = require_idna2();\n      Object.defineProperty(exports3, \"nameprep\", { enumerable: true, get: function() {\n        return idna_1.nameprep;\n      } });\n      var utf8_1 = require_utf82();\n      Object.defineProperty(exports3, \"_toEscapedUtf8String\", { enumerable: true, get: function() {\n        return utf8_1._toEscapedUtf8String;\n      } });\n      Object.defineProperty(exports3, \"toUtf8Bytes\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8Bytes;\n      } });\n      Object.defineProperty(exports3, \"toUtf8CodePoints\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8CodePoints;\n      } });\n      Object.defineProperty(exports3, \"toUtf8String\", { enumerable: true, get: function() {\n        return utf8_1.toUtf8String;\n      } });\n      Object.defineProperty(exports3, \"UnicodeNormalizationForm\", { enumerable: true, get: function() {\n        return utf8_1.UnicodeNormalizationForm;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorFuncs\", { enumerable: true, get: function() {\n        return utf8_1.Utf8ErrorFuncs;\n      } });\n      Object.defineProperty(exports3, \"Utf8ErrorReason\", { enumerable: true, get: function() {\n        return utf8_1.Utf8ErrorReason;\n      } });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@uniswap+sdk-core@7.7.2/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js\n  var require_sdk_core_cjs_development = __commonJS({\n    \"../../../node_modules/.pnpm/@uniswap+sdk-core@7.7.2/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      function _interopDefault(ex) {\n        return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n      }\n      var JSBI = _interopDefault(require_jsbi_umd());\n      var invariant = _interopDefault(require_tiny_invariant_cjs());\n      var _Decimal = _interopDefault(require_decimal());\n      var _Big = _interopDefault(require_big());\n      var toFormat = _interopDefault(require_toFormat());\n      var bignumber = require_lib33();\n      var address = require_lib7();\n      var bytes2 = require_lib2();\n      var keccak2562 = require_lib34();\n      var strings = require_lib35();\n      function _defineProperties(e, r) {\n        for (var t = 0; t < r.length; t++) {\n          var o = r[t];\n          o.enumerable = o.enumerable || false, o.configurable = true, \"value\" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);\n        }\n      }\n      function _createClass(e, r, t) {\n        return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n          writable: false\n        }), e;\n      }\n      function _extends() {\n        return _extends = Object.assign ? Object.assign.bind() : function(n2) {\n          for (var e = 1; e < arguments.length; e++) {\n            var t = arguments[e];\n            for (var r in t)\n              ({}).hasOwnProperty.call(t, r) && (n2[r] = t[r]);\n          }\n          return n2;\n        }, _extends.apply(null, arguments);\n      }\n      function _inheritsLoose(t, o) {\n        t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);\n      }\n      function _setPrototypeOf(t, e) {\n        return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {\n          return t2.__proto__ = e2, t2;\n        }, _setPrototypeOf(t, e);\n      }\n      function _toPrimitive(t, r) {\n        if (\"object\" != typeof t || !t)\n          return t;\n        var e = t[Symbol.toPrimitive];\n        if (void 0 !== e) {\n          var i = e.call(t, r || \"default\");\n          if (\"object\" != typeof i)\n            return i;\n          throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return (\"string\" === r ? String : Number)(t);\n      }\n      function _toPropertyKey(t) {\n        var i = _toPrimitive(t, \"string\");\n        return \"symbol\" == typeof i ? i : i + \"\";\n      }\n      (function(ChainId) {\n        ChainId[ChainId[\"MAINNET\"] = 1] = \"MAINNET\";\n        ChainId[ChainId[\"GOERLI\"] = 5] = \"GOERLI\";\n        ChainId[ChainId[\"SEPOLIA\"] = 11155111] = \"SEPOLIA\";\n        ChainId[ChainId[\"OPTIMISM\"] = 10] = \"OPTIMISM\";\n        ChainId[ChainId[\"OPTIMISM_GOERLI\"] = 420] = \"OPTIMISM_GOERLI\";\n        ChainId[ChainId[\"OPTIMISM_SEPOLIA\"] = 11155420] = \"OPTIMISM_SEPOLIA\";\n        ChainId[ChainId[\"ARBITRUM_ONE\"] = 42161] = \"ARBITRUM_ONE\";\n        ChainId[ChainId[\"ARBITRUM_GOERLI\"] = 421613] = \"ARBITRUM_GOERLI\";\n        ChainId[ChainId[\"ARBITRUM_SEPOLIA\"] = 421614] = \"ARBITRUM_SEPOLIA\";\n        ChainId[ChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n        ChainId[ChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n        ChainId[ChainId[\"CELO\"] = 42220] = \"CELO\";\n        ChainId[ChainId[\"CELO_ALFAJORES\"] = 44787] = \"CELO_ALFAJORES\";\n        ChainId[ChainId[\"GNOSIS\"] = 100] = \"GNOSIS\";\n        ChainId[ChainId[\"MOONBEAM\"] = 1284] = \"MOONBEAM\";\n        ChainId[ChainId[\"BNB\"] = 56] = \"BNB\";\n        ChainId[ChainId[\"AVALANCHE\"] = 43114] = \"AVALANCHE\";\n        ChainId[ChainId[\"BASE_GOERLI\"] = 84531] = \"BASE_GOERLI\";\n        ChainId[ChainId[\"BASE_SEPOLIA\"] = 84532] = \"BASE_SEPOLIA\";\n        ChainId[ChainId[\"BASE\"] = 8453] = \"BASE\";\n        ChainId[ChainId[\"ZORA\"] = 7777777] = \"ZORA\";\n        ChainId[ChainId[\"ZORA_SEPOLIA\"] = 999999999] = \"ZORA_SEPOLIA\";\n        ChainId[ChainId[\"ROOTSTOCK\"] = 30] = \"ROOTSTOCK\";\n        ChainId[ChainId[\"BLAST\"] = 81457] = \"BLAST\";\n        ChainId[ChainId[\"ZKSYNC\"] = 324] = \"ZKSYNC\";\n        ChainId[ChainId[\"WORLDCHAIN\"] = 480] = \"WORLDCHAIN\";\n        ChainId[ChainId[\"UNICHAIN_SEPOLIA\"] = 1301] = \"UNICHAIN_SEPOLIA\";\n        ChainId[ChainId[\"UNICHAIN\"] = 130] = \"UNICHAIN\";\n        ChainId[ChainId[\"MONAD_TESTNET\"] = 10143] = \"MONAD_TESTNET\";\n        ChainId[ChainId[\"SONEIUM\"] = 1868] = \"SONEIUM\";\n      })(exports3.ChainId || (exports3.ChainId = {}));\n      var SUPPORTED_CHAINS = [exports3.ChainId.MAINNET, exports3.ChainId.OPTIMISM, exports3.ChainId.OPTIMISM_GOERLI, exports3.ChainId.OPTIMISM_SEPOLIA, exports3.ChainId.ARBITRUM_ONE, exports3.ChainId.ARBITRUM_GOERLI, exports3.ChainId.ARBITRUM_SEPOLIA, exports3.ChainId.POLYGON, exports3.ChainId.POLYGON_MUMBAI, exports3.ChainId.GOERLI, exports3.ChainId.SEPOLIA, exports3.ChainId.CELO_ALFAJORES, exports3.ChainId.CELO, exports3.ChainId.BNB, exports3.ChainId.AVALANCHE, exports3.ChainId.BASE, exports3.ChainId.BASE_GOERLI, exports3.ChainId.BASE_SEPOLIA, exports3.ChainId.ZORA, exports3.ChainId.ZORA_SEPOLIA, exports3.ChainId.ROOTSTOCK, exports3.ChainId.BLAST, exports3.ChainId.ZKSYNC, exports3.ChainId.WORLDCHAIN, exports3.ChainId.UNICHAIN_SEPOLIA, exports3.ChainId.UNICHAIN, exports3.ChainId.MONAD_TESTNET, exports3.ChainId.SONEIUM];\n      (function(NativeCurrencyName) {\n        NativeCurrencyName[\"ETHER\"] = \"ETH\";\n        NativeCurrencyName[\"MATIC\"] = \"MATIC\";\n        NativeCurrencyName[\"CELO\"] = \"CELO\";\n        NativeCurrencyName[\"GNOSIS\"] = \"XDAI\";\n        NativeCurrencyName[\"MOONBEAM\"] = \"GLMR\";\n        NativeCurrencyName[\"BNB\"] = \"BNB\";\n        NativeCurrencyName[\"AVAX\"] = \"AVAX\";\n        NativeCurrencyName[\"ROOTSTOCK\"] = \"RBTC\";\n      })(exports3.NativeCurrencyName || (exports3.NativeCurrencyName = {}));\n      var _V2_FACTORY_ADDRESSES;\n      var _V2_ROUTER_ADDRESSES;\n      var _CHAIN_TO_ADDRESSES_M;\n      var _GOVERNANCE_ALPHA_V1_;\n      var _GOVERNANCE_BRAVO_ADD;\n      var _MERKLE_DISTRIBUTOR_A;\n      var _ARGENT_WALLET_DETECT;\n      var _SOCKS_CONTROLLER_ADD;\n      var DEFAULT_NETWORKS = [exports3.ChainId.MAINNET, exports3.ChainId.GOERLI, exports3.ChainId.SEPOLIA];\n      function constructSameAddressMap(address2, additionalNetworks) {\n        if (additionalNetworks === void 0) {\n          additionalNetworks = [];\n        }\n        return DEFAULT_NETWORKS.concat(additionalNetworks).reduce(function(memo, chainId) {\n          memo[chainId] = address2;\n          return memo;\n        }, {});\n      }\n      var UNI_ADDRESSES = /* @__PURE__ */ constructSameAddressMap(\"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\", [exports3.ChainId.OPTIMISM, exports3.ChainId.ARBITRUM_ONE, exports3.ChainId.POLYGON, exports3.ChainId.POLYGON_MUMBAI, exports3.ChainId.SEPOLIA]);\n      var UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = \"0x8B799381ac40b838BBA4131ffB26197C432AFe78\";\n      var V2_FACTORY_ADDRESS = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\";\n      var V2_FACTORY_ADDRESSES = (_V2_FACTORY_ADDRESSES = {}, _V2_FACTORY_ADDRESSES[exports3.ChainId.MAINNET] = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", _V2_FACTORY_ADDRESSES[exports3.ChainId.GOERLI] = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", _V2_FACTORY_ADDRESSES[exports3.ChainId.SEPOLIA] = \"0xF62c03E08ada871A0bEb309762E260a7a6a880E6\", _V2_FACTORY_ADDRESSES[exports3.ChainId.OPTIMISM] = \"0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf\", _V2_FACTORY_ADDRESSES[exports3.ChainId.ARBITRUM_ONE] = \"0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9\", _V2_FACTORY_ADDRESSES[exports3.ChainId.AVALANCHE] = \"0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C\", _V2_FACTORY_ADDRESSES[exports3.ChainId.BASE_SEPOLIA] = \"0x7Ae58f10f7849cA6F5fB71b7f45CB416c9204b1e\", _V2_FACTORY_ADDRESSES[exports3.ChainId.BASE] = \"0x8909dc15e40173ff4699343b6eb8132c65e18ec6\", _V2_FACTORY_ADDRESSES[exports3.ChainId.BNB] = \"0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6\", _V2_FACTORY_ADDRESSES[exports3.ChainId.POLYGON] = \"0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C\", _V2_FACTORY_ADDRESSES[exports3.ChainId.CELO] = \"0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f\", _V2_FACTORY_ADDRESSES[exports3.ChainId.BLAST] = \"0x5C346464d33F90bABaf70dB6388507CC889C1070\", _V2_FACTORY_ADDRESSES[exports3.ChainId.WORLDCHAIN] = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", _V2_FACTORY_ADDRESSES[exports3.ChainId.UNICHAIN_SEPOLIA] = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", _V2_FACTORY_ADDRESSES[exports3.ChainId.UNICHAIN] = \"0x1f98400000000000000000000000000000000002\", _V2_FACTORY_ADDRESSES[exports3.ChainId.MONAD_TESTNET] = \"0x733e88f248b742db6c14c0b1713af5ad7fdd59d0\", _V2_FACTORY_ADDRESSES[exports3.ChainId.SONEIUM] = \"0x97febbc2adbd5644ba22736e962564b23f5828ce\", _V2_FACTORY_ADDRESSES);\n      var V2_ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n      var V2_ROUTER_ADDRESSES = (_V2_ROUTER_ADDRESSES = {}, _V2_ROUTER_ADDRESSES[exports3.ChainId.MAINNET] = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\", _V2_ROUTER_ADDRESSES[exports3.ChainId.GOERLI] = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\", _V2_ROUTER_ADDRESSES[exports3.ChainId.SEPOLIA] = \"0xeE567Fe1712Faf6149d80dA1E6934E354124CfE3\", _V2_ROUTER_ADDRESSES[exports3.ChainId.ARBITRUM_ONE] = \"0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24\", _V2_ROUTER_ADDRESSES[exports3.ChainId.OPTIMISM] = \"0x4a7b5da61326a6379179b40d00f57e5bbdc962c2\", _V2_ROUTER_ADDRESSES[exports3.ChainId.BASE_SEPOLIA] = \"0x1689E7B1F10000AE47eBfE339a4f69dECd19F602\", _V2_ROUTER_ADDRESSES[exports3.ChainId.BASE] = \"0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24\", _V2_ROUTER_ADDRESSES[exports3.ChainId.AVALANCHE] = \"0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24\", _V2_ROUTER_ADDRESSES[exports3.ChainId.BNB] = \"0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24\", _V2_ROUTER_ADDRESSES[exports3.ChainId.POLYGON] = \"0xedf6066a2b290c185783862c7f4776a2c8077ad1\", _V2_ROUTER_ADDRESSES[exports3.ChainId.BLAST] = \"0xBB66Eb1c5e875933D44DAe661dbD80e5D9B03035\", _V2_ROUTER_ADDRESSES[exports3.ChainId.WORLDCHAIN] = \"0x541aB7c31A119441eF3575F6973277DE0eF460bd\", _V2_ROUTER_ADDRESSES[exports3.ChainId.UNICHAIN_SEPOLIA] = \"0x920b806E40A00E02E7D2b94fFc89860fDaEd3640\", _V2_ROUTER_ADDRESSES[exports3.ChainId.UNICHAIN] = \"0x284f11109359a7e1306c3e447ef14d38400063ff\", _V2_ROUTER_ADDRESSES[exports3.ChainId.MONAD_TESTNET] = \"0xfb8e1c3b833f9e67a71c859a132cf783b645e436\", _V2_ROUTER_ADDRESSES[exports3.ChainId.SONEIUM] = \"0x273f68c234fa55b550b40e563c4a488e0d334320\", _V2_ROUTER_ADDRESSES);\n      var DEFAULT_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x1F98431c8aD98523631AE4a59f267346ea31F984\",\n        multicallAddress: \"0x1F98415757620B543A52E61c46B32eB19261F984\",\n        quoterAddress: \"0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6\",\n        v3MigratorAddress: \"0xA5644E29708357803b5A882D272c41cC0dF92B34\",\n        nonfungiblePositionManagerAddress: \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\"\n      };\n      var MAINNET_ADDRESSES = /* @__PURE__ */ _extends({}, DEFAULT_ADDRESSES, {\n        mixedRouteQuoterV1Address: \"0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E\",\n        v4PoolManagerAddress: \"0x000000000004444c5dc75cB358380D2e3dE08A90\",\n        v4PositionManagerAddress: \"0xbd216513d74c8cf14cf4747e6aaa6420ff64ee9e\",\n        v4StateView: \"0x7ffe42c4a5deea5b0fec41c94c136cf115597227\",\n        v4QuoterAddress: \"0x52f0e24d1c21c8a0cb1e5a5dd6198556bd9e1203\"\n      });\n      var GOERLI_ADDRESSES = /* @__PURE__ */ _extends({}, DEFAULT_ADDRESSES, {\n        mixedRouteQuoterV1Address: \"0xBa60b6e6fF25488308789E6e0A65D838be34194e\"\n      });\n      var OPTIMISM_ADDRESSES = /* @__PURE__ */ _extends({}, DEFAULT_ADDRESSES, {\n        v4PoolManagerAddress: \"0x9a13f98cb987694c9f086b1f5eb990eea8264ec3\",\n        v4PositionManagerAddress: \"0x3c3ea4b57a46241e54610e5f022e5c45859a1017\",\n        v4StateView: \"0xc18a3169788f4f75a170290584eca6395c75ecdb\",\n        v4QuoterAddress: \"0x1f3131a13296fb91c90870043742c3cdbff1a8d7\"\n      });\n      var ARBITRUM_ONE_ADDRESSES = /* @__PURE__ */ _extends({}, DEFAULT_ADDRESSES, {\n        multicallAddress: \"0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB\",\n        tickLensAddress: \"0xbfd8137f7d1516D3ea5cA83523914859ec47F573\",\n        v4PoolManagerAddress: \"0x360e68faccca8ca495c1b759fd9eee466db9fb32\",\n        v4PositionManagerAddress: \"0xd88f38f930b7952f2db2432cb002e7abbf3dd869\",\n        v4StateView: \"0x76fd297e2d437cd7f76d50f01afe6160f86e9990\",\n        v4QuoterAddress: \"0x3972c00f7ed4885e145823eb7c655375d275a1c5\"\n      });\n      var POLYGON_ADDRESSES = /* @__PURE__ */ _extends({}, DEFAULT_ADDRESSES, {\n        v4PoolManagerAddress: \"0x67366782805870060151383f4bbff9dab53e5cd6\",\n        v4PositionManagerAddress: \"0x1ec2ebf4f37e7363fdfe3551602425af0b3ceef9\",\n        v4StateView: \"0x5ea1bd7974c8a611cbab0bdcafcb1d9cc9b3ba5a\",\n        v4QuoterAddress: \"0xb3d5c3dfc3a7aebff71895a7191796bffc2c81b9\"\n      });\n      var CELO_ADDRESSES = {\n        v3CoreFactoryAddress: \"0xAfE208a311B21f13EF87E33A90049fC17A7acDEc\",\n        multicallAddress: \"0x633987602DE5C4F337e3DbF265303A1080324204\",\n        quoterAddress: \"0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8\",\n        v3MigratorAddress: \"0x3cFd4d48EDfDCC53D3f173F596f621064614C582\",\n        nonfungiblePositionManagerAddress: \"0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A\",\n        tickLensAddress: \"0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D\"\n      };\n      var BNB_ADDRESSES = {\n        v3CoreFactoryAddress: \"0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7\",\n        multicallAddress: \"0x963Df249eD09c358A4819E39d9Cd5736c3087184\",\n        quoterAddress: \"0x78D78E420Da98ad378D7799bE8f4AF69033EB077\",\n        v3MigratorAddress: \"0x32681814957e0C13117ddc0c2aba232b5c9e760f\",\n        nonfungiblePositionManagerAddress: \"0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613\",\n        tickLensAddress: \"0xD9270014D396281579760619CCf4c3af0501A47C\",\n        swapRouter02Address: \"0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2\",\n        v4PoolManagerAddress: \"0x28e2ea090877bf75740558f6bfb36a5ffee9e9df\",\n        v4PositionManagerAddress: \"0x7a4a5c919ae2541aed11041a1aeee68f1287f95b\",\n        v4StateView: \"0xd13dd3d6e93f276fafc9db9e6bb47c1180aee0c4\",\n        v4QuoterAddress: \"0x9f75dd27d6664c475b90e105573e550ff69437b0\"\n      };\n      var OPTIMISM_GOERLI_ADDRESSES = {\n        v3CoreFactoryAddress: \"0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10\",\n        multicallAddress: \"0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd\",\n        quoterAddress: \"0x9569CbA925c8ca2248772A9A4976A516743A246F\",\n        v3MigratorAddress: \"0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8\",\n        nonfungiblePositionManagerAddress: \"0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6\",\n        tickLensAddress: \"0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e\"\n      };\n      var OPTIMISM_SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF\",\n        multicallAddress: \"0x80e4e06841bb76AA9735E0448cB8d003C0EF009a\",\n        quoterAddress: \"0x0FBEa6cf957d95ee9313490050F6A0DA68039404\",\n        v3MigratorAddress: \"0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07\",\n        nonfungiblePositionManagerAddress: \"0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d\",\n        tickLensAddress: \"0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5\",\n        swapRouter02Address: \"0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4\"\n      };\n      var ARBITRUM_GOERLI_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6\",\n        multicallAddress: \"0x8260CB40247290317a4c062F3542622367F206Ee\",\n        quoterAddress: \"0x1dd92b83591781D0C6d98d07391eea4b9a6008FA\",\n        v3MigratorAddress: \"0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3\",\n        nonfungiblePositionManagerAddress: \"0x622e4726a167799826d1E1D150b076A7725f5D81\",\n        tickLensAddress: \"0xb52429333da969a0C79a60930a4Bf0020E5D1DE8\"\n      };\n      var ARBITRUM_SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e\",\n        multicallAddress: \"0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A\",\n        quoterAddress: \"0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B\",\n        v3MigratorAddress: \"0x398f43ef2c67B941147157DA1c5a868E906E043D\",\n        nonfungiblePositionManagerAddress: \"0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65\",\n        tickLensAddress: \"0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9\",\n        swapRouter02Address: \"0x101F443B4d1b059569D643917553c771E1b9663E\",\n        v4PoolManagerAddress: \"0xFB3e0C6F74eB1a21CC1Da29aeC80D2Dfe6C9a317\",\n        v4PositionManagerAddress: \"0xAc631556d3d4019C95769033B5E719dD77124BAc\",\n        v4StateView: \"0x9d467fa9062b6e9b1a46e26007ad82db116c67cb\",\n        v4QuoterAddress: \"0x7de51022d70a725b508085468052e25e22b5c4c9\"\n      };\n      var SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x0227628f3F023bb0B980b67D528571c95c6DaC1c\",\n        multicallAddress: \"0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07\",\n        quoterAddress: \"0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3\",\n        v3MigratorAddress: \"0x729004182cF005CEC8Bd85df140094b6aCbe8b15\",\n        nonfungiblePositionManagerAddress: \"0x1238536071E1c677A632429e3655c799b22cDA52\",\n        tickLensAddress: \"0xd7f33bcdb21b359c8ee6f0251d30e94832baad07\",\n        swapRouter02Address: \"0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E\",\n        // TODO: update mixedRouteQuoterV2Address once v4 on sepolia redeployed\n        mixedRouteQuoterV2Address: \"0x4745f77b56a0e2294426e3936dc4fab68d9543cd\",\n        // TODO: update all below once v4 on sepolia redeployed\n        v4PoolManagerAddress: \"0xE03A1074c86CFeDd5C142C4F04F1a1536e203543\",\n        v4PositionManagerAddress: \"0x429ba70129df741B2Ca2a85BC3A2a3328e5c09b4\",\n        v4StateView: \"0xe1dd9c3fa50edb962e442f60dfbc432e24537e4c\",\n        v4QuoterAddress: \"0x61b3f2011a92d183c7dbadbda940a7555ccf9227\"\n      };\n      var AVALANCHE_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD\",\n        multicallAddress: \"0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2\",\n        quoterAddress: \"0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F\",\n        v3MigratorAddress: \"0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97\",\n        nonfungiblePositionManagerAddress: \"0x655C406EBFa14EE2006250925e54ec43AD184f8B\",\n        tickLensAddress: \"0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950\",\n        swapRouter02Address: \"0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE\",\n        v4PoolManagerAddress: \"0x06380c0e0912312b5150364b9dc4542ba0dbbc85\",\n        v4PositionManagerAddress: \"0xb74b1f14d2754acfcbbe1a221023a5cf50ab8acd\",\n        v4StateView: \"0xc3c9e198c735a4b97e3e683f391ccbdd60b69286\",\n        v4QuoterAddress: \"0xbe40675bb704506a3c2ccfb762dcfd1e979845c2\"\n      };\n      var BASE_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x33128a8fC17869897dcE68Ed026d694621f6FDfD\",\n        multicallAddress: \"0x091e99cb1C49331a94dD62755D168E941AbD0693\",\n        quoterAddress: \"0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a\",\n        v3MigratorAddress: \"0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7\",\n        nonfungiblePositionManagerAddress: \"0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1\",\n        tickLensAddress: \"0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d\",\n        swapRouter02Address: \"0x2626664c2603336E57B271c5C0b26F421741e481\",\n        mixedRouteQuoterV1Address: \"0xe544efae946f0008ae9a8d64493efa7886b73776\",\n        v4PoolManagerAddress: \"0x498581ff718922c3f8e6a244956af099b2652b2b\",\n        v4PositionManagerAddress: \"0x7c5f5a4bbd8fd63184577525326123b519429bdc\",\n        v4StateView: \"0xa3c0c9b65bad0b08107aa264b0f3db444b867a71\",\n        v4QuoterAddress: \"0x0d5e0f971ed27fbff6c2837bf31316121532048d\"\n      };\n      var BASE_GOERLI_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2\",\n        multicallAddress: \"0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439\",\n        quoterAddress: \"0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9\",\n        v3MigratorAddress: \"0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE\",\n        nonfungiblePositionManagerAddress: \"0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30\",\n        tickLensAddress: \"0x1acB873Ee909D0c98adB18e4474943249F931b92\",\n        swapRouter02Address: \"0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d\"\n      };\n      var BASE_SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x4752ba5DBc23f44D87826276BF6Fd6b1C372aD24\",\n        multicallAddress: \"0xd867e273eAbD6c853fCd0Ca0bFB6a3aE6491d2C1\",\n        quoterAddress: \"0xC5290058841028F1614F3A6F0F5816cAd0df5E27\",\n        v3MigratorAddress: \"0xCbf8b7f80800bd4888Fbc7bf1713B80FE4E23E10\",\n        nonfungiblePositionManagerAddress: \"0x27F971cb582BF9E50F397e4d29a5C7A34f11faA2\",\n        tickLensAddress: \"0xedf6066a2b290C185783862C7F4776A2C8077AD1\",\n        swapRouter02Address: \"0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4\",\n        // v4\n        v4PoolManagerAddress: \"0x05E73354cFDd6745C338b50BcFDfA3Aa6fA03408\",\n        v4PositionManagerAddress: \"0x4b2c77d209d3405f41a037ec6c77f7f5b8e2ca80\",\n        v4StateView: \"0x571291b572ed32ce6751a2cb2486ebee8defb9b4\",\n        v4QuoterAddress: \"0x4a6513c898fe1b2d0e78d3b0e0a4a151589b1cba\"\n      };\n      var ZORA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb\",\n        multicallAddress: \"0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15\",\n        quoterAddress: \"0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df\",\n        v3MigratorAddress: \"0x048352d8dCF13686982C799da63fA6426a9D0b60\",\n        nonfungiblePositionManagerAddress: \"0xbC91e8DfA3fF18De43853372A3d7dfe585137D78\",\n        tickLensAddress: \"0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044\",\n        swapRouter02Address: \"0x7De04c96BE5159c3b5CeffC82aa176dc81281557\",\n        v4PoolManagerAddress: \"0x0575338e4c17006ae181b47900a84404247ca30f\",\n        v4PositionManagerAddress: \"0xf66c7b99e2040f0d9b326b3b7c152e9663543d63\",\n        v4StateView: \"0x385785af07d63b50d0a0ea57c4ff89d06adf7328\",\n        v4QuoterAddress: \"0x5edaccc0660e0a2c44b06e07ce8b915e625dc2c6\"\n      };\n      var ZORA_SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x4324A677D74764f46f33ED447964252441aA8Db6\",\n        multicallAddress: \"0xA1E7e3A69671C4494EC59Dbd442de930a93F911A\",\n        quoterAddress: \"0xC195976fEF0985886E37036E2DF62bF371E12Df0\",\n        v3MigratorAddress: \"0x65ef259b31bf1d977c37e9434658694267674897\",\n        nonfungiblePositionManagerAddress: \"0xB8458EaAe43292e3c1F7994EFd016bd653d23c20\",\n        tickLensAddress: \"0x23C0F71877a1Fc4e20A78018f9831365c85f3064\"\n      };\n      var ROOTSTOCK_ADDRESSES = {\n        v3CoreFactoryAddress: \"0xaF37EC98A00FD63689CF3060BF3B6784E00caD82\",\n        multicallAddress: \"0x996a9858cDfa45Ad68E47c9A30a7201E29c6a386\",\n        quoterAddress: \"0xb51727c996C68E60F598A923a5006853cd2fEB31\",\n        v3MigratorAddress: \"0x16678977CA4ec3DAD5efc7b15780295FE5f56162\",\n        nonfungiblePositionManagerAddress: \"0x9d9386c042F194B460Ec424a1e57ACDE25f5C4b1\",\n        tickLensAddress: \"0x55B9dF5bF68ADe972191a91980459f48ecA16afC\",\n        swapRouter02Address: \"0x0B14ff67f0014046b4b99057Aec4509640b3947A\"\n      };\n      var BLAST_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x792edAdE80af5fC680d96a2eD80A44247D2Cf6Fd\",\n        multicallAddress: \"0xdC7f370de7631cE9e2c2e1DCDA6B3B5744Cf4705\",\n        quoterAddress: \"0x6Cdcd65e03c1CEc3730AeeCd45bc140D57A25C77\",\n        v3MigratorAddress: \"0x15CA7043CD84C5D21Ae76Ba0A1A967d42c40ecE0\",\n        nonfungiblePositionManagerAddress: \"0xB218e4f7cF0533d4696fDfC419A0023D33345F28\",\n        tickLensAddress: \"0x2E95185bCdD928a3e984B7e2D6560Ab1b17d7274\",\n        swapRouter02Address: \"0x549FEB8c9bd4c12Ad2AB27022dA12492aC452B66\",\n        v4PoolManagerAddress: \"0x1631559198a9e474033433b2958dabc135ab6446\",\n        v4PositionManagerAddress: \"0x4ad2f4cca2682cbb5b950d660dd458a1d3f1baad\",\n        v4StateView: \"0x12a88ae16f46dce4e8b15368008ab3380885df30\",\n        v4QuoterAddress: \"0x6f71cdcb0d119ff72c6eb501abceb576fbf62bcf\"\n      };\n      var ZKSYNC_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x8FdA5a7a8dCA67BBcDd10F02Fa0649A937215422\",\n        multicallAddress: \"0x0c68a7C72f074d1c45C16d41fa74eEbC6D16a65C\",\n        quoterAddress: \"0x8Cb537fc92E26d8EBBb760E632c95484b6Ea3e28\",\n        v3MigratorAddress: \"0x611841b24E43C4ACfd290B427a3D6cf1A59dac8E\",\n        nonfungiblePositionManagerAddress: \"0x0616e5762c1E7Dc3723c50663dF10a162D690a86\",\n        tickLensAddress: \"0xe10FF11b809f8EE07b056B452c3B2caa7FE24f89\",\n        swapRouter02Address: \"0x99c56385daBCE3E81d8499d0b8d0257aBC07E8A3\"\n      };\n      var WORLDCHAIN_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x7a5028BDa40e7B173C278C5342087826455ea25a\",\n        multicallAddress: \"0x0a22c04215c97E3F532F4eF30e0aD9458792dAB9\",\n        quoterAddress: \"0x10158D43e6cc414deE1Bd1eB0EfC6a5cBCfF244c\",\n        v3MigratorAddress: \"0x9EBDdCBa71C9027E1eB45135672a30bcFEec9de3\",\n        nonfungiblePositionManagerAddress: \"0xec12a9F9a09f50550686363766Cc153D03c27b5e\",\n        tickLensAddress: \"0xE61df0CaC9d85876aCE5E3037005D80943570623\",\n        swapRouter02Address: \"0x091AD9e2e6e5eD44c1c66dB50e49A601F9f36cF6\",\n        v4PoolManagerAddress: \"0xb1860d529182ac3bc1f51fa2abd56662b7d13f33\",\n        v4PositionManagerAddress: \"0xc585e0f504613b5fbf874f21af14c65260fb41fa\",\n        v4StateView: \"0x51d394718bc09297262e368c1a481217fdeb71eb\",\n        v4QuoterAddress: \"0x55d235b3ff2daf7c3ede0defc9521f1d6fe6c5c0\"\n      };\n      var UNICHAIN_SEPOLIA_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x1F98431c8aD98523631AE4a59f267346ea31F984\",\n        multicallAddress: \"0x9D0F15f2cf58655fDDcD1EE6129C547fDaeD01b1\",\n        quoterAddress: \"0x6Dd37329A1A225a6Fca658265D460423DCafBF89\",\n        v3MigratorAddress: \"0xb5FA244C9d6D04B2FBac84418b3c4910ED1Ae5f2\",\n        nonfungiblePositionManagerAddress: \"0xB7F724d6dDDFd008eFf5cc2834edDE5F9eF0d075\",\n        tickLensAddress: \"0x5f739c790a48E97eec0efb81bab5D152c0A0ecA0\",\n        swapRouter02Address: \"0xd1AAE39293221B77B0C71fBD6dCb7Ea29Bb5B166\",\n        v4PoolManagerAddress: \"0x00b036b58a818b1bc34d502d3fe730db729e62ac\",\n        v4PositionManagerAddress: \"0xf969aee60879c54baaed9f3ed26147db216fd664\",\n        v4StateView: \"0xc199f1072a74d4e905aba1a84d9a45e2546b6222\",\n        v4QuoterAddress: \"0x56dcd40a3f2d466f48e7f48bdbe5cc9b92ae4472\"\n      };\n      var UNICHAIN_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x1f98400000000000000000000000000000000003\",\n        multicallAddress: \"0xb7610f9b733e7d45184be3a1bc966960ccc54f0b\",\n        quoterAddress: \"0x565ac8c7863d9bb16d07e809ff49fe5cd467634c\",\n        v3MigratorAddress: \"0xb9d0c246f306b1aaf02ae6ba112d5ef25e5b60dc\",\n        nonfungiblePositionManagerAddress: \"0x943e6e07a7e8e791dafc44083e54041d743c46e9\",\n        tickLensAddress: \"0xd5d76fa166ab8d8ad4c9f61aaa81457b66cbe443\",\n        swapRouter02Address: \"0x73855d06de49d0fe4a9c42636ba96c62da12ff9c\",\n        v4PoolManagerAddress: \"0x1f98400000000000000000000000000000000004\",\n        v4PositionManagerAddress: \"0x4529a01c7a0410167c5740c487a8de60232617bf\",\n        v4StateView: \"0x86e8631a016f9068c3f085faf484ee3f5fdee8f2\",\n        v4QuoterAddress: \"0x333e3c607b141b18ff6de9f258db6e77fe7491e0\"\n      };\n      var MONAD_TESTNET_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x961235a9020b05c44df1026d956d1f4d78014276\",\n        multicallAddress: \"0xa707ceb989cc3728551ed0e6e44b718dd114cf44\",\n        quoterAddress: \"0x1ba215c17565de7b0cb7ecab971bcf540c24a862\",\n        v3MigratorAddress: \"0x0a78348b71f8ae8caff2f8f9d4d74a2f36516661\",\n        nonfungiblePositionManagerAddress: \"0x3dcc735c74f10fe2b9db2bb55c40fbbbf24490f7\",\n        tickLensAddress: \"0x337478eb6058455ecb3696184b30dd6a29e3a893\",\n        swapRouter02Address: \"0x4c4eabd5fb1d1a7234a48692551eaecff8194ca7\"\n      };\n      var SONEIUM_ADDRESSES = {\n        v3CoreFactoryAddress: \"0x42ae7ec7ff020412639d443e245d936429fbe717\",\n        multicallAddress: \"0x8ad5ef2f2508288d2de66f04dd883ad5f4ef62b2\",\n        quoterAddress: \"0x3e6c707d0125226ff60f291b6bd1404634f00aba\",\n        v3MigratorAddress: \"0xa107580f73bd797bd8b87ff24e98346d99f93ddb\",\n        nonfungiblePositionManagerAddress: \"0x56c1205b0244332011c1e866f4ea5384eb6bfa2c\",\n        tickLensAddress: \"0xcd08eefb928c86499e6235ac155906bb7c4dc41a\",\n        swapRouter02Address: \"0x7e40db01736f88464e5f4e42394f3d5bbb6705b9\",\n        v4PoolManagerAddress: \"0x360e68faccca8ca495c1b759fd9eee466db9fb32\",\n        v4PositionManagerAddress: \"0x1b35d13a2e2528f192637f14b05f0dc0e7deb566\",\n        v4StateView: \"0x76fd297e2d437cd7f76d50f01afe6160f86e9990\",\n        v4QuoterAddress: \"0x3972c00f7ed4885e145823eb7c655375d275a1c5\"\n      };\n      var CHAIN_TO_ADDRESSES_MAP4 = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.BASE_SEPOLIA] = BASE_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ZORA] = ZORA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ZORA_SEPOLIA] = ZORA_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ROOTSTOCK] = ROOTSTOCK_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.BLAST] = BLAST_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.ZKSYNC] = ZKSYNC_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.WORLDCHAIN] = WORLDCHAIN_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.UNICHAIN_SEPOLIA] = UNICHAIN_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.UNICHAIN] = UNICHAIN_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.MONAD_TESTNET] = MONAD_TESTNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports3.ChainId.SONEIUM] = SONEIUM_ADDRESSES, _CHAIN_TO_ADDRESSES_M);\n      var V3_CORE_FACTORY_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        memo[chainId] = CHAIN_TO_ADDRESSES_MAP4[chainId].v3CoreFactoryAddress;\n        return memo;\n      }, {}));\n      var V3_MIGRATOR_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        var v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP4[chainId].v3MigratorAddress;\n        if (v3MigratorAddress) {\n          memo[chainId] = v3MigratorAddress;\n        }\n        return memo;\n      }, {}));\n      var MULTICALL_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        memo[chainId] = CHAIN_TO_ADDRESSES_MAP4[chainId].multicallAddress;\n        return memo;\n      }, {}));\n      var GOVERNANCE_ALPHA_V0_ADDRESSES = /* @__PURE__ */ constructSameAddressMap(\"0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F\");\n      var GOVERNANCE_ALPHA_V1_ADDRESSES = (_GOVERNANCE_ALPHA_V1_ = {}, _GOVERNANCE_ALPHA_V1_[exports3.ChainId.MAINNET] = \"0xC4e172459f1E7939D522503B81AFAaC1014CE6F6\", _GOVERNANCE_ALPHA_V1_);\n      var GOVERNANCE_BRAVO_ADDRESSES = (_GOVERNANCE_BRAVO_ADD = {}, _GOVERNANCE_BRAVO_ADD[exports3.ChainId.MAINNET] = \"0x408ED6354d4973f66138C91495F2f2FCbd8724C3\", _GOVERNANCE_BRAVO_ADD);\n      var TIMELOCK_ADDRESSES = /* @__PURE__ */ constructSameAddressMap(\"0x1a9C8182C09F50C8318d769245beA52c32BE35BC\");\n      var MERKLE_DISTRIBUTOR_ADDRESS = (_MERKLE_DISTRIBUTOR_A = {}, _MERKLE_DISTRIBUTOR_A[exports3.ChainId.MAINNET] = \"0x090D4613473dEE047c3f2706764f49E0821D256e\", _MERKLE_DISTRIBUTOR_A);\n      var ARGENT_WALLET_DETECTOR_ADDRESS = (_ARGENT_WALLET_DETECT = {}, _ARGENT_WALLET_DETECT[exports3.ChainId.MAINNET] = \"0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8\", _ARGENT_WALLET_DETECT);\n      var QUOTER_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        memo[chainId] = CHAIN_TO_ADDRESSES_MAP4[chainId].quoterAddress;\n        return memo;\n      }, {}));\n      var NONFUNGIBLE_POSITION_MANAGER_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        var nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP4[chainId].nonfungiblePositionManagerAddress;\n        if (nonfungiblePositionManagerAddress) {\n          memo[chainId] = nonfungiblePositionManagerAddress;\n        }\n        return memo;\n      }, {}));\n      var ENS_REGISTRAR_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ constructSameAddressMap(\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"));\n      var SOCKS_CONTROLLER_ADDRESSES = (_SOCKS_CONTROLLER_ADD = {}, _SOCKS_CONTROLLER_ADD[exports3.ChainId.MAINNET] = \"0x65770b5283117639760beA3F867b69b3697a91dd\", _SOCKS_CONTROLLER_ADD);\n      var TICK_LENS_ADDRESSES = /* @__PURE__ */ _extends({}, /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        var tickLensAddress = CHAIN_TO_ADDRESSES_MAP4[chainId].tickLensAddress;\n        if (tickLensAddress) {\n          memo[chainId] = tickLensAddress;\n        }\n        return memo;\n      }, {}));\n      var MIXED_ROUTE_QUOTER_V1_ADDRESSES = /* @__PURE__ */ SUPPORTED_CHAINS.reduce(function(memo, chainId) {\n        var mixedRouteQuoterV1Address = CHAIN_TO_ADDRESSES_MAP4[chainId].mixedRouteQuoterV1Address;\n        if (mixedRouteQuoterV1Address) {\n          memo[chainId] = mixedRouteQuoterV1Address;\n        }\n        return memo;\n      }, {});\n      var SWAP_ROUTER_02_ADDRESSES = function SWAP_ROUTER_02_ADDRESSES2(chainId) {\n        if (SUPPORTED_CHAINS.includes(chainId)) {\n          var _CHAIN_TO_ADDRESSES_M2;\n          var id2 = chainId;\n          return (_CHAIN_TO_ADDRESSES_M2 = CHAIN_TO_ADDRESSES_MAP4[id2].swapRouter02Address) != null ? _CHAIN_TO_ADDRESSES_M2 : \"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45\";\n        }\n        return \"\";\n      };\n      (function(TradeType) {\n        TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n        TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n      })(exports3.TradeType || (exports3.TradeType = {}));\n      (function(Rounding) {\n        Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n        Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n        Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n      })(exports3.Rounding || (exports3.Rounding = {}));\n      var MaxUint256 = /* @__PURE__ */ JSBI.BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      var _toSignificantRoundin;\n      var _toFixedRounding;\n      var Decimal = /* @__PURE__ */ toFormat(_Decimal);\n      var Big = /* @__PURE__ */ toFormat(_Big);\n      var toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[exports3.Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[exports3.Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[exports3.Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\n      var toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[exports3.Rounding.ROUND_DOWN] = 0, _toFixedRounding[exports3.Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[exports3.Rounding.ROUND_UP] = 3, _toFixedRounding);\n      var Fraction = /* @__PURE__ */ function() {\n        function Fraction2(numerator, denominator) {\n          if (denominator === void 0) {\n            denominator = JSBI.BigInt(1);\n          }\n          this.numerator = JSBI.BigInt(numerator);\n          this.denominator = JSBI.BigInt(denominator);\n        }\n        Fraction2.tryParseFraction = function tryParseFraction(fractionish) {\n          if (fractionish instanceof JSBI || typeof fractionish === \"number\" || typeof fractionish === \"string\")\n            return new Fraction2(fractionish);\n          if (\"numerator\" in fractionish && \"denominator\" in fractionish)\n            return fractionish;\n          throw new Error(\"Could not parse fraction\");\n        };\n        var _proto = Fraction2.prototype;\n        _proto.invert = function invert2() {\n          return new Fraction2(this.denominator, this.numerator);\n        };\n        _proto.add = function add2(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n            return new Fraction2(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);\n          }\n          return new Fraction2(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n        };\n        _proto.subtract = function subtract(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n            return new Fraction2(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);\n          }\n          return new Fraction2(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n        };\n        _proto.lessThan = function lessThan(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n        };\n        _proto.equalTo = function equalTo(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n        };\n        _proto.greaterThan = function greaterThan(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n        };\n        _proto.multiply = function multiply(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          return new Fraction2(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));\n        };\n        _proto.divide = function divide(other) {\n          var otherParsed = Fraction2.tryParseFraction(other);\n          return new Fraction2(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));\n        };\n        _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n          if (format === void 0) {\n            format = {\n              groupSeparator: \"\"\n            };\n          }\n          if (rounding === void 0) {\n            rounding = exports3.Rounding.ROUND_HALF_UP;\n          }\n          !Number.isInteger(significantDigits) ? invariant(false, significantDigits + \" is not an integer.\") : void 0;\n          !(significantDigits > 0) ? invariant(false, significantDigits + \" is not positive.\") : void 0;\n          Decimal.set({\n            precision: significantDigits + 1,\n            rounding: toSignificantRounding[rounding]\n          });\n          var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n          return quotient.toFormat(quotient.decimalPlaces(), format);\n        };\n        _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n          if (format === void 0) {\n            format = {\n              groupSeparator: \"\"\n            };\n          }\n          if (rounding === void 0) {\n            rounding = exports3.Rounding.ROUND_HALF_UP;\n          }\n          !Number.isInteger(decimalPlaces) ? invariant(false, decimalPlaces + \" is not an integer.\") : void 0;\n          !(decimalPlaces >= 0) ? invariant(false, decimalPlaces + \" is negative.\") : void 0;\n          Big.DP = decimalPlaces;\n          Big.RM = toFixedRounding[rounding];\n          return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n        };\n        return _createClass(Fraction2, [{\n          key: \"quotient\",\n          get: function get() {\n            return JSBI.divide(this.numerator, this.denominator);\n          }\n          // remainder after floor division\n        }, {\n          key: \"remainder\",\n          get: function get() {\n            return new Fraction2(JSBI.remainder(this.numerator, this.denominator), this.denominator);\n          }\n        }, {\n          key: \"asFraction\",\n          get: function get() {\n            return new Fraction2(this.numerator, this.denominator);\n          }\n        }]);\n      }();\n      var Big$1 = /* @__PURE__ */ toFormat(_Big);\n      var CurrencyAmount = /* @__PURE__ */ function(_Fraction) {\n        function CurrencyAmount2(currency, numerator, denominator) {\n          var _this;\n          _this = _Fraction.call(this, numerator, denominator) || this;\n          !JSBI.lessThanOrEqual(_this.quotient, MaxUint256) ? invariant(false, \"AMOUNT\") : void 0;\n          _this.currency = currency;\n          _this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals));\n          return _this;\n        }\n        _inheritsLoose(CurrencyAmount2, _Fraction);\n        CurrencyAmount2.fromRawAmount = function fromRawAmount(currency, rawAmount) {\n          return new CurrencyAmount2(currency, rawAmount);\n        };\n        CurrencyAmount2.fromFractionalAmount = function fromFractionalAmount(currency, numerator, denominator) {\n          return new CurrencyAmount2(currency, numerator, denominator);\n        };\n        var _proto = CurrencyAmount2.prototype;\n        _proto.add = function add2(other) {\n          !this.currency.equals(other.currency) ? invariant(false, \"CURRENCY\") : void 0;\n          var added = _Fraction.prototype.add.call(this, other);\n          return CurrencyAmount2.fromFractionalAmount(this.currency, added.numerator, added.denominator);\n        };\n        _proto.subtract = function subtract(other) {\n          !this.currency.equals(other.currency) ? invariant(false, \"CURRENCY\") : void 0;\n          var subtracted = _Fraction.prototype.subtract.call(this, other);\n          return CurrencyAmount2.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);\n        };\n        _proto.multiply = function multiply(other) {\n          var multiplied = _Fraction.prototype.multiply.call(this, other);\n          return CurrencyAmount2.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);\n        };\n        _proto.divide = function divide(other) {\n          var divided = _Fraction.prototype.divide.call(this, other);\n          return CurrencyAmount2.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);\n        };\n        _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n          if (significantDigits === void 0) {\n            significantDigits = 6;\n          }\n          if (rounding === void 0) {\n            rounding = exports3.Rounding.ROUND_DOWN;\n          }\n          return _Fraction.prototype.divide.call(this, this.decimalScale).toSignificant(significantDigits, format, rounding);\n        };\n        _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n          if (decimalPlaces === void 0) {\n            decimalPlaces = this.currency.decimals;\n          }\n          if (rounding === void 0) {\n            rounding = exports3.Rounding.ROUND_DOWN;\n          }\n          !(decimalPlaces <= this.currency.decimals) ? invariant(false, \"DECIMALS\") : void 0;\n          return _Fraction.prototype.divide.call(this, this.decimalScale).toFixed(decimalPlaces, format, rounding);\n        };\n        _proto.toExact = function toExact(format) {\n          if (format === void 0) {\n            format = {\n              groupSeparator: \"\"\n            };\n          }\n          Big$1.DP = this.currency.decimals;\n          return new Big$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);\n        };\n        return _createClass(CurrencyAmount2, [{\n          key: \"wrapped\",\n          get: function get() {\n            if (this.currency.isToken)\n              return this;\n            return CurrencyAmount2.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);\n          }\n        }]);\n      }(Fraction);\n      var ONE_HUNDRED = /* @__PURE__ */ new Fraction(/* @__PURE__ */ JSBI.BigInt(100));\n      function toPercent(fraction) {\n        return new Percent(fraction.numerator, fraction.denominator);\n      }\n      var Percent = /* @__PURE__ */ function(_Fraction) {\n        function Percent2() {\n          var _this;\n          _this = _Fraction.apply(this, arguments) || this;\n          _this.isPercent = true;\n          return _this;\n        }\n        _inheritsLoose(Percent2, _Fraction);\n        var _proto = Percent2.prototype;\n        _proto.add = function add2(other) {\n          return toPercent(_Fraction.prototype.add.call(this, other));\n        };\n        _proto.subtract = function subtract(other) {\n          return toPercent(_Fraction.prototype.subtract.call(this, other));\n        };\n        _proto.multiply = function multiply(other) {\n          return toPercent(_Fraction.prototype.multiply.call(this, other));\n        };\n        _proto.divide = function divide(other) {\n          return toPercent(_Fraction.prototype.divide.call(this, other));\n        };\n        _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n          if (significantDigits === void 0) {\n            significantDigits = 5;\n          }\n          return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toSignificant(significantDigits, format, rounding);\n        };\n        _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n          if (decimalPlaces === void 0) {\n            decimalPlaces = 2;\n          }\n          return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n        };\n        return Percent2;\n      }(Fraction);\n      var Price = /* @__PURE__ */ function(_Fraction) {\n        function Price2() {\n          var _this;\n          var baseCurrency, quoteCurrency, denominator, numerator;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (args.length === 4) {\n            baseCurrency = args[0];\n            quoteCurrency = args[1];\n            denominator = args[2];\n            numerator = args[3];\n          } else {\n            var result = args[0].quoteAmount.divide(args[0].baseAmount);\n            var _ref = [args[0].baseAmount.currency, args[0].quoteAmount.currency, result.denominator, result.numerator];\n            baseCurrency = _ref[0];\n            quoteCurrency = _ref[1];\n            denominator = _ref[2];\n            numerator = _ref[3];\n          }\n          _this = _Fraction.call(this, numerator, denominator) || this;\n          _this.baseCurrency = baseCurrency;\n          _this.quoteCurrency = quoteCurrency;\n          _this.scalar = new Fraction(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals)));\n          return _this;\n        }\n        _inheritsLoose(Price2, _Fraction);\n        var _proto = Price2.prototype;\n        _proto.invert = function invert2() {\n          return new Price2(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n        };\n        _proto.multiply = function multiply(other) {\n          !this.quoteCurrency.equals(other.baseCurrency) ? invariant(false, \"TOKEN\") : void 0;\n          var fraction = _Fraction.prototype.multiply.call(this, other);\n          return new Price2(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n        };\n        _proto.quote = function quote(currencyAmount) {\n          !currencyAmount.currency.equals(this.baseCurrency) ? invariant(false, \"TOKEN\") : void 0;\n          var result = _Fraction.prototype.multiply.call(this, currencyAmount);\n          return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);\n        };\n        _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n          if (significantDigits === void 0) {\n            significantDigits = 6;\n          }\n          return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);\n        };\n        _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n          if (decimalPlaces === void 0) {\n            decimalPlaces = 4;\n          }\n          return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n        };\n        return _createClass(Price2, [{\n          key: \"adjustedForDecimals\",\n          get: function get() {\n            return _Fraction.prototype.multiply.call(this, this.scalar);\n          }\n        }]);\n      }(Fraction);\n      var BaseCurrency = (\n        /**\n         * Constructs an instance of the base class `BaseCurrency`.\n         * @param chainId the chain ID on which this currency resides\n         * @param decimals decimals of the currency\n         * @param symbol symbol of the currency\n         * @param name of the currency\n         */\n        function BaseCurrency2(chainId, decimals, symbol, name) {\n          !Number.isSafeInteger(chainId) ? invariant(false, \"CHAIN_ID\") : void 0;\n          !(decimals >= 0 && decimals < 255 && Number.isInteger(decimals)) ? invariant(false, \"DECIMALS\") : void 0;\n          this.chainId = chainId;\n          this.decimals = decimals;\n          this.symbol = symbol;\n          this.name = name;\n        }\n      );\n      var NativeCurrency = /* @__PURE__ */ function(_BaseCurrency) {\n        function NativeCurrency2() {\n          var _this;\n          _this = _BaseCurrency.apply(this, arguments) || this;\n          _this.isNative = true;\n          _this.isToken = false;\n          return _this;\n        }\n        _inheritsLoose(NativeCurrency2, _BaseCurrency);\n        return NativeCurrency2;\n      }(BaseCurrency);\n      function validateAndParseAddress(address$1) {\n        try {\n          return address.getAddress(address$1);\n        } catch (error) {\n          throw new Error(address$1 + \" is not a valid address.\");\n        }\n      }\n      var startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/;\n      function checkValidAddress(address2) {\n        if (startsWith0xLen42HexRegex.test(address2)) {\n          return address2;\n        }\n        throw new Error(address2 + \" is not a valid address.\");\n      }\n      var Token = /* @__PURE__ */ function(_BaseCurrency) {\n        function Token2(chainId, address2, decimals, symbol, name, bypassChecksum, buyFeeBps, sellFeeBps) {\n          var _this;\n          _this = _BaseCurrency.call(this, chainId, decimals, symbol, name) || this;\n          _this.isNative = false;\n          _this.isToken = true;\n          if (bypassChecksum) {\n            _this.address = checkValidAddress(address2);\n          } else {\n            _this.address = validateAndParseAddress(address2);\n          }\n          if (buyFeeBps) {\n            !buyFeeBps.gte(bignumber.BigNumber.from(0)) ? invariant(false, \"NON-NEGATIVE FOT FEES\") : void 0;\n          }\n          if (sellFeeBps) {\n            !sellFeeBps.gte(bignumber.BigNumber.from(0)) ? invariant(false, \"NON-NEGATIVE FOT FEES\") : void 0;\n          }\n          _this.buyFeeBps = buyFeeBps;\n          _this.sellFeeBps = sellFeeBps;\n          return _this;\n        }\n        _inheritsLoose(Token2, _BaseCurrency);\n        var _proto = Token2.prototype;\n        _proto.equals = function equals(other) {\n          return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase();\n        };\n        _proto.sortsBefore = function sortsBefore(other) {\n          !(this.chainId === other.chainId) ? invariant(false, \"CHAIN_IDS\") : void 0;\n          !(this.address.toLowerCase() !== other.address.toLowerCase()) ? invariant(false, \"ADDRESSES\") : void 0;\n          return this.address.toLowerCase() < other.address.toLowerCase();\n        };\n        return _createClass(Token2, [{\n          key: \"wrapped\",\n          get: function get() {\n            return this;\n          }\n        }]);\n      }(BaseCurrency);\n      var WETH9 = {\n        1: /* @__PURE__ */ new Token(1, \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", 18, \"WETH\", \"Wrapped Ether\"),\n        11155111: /* @__PURE__ */ new Token(11155111, \"0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14\", 18, \"WETH\", \"Wrapped Ether\"),\n        3: /* @__PURE__ */ new Token(3, \"0xc778417E063141139Fce010982780140Aa0cD5Ab\", 18, \"WETH\", \"Wrapped Ether\"),\n        4: /* @__PURE__ */ new Token(4, \"0xc778417E063141139Fce010982780140Aa0cD5Ab\", 18, \"WETH\", \"Wrapped Ether\"),\n        5: /* @__PURE__ */ new Token(5, \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\", 18, \"WETH\", \"Wrapped Ether\"),\n        42: /* @__PURE__ */ new Token(42, \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\", 18, \"WETH\", \"Wrapped Ether\"),\n        10: /* @__PURE__ */ new Token(10, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        69: /* @__PURE__ */ new Token(69, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        11155420: /* @__PURE__ */ new Token(11155420, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        42161: /* @__PURE__ */ new Token(42161, \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\", 18, \"WETH\", \"Wrapped Ether\"),\n        421611: /* @__PURE__ */ new Token(421611, \"0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681\", 18, \"WETH\", \"Wrapped Ether\"),\n        421614: /* @__PURE__ */ new Token(421614, \"0x980B62Da83eFf3D4576C647993b0c1D7faf17c73\", 18, \"WETH\", \"Wrapped Ether\"),\n        8453: /* @__PURE__ */ new Token(8453, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        84532: /* @__PURE__ */ new Token(84532, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        56: /* @__PURE__ */ new Token(56, \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\", 18, \"WBNB\", \"Wrapped BNB\"),\n        137: /* @__PURE__ */ new Token(137, \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\", 18, \"WMATIC\", \"Wrapped MATIC\"),\n        43114: /* @__PURE__ */ new Token(43114, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", 18, \"WAVAX\", \"Wrapped AVAX\"),\n        7777777: /* @__PURE__ */ new Token(7777777, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        81457: /* @__PURE__ */ new Token(81457, \"0x4300000000000000000000000000000000000004\", 18, \"WETH\", \"Wrapped Ether\"),\n        324: /* @__PURE__ */ new Token(324, \"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91\", 18, \"WETH\", \"Wrapped Ether\"),\n        480: /* @__PURE__ */ new Token(480, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        1301: /* @__PURE__ */ new Token(1301, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        130: /* @__PURE__ */ new Token(130, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\"),\n        10143: /* @__PURE__ */ new Token(10143, \"0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701\", 18, \"WMON\", \"Wrapped Monad\"),\n        1868: /* @__PURE__ */ new Token(1868, \"0x4200000000000000000000000000000000000006\", 18, \"WETH\", \"Wrapped Ether\")\n      };\n      var Ether = /* @__PURE__ */ function(_NativeCurrency) {\n        function Ether2(chainId) {\n          return _NativeCurrency.call(this, chainId, 18, \"ETH\", \"Ether\") || this;\n        }\n        _inheritsLoose(Ether2, _NativeCurrency);\n        Ether2.onChain = function onChain(chainId) {\n          var _this$_etherCache$cha;\n          return (_this$_etherCache$cha = this._etherCache[chainId]) != null ? _this$_etherCache$cha : this._etherCache[chainId] = new Ether2(chainId);\n        };\n        var _proto = Ether2.prototype;\n        _proto.equals = function equals(other) {\n          return other.isNative && other.chainId === this.chainId;\n        };\n        return _createClass(Ether2, [{\n          key: \"wrapped\",\n          get: function get() {\n            var weth9 = WETH9[this.chainId];\n            !!!weth9 ? invariant(false, \"WRAPPED\") : void 0;\n            return weth9;\n          }\n        }]);\n      }(NativeCurrency);\n      Ether._etherCache = {};\n      function computePriceImpact(midPrice, inputAmount, outputAmount) {\n        var quotedOutputAmount = midPrice.quote(inputAmount);\n        var priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n        return new Percent(priceImpact.numerator, priceImpact.denominator);\n      }\n      function computeZksyncCreate2Address(sender, bytecodeHash, salt, input) {\n        if (input === void 0) {\n          input = \"0x\";\n        }\n        var prefix = keccak2562.keccak256(strings.toUtf8Bytes(\"zksyncCreate2\"));\n        var inputHash = keccak2562.keccak256(input);\n        var addressBytes = keccak2562.keccak256(bytes2.concat([prefix, bytes2.hexZeroPad(sender, 32), salt, bytecodeHash, inputHash])).slice(26);\n        return address.getAddress(addressBytes);\n      }\n      function sortedInsert(items, add2, maxSize, comparator) {\n        !(maxSize > 0) ? invariant(false, \"MAX_SIZE_ZERO\") : void 0;\n        !(items.length <= maxSize) ? invariant(false, \"ITEMS_SIZE\") : void 0;\n        if (items.length === 0) {\n          items.push(add2);\n          return null;\n        } else {\n          var isFull = items.length === maxSize;\n          if (isFull && comparator(items[items.length - 1], add2) <= 0) {\n            return add2;\n          }\n          var lo = 0, hi = items.length;\n          while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (comparator(items[mid], add2) <= 0) {\n              lo = mid + 1;\n            } else {\n              hi = mid;\n            }\n          }\n          items.splice(lo, 0, add2);\n          return isFull ? items.pop() : null;\n        }\n      }\n      var MAX_SAFE_INTEGER = /* @__PURE__ */ JSBI.BigInt(Number.MAX_SAFE_INTEGER);\n      var ZERO = /* @__PURE__ */ JSBI.BigInt(0);\n      var ONE = /* @__PURE__ */ JSBI.BigInt(1);\n      var TWO = /* @__PURE__ */ JSBI.BigInt(2);\n      function sqrt(value) {\n        !JSBI.greaterThanOrEqual(value, ZERO) ? invariant(false, \"NEGATIVE\") : void 0;\n        if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n          return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))));\n        }\n        var z;\n        var x;\n        z = value;\n        x = JSBI.add(JSBI.divide(value, TWO), ONE);\n        while (JSBI.lessThan(x, z)) {\n          z = x;\n          x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO);\n        }\n        return z;\n      }\n      exports3.ARGENT_WALLET_DETECTOR_ADDRESS = ARGENT_WALLET_DETECTOR_ADDRESS;\n      exports3.CHAIN_TO_ADDRESSES_MAP = CHAIN_TO_ADDRESSES_MAP4;\n      exports3.CurrencyAmount = CurrencyAmount;\n      exports3.ENS_REGISTRAR_ADDRESSES = ENS_REGISTRAR_ADDRESSES;\n      exports3.Ether = Ether;\n      exports3.Fraction = Fraction;\n      exports3.GOVERNANCE_ALPHA_V0_ADDRESSES = GOVERNANCE_ALPHA_V0_ADDRESSES;\n      exports3.GOVERNANCE_ALPHA_V1_ADDRESSES = GOVERNANCE_ALPHA_V1_ADDRESSES;\n      exports3.GOVERNANCE_BRAVO_ADDRESSES = GOVERNANCE_BRAVO_ADDRESSES;\n      exports3.MERKLE_DISTRIBUTOR_ADDRESS = MERKLE_DISTRIBUTOR_ADDRESS;\n      exports3.MIXED_ROUTE_QUOTER_V1_ADDRESSES = MIXED_ROUTE_QUOTER_V1_ADDRESSES;\n      exports3.MULTICALL_ADDRESSES = MULTICALL_ADDRESSES;\n      exports3.MaxUint256 = MaxUint256;\n      exports3.NONFUNGIBLE_POSITION_MANAGER_ADDRESSES = NONFUNGIBLE_POSITION_MANAGER_ADDRESSES;\n      exports3.NativeCurrency = NativeCurrency;\n      exports3.Percent = Percent;\n      exports3.Price = Price;\n      exports3.QUOTER_ADDRESSES = QUOTER_ADDRESSES;\n      exports3.SOCKS_CONTROLLER_ADDRESSES = SOCKS_CONTROLLER_ADDRESSES;\n      exports3.SUPPORTED_CHAINS = SUPPORTED_CHAINS;\n      exports3.SWAP_ROUTER_02_ADDRESSES = SWAP_ROUTER_02_ADDRESSES;\n      exports3.TICK_LENS_ADDRESSES = TICK_LENS_ADDRESSES;\n      exports3.TIMELOCK_ADDRESSES = TIMELOCK_ADDRESSES;\n      exports3.Token = Token;\n      exports3.UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS;\n      exports3.UNI_ADDRESSES = UNI_ADDRESSES;\n      exports3.V2_FACTORY_ADDRESS = V2_FACTORY_ADDRESS;\n      exports3.V2_FACTORY_ADDRESSES = V2_FACTORY_ADDRESSES;\n      exports3.V2_ROUTER_ADDRESS = V2_ROUTER_ADDRESS;\n      exports3.V2_ROUTER_ADDRESSES = V2_ROUTER_ADDRESSES;\n      exports3.V3_CORE_FACTORY_ADDRESSES = V3_CORE_FACTORY_ADDRESSES;\n      exports3.V3_MIGRATOR_ADDRESSES = V3_MIGRATOR_ADDRESSES;\n      exports3.WETH9 = WETH9;\n      exports3.computePriceImpact = computePriceImpact;\n      exports3.computeZksyncCreate2Address = computeZksyncCreate2Address;\n      exports3.sortedInsert = sortedInsert;\n      exports3.sqrt = sqrt;\n      exports3.validateAndParseAddress = validateAndParseAddress;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@uniswap+sdk-core@7.7.2/node_modules/@uniswap/sdk-core/dist/index.js\n  var require_dist = __commonJS({\n    \"../../../node_modules/.pnpm/@uniswap+sdk-core@7.7.2/node_modules/@uniswap/sdk-core/dist/index.js\"(exports3, module) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      if (false) {\n        module.exports = null;\n      } else {\n        module.exports = require_sdk_core_cjs_development();\n      }\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-uniswap-quote.js\n  var require_get_uniswap_quote = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-uniswap-quote.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getUniswapQuote = void 0;\n      var sdk_core_1 = require_dist();\n      var ethers_1 = require_lib32();\n      var UNISWAP_V3_QUOTER_INTERFACE2 = new ethers_1.ethers.utils.Interface([\n        \"function quoteExactInputSingle((address tokenIn, address tokenOut, uint256 amountIn, uint24 fee, uint160 sqrtPriceLimitX96)) external returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)\"\n      ]);\n      var getUniswapQuote2 = async ({ rpcUrl, chainId, tokenInAddress, tokenInDecimals, tokenInAmount, tokenOutAddress, tokenOutDecimals }) => {\n        console.log(\"Getting Uniswap Quote (getUniswapQuote)\", {\n          rpcUrl,\n          chainId,\n          tokenInAddress,\n          tokenInDecimals,\n          tokenInAmount,\n          tokenOutAddress,\n          tokenOutDecimals\n        });\n        const chainAddressMap = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[chainId];\n        if (chainAddressMap === void 0)\n          throw new Error(`Unsupported chainId: ${chainId} (getUniswapQuote)`);\n        if (chainAddressMap.quoterAddress === void 0)\n          throw new Error(`No Uniswap V3 Quoter Address found for chainId: ${chainId} (getUniswapQuote)`);\n        const quoterAddress = chainAddressMap.quoterAddress;\n        console.log(`Using Quoter Address: ${quoterAddress} (getUniswapQuote)`);\n        const uniswapRpcProvider = new ethers_1.ethers.providers.StaticJsonRpcProvider(rpcUrl);\n        const formattedTokenInAmount = ethers_1.ethers.utils.parseUnits(tokenInAmount.toString(), tokenInDecimals);\n        console.log(\"Amount conversion:\", {\n          original: tokenInAmount,\n          decimals: tokenInDecimals,\n          wei: formattedTokenInAmount.toString(),\n          formatted: ethers_1.ethers.utils.formatUnits(formattedTokenInAmount, tokenInDecimals)\n        });\n        let bestQuote = null;\n        let bestFee = null;\n        const feeTiers = [3e3, 500];\n        for (const fee of feeTiers) {\n          try {\n            const quoteParams = {\n              tokenIn: tokenInAddress,\n              tokenOut: tokenOutAddress,\n              amountIn: formattedTokenInAmount.toString(),\n              fee,\n              sqrtPriceLimitX96: 0\n            };\n            console.log(`Attempting quote with fee tier ${fee / 1e4}% (getUniswapQuote)`);\n            console.log(\"Quote parameters (getUniswapQuote):\", quoteParams);\n            const quote = await uniswapRpcProvider.call({\n              to: quoterAddress,\n              data: UNISWAP_V3_QUOTER_INTERFACE2.encodeFunctionData(\"quoteExactInputSingle\", [\n                quoteParams\n              ])\n            });\n            console.log(\"Raw quote response (getUniswapQuote):\", quote);\n            const [amountOut] = UNISWAP_V3_QUOTER_INTERFACE2.decodeFunctionResult(\"quoteExactInputSingle\", quote);\n            const currentQuote = ethers_1.ethers.BigNumber.from(amountOut);\n            if (currentQuote.isZero()) {\n              console.log(`Quote is 0 for fee tier ${fee / 1e4}% - skipping (getUniswapQuote)`);\n              continue;\n            }\n            const formattedQuote = ethers_1.ethers.utils.formatUnits(currentQuote, tokenOutDecimals);\n            console.log(`Quote for fee tier ${fee / 1e4}% (getUniswapQuote):`, {\n              raw: currentQuote.toString(),\n              formatted: formattedQuote\n            });\n            if (!bestQuote || currentQuote.gt(bestQuote)) {\n              bestQuote = currentQuote;\n              bestFee = fee;\n              console.log(`New best quote found with fee tier ${fee / 1e4}% (getUniswapQuote): ${formattedQuote}`);\n            }\n          } catch (error) {\n            const err = error;\n            if (\"reason\" in err && \"message\" in err && \"code\" in err) {\n              if (err.reason === \"Unexpected error\") {\n                console.log(`Unexpected error thrown, probably no pool found for fee tier ${fee / 1e4}% (getUniswapQuote)`, err);\n              } else {\n                console.log(`Quoter call failed for fee tier ${fee / 1e4}% (getUniswapQuote)`, {\n                  message: err.message,\n                  reason: err.reason,\n                  code: err.code\n                });\n              }\n              continue;\n            } else {\n              throw error;\n            }\n          }\n        }\n        if (!bestQuote || !bestFee) {\n          throw new Error(\"Failed to get quote from Uniswap V3. No valid pool found for this token pair or quote returned 0 (getUniswapQuote)\");\n        }\n        const slippageTolerance = 5e-3;\n        const amountOutMin = bestQuote.mul(1e3 - slippageTolerance * 1e3).div(1e3);\n        console.log(\"Final quote details:\", {\n          bestFee: `${bestFee / 1e4}%`,\n          bestQuote: {\n            raw: bestQuote.toString(),\n            formatted: ethers_1.ethers.utils.formatUnits(bestQuote, tokenOutDecimals)\n          },\n          minimumOutput: {\n            raw: amountOutMin.toString(),\n            formatted: ethers_1.ethers.utils.formatUnits(amountOutMin, tokenOutDecimals)\n          },\n          slippageTolerance: `${slippageTolerance * 100}%`\n        });\n        return { bestQuote, bestFee, amountOutMin };\n      };\n      exports3.getUniswapQuote = getUniswapQuote2;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-token-amount-in-usd.js\n  var require_get_token_amount_in_usd = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/get-token-amount-in-usd.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getTokenAmountInUsd = void 0;\n      var ethers_1 = require_lib32();\n      var calculate_usd_value_1 = require_calculate_usd_value();\n      var get_uniswap_quote_1 = require_get_uniswap_quote();\n      var ETH_MAINNET_WETH_ADDRESS2 = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n      var ETH_MAINNET_ETH_USD_CHAINLINK_FEED2 = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\";\n      var getTokenAmountInUsd2 = async ({ ethRpcUrl, rpcUrlForUniswap, chainIdForUniswap, tokenAddress, tokenAmount, tokenDecimals }) => {\n        console.log(`Getting token amount in USD (getTokenAmountInUsd)`, {\n          ethRpcUrl,\n          rpcUrlForUniswap,\n          chainIdForUniswap,\n          tokenAddress,\n          tokenAmount,\n          tokenDecimals,\n          ethMainnetWethAddress: ETH_MAINNET_WETH_ADDRESS2,\n          ethMainnetEthUsdChainlinkFeed: ETH_MAINNET_ETH_USD_CHAINLINK_FEED2\n        });\n        const provider = new ethers_1.ethers.providers.JsonRpcProvider(rpcUrlForUniswap);\n        const tokenInContract = new ethers_1.ethers.Contract(tokenAddress, [\"function symbol() view returns (string)\"], provider);\n        const tokenInSymbol = await tokenInContract.symbol();\n        console.log(`tokenInSymbol: ${tokenInSymbol} (getTokenAmountInUsd)`);\n        if (tokenInSymbol.toUpperCase() === \"WETH\") {\n          console.log(`Token is WETH, using amount directly: ${tokenAmount} (getTokenAmountInUsd)`);\n          const amountInWeth2 = ethers_1.ethers.utils.parseUnits(tokenAmount.toString(), tokenDecimals);\n          return (0, calculate_usd_value_1.calculateUsdValue)({\n            ethRpcUrl,\n            chainlinkPriceFeedAddress: ETH_MAINNET_ETH_USD_CHAINLINK_FEED2,\n            amountInWeth: amountInWeth2\n          });\n        }\n        console.log(`Getting price in WETH from Uniswap (getTokenAmountInUsd)`, {\n          tokenInAddress: tokenAddress,\n          tokenInDecimals: tokenDecimals,\n          tokenInAmount: tokenAmount,\n          tokenOutAddress: ETH_MAINNET_WETH_ADDRESS2,\n          tokenOutDecimals: 18,\n          rpcUrl: rpcUrlForUniswap,\n          chainId: chainIdForUniswap\n        });\n        const amountInWeth = await (0, get_uniswap_quote_1.getUniswapQuote)({\n          tokenInAddress: tokenAddress,\n          tokenInDecimals: tokenDecimals,\n          tokenInAmount: tokenAmount,\n          tokenOutAddress: ETH_MAINNET_WETH_ADDRESS2,\n          tokenOutDecimals: 18,\n          rpcUrl: rpcUrlForUniswap,\n          chainId: chainIdForUniswap\n        });\n        const amountInUsdc = await (0, calculate_usd_value_1.calculateUsdValue)({\n          ethRpcUrl,\n          chainlinkPriceFeedAddress: ETH_MAINNET_ETH_USD_CHAINLINK_FEED2,\n          amountInWeth: amountInWeth.bestQuote\n        });\n        console.log(\"Calculated token amount in USDC (getTokenAmountInUsd)\", {\n          amountInWeth: ethers_1.ethers.utils.formatUnits(amountInWeth.bestQuote, 18),\n          amountInUsdc: ethers_1.ethers.utils.formatUnits(amountInUsdc, 8)\n        });\n        return amountInUsdc;\n      };\n      exports3.getTokenAmountInUsd = getTokenAmountInUsd2;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/policy-helpers/check-spending-limit.js\n  var require_check_spending_limit = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/policy-helpers/check-spending-limit.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.checkIfBuyAmountAllowed = void 0;\n      var get_token_amount_in_usd_1 = require_get_token_amount_in_usd();\n      var spending_limit_contract_1 = require_spending_limit_contract();\n      var checkIfBuyAmountAllowed = async ({ ethRpcUrl, rpcUrlForUniswap, chainIdForUniswap, tokenAddress, tokenDecimals, buyAmount, maxDailySpendingLimitInUsdCents, pkpEthAddress, appId }) => {\n        const buyAmountInUsd = await (0, get_token_amount_in_usd_1.getTokenAmountInUsd)({\n          ethRpcUrl,\n          rpcUrlForUniswap,\n          chainIdForUniswap,\n          tokenAddress,\n          tokenDecimals,\n          tokenAmount: buyAmount\n        });\n        const adjustedMaxDailySpendingLimit = maxDailySpendingLimitInUsdCents * 1000000n;\n        console.log(`Adjusted maxDailySpendingLimitInUsdCents to 8 decimal precision: ${adjustedMaxDailySpendingLimit.toString()} (spendingLimitPolicyPrecheck)`);\n        const spendingLimitContract = (0, spending_limit_contract_1.getSpendingLimitContractInstance)();\n        const buyAmountAllowed = await spendingLimitContract.checkLimit(pkpEthAddress, BigInt(appId), buyAmountInUsd.toBigInt(), adjustedMaxDailySpendingLimit, 86400n);\n        console.log(`Buy amount allowed: ${JSON.stringify(buyAmountAllowed)} (spendingLimitPolicyPrecheck)`);\n        return {\n          buyAmountAllowed,\n          buyAmountInUsd: buyAmountInUsd.toBigInt(),\n          adjustedMaxDailySpendingLimit\n        };\n      };\n      exports3.checkIfBuyAmountAllowed = checkIfBuyAmountAllowed;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/util.js\n  var require_util = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/util.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.getParsedType = exports3.ZodParsedType = exports3.objectUtil = exports3.util = void 0;\n      var util2;\n      (function(util3) {\n        util3.assertEqual = (_) => {\n        };\n        function assertIs(_arg) {\n        }\n        util3.assertIs = assertIs;\n        function assertNever(_x) {\n          throw new Error();\n        }\n        util3.assertNever = assertNever;\n        util3.arrayToEnum = (items) => {\n          const obj = {};\n          for (const item of items) {\n            obj[item] = item;\n          }\n          return obj;\n        };\n        util3.getValidEnumValues = (obj) => {\n          const validKeys = util3.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n          const filtered = {};\n          for (const k of validKeys) {\n            filtered[k] = obj[k];\n          }\n          return util3.objectValues(filtered);\n        };\n        util3.objectValues = (obj) => {\n          return util3.objectKeys(obj).map(function(e) {\n            return obj[e];\n          });\n        };\n        util3.objectKeys = typeof Object.keys === \"function\" ? (obj) => Object.keys(obj) : (object2) => {\n          const keys = [];\n          for (const key in object2) {\n            if (Object.prototype.hasOwnProperty.call(object2, key)) {\n              keys.push(key);\n            }\n          }\n          return keys;\n        };\n        util3.find = (arr, checker) => {\n          for (const item of arr) {\n            if (checker(item))\n              return item;\n          }\n          return void 0;\n        };\n        util3.isInteger = typeof Number.isInteger === \"function\" ? (val) => Number.isInteger(val) : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n        function joinValues(array, separator = \" | \") {\n          return array.map((val) => typeof val === \"string\" ? `'${val}'` : val).join(separator);\n        }\n        util3.joinValues = joinValues;\n        util3.jsonStringifyReplacer = (_, value) => {\n          if (typeof value === \"bigint\") {\n            return value.toString();\n          }\n          return value;\n        };\n      })(util2 || (exports3.util = util2 = {}));\n      var objectUtil2;\n      (function(objectUtil3) {\n        objectUtil3.mergeShapes = (first, second) => {\n          return {\n            ...first,\n            ...second\n            // second overwrites first\n          };\n        };\n      })(objectUtil2 || (exports3.objectUtil = objectUtil2 = {}));\n      exports3.ZodParsedType = util2.arrayToEnum([\n        \"string\",\n        \"nan\",\n        \"number\",\n        \"integer\",\n        \"float\",\n        \"boolean\",\n        \"date\",\n        \"bigint\",\n        \"symbol\",\n        \"function\",\n        \"undefined\",\n        \"null\",\n        \"array\",\n        \"object\",\n        \"unknown\",\n        \"promise\",\n        \"void\",\n        \"never\",\n        \"map\",\n        \"set\"\n      ]);\n      var getParsedType2 = (data) => {\n        const t = typeof data;\n        switch (t) {\n          case \"undefined\":\n            return exports3.ZodParsedType.undefined;\n          case \"string\":\n            return exports3.ZodParsedType.string;\n          case \"number\":\n            return Number.isNaN(data) ? exports3.ZodParsedType.nan : exports3.ZodParsedType.number;\n          case \"boolean\":\n            return exports3.ZodParsedType.boolean;\n          case \"function\":\n            return exports3.ZodParsedType.function;\n          case \"bigint\":\n            return exports3.ZodParsedType.bigint;\n          case \"symbol\":\n            return exports3.ZodParsedType.symbol;\n          case \"object\":\n            if (Array.isArray(data)) {\n              return exports3.ZodParsedType.array;\n            }\n            if (data === null) {\n              return exports3.ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n              return exports3.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n              return exports3.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n              return exports3.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n              return exports3.ZodParsedType.date;\n            }\n            return exports3.ZodParsedType.object;\n          default:\n            return exports3.ZodParsedType.unknown;\n        }\n      };\n      exports3.getParsedType = getParsedType2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/ZodError.js\n  var require_ZodError = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/ZodError.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.ZodError = exports3.quotelessJson = exports3.ZodIssueCode = void 0;\n      var util_js_1 = require_util();\n      exports3.ZodIssueCode = util_js_1.util.arrayToEnum([\n        \"invalid_type\",\n        \"invalid_literal\",\n        \"custom\",\n        \"invalid_union\",\n        \"invalid_union_discriminator\",\n        \"invalid_enum_value\",\n        \"unrecognized_keys\",\n        \"invalid_arguments\",\n        \"invalid_return_type\",\n        \"invalid_date\",\n        \"invalid_string\",\n        \"too_small\",\n        \"too_big\",\n        \"invalid_intersection_types\",\n        \"not_multiple_of\",\n        \"not_finite\"\n      ]);\n      var quotelessJson2 = (obj) => {\n        const json = JSON.stringify(obj, null, 2);\n        return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n      };\n      exports3.quotelessJson = quotelessJson2;\n      var ZodError2 = class _ZodError extends Error {\n        get errors() {\n          return this.issues;\n        }\n        constructor(issues) {\n          super();\n          this.issues = [];\n          this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n          };\n          this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n          };\n          const actualProto = new.target.prototype;\n          if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, actualProto);\n          } else {\n            this.__proto__ = actualProto;\n          }\n          this.name = \"ZodError\";\n          this.issues = issues;\n        }\n        format(_mapper) {\n          const mapper = _mapper || function(issue) {\n            return issue.message;\n          };\n          const fieldErrors = { _errors: [] };\n          const processError = (error) => {\n            for (const issue of error.issues) {\n              if (issue.code === \"invalid_union\") {\n                issue.unionErrors.map(processError);\n              } else if (issue.code === \"invalid_return_type\") {\n                processError(issue.returnTypeError);\n              } else if (issue.code === \"invalid_arguments\") {\n                processError(issue.argumentsError);\n              } else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n              } else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                  const el = issue.path[i];\n                  const terminal = i === issue.path.length - 1;\n                  if (!terminal) {\n                    curr[el] = curr[el] || { _errors: [] };\n                  } else {\n                    curr[el] = curr[el] || { _errors: [] };\n                    curr[el]._errors.push(mapper(issue));\n                  }\n                  curr = curr[el];\n                  i++;\n                }\n              }\n            }\n          };\n          processError(this);\n          return fieldErrors;\n        }\n        static assert(value) {\n          if (!(value instanceof _ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n          }\n        }\n        toString() {\n          return this.message;\n        }\n        get message() {\n          return JSON.stringify(this.issues, util_js_1.util.jsonStringifyReplacer, 2);\n        }\n        get isEmpty() {\n          return this.issues.length === 0;\n        }\n        flatten(mapper = (issue) => issue.message) {\n          const fieldErrors = {};\n          const formErrors = [];\n          for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n              fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n              fieldErrors[sub.path[0]].push(mapper(sub));\n            } else {\n              formErrors.push(mapper(sub));\n            }\n          }\n          return { formErrors, fieldErrors };\n        }\n        get formErrors() {\n          return this.flatten();\n        }\n      };\n      exports3.ZodError = ZodError2;\n      ZodError2.create = (issues) => {\n        const error = new ZodError2(issues);\n        return error;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/locales/en.js\n  var require_en = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/locales/en.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      var ZodError_js_1 = require_ZodError();\n      var util_js_1 = require_util();\n      var errorMap2 = (issue, _ctx) => {\n        let message;\n        switch (issue.code) {\n          case ZodError_js_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_js_1.ZodParsedType.undefined) {\n              message = \"Required\";\n            } else {\n              message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_js_1.util.jsonStringifyReplacer)}`;\n            break;\n          case ZodError_js_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_js_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_js_1.util.joinValues(issue.options)}`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_js_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n              if (\"includes\" in issue.validation) {\n                message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                if (typeof issue.validation.position === \"number\") {\n                  message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                }\n              } else if (\"startsWith\" in issue.validation) {\n                message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n              } else if (\"endsWith\" in issue.validation) {\n                message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n              } else {\n                util_js_1.util.assertNever(issue.validation);\n              }\n            } else if (issue.validation !== \"regex\") {\n              message = `Invalid ${issue.validation}`;\n            } else {\n              message = \"Invalid\";\n            }\n            break;\n          case ZodError_js_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n              message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n              message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n              message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n              message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n              message = \"Invalid input\";\n            break;\n          case ZodError_js_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n              message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n              message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n              message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n              message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n              message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n              message = \"Invalid input\";\n            break;\n          case ZodError_js_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n          case ZodError_js_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n          case ZodError_js_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n          case ZodError_js_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n          default:\n            message = _ctx.defaultError;\n            util_js_1.util.assertNever(issue);\n        }\n        return { message };\n      };\n      exports3.default = errorMap2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/errors.js\n  var require_errors = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/errors.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.defaultErrorMap = void 0;\n      exports3.setErrorMap = setErrorMap2;\n      exports3.getErrorMap = getErrorMap2;\n      var en_js_1 = __importDefault2(require_en());\n      exports3.defaultErrorMap = en_js_1.default;\n      var overrideErrorMap2 = en_js_1.default;\n      function setErrorMap2(map) {\n        overrideErrorMap2 = map;\n      }\n      function getErrorMap2() {\n        return overrideErrorMap2;\n      }\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/parseUtil.js\n  var require_parseUtil = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/parseUtil.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.isAsync = exports3.isValid = exports3.isDirty = exports3.isAborted = exports3.OK = exports3.DIRTY = exports3.INVALID = exports3.ParseStatus = exports3.EMPTY_PATH = exports3.makeIssue = void 0;\n      exports3.addIssueToContext = addIssueToContext2;\n      var errors_js_1 = require_errors();\n      var en_js_1 = __importDefault2(require_en());\n      var makeIssue2 = (params) => {\n        const { data, path, errorMaps, issueData } = params;\n        const fullPath = [...path, ...issueData.path || []];\n        const fullIssue = {\n          ...issueData,\n          path: fullPath\n        };\n        if (issueData.message !== void 0) {\n          return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message\n          };\n        }\n        let errorMessage = \"\";\n        const maps = errorMaps.filter((m) => !!m).slice().reverse();\n        for (const map of maps) {\n          errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n        }\n        return {\n          ...issueData,\n          path: fullPath,\n          message: errorMessage\n        };\n      };\n      exports3.makeIssue = makeIssue2;\n      exports3.EMPTY_PATH = [];\n      function addIssueToContext2(ctx, issueData) {\n        const overrideMap = (0, errors_js_1.getErrorMap)();\n        const issue = (0, exports3.makeIssue)({\n          issueData,\n          data: ctx.data,\n          path: ctx.path,\n          errorMaps: [\n            ctx.common.contextualErrorMap,\n            // contextual error map is first priority\n            ctx.schemaErrorMap,\n            // then schema-bound map if available\n            overrideMap,\n            // then global override map\n            overrideMap === en_js_1.default ? void 0 : en_js_1.default\n            // then global default map\n          ].filter((x) => !!x)\n        });\n        ctx.common.issues.push(issue);\n      }\n      var ParseStatus2 = class _ParseStatus {\n        constructor() {\n          this.value = \"valid\";\n        }\n        dirty() {\n          if (this.value === \"valid\")\n            this.value = \"dirty\";\n        }\n        abort() {\n          if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n        }\n        static mergeArray(status, results) {\n          const arrayValue = [];\n          for (const s of results) {\n            if (s.status === \"aborted\")\n              return exports3.INVALID;\n            if (s.status === \"dirty\")\n              status.dirty();\n            arrayValue.push(s.value);\n          }\n          return { status: status.value, value: arrayValue };\n        }\n        static async mergeObjectAsync(status, pairs) {\n          const syncPairs = [];\n          for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n              key,\n              value\n            });\n          }\n          return _ParseStatus.mergeObjectSync(status, syncPairs);\n        }\n        static mergeObjectSync(status, pairs) {\n          const finalObject = {};\n          for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n              return exports3.INVALID;\n            if (value.status === \"aborted\")\n              return exports3.INVALID;\n            if (key.status === \"dirty\")\n              status.dirty();\n            if (value.status === \"dirty\")\n              status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n              finalObject[key.value] = value.value;\n            }\n          }\n          return { status: status.value, value: finalObject };\n        }\n      };\n      exports3.ParseStatus = ParseStatus2;\n      exports3.INVALID = Object.freeze({\n        status: \"aborted\"\n      });\n      var DIRTY2 = (value) => ({ status: \"dirty\", value });\n      exports3.DIRTY = DIRTY2;\n      var OK2 = (value) => ({ status: \"valid\", value });\n      exports3.OK = OK2;\n      var isAborted2 = (x) => x.status === \"aborted\";\n      exports3.isAborted = isAborted2;\n      var isDirty2 = (x) => x.status === \"dirty\";\n      exports3.isDirty = isDirty2;\n      var isValid2 = (x) => x.status === \"valid\";\n      exports3.isValid = isValid2;\n      var isAsync2 = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n      exports3.isAsync = isAsync2;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/typeAliases.js\n  var require_typeAliases = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/typeAliases.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/errorUtil.js\n  var require_errorUtil = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/helpers/errorUtil.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.errorUtil = void 0;\n      var errorUtil2;\n      (function(errorUtil3) {\n        errorUtil3.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n        errorUtil3.toString = (message) => typeof message === \"string\" ? message : message?.message;\n      })(errorUtil2 || (exports3.errorUtil = errorUtil2 = {}));\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/types.js\n  var require_types2 = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/types.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.discriminatedUnion = exports3.date = exports3.boolean = exports3.bigint = exports3.array = exports3.any = exports3.coerce = exports3.ZodFirstPartyTypeKind = exports3.late = exports3.ZodSchema = exports3.Schema = exports3.ZodReadonly = exports3.ZodPipeline = exports3.ZodBranded = exports3.BRAND = exports3.ZodNaN = exports3.ZodCatch = exports3.ZodDefault = exports3.ZodNullable = exports3.ZodOptional = exports3.ZodTransformer = exports3.ZodEffects = exports3.ZodPromise = exports3.ZodNativeEnum = exports3.ZodEnum = exports3.ZodLiteral = exports3.ZodLazy = exports3.ZodFunction = exports3.ZodSet = exports3.ZodMap = exports3.ZodRecord = exports3.ZodTuple = exports3.ZodIntersection = exports3.ZodDiscriminatedUnion = exports3.ZodUnion = exports3.ZodObject = exports3.ZodArray = exports3.ZodVoid = exports3.ZodNever = exports3.ZodUnknown = exports3.ZodAny = exports3.ZodNull = exports3.ZodUndefined = exports3.ZodSymbol = exports3.ZodDate = exports3.ZodBoolean = exports3.ZodBigInt = exports3.ZodNumber = exports3.ZodString = exports3.ZodType = void 0;\n      exports3.NEVER = exports3.void = exports3.unknown = exports3.union = exports3.undefined = exports3.tuple = exports3.transformer = exports3.symbol = exports3.string = exports3.strictObject = exports3.set = exports3.record = exports3.promise = exports3.preprocess = exports3.pipeline = exports3.ostring = exports3.optional = exports3.onumber = exports3.oboolean = exports3.object = exports3.number = exports3.nullable = exports3.null = exports3.never = exports3.nativeEnum = exports3.nan = exports3.map = exports3.literal = exports3.lazy = exports3.intersection = exports3.instanceof = exports3.function = exports3.enum = exports3.effect = void 0;\n      exports3.datetimeRegex = datetimeRegex2;\n      exports3.custom = custom2;\n      var ZodError_js_1 = require_ZodError();\n      var errors_js_1 = require_errors();\n      var errorUtil_js_1 = require_errorUtil();\n      var parseUtil_js_1 = require_parseUtil();\n      var util_js_1 = require_util();\n      var ParseInputLazyPath2 = class {\n        constructor(parent, value, path, key) {\n          this._cachedPath = [];\n          this.parent = parent;\n          this.data = value;\n          this._path = path;\n          this._key = key;\n        }\n        get path() {\n          if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n              this._cachedPath.push(...this._path, ...this._key);\n            } else {\n              this._cachedPath.push(...this._path, this._key);\n            }\n          }\n          return this._cachedPath;\n        }\n      };\n      var handleResult2 = (ctx, result) => {\n        if ((0, parseUtil_js_1.isValid)(result)) {\n          return { success: true, data: result.value };\n        } else {\n          if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n          }\n          return {\n            success: false,\n            get error() {\n              if (this._error)\n                return this._error;\n              const error = new ZodError_js_1.ZodError(ctx.common.issues);\n              this._error = error;\n              return this._error;\n            }\n          };\n        }\n      };\n      function processCreateParams2(params) {\n        if (!params)\n          return {};\n        const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;\n        if (errorMap2 && (invalid_type_error || required_error)) {\n          throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n        }\n        if (errorMap2)\n          return { errorMap: errorMap2, description };\n        const customMap = (iss, ctx) => {\n          const { message } = params;\n          if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n          }\n          if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n          }\n          if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n          return { message: message ?? invalid_type_error ?? ctx.defaultError };\n        };\n        return { errorMap: customMap, description };\n      }\n      var ZodType4 = class {\n        get description() {\n          return this._def.description;\n        }\n        _getType(input) {\n          return (0, util_js_1.getParsedType)(input.data);\n        }\n        _getOrReturnCtx(input, ctx) {\n          return ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_js_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent\n          };\n        }\n        _processInputParams(input) {\n          return {\n            status: new parseUtil_js_1.ParseStatus(),\n            ctx: {\n              common: input.parent.common,\n              data: input.data,\n              parsedType: (0, util_js_1.getParsedType)(input.data),\n              schemaErrorMap: this._def.errorMap,\n              path: input.path,\n              parent: input.parent\n            }\n          };\n        }\n        _parseSync(input) {\n          const result = this._parse(input);\n          if ((0, parseUtil_js_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n          }\n          return result;\n        }\n        _parseAsync(input) {\n          const result = this._parse(input);\n          return Promise.resolve(result);\n        }\n        parse(data, params) {\n          const result = this.safeParse(data, params);\n          if (result.success)\n            return result.data;\n          throw result.error;\n        }\n        safeParse(data, params) {\n          const ctx = {\n            common: {\n              issues: [],\n              async: params?.async ?? false,\n              contextualErrorMap: params?.errorMap\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data)\n          };\n          const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n          return handleResult2(ctx, result);\n        }\n        \"~validate\"(data) {\n          const ctx = {\n            common: {\n              issues: [],\n              async: !!this[\"~standard\"].async\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data)\n          };\n          if (!this[\"~standard\"].async) {\n            try {\n              const result = this._parseSync({ data, path: [], parent: ctx });\n              return (0, parseUtil_js_1.isValid)(result) ? {\n                value: result.value\n              } : {\n                issues: ctx.common.issues\n              };\n            } catch (err) {\n              if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                this[\"~standard\"].async = true;\n              }\n              ctx.common = {\n                issues: [],\n                async: true\n              };\n            }\n          }\n          return this._parseAsync({ data, path: [], parent: ctx }).then((result) => (0, parseUtil_js_1.isValid)(result) ? {\n            value: result.value\n          } : {\n            issues: ctx.common.issues\n          });\n        }\n        async parseAsync(data, params) {\n          const result = await this.safeParseAsync(data, params);\n          if (result.success)\n            return result.data;\n          throw result.error;\n        }\n        async safeParseAsync(data, params) {\n          const ctx = {\n            common: {\n              issues: [],\n              contextualErrorMap: params?.errorMap,\n              async: true\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data)\n          };\n          const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n          const result = await ((0, parseUtil_js_1.isAsync)(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n          return handleResult2(ctx, result);\n        }\n        refine(check, message) {\n          const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n              return { message };\n            } else if (typeof message === \"function\") {\n              return message(val);\n            } else {\n              return message;\n            }\n          };\n          return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n              code: ZodError_js_1.ZodIssueCode.custom,\n              ...getIssueProperties(val)\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n              return result.then((data) => {\n                if (!data) {\n                  setError();\n                  return false;\n                } else {\n                  return true;\n                }\n              });\n            }\n            if (!result) {\n              setError();\n              return false;\n            } else {\n              return true;\n            }\n          });\n        }\n        refinement(check, refinementData) {\n          return this._refinement((val, ctx) => {\n            if (!check(val)) {\n              ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n              return false;\n            } else {\n              return true;\n            }\n          });\n        }\n        _refinement(refinement) {\n          return new ZodEffects2({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind2.ZodEffects,\n            effect: { type: \"refinement\", refinement }\n          });\n        }\n        superRefine(refinement) {\n          return this._refinement(refinement);\n        }\n        constructor(def) {\n          this.spa = this.safeParseAsync;\n          this._def = def;\n          this.parse = this.parse.bind(this);\n          this.safeParse = this.safeParse.bind(this);\n          this.parseAsync = this.parseAsync.bind(this);\n          this.safeParseAsync = this.safeParseAsync.bind(this);\n          this.spa = this.spa.bind(this);\n          this.refine = this.refine.bind(this);\n          this.refinement = this.refinement.bind(this);\n          this.superRefine = this.superRefine.bind(this);\n          this.optional = this.optional.bind(this);\n          this.nullable = this.nullable.bind(this);\n          this.nullish = this.nullish.bind(this);\n          this.array = this.array.bind(this);\n          this.promise = this.promise.bind(this);\n          this.or = this.or.bind(this);\n          this.and = this.and.bind(this);\n          this.transform = this.transform.bind(this);\n          this.brand = this.brand.bind(this);\n          this.default = this.default.bind(this);\n          this.catch = this.catch.bind(this);\n          this.describe = this.describe.bind(this);\n          this.pipe = this.pipe.bind(this);\n          this.readonly = this.readonly.bind(this);\n          this.isNullable = this.isNullable.bind(this);\n          this.isOptional = this.isOptional.bind(this);\n          this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data)\n          };\n        }\n        optional() {\n          return ZodOptional2.create(this, this._def);\n        }\n        nullable() {\n          return ZodNullable2.create(this, this._def);\n        }\n        nullish() {\n          return this.nullable().optional();\n        }\n        array() {\n          return ZodArray2.create(this);\n        }\n        promise() {\n          return ZodPromise2.create(this, this._def);\n        }\n        or(option) {\n          return ZodUnion2.create([this, option], this._def);\n        }\n        and(incoming) {\n          return ZodIntersection2.create(this, incoming, this._def);\n        }\n        transform(transform) {\n          return new ZodEffects2({\n            ...processCreateParams2(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind2.ZodEffects,\n            effect: { type: \"transform\", transform }\n          });\n        }\n        default(def) {\n          const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n          return new ZodDefault2({\n            ...processCreateParams2(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind2.ZodDefault\n          });\n        }\n        brand() {\n          return new ZodBranded2({\n            typeName: ZodFirstPartyTypeKind2.ZodBranded,\n            type: this,\n            ...processCreateParams2(this._def)\n          });\n        }\n        catch(def) {\n          const catchValueFunc = typeof def === \"function\" ? def : () => def;\n          return new ZodCatch2({\n            ...processCreateParams2(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind2.ZodCatch\n          });\n        }\n        describe(description) {\n          const This = this.constructor;\n          return new This({\n            ...this._def,\n            description\n          });\n        }\n        pipe(target) {\n          return ZodPipeline2.create(this, target);\n        }\n        readonly() {\n          return ZodReadonly2.create(this);\n        }\n        isOptional() {\n          return this.safeParse(void 0).success;\n        }\n        isNullable() {\n          return this.safeParse(null).success;\n        }\n      };\n      exports3.ZodType = ZodType4;\n      exports3.Schema = ZodType4;\n      exports3.ZodSchema = ZodType4;\n      var cuidRegex2 = /^c[^\\s-]{8,}$/i;\n      var cuid2Regex2 = /^[0-9a-z]+$/;\n      var ulidRegex2 = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n      var uuidRegex2 = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n      var nanoidRegex2 = /^[a-z0-9_-]{21}$/i;\n      var jwtRegex2 = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\n      var durationRegex2 = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n      var emailRegex2 = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n      var _emojiRegex2 = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\n      var emojiRegex2;\n      var ipv4Regex2 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\n      var ipv4CidrRegex2 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n      var ipv6Regex2 = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\n      var ipv6CidrRegex2 = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n      var base64Regex2 = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n      var base64urlRegex2 = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n      var dateRegexSource2 = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\n      var dateRegex2 = new RegExp(`^${dateRegexSource2}$`);\n      function timeRegexSource2(args) {\n        let secondsRegexSource = `[0-5]\\\\d`;\n        if (args.precision) {\n          secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n        } else if (args.precision == null) {\n          secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n        }\n        const secondsQuantifier = args.precision ? \"+\" : \"?\";\n        return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n      }\n      function timeRegex2(args) {\n        return new RegExp(`^${timeRegexSource2(args)}$`);\n      }\n      function datetimeRegex2(args) {\n        let regex = `${dateRegexSource2}T${timeRegexSource2(args)}`;\n        const opts = [];\n        opts.push(args.local ? `Z?` : `Z`);\n        if (args.offset)\n          opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n        regex = `${regex}(${opts.join(\"|\")})`;\n        return new RegExp(`^${regex}$`);\n      }\n      function isValidIP2(ip, version3) {\n        if ((version3 === \"v4\" || !version3) && ipv4Regex2.test(ip)) {\n          return true;\n        }\n        if ((version3 === \"v6\" || !version3) && ipv6Regex2.test(ip)) {\n          return true;\n        }\n        return false;\n      }\n      function isValidJWT2(jwt, alg) {\n        if (!jwtRegex2.test(jwt))\n          return false;\n        try {\n          const [header] = jwt.split(\".\");\n          const base64 = header.replace(/-/g, \"+\").replace(/_/g, \"/\").padEnd(header.length + (4 - header.length % 4) % 4, \"=\");\n          const decoded = JSON.parse(atob(base64));\n          if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n          if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n          if (!decoded.alg)\n            return false;\n          if (alg && decoded.alg !== alg)\n            return false;\n          return true;\n        } catch {\n          return false;\n        }\n      }\n      function isValidCidr2(ip, version3) {\n        if ((version3 === \"v4\" || !version3) && ipv4CidrRegex2.test(ip)) {\n          return true;\n        }\n        if ((version3 === \"v6\" || !version3) && ipv6CidrRegex2.test(ip)) {\n          return true;\n        }\n        return false;\n      }\n      var ZodString2 = class _ZodString extends ZodType4 {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = String(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.string) {\n            const ctx2 = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx2, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.string,\n              received: ctx2.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const status = new parseUtil_js_1.ParseStatus();\n          let ctx = void 0;\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              if (input.data.length < check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_small,\n                  minimum: check.value,\n                  type: \"string\",\n                  inclusive: true,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              if (input.data.length > check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_big,\n                  maximum: check.value,\n                  type: \"string\",\n                  inclusive: true,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"length\") {\n              const tooBig = input.data.length > check.value;\n              const tooSmall = input.data.length < check.value;\n              if (tooBig || tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                if (tooBig) {\n                  (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_big,\n                    maximum: check.value,\n                    type: \"string\",\n                    inclusive: true,\n                    exact: true,\n                    message: check.message\n                  });\n                } else if (tooSmall) {\n                  (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_small,\n                    minimum: check.value,\n                    type: \"string\",\n                    inclusive: true,\n                    exact: true,\n                    message: check.message\n                  });\n                }\n                status.dirty();\n              }\n            } else if (check.kind === \"email\") {\n              if (!emailRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"email\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"emoji\") {\n              if (!emojiRegex2) {\n                emojiRegex2 = new RegExp(_emojiRegex2, \"u\");\n              }\n              if (!emojiRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"emoji\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"uuid\") {\n              if (!uuidRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"uuid\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"nanoid\") {\n              if (!nanoidRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"nanoid\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cuid\") {\n              if (!cuidRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"cuid\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cuid2\") {\n              if (!cuid2Regex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"cuid2\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"ulid\") {\n              if (!ulidRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"ulid\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"url\") {\n              try {\n                new URL(input.data);\n              } catch {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"url\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"regex\") {\n              check.regex.lastIndex = 0;\n              const testResult = check.regex.test(input.data);\n              if (!testResult) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"regex\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"trim\") {\n              input.data = input.data.trim();\n            } else if (check.kind === \"includes\") {\n              if (!input.data.includes(check.value, check.position)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: { includes: check.value, position: check.position },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"toLowerCase\") {\n              input.data = input.data.toLowerCase();\n            } else if (check.kind === \"toUpperCase\") {\n              input.data = input.data.toUpperCase();\n            } else if (check.kind === \"startsWith\") {\n              if (!input.data.startsWith(check.value)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: { startsWith: check.value },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"endsWith\") {\n              if (!input.data.endsWith(check.value)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: { endsWith: check.value },\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"datetime\") {\n              const regex = datetimeRegex2(check);\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: \"datetime\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"date\") {\n              const regex = dateRegex2;\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: \"date\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"time\") {\n              const regex = timeRegex2(check);\n              if (!regex.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  validation: \"time\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"duration\") {\n              if (!durationRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"duration\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"ip\") {\n              if (!isValidIP2(input.data, check.version)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"ip\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"jwt\") {\n              if (!isValidJWT2(input.data, check.alg)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"jwt\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"cidr\") {\n              if (!isValidCidr2(input.data, check.version)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"cidr\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"base64\") {\n              if (!base64Regex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"base64\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"base64url\") {\n              if (!base64urlRegex2.test(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  validation: \"base64url\",\n                  code: ZodError_js_1.ZodIssueCode.invalid_string,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util_js_1.util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        _regex(regex, validation, message) {\n          return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_js_1.ZodIssueCode.invalid_string,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        _addCheck(check) {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        email(message) {\n          return this._addCheck({ kind: \"email\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        url(message) {\n          return this._addCheck({ kind: \"url\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        emoji(message) {\n          return this._addCheck({ kind: \"emoji\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        uuid(message) {\n          return this._addCheck({ kind: \"uuid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        nanoid(message) {\n          return this._addCheck({ kind: \"nanoid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        cuid(message) {\n          return this._addCheck({ kind: \"cuid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        cuid2(message) {\n          return this._addCheck({ kind: \"cuid2\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        ulid(message) {\n          return this._addCheck({ kind: \"ulid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        base64(message) {\n          return this._addCheck({ kind: \"base64\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        base64url(message) {\n          return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        jwt(options) {\n          return this._addCheck({ kind: \"jwt\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n        }\n        ip(options) {\n          return this._addCheck({ kind: \"ip\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n        }\n        cidr(options) {\n          return this._addCheck({ kind: \"cidr\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n        }\n        datetime(options) {\n          if (typeof options === \"string\") {\n            return this._addCheck({\n              kind: \"datetime\",\n              precision: null,\n              offset: false,\n              local: false,\n              message: options\n            });\n          }\n          return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message)\n          });\n        }\n        date(message) {\n          return this._addCheck({ kind: \"date\", message });\n        }\n        time(options) {\n          if (typeof options === \"string\") {\n            return this._addCheck({\n              kind: \"time\",\n              precision: null,\n              message: options\n            });\n          }\n          return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message)\n          });\n        }\n        duration(message) {\n          return this._addCheck({ kind: \"duration\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n        }\n        regex(regex, message) {\n          return this._addCheck({\n            kind: \"regex\",\n            regex,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        includes(value, options) {\n          return this._addCheck({\n            kind: \"includes\",\n            value,\n            position: options?.position,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message)\n          });\n        }\n        startsWith(value, message) {\n          return this._addCheck({\n            kind: \"startsWith\",\n            value,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        endsWith(value, message) {\n          return this._addCheck({\n            kind: \"endsWith\",\n            value,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        min(minLength, message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        max(maxLength, message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        length(len, message) {\n          return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_js_1.errorUtil.errToObj(message)\n          });\n        }\n        /**\n         * Equivalent to `.min(1)`\n         */\n        nonempty(message) {\n          return this.min(1, errorUtil_js_1.errorUtil.errToObj(message));\n        }\n        trim() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }]\n          });\n        }\n        toLowerCase() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }]\n          });\n        }\n        toUpperCase() {\n          return new _ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }]\n          });\n        }\n        get isDatetime() {\n          return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n        }\n        get isDate() {\n          return !!this._def.checks.find((ch) => ch.kind === \"date\");\n        }\n        get isTime() {\n          return !!this._def.checks.find((ch) => ch.kind === \"time\");\n        }\n        get isDuration() {\n          return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n        }\n        get isEmail() {\n          return !!this._def.checks.find((ch) => ch.kind === \"email\");\n        }\n        get isURL() {\n          return !!this._def.checks.find((ch) => ch.kind === \"url\");\n        }\n        get isEmoji() {\n          return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n        }\n        get isUUID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n        }\n        get isNANOID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n        }\n        get isCUID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n        }\n        get isCUID2() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n        }\n        get isULID() {\n          return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n        }\n        get isIP() {\n          return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n        }\n        get isCIDR() {\n          return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n        }\n        get isBase64() {\n          return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n        }\n        get isBase64url() {\n          return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n        }\n        get minLength() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxLength() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n      };\n      exports3.ZodString = ZodString2;\n      ZodString2.create = (params) => {\n        return new ZodString2({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind2.ZodString,\n          coerce: params?.coerce ?? false,\n          ...processCreateParams2(params)\n        });\n      };\n      function floatSafeRemainder2(val, step) {\n        const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n        const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n        const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n        const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n        const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n        return valInt % stepInt / 10 ** decCount;\n      }\n      var ZodNumber2 = class _ZodNumber extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this.min = this.gte;\n          this.max = this.lte;\n          this.step = this.multipleOf;\n        }\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = Number(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.number) {\n            const ctx2 = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx2, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.number,\n              received: ctx2.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          let ctx = void 0;\n          const status = new parseUtil_js_1.ParseStatus();\n          for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n              if (!util_js_1.util.isInteger(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.invalid_type,\n                  expected: \"integer\",\n                  received: \"float\",\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"min\") {\n              const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n              if (tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_small,\n                  minimum: check.value,\n                  type: \"number\",\n                  inclusive: check.inclusive,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n              if (tooBig) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_big,\n                  maximum: check.value,\n                  type: \"number\",\n                  inclusive: check.inclusive,\n                  exact: false,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"multipleOf\") {\n              if (floatSafeRemainder2(input.data, check.value) !== 0) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.not_multiple_of,\n                  multipleOf: check.value,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"finite\") {\n              if (!Number.isFinite(input.data)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.not_finite,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util_js_1.util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        gte(value, message) {\n          return this.setLimit(\"min\", value, true, errorUtil_js_1.errorUtil.toString(message));\n        }\n        gt(value, message) {\n          return this.setLimit(\"min\", value, false, errorUtil_js_1.errorUtil.toString(message));\n        }\n        lte(value, message) {\n          return this.setLimit(\"max\", value, true, errorUtil_js_1.errorUtil.toString(message));\n        }\n        lt(value, message) {\n          return this.setLimit(\"max\", value, false, errorUtil_js_1.errorUtil.toString(message));\n        }\n        setLimit(kind, value, inclusive, message) {\n          return new _ZodNumber({\n            ...this._def,\n            checks: [\n              ...this._def.checks,\n              {\n                kind,\n                value,\n                inclusive,\n                message: errorUtil_js_1.errorUtil.toString(message)\n              }\n            ]\n          });\n        }\n        _addCheck(check) {\n          return new _ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        int(message) {\n          return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        positive(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        negative(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        nonpositive(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        nonnegative(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        multipleOf(value, message) {\n          return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        finite(message) {\n          return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        safe(message) {\n          return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        get minValue() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxValue() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n        get isInt() {\n          return !!this._def.checks.find((ch) => ch.kind === \"int\" || ch.kind === \"multipleOf\" && util_js_1.util.isInteger(ch.value));\n        }\n        get isFinite() {\n          let max = null;\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n              return true;\n            } else if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            } else if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return Number.isFinite(min) && Number.isFinite(max);\n        }\n      };\n      exports3.ZodNumber = ZodNumber2;\n      ZodNumber2.create = (params) => {\n        return new ZodNumber2({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind2.ZodNumber,\n          coerce: params?.coerce || false,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodBigInt2 = class _ZodBigInt extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this.min = this.gte;\n          this.max = this.lte;\n        }\n        _parse(input) {\n          if (this._def.coerce) {\n            try {\n              input.data = BigInt(input.data);\n            } catch {\n              return this._getInvalidInput(input);\n            }\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n          }\n          let ctx = void 0;\n          const status = new parseUtil_js_1.ParseStatus();\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n              if (tooSmall) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_small,\n                  type: \"bigint\",\n                  minimum: check.value,\n                  inclusive: check.inclusive,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n              if (tooBig) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_big,\n                  type: \"bigint\",\n                  maximum: check.value,\n                  inclusive: check.inclusive,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"multipleOf\") {\n              if (input.data % check.value !== BigInt(0)) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.not_multiple_of,\n                  multipleOf: check.value,\n                  message: check.message\n                });\n                status.dirty();\n              }\n            } else {\n              util_js_1.util.assertNever(check);\n            }\n          }\n          return { status: status.value, value: input.data };\n        }\n        _getInvalidInput(input) {\n          const ctx = this._getOrReturnCtx(input);\n          (0, parseUtil_js_1.addIssueToContext)(ctx, {\n            code: ZodError_js_1.ZodIssueCode.invalid_type,\n            expected: util_js_1.ZodParsedType.bigint,\n            received: ctx.parsedType\n          });\n          return parseUtil_js_1.INVALID;\n        }\n        gte(value, message) {\n          return this.setLimit(\"min\", value, true, errorUtil_js_1.errorUtil.toString(message));\n        }\n        gt(value, message) {\n          return this.setLimit(\"min\", value, false, errorUtil_js_1.errorUtil.toString(message));\n        }\n        lte(value, message) {\n          return this.setLimit(\"max\", value, true, errorUtil_js_1.errorUtil.toString(message));\n        }\n        lt(value, message) {\n          return this.setLimit(\"max\", value, false, errorUtil_js_1.errorUtil.toString(message));\n        }\n        setLimit(kind, value, inclusive, message) {\n          return new _ZodBigInt({\n            ...this._def,\n            checks: [\n              ...this._def.checks,\n              {\n                kind,\n                value,\n                inclusive,\n                message: errorUtil_js_1.errorUtil.toString(message)\n              }\n            ]\n          });\n        }\n        _addCheck(check) {\n          return new _ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        positive(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        negative(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        nonpositive(message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        nonnegative(message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        multipleOf(value, message) {\n          return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        get minValue() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min;\n        }\n        get maxValue() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max;\n        }\n      };\n      exports3.ZodBigInt = ZodBigInt2;\n      ZodBigInt2.create = (params) => {\n        return new ZodBigInt2({\n          checks: [],\n          typeName: ZodFirstPartyTypeKind2.ZodBigInt,\n          coerce: params?.coerce ?? false,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodBoolean2 = class extends ZodType4 {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = Boolean(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.boolean,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodBoolean = ZodBoolean2;\n      ZodBoolean2.create = (params) => {\n        return new ZodBoolean2({\n          typeName: ZodFirstPartyTypeKind2.ZodBoolean,\n          coerce: params?.coerce || false,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodDate2 = class _ZodDate extends ZodType4 {\n        _parse(input) {\n          if (this._def.coerce) {\n            input.data = new Date(input.data);\n          }\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.date) {\n            const ctx2 = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx2, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.date,\n              received: ctx2.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (Number.isNaN(input.data.getTime())) {\n            const ctx2 = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx2, {\n              code: ZodError_js_1.ZodIssueCode.invalid_date\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const status = new parseUtil_js_1.ParseStatus();\n          let ctx = void 0;\n          for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n              if (input.data.getTime() < check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_small,\n                  message: check.message,\n                  inclusive: true,\n                  exact: false,\n                  minimum: check.value,\n                  type: \"date\"\n                });\n                status.dirty();\n              }\n            } else if (check.kind === \"max\") {\n              if (input.data.getTime() > check.value) {\n                ctx = this._getOrReturnCtx(input, ctx);\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.too_big,\n                  message: check.message,\n                  inclusive: true,\n                  exact: false,\n                  maximum: check.value,\n                  type: \"date\"\n                });\n                status.dirty();\n              }\n            } else {\n              util_js_1.util.assertNever(check);\n            }\n          }\n          return {\n            status: status.value,\n            value: new Date(input.data.getTime())\n          };\n        }\n        _addCheck(check) {\n          return new _ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check]\n          });\n        }\n        min(minDate, message) {\n          return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        max(maxDate, message) {\n          return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_js_1.errorUtil.toString(message)\n          });\n        }\n        get minDate() {\n          let min = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n              if (min === null || ch.value > min)\n                min = ch.value;\n            }\n          }\n          return min != null ? new Date(min) : null;\n        }\n        get maxDate() {\n          let max = null;\n          for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n              if (max === null || ch.value < max)\n                max = ch.value;\n            }\n          }\n          return max != null ? new Date(max) : null;\n        }\n      };\n      exports3.ZodDate = ZodDate2;\n      ZodDate2.create = (params) => {\n        return new ZodDate2({\n          checks: [],\n          coerce: params?.coerce || false,\n          typeName: ZodFirstPartyTypeKind2.ZodDate,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodSymbol2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.symbol,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodSymbol = ZodSymbol2;\n      ZodSymbol2.create = (params) => {\n        return new ZodSymbol2({\n          typeName: ZodFirstPartyTypeKind2.ZodSymbol,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodUndefined2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.undefined,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodUndefined = ZodUndefined2;\n      ZodUndefined2.create = (params) => {\n        return new ZodUndefined2({\n          typeName: ZodFirstPartyTypeKind2.ZodUndefined,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodNull2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.null,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodNull = ZodNull2;\n      ZodNull2.create = (params) => {\n        return new ZodNull2({\n          typeName: ZodFirstPartyTypeKind2.ZodNull,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodAny2 = class extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this._any = true;\n        }\n        _parse(input) {\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodAny = ZodAny2;\n      ZodAny2.create = (params) => {\n        return new ZodAny2({\n          typeName: ZodFirstPartyTypeKind2.ZodAny,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodUnknown2 = class extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this._unknown = true;\n        }\n        _parse(input) {\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodUnknown = ZodUnknown2;\n      ZodUnknown2.create = (params) => {\n        return new ZodUnknown2({\n          typeName: ZodFirstPartyTypeKind2.ZodUnknown,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodNever2 = class extends ZodType4 {\n        _parse(input) {\n          const ctx = this._getOrReturnCtx(input);\n          (0, parseUtil_js_1.addIssueToContext)(ctx, {\n            code: ZodError_js_1.ZodIssueCode.invalid_type,\n            expected: util_js_1.ZodParsedType.never,\n            received: ctx.parsedType\n          });\n          return parseUtil_js_1.INVALID;\n        }\n      };\n      exports3.ZodNever = ZodNever2;\n      ZodNever2.create = (params) => {\n        return new ZodNever2({\n          typeName: ZodFirstPartyTypeKind2.ZodNever,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodVoid2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.void,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n      };\n      exports3.ZodVoid = ZodVoid2;\n      ZodVoid2.create = (params) => {\n        return new ZodVoid2({\n          typeName: ZodFirstPartyTypeKind2.ZodVoid,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodArray2 = class _ZodArray extends ZodType4 {\n        _parse(input) {\n          const { ctx, status } = this._processInputParams(input);\n          const def = this._def;\n          if (ctx.parsedType !== util_js_1.ZodParsedType.array) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.array,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: tooBig ? ZodError_js_1.ZodIssueCode.too_big : ZodError_js_1.ZodIssueCode.too_small,\n                minimum: tooSmall ? def.exactLength.value : void 0,\n                maximum: tooBig ? def.exactLength.value : void 0,\n                type: \"array\",\n                inclusive: true,\n                exact: true,\n                message: def.exactLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_small,\n                minimum: def.minLength.value,\n                type: \"array\",\n                inclusive: true,\n                exact: false,\n                message: def.minLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_big,\n                maximum: def.maxLength.value,\n                type: \"array\",\n                inclusive: true,\n                exact: false,\n                message: def.maxLength.message\n              });\n              status.dirty();\n            }\n          }\n          if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n              return def.type._parseAsync(new ParseInputLazyPath2(ctx, item, ctx.path, i));\n            })).then((result2) => {\n              return parseUtil_js_1.ParseStatus.mergeArray(status, result2);\n            });\n          }\n          const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath2(ctx, item, ctx.path, i));\n          });\n          return parseUtil_js_1.ParseStatus.mergeArray(status, result);\n        }\n        get element() {\n          return this._def.type;\n        }\n        min(minLength, message) {\n          return new _ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_js_1.errorUtil.toString(message) }\n          });\n        }\n        max(maxLength, message) {\n          return new _ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_js_1.errorUtil.toString(message) }\n          });\n        }\n        length(len, message) {\n          return new _ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_js_1.errorUtil.toString(message) }\n          });\n        }\n        nonempty(message) {\n          return this.min(1, message);\n        }\n      };\n      exports3.ZodArray = ZodArray2;\n      ZodArray2.create = (schema, params) => {\n        return new ZodArray2({\n          type: schema,\n          minLength: null,\n          maxLength: null,\n          exactLength: null,\n          typeName: ZodFirstPartyTypeKind2.ZodArray,\n          ...processCreateParams2(params)\n        });\n      };\n      function deepPartialify2(schema) {\n        if (schema instanceof ZodObject2) {\n          const newShape = {};\n          for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional2.create(deepPartialify2(fieldSchema));\n          }\n          return new ZodObject2({\n            ...schema._def,\n            shape: () => newShape\n          });\n        } else if (schema instanceof ZodArray2) {\n          return new ZodArray2({\n            ...schema._def,\n            type: deepPartialify2(schema.element)\n          });\n        } else if (schema instanceof ZodOptional2) {\n          return ZodOptional2.create(deepPartialify2(schema.unwrap()));\n        } else if (schema instanceof ZodNullable2) {\n          return ZodNullable2.create(deepPartialify2(schema.unwrap()));\n        } else if (schema instanceof ZodTuple2) {\n          return ZodTuple2.create(schema.items.map((item) => deepPartialify2(item)));\n        } else {\n          return schema;\n        }\n      }\n      var ZodObject2 = class _ZodObject extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this._cached = null;\n          this.nonstrict = this.passthrough;\n          this.augment = this.extend;\n        }\n        _getCached() {\n          if (this._cached !== null)\n            return this._cached;\n          const shape = this._def.shape();\n          const keys = util_js_1.util.objectKeys(shape);\n          this._cached = { shape, keys };\n          return this._cached;\n        }\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.object) {\n            const ctx2 = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx2, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.object,\n              received: ctx2.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const { status, ctx } = this._processInputParams(input);\n          const { shape, keys: shapeKeys } = this._getCached();\n          const extraKeys = [];\n          if (!(this._def.catchall instanceof ZodNever2 && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n              if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n              }\n            }\n          }\n          const pairs = [];\n          for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n              key: { status: \"valid\", value: key },\n              value: keyValidator._parse(new ParseInputLazyPath2(ctx, value, ctx.path, key)),\n              alwaysSet: key in ctx.data\n            });\n          }\n          if (this._def.catchall instanceof ZodNever2) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n              for (const key of extraKeys) {\n                pairs.push({\n                  key: { status: \"valid\", value: key },\n                  value: { status: \"valid\", value: ctx.data[key] }\n                });\n              }\n            } else if (unknownKeys === \"strict\") {\n              if (extraKeys.length > 0) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                  code: ZodError_js_1.ZodIssueCode.unrecognized_keys,\n                  keys: extraKeys\n                });\n                status.dirty();\n              }\n            } else if (unknownKeys === \"strip\") {\n            } else {\n              throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n          } else {\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n              const value = ctx.data[key];\n              pairs.push({\n                key: { status: \"valid\", value: key },\n                value: catchall._parse(\n                  new ParseInputLazyPath2(ctx, value, ctx.path, key)\n                  //, ctx.child(key), value, getParsedType(value)\n                ),\n                alwaysSet: key in ctx.data\n              });\n            }\n          }\n          if (ctx.common.async) {\n            return Promise.resolve().then(async () => {\n              const syncPairs = [];\n              for (const pair of pairs) {\n                const key = await pair.key;\n                const value = await pair.value;\n                syncPairs.push({\n                  key,\n                  value,\n                  alwaysSet: pair.alwaysSet\n                });\n              }\n              return syncPairs;\n            }).then((syncPairs) => {\n              return parseUtil_js_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n          } else {\n            return parseUtil_js_1.ParseStatus.mergeObjectSync(status, pairs);\n          }\n        }\n        get shape() {\n          return this._def.shape();\n        }\n        strict(message) {\n          errorUtil_js_1.errorUtil.errToObj;\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...message !== void 0 ? {\n              errorMap: (issue, ctx) => {\n                const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                if (issue.code === \"unrecognized_keys\")\n                  return {\n                    message: errorUtil_js_1.errorUtil.errToObj(message).message ?? defaultError\n                  };\n                return {\n                  message: defaultError\n                };\n              }\n            } : {}\n          });\n        }\n        strip() {\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\"\n          });\n        }\n        passthrough() {\n          return new _ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\"\n          });\n        }\n        // const AugmentFactory =\n        //   <Def extends ZodObjectDef>(def: Def) =>\n        //   <Augmentation extends ZodRawShape>(\n        //     augmentation: Augmentation\n        //   ): ZodObject<\n        //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n        //     Def[\"unknownKeys\"],\n        //     Def[\"catchall\"]\n        //   > => {\n        //     return new ZodObject({\n        //       ...def,\n        //       shape: () => ({\n        //         ...def.shape(),\n        //         ...augmentation,\n        //       }),\n        //     }) as any;\n        //   };\n        extend(augmentation) {\n          return new _ZodObject({\n            ...this._def,\n            shape: () => ({\n              ...this._def.shape(),\n              ...augmentation\n            })\n          });\n        }\n        /**\n         * Prior to zod@1.0.12 there was a bug in the\n         * inferred type of merged objects. Please\n         * upgrade if you are experiencing issues.\n         */\n        merge(merging) {\n          const merged = new _ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n              ...this._def.shape(),\n              ...merging._def.shape()\n            }),\n            typeName: ZodFirstPartyTypeKind2.ZodObject\n          });\n          return merged;\n        }\n        // merge<\n        //   Incoming extends AnyZodObject,\n        //   Augmentation extends Incoming[\"shape\"],\n        //   NewOutput extends {\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   },\n        //   NewInput extends {\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }\n        // >(\n        //   merging: Incoming\n        // ): ZodObject<\n        //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n        //   Incoming[\"_def\"][\"unknownKeys\"],\n        //   Incoming[\"_def\"][\"catchall\"],\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   const merged: any = new ZodObject({\n        //     unknownKeys: merging._def.unknownKeys,\n        //     catchall: merging._def.catchall,\n        //     shape: () =>\n        //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n        //     typeName: ZodFirstPartyTypeKind.ZodObject,\n        //   }) as any;\n        //   return merged;\n        // }\n        setKey(key, schema) {\n          return this.augment({ [key]: schema });\n        }\n        // merge<Incoming extends AnyZodObject>(\n        //   merging: Incoming\n        // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n        // ZodObject<\n        //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n        //   Incoming[\"_def\"][\"unknownKeys\"],\n        //   Incoming[\"_def\"][\"catchall\"]\n        // > {\n        //   // const mergedShape = objectUtil.mergeShapes(\n        //   //   this._def.shape(),\n        //   //   merging._def.shape()\n        //   // );\n        //   const merged: any = new ZodObject({\n        //     unknownKeys: merging._def.unknownKeys,\n        //     catchall: merging._def.catchall,\n        //     shape: () =>\n        //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n        //     typeName: ZodFirstPartyTypeKind.ZodObject,\n        //   }) as any;\n        //   return merged;\n        // }\n        catchall(index) {\n          return new _ZodObject({\n            ...this._def,\n            catchall: index\n          });\n        }\n        pick(mask2) {\n          const shape = {};\n          for (const key of util_js_1.util.objectKeys(mask2)) {\n            if (mask2[key] && this.shape[key]) {\n              shape[key] = this.shape[key];\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => shape\n          });\n        }\n        omit(mask2) {\n          const shape = {};\n          for (const key of util_js_1.util.objectKeys(this.shape)) {\n            if (!mask2[key]) {\n              shape[key] = this.shape[key];\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => shape\n          });\n        }\n        /**\n         * @deprecated\n         */\n        deepPartial() {\n          return deepPartialify2(this);\n        }\n        partial(mask2) {\n          const newShape = {};\n          for (const key of util_js_1.util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask2 && !mask2[key]) {\n              newShape[key] = fieldSchema;\n            } else {\n              newShape[key] = fieldSchema.optional();\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => newShape\n          });\n        }\n        required(mask2) {\n          const newShape = {};\n          for (const key of util_js_1.util.objectKeys(this.shape)) {\n            if (mask2 && !mask2[key]) {\n              newShape[key] = this.shape[key];\n            } else {\n              const fieldSchema = this.shape[key];\n              let newField = fieldSchema;\n              while (newField instanceof ZodOptional2) {\n                newField = newField._def.innerType;\n              }\n              newShape[key] = newField;\n            }\n          }\n          return new _ZodObject({\n            ...this._def,\n            shape: () => newShape\n          });\n        }\n        keyof() {\n          return createZodEnum2(util_js_1.util.objectKeys(this.shape));\n        }\n      };\n      exports3.ZodObject = ZodObject2;\n      ZodObject2.create = (shape, params) => {\n        return new ZodObject2({\n          shape: () => shape,\n          unknownKeys: \"strip\",\n          catchall: ZodNever2.create(),\n          typeName: ZodFirstPartyTypeKind2.ZodObject,\n          ...processCreateParams2(params)\n        });\n      };\n      ZodObject2.strictCreate = (shape, params) => {\n        return new ZodObject2({\n          shape: () => shape,\n          unknownKeys: \"strict\",\n          catchall: ZodNever2.create(),\n          typeName: ZodFirstPartyTypeKind2.ZodObject,\n          ...processCreateParams2(params)\n        });\n      };\n      ZodObject2.lazycreate = (shape, params) => {\n        return new ZodObject2({\n          shape,\n          unknownKeys: \"strip\",\n          catchall: ZodNever2.create(),\n          typeName: ZodFirstPartyTypeKind2.ZodObject,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodUnion2 = class extends ZodType4 {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const options = this._def.options;\n          function handleResults(results) {\n            for (const result of results) {\n              if (result.result.status === \"valid\") {\n                return result.result;\n              }\n            }\n            for (const result of results) {\n              if (result.result.status === \"dirty\") {\n                ctx.common.issues.push(...result.ctx.common.issues);\n                return result.result;\n              }\n            }\n            const unionErrors = results.map((result) => new ZodError_js_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_union,\n              unionErrors\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n              const childCtx = {\n                ...ctx,\n                common: {\n                  ...ctx.common,\n                  issues: []\n                },\n                parent: null\n              };\n              return {\n                result: await option._parseAsync({\n                  data: ctx.data,\n                  path: ctx.path,\n                  parent: childCtx\n                }),\n                ctx: childCtx\n              };\n            })).then(handleResults);\n          } else {\n            let dirty = void 0;\n            const issues = [];\n            for (const option of options) {\n              const childCtx = {\n                ...ctx,\n                common: {\n                  ...ctx.common,\n                  issues: []\n                },\n                parent: null\n              };\n              const result = option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: childCtx\n              });\n              if (result.status === \"valid\") {\n                return result;\n              } else if (result.status === \"dirty\" && !dirty) {\n                dirty = { result, ctx: childCtx };\n              }\n              if (childCtx.common.issues.length) {\n                issues.push(childCtx.common.issues);\n              }\n            }\n            if (dirty) {\n              ctx.common.issues.push(...dirty.ctx.common.issues);\n              return dirty.result;\n            }\n            const unionErrors = issues.map((issues2) => new ZodError_js_1.ZodError(issues2));\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_union,\n              unionErrors\n            });\n            return parseUtil_js_1.INVALID;\n          }\n        }\n        get options() {\n          return this._def.options;\n        }\n      };\n      exports3.ZodUnion = ZodUnion2;\n      ZodUnion2.create = (types, params) => {\n        return new ZodUnion2({\n          options: types,\n          typeName: ZodFirstPartyTypeKind2.ZodUnion,\n          ...processCreateParams2(params)\n        });\n      };\n      var getDiscriminator2 = (type) => {\n        if (type instanceof ZodLazy2) {\n          return getDiscriminator2(type.schema);\n        } else if (type instanceof ZodEffects2) {\n          return getDiscriminator2(type.innerType());\n        } else if (type instanceof ZodLiteral2) {\n          return [type.value];\n        } else if (type instanceof ZodEnum2) {\n          return type.options;\n        } else if (type instanceof ZodNativeEnum2) {\n          return util_js_1.util.objectValues(type.enum);\n        } else if (type instanceof ZodDefault2) {\n          return getDiscriminator2(type._def.innerType);\n        } else if (type instanceof ZodUndefined2) {\n          return [void 0];\n        } else if (type instanceof ZodNull2) {\n          return [null];\n        } else if (type instanceof ZodOptional2) {\n          return [void 0, ...getDiscriminator2(type.unwrap())];\n        } else if (type instanceof ZodNullable2) {\n          return [null, ...getDiscriminator2(type.unwrap())];\n        } else if (type instanceof ZodBranded2) {\n          return getDiscriminator2(type.unwrap());\n        } else if (type instanceof ZodReadonly2) {\n          return getDiscriminator2(type.unwrap());\n        } else if (type instanceof ZodCatch2) {\n          return getDiscriminator2(type._def.innerType);\n        } else {\n          return [];\n        }\n      };\n      var ZodDiscriminatedUnion2 = class _ZodDiscriminatedUnion extends ZodType4 {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.object) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.object,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const discriminator = this.discriminator;\n          const discriminatorValue = ctx.data[discriminator];\n          const option = this.optionsMap.get(discriminatorValue);\n          if (!option) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_union_discriminator,\n              options: Array.from(this.optionsMap.keys()),\n              path: [discriminator]\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (ctx.common.async) {\n            return option._parseAsync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n          } else {\n            return option._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n          }\n        }\n        get discriminator() {\n          return this._def.discriminator;\n        }\n        get options() {\n          return this._def.options;\n        }\n        get optionsMap() {\n          return this._def.optionsMap;\n        }\n        /**\n         * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n         * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n         * have a different value for each object in the union.\n         * @param discriminator the name of the discriminator property\n         * @param types an array of object schemas\n         * @param params\n         */\n        static create(discriminator, options, params) {\n          const optionsMap = /* @__PURE__ */ new Map();\n          for (const type of options) {\n            const discriminatorValues = getDiscriminator2(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n              throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n              if (optionsMap.has(value)) {\n                throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n              }\n              optionsMap.set(value, type);\n            }\n          }\n          return new _ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind2.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams2(params)\n          });\n        }\n      };\n      exports3.ZodDiscriminatedUnion = ZodDiscriminatedUnion2;\n      function mergeValues2(a, b2) {\n        const aType = (0, util_js_1.getParsedType)(a);\n        const bType = (0, util_js_1.getParsedType)(b2);\n        if (a === b2) {\n          return { valid: true, data: a };\n        } else if (aType === util_js_1.ZodParsedType.object && bType === util_js_1.ZodParsedType.object) {\n          const bKeys = util_js_1.util.objectKeys(b2);\n          const sharedKeys = util_js_1.util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n          const newObj = { ...a, ...b2 };\n          for (const key of sharedKeys) {\n            const sharedValue = mergeValues2(a[key], b2[key]);\n            if (!sharedValue.valid) {\n              return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n          }\n          return { valid: true, data: newObj };\n        } else if (aType === util_js_1.ZodParsedType.array && bType === util_js_1.ZodParsedType.array) {\n          if (a.length !== b2.length) {\n            return { valid: false };\n          }\n          const newArray = [];\n          for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b2[index];\n            const sharedValue = mergeValues2(itemA, itemB);\n            if (!sharedValue.valid) {\n              return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n          }\n          return { valid: true, data: newArray };\n        } else if (aType === util_js_1.ZodParsedType.date && bType === util_js_1.ZodParsedType.date && +a === +b2) {\n          return { valid: true, data: a };\n        } else {\n          return { valid: false };\n        }\n      }\n      var ZodIntersection2 = class extends ZodType4 {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_js_1.isAborted)(parsedLeft) || (0, parseUtil_js_1.isAborted)(parsedRight)) {\n              return parseUtil_js_1.INVALID;\n            }\n            const merged = mergeValues2(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_intersection_types\n              });\n              return parseUtil_js_1.INVALID;\n            }\n            if ((0, parseUtil_js_1.isDirty)(parsedLeft) || (0, parseUtil_js_1.isDirty)(parsedRight)) {\n              status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n          };\n          if (ctx.common.async) {\n            return Promise.all([\n              this._def.left._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              }),\n              this._def.right._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              })\n            ]).then(([left, right]) => handleParsed(left, right));\n          } else {\n            return handleParsed(this._def.left._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            }), this._def.right._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            }));\n          }\n        }\n      };\n      exports3.ZodIntersection = ZodIntersection2;\n      ZodIntersection2.create = (left, right, params) => {\n        return new ZodIntersection2({\n          left,\n          right,\n          typeName: ZodFirstPartyTypeKind2.ZodIntersection,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodTuple2 = class _ZodTuple extends ZodType4 {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.array) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.array,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.too_small,\n              minimum: this._def.items.length,\n              inclusive: true,\n              exact: false,\n              type: \"array\"\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const rest = this._def.rest;\n          if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.too_big,\n              maximum: this._def.items.length,\n              inclusive: true,\n              exact: false,\n              type: \"array\"\n            });\n            status.dirty();\n          }\n          const items = [...ctx.data].map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n              return null;\n            return schema._parse(new ParseInputLazyPath2(ctx, item, ctx.path, itemIndex));\n          }).filter((x) => !!x);\n          if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n              return parseUtil_js_1.ParseStatus.mergeArray(status, results);\n            });\n          } else {\n            return parseUtil_js_1.ParseStatus.mergeArray(status, items);\n          }\n        }\n        get items() {\n          return this._def.items;\n        }\n        rest(rest) {\n          return new _ZodTuple({\n            ...this._def,\n            rest\n          });\n        }\n      };\n      exports3.ZodTuple = ZodTuple2;\n      ZodTuple2.create = (schemas, params) => {\n        if (!Array.isArray(schemas)) {\n          throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n        }\n        return new ZodTuple2({\n          items: schemas,\n          typeName: ZodFirstPartyTypeKind2.ZodTuple,\n          rest: null,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodRecord2 = class _ZodRecord extends ZodType4 {\n        get keySchema() {\n          return this._def.keyType;\n        }\n        get valueSchema() {\n          return this._def.valueType;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.object) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.object,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const pairs = [];\n          const keyType = this._def.keyType;\n          const valueType = this._def.valueType;\n          for (const key in ctx.data) {\n            pairs.push({\n              key: keyType._parse(new ParseInputLazyPath2(ctx, key, ctx.path, key)),\n              value: valueType._parse(new ParseInputLazyPath2(ctx, ctx.data[key], ctx.path, key)),\n              alwaysSet: key in ctx.data\n            });\n          }\n          if (ctx.common.async) {\n            return parseUtil_js_1.ParseStatus.mergeObjectAsync(status, pairs);\n          } else {\n            return parseUtil_js_1.ParseStatus.mergeObjectSync(status, pairs);\n          }\n        }\n        get element() {\n          return this._def.valueType;\n        }\n        static create(first, second, third) {\n          if (second instanceof ZodType4) {\n            return new _ZodRecord({\n              keyType: first,\n              valueType: second,\n              typeName: ZodFirstPartyTypeKind2.ZodRecord,\n              ...processCreateParams2(third)\n            });\n          }\n          return new _ZodRecord({\n            keyType: ZodString2.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind2.ZodRecord,\n            ...processCreateParams2(second)\n          });\n        }\n      };\n      exports3.ZodRecord = ZodRecord2;\n      var ZodMap2 = class extends ZodType4 {\n        get keySchema() {\n          return this._def.keyType;\n        }\n        get valueSchema() {\n          return this._def.valueType;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.map) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.map,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const keyType = this._def.keyType;\n          const valueType = this._def.valueType;\n          const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n              key: keyType._parse(new ParseInputLazyPath2(ctx, key, ctx.path, [index, \"key\"])),\n              value: valueType._parse(new ParseInputLazyPath2(ctx, value, ctx.path, [index, \"value\"]))\n            };\n          });\n          if (ctx.common.async) {\n            const finalMap = /* @__PURE__ */ new Map();\n            return Promise.resolve().then(async () => {\n              for (const pair of pairs) {\n                const key = await pair.key;\n                const value = await pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                  return parseUtil_js_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                  status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n              }\n              return { status: status.value, value: finalMap };\n            });\n          } else {\n            const finalMap = /* @__PURE__ */ new Map();\n            for (const pair of pairs) {\n              const key = pair.key;\n              const value = pair.value;\n              if (key.status === \"aborted\" || value.status === \"aborted\") {\n                return parseUtil_js_1.INVALID;\n              }\n              if (key.status === \"dirty\" || value.status === \"dirty\") {\n                status.dirty();\n              }\n              finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n          }\n        }\n      };\n      exports3.ZodMap = ZodMap2;\n      ZodMap2.create = (keyType, valueType, params) => {\n        return new ZodMap2({\n          valueType,\n          keyType,\n          typeName: ZodFirstPartyTypeKind2.ZodMap,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodSet2 = class _ZodSet extends ZodType4 {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.set) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.set,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const def = this._def;\n          if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_small,\n                minimum: def.minSize.value,\n                type: \"set\",\n                inclusive: true,\n                exact: false,\n                message: def.minSize.message\n              });\n              status.dirty();\n            }\n          }\n          if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_big,\n                maximum: def.maxSize.value,\n                type: \"set\",\n                inclusive: true,\n                exact: false,\n                message: def.maxSize.message\n              });\n              status.dirty();\n            }\n          }\n          const valueType = this._def.valueType;\n          function finalizeSet(elements2) {\n            const parsedSet = /* @__PURE__ */ new Set();\n            for (const element of elements2) {\n              if (element.status === \"aborted\")\n                return parseUtil_js_1.INVALID;\n              if (element.status === \"dirty\")\n                status.dirty();\n              parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n          }\n          const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath2(ctx, item, ctx.path, i)));\n          if (ctx.common.async) {\n            return Promise.all(elements).then((elements2) => finalizeSet(elements2));\n          } else {\n            return finalizeSet(elements);\n          }\n        }\n        min(minSize, message) {\n          return new _ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_js_1.errorUtil.toString(message) }\n          });\n        }\n        max(maxSize, message) {\n          return new _ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_js_1.errorUtil.toString(message) }\n          });\n        }\n        size(size, message) {\n          return this.min(size, message).max(size, message);\n        }\n        nonempty(message) {\n          return this.min(1, message);\n        }\n      };\n      exports3.ZodSet = ZodSet2;\n      ZodSet2.create = (valueType, params) => {\n        return new ZodSet2({\n          valueType,\n          minSize: null,\n          maxSize: null,\n          typeName: ZodFirstPartyTypeKind2.ZodSet,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodFunction2 = class _ZodFunction extends ZodType4 {\n        constructor() {\n          super(...arguments);\n          this.validate = this.implement;\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.function) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.function,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          function makeArgsIssue(args, error) {\n            return (0, parseUtil_js_1.makeIssue)({\n              data: args,\n              path: ctx.path,\n              errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0, errors_js_1.getErrorMap)(), errors_js_1.defaultErrorMap].filter((x) => !!x),\n              issueData: {\n                code: ZodError_js_1.ZodIssueCode.invalid_arguments,\n                argumentsError: error\n              }\n            });\n          }\n          function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_js_1.makeIssue)({\n              data: returns,\n              path: ctx.path,\n              errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0, errors_js_1.getErrorMap)(), errors_js_1.defaultErrorMap].filter((x) => !!x),\n              issueData: {\n                code: ZodError_js_1.ZodIssueCode.invalid_return_type,\n                returnTypeError: error\n              }\n            });\n          }\n          const params = { errorMap: ctx.common.contextualErrorMap };\n          const fn = ctx.data;\n          if (this._def.returns instanceof ZodPromise2) {\n            const me = this;\n            return (0, parseUtil_js_1.OK)(async function(...args) {\n              const error = new ZodError_js_1.ZodError([]);\n              const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                error.addIssue(makeArgsIssue(args, e));\n                throw error;\n              });\n              const result = await Reflect.apply(fn, this, parsedArgs);\n              const parsedReturns = await me._def.returns._def.type.parseAsync(result, params).catch((e) => {\n                error.addIssue(makeReturnsIssue(result, e));\n                throw error;\n              });\n              return parsedReturns;\n            });\n          } else {\n            const me = this;\n            return (0, parseUtil_js_1.OK)(function(...args) {\n              const parsedArgs = me._def.args.safeParse(args, params);\n              if (!parsedArgs.success) {\n                throw new ZodError_js_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n              }\n              const result = Reflect.apply(fn, this, parsedArgs.data);\n              const parsedReturns = me._def.returns.safeParse(result, params);\n              if (!parsedReturns.success) {\n                throw new ZodError_js_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n              }\n              return parsedReturns.data;\n            });\n          }\n        }\n        parameters() {\n          return this._def.args;\n        }\n        returnType() {\n          return this._def.returns;\n        }\n        args(...items) {\n          return new _ZodFunction({\n            ...this._def,\n            args: ZodTuple2.create(items).rest(ZodUnknown2.create())\n          });\n        }\n        returns(returnType) {\n          return new _ZodFunction({\n            ...this._def,\n            returns: returnType\n          });\n        }\n        implement(func) {\n          const validatedFunc = this.parse(func);\n          return validatedFunc;\n        }\n        strictImplement(func) {\n          const validatedFunc = this.parse(func);\n          return validatedFunc;\n        }\n        static create(args, returns, params) {\n          return new _ZodFunction({\n            args: args ? args : ZodTuple2.create([]).rest(ZodUnknown2.create()),\n            returns: returns || ZodUnknown2.create(),\n            typeName: ZodFirstPartyTypeKind2.ZodFunction,\n            ...processCreateParams2(params)\n          });\n        }\n      };\n      exports3.ZodFunction = ZodFunction2;\n      var ZodLazy2 = class extends ZodType4 {\n        get schema() {\n          return this._def.getter();\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const lazySchema = this._def.getter();\n          return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n        }\n      };\n      exports3.ZodLazy = ZodLazy2;\n      ZodLazy2.create = (getter, params) => {\n        return new ZodLazy2({\n          getter,\n          typeName: ZodFirstPartyTypeKind2.ZodLazy,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodLiteral2 = class extends ZodType4 {\n        _parse(input) {\n          if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              received: ctx.data,\n              code: ZodError_js_1.ZodIssueCode.invalid_literal,\n              expected: this._def.value\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return { status: \"valid\", value: input.data };\n        }\n        get value() {\n          return this._def.value;\n        }\n      };\n      exports3.ZodLiteral = ZodLiteral2;\n      ZodLiteral2.create = (value, params) => {\n        return new ZodLiteral2({\n          value,\n          typeName: ZodFirstPartyTypeKind2.ZodLiteral,\n          ...processCreateParams2(params)\n        });\n      };\n      function createZodEnum2(values, params) {\n        return new ZodEnum2({\n          values,\n          typeName: ZodFirstPartyTypeKind2.ZodEnum,\n          ...processCreateParams2(params)\n        });\n      }\n      var ZodEnum2 = class _ZodEnum extends ZodType4 {\n        _parse(input) {\n          if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              expected: util_js_1.util.joinValues(expectedValues),\n              received: ctx.parsedType,\n              code: ZodError_js_1.ZodIssueCode.invalid_type\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (!this._cache) {\n            this._cache = new Set(this._def.values);\n          }\n          if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              received: ctx.data,\n              code: ZodError_js_1.ZodIssueCode.invalid_enum_value,\n              options: expectedValues\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n        get options() {\n          return this._def.values;\n        }\n        get enum() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        get Values() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        get Enum() {\n          const enumValues = {};\n          for (const val of this._def.values) {\n            enumValues[val] = val;\n          }\n          return enumValues;\n        }\n        extract(values, newDef = this._def) {\n          return _ZodEnum.create(values, {\n            ...this._def,\n            ...newDef\n          });\n        }\n        exclude(values, newDef = this._def) {\n          return _ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef\n          });\n        }\n      };\n      exports3.ZodEnum = ZodEnum2;\n      ZodEnum2.create = createZodEnum2;\n      var ZodNativeEnum2 = class extends ZodType4 {\n        _parse(input) {\n          const nativeEnumValues = util_js_1.util.getValidEnumValues(this._def.values);\n          const ctx = this._getOrReturnCtx(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.string && ctx.parsedType !== util_js_1.ZodParsedType.number) {\n            const expectedValues = util_js_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              expected: util_js_1.util.joinValues(expectedValues),\n              received: ctx.parsedType,\n              code: ZodError_js_1.ZodIssueCode.invalid_type\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          if (!this._cache) {\n            this._cache = new Set(util_js_1.util.getValidEnumValues(this._def.values));\n          }\n          if (!this._cache.has(input.data)) {\n            const expectedValues = util_js_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              received: ctx.data,\n              code: ZodError_js_1.ZodIssueCode.invalid_enum_value,\n              options: expectedValues\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return (0, parseUtil_js_1.OK)(input.data);\n        }\n        get enum() {\n          return this._def.values;\n        }\n      };\n      exports3.ZodNativeEnum = ZodNativeEnum2;\n      ZodNativeEnum2.create = (values, params) => {\n        return new ZodNativeEnum2({\n          values,\n          typeName: ZodFirstPartyTypeKind2.ZodNativeEnum,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodPromise2 = class extends ZodType4 {\n        unwrap() {\n          return this._def.type;\n        }\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          if (ctx.parsedType !== util_js_1.ZodParsedType.promise && ctx.common.async === false) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.promise,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          const promisified = ctx.parsedType === util_js_1.ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n          return (0, parseUtil_js_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n              path: ctx.path,\n              errorMap: ctx.common.contextualErrorMap\n            });\n          }));\n        }\n      };\n      exports3.ZodPromise = ZodPromise2;\n      ZodPromise2.create = (schema, params) => {\n        return new ZodPromise2({\n          type: schema,\n          typeName: ZodFirstPartyTypeKind2.ZodPromise,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodEffects2 = class extends ZodType4 {\n        innerType() {\n          return this._def.schema;\n        }\n        sourceType() {\n          return this._def.schema._def.typeName === ZodFirstPartyTypeKind2.ZodEffects ? this._def.schema.sourceType() : this._def.schema;\n        }\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          const effect = this._def.effect || null;\n          const checkCtx = {\n            addIssue: (arg) => {\n              (0, parseUtil_js_1.addIssueToContext)(ctx, arg);\n              if (arg.fatal) {\n                status.abort();\n              } else {\n                status.dirty();\n              }\n            },\n            get path() {\n              return ctx.path;\n            }\n          };\n          checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n          if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n              return Promise.resolve(processed).then(async (processed2) => {\n                if (status.value === \"aborted\")\n                  return parseUtil_js_1.INVALID;\n                const result = await this._def.schema._parseAsync({\n                  data: processed2,\n                  path: ctx.path,\n                  parent: ctx\n                });\n                if (result.status === \"aborted\")\n                  return parseUtil_js_1.INVALID;\n                if (result.status === \"dirty\")\n                  return (0, parseUtil_js_1.DIRTY)(result.value);\n                if (status.value === \"dirty\")\n                  return (0, parseUtil_js_1.DIRTY)(result.value);\n                return result;\n              });\n            } else {\n              if (status.value === \"aborted\")\n                return parseUtil_js_1.INVALID;\n              const result = this._def.schema._parseSync({\n                data: processed,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (result.status === \"aborted\")\n                return parseUtil_js_1.INVALID;\n              if (result.status === \"dirty\")\n                return (0, parseUtil_js_1.DIRTY)(result.value);\n              if (status.value === \"dirty\")\n                return (0, parseUtil_js_1.DIRTY)(result.value);\n              return result;\n            }\n          }\n          if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n              const result = effect.refinement(acc, checkCtx);\n              if (ctx.common.async) {\n                return Promise.resolve(result);\n              }\n              if (result instanceof Promise) {\n                throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n              }\n              return acc;\n            };\n            if (ctx.common.async === false) {\n              const inner = this._def.schema._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (inner.status === \"aborted\")\n                return parseUtil_js_1.INVALID;\n              if (inner.status === \"dirty\")\n                status.dirty();\n              executeRefinement(inner.value);\n              return { status: status.value, value: inner.value };\n            } else {\n              return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                if (inner.status === \"aborted\")\n                  return parseUtil_js_1.INVALID;\n                if (inner.status === \"dirty\")\n                  status.dirty();\n                return executeRefinement(inner.value).then(() => {\n                  return { status: status.value, value: inner.value };\n                });\n              });\n            }\n          }\n          if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n              const base = this._def.schema._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (!(0, parseUtil_js_1.isValid)(base))\n                return parseUtil_js_1.INVALID;\n              const result = effect.transform(base.value, checkCtx);\n              if (result instanceof Promise) {\n                throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n              }\n              return { status: status.value, value: result };\n            } else {\n              return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                if (!(0, parseUtil_js_1.isValid)(base))\n                  return parseUtil_js_1.INVALID;\n                return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                  status: status.value,\n                  value: result\n                }));\n              });\n            }\n          }\n          util_js_1.util.assertNever(effect);\n        }\n      };\n      exports3.ZodEffects = ZodEffects2;\n      exports3.ZodTransformer = ZodEffects2;\n      ZodEffects2.create = (schema, effect, params) => {\n        return new ZodEffects2({\n          schema,\n          typeName: ZodFirstPartyTypeKind2.ZodEffects,\n          effect,\n          ...processCreateParams2(params)\n        });\n      };\n      ZodEffects2.createWithPreprocess = (preprocess, schema, params) => {\n        return new ZodEffects2({\n          schema,\n          effect: { type: \"preprocess\", transform: preprocess },\n          typeName: ZodFirstPartyTypeKind2.ZodEffects,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodOptional2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType === util_js_1.ZodParsedType.undefined) {\n            return (0, parseUtil_js_1.OK)(void 0);\n          }\n          return this._def.innerType._parse(input);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      exports3.ZodOptional = ZodOptional2;\n      ZodOptional2.create = (type, params) => {\n        return new ZodOptional2({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind2.ZodOptional,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodNullable2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType === util_js_1.ZodParsedType.null) {\n            return (0, parseUtil_js_1.OK)(null);\n          }\n          return this._def.innerType._parse(input);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      exports3.ZodNullable = ZodNullable2;\n      ZodNullable2.create = (type, params) => {\n        return new ZodNullable2({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind2.ZodNullable,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodDefault2 = class extends ZodType4 {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          let data = ctx.data;\n          if (ctx.parsedType === util_js_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n          }\n          return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx\n          });\n        }\n        removeDefault() {\n          return this._def.innerType;\n        }\n      };\n      exports3.ZodDefault = ZodDefault2;\n      ZodDefault2.create = (type, params) => {\n        return new ZodDefault2({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind2.ZodDefault,\n          defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodCatch2 = class extends ZodType4 {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const newCtx = {\n            ...ctx,\n            common: {\n              ...ctx.common,\n              issues: []\n            }\n          };\n          const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n              ...newCtx\n            }\n          });\n          if ((0, parseUtil_js_1.isAsync)(result)) {\n            return result.then((result2) => {\n              return {\n                status: \"valid\",\n                value: result2.status === \"valid\" ? result2.value : this._def.catchValue({\n                  get error() {\n                    return new ZodError_js_1.ZodError(newCtx.common.issues);\n                  },\n                  input: newCtx.data\n                })\n              };\n            });\n          } else {\n            return {\n              status: \"valid\",\n              value: result.status === \"valid\" ? result.value : this._def.catchValue({\n                get error() {\n                  return new ZodError_js_1.ZodError(newCtx.common.issues);\n                },\n                input: newCtx.data\n              })\n            };\n          }\n        }\n        removeCatch() {\n          return this._def.innerType;\n        }\n      };\n      exports3.ZodCatch = ZodCatch2;\n      ZodCatch2.create = (type, params) => {\n        return new ZodCatch2({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind2.ZodCatch,\n          catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n          ...processCreateParams2(params)\n        });\n      };\n      var ZodNaN2 = class extends ZodType4 {\n        _parse(input) {\n          const parsedType = this._getType(input);\n          if (parsedType !== util_js_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n              code: ZodError_js_1.ZodIssueCode.invalid_type,\n              expected: util_js_1.ZodParsedType.nan,\n              received: ctx.parsedType\n            });\n            return parseUtil_js_1.INVALID;\n          }\n          return { status: \"valid\", value: input.data };\n        }\n      };\n      exports3.ZodNaN = ZodNaN2;\n      ZodNaN2.create = (params) => {\n        return new ZodNaN2({\n          typeName: ZodFirstPartyTypeKind2.ZodNaN,\n          ...processCreateParams2(params)\n        });\n      };\n      exports3.BRAND = Symbol(\"zod_brand\");\n      var ZodBranded2 = class extends ZodType4 {\n        _parse(input) {\n          const { ctx } = this._processInputParams(input);\n          const data = ctx.data;\n          return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx\n          });\n        }\n        unwrap() {\n          return this._def.type;\n        }\n      };\n      exports3.ZodBranded = ZodBranded2;\n      var ZodPipeline2 = class _ZodPipeline extends ZodType4 {\n        _parse(input) {\n          const { status, ctx } = this._processInputParams(input);\n          if (ctx.common.async) {\n            const handleAsync = async () => {\n              const inResult = await this._def.in._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx\n              });\n              if (inResult.status === \"aborted\")\n                return parseUtil_js_1.INVALID;\n              if (inResult.status === \"dirty\") {\n                status.dirty();\n                return (0, parseUtil_js_1.DIRTY)(inResult.value);\n              } else {\n                return this._def.out._parseAsync({\n                  data: inResult.value,\n                  path: ctx.path,\n                  parent: ctx\n                });\n              }\n            };\n            return handleAsync();\n          } else {\n            const inResult = this._def.in._parseSync({\n              data: ctx.data,\n              path: ctx.path,\n              parent: ctx\n            });\n            if (inResult.status === \"aborted\")\n              return parseUtil_js_1.INVALID;\n            if (inResult.status === \"dirty\") {\n              status.dirty();\n              return {\n                status: \"dirty\",\n                value: inResult.value\n              };\n            } else {\n              return this._def.out._parseSync({\n                data: inResult.value,\n                path: ctx.path,\n                parent: ctx\n              });\n            }\n          }\n        }\n        static create(a, b2) {\n          return new _ZodPipeline({\n            in: a,\n            out: b2,\n            typeName: ZodFirstPartyTypeKind2.ZodPipeline\n          });\n        }\n      };\n      exports3.ZodPipeline = ZodPipeline2;\n      var ZodReadonly2 = class extends ZodType4 {\n        _parse(input) {\n          const result = this._def.innerType._parse(input);\n          const freeze = (data) => {\n            if ((0, parseUtil_js_1.isValid)(data)) {\n              data.value = Object.freeze(data.value);\n            }\n            return data;\n          };\n          return (0, parseUtil_js_1.isAsync)(result) ? result.then((data) => freeze(data)) : freeze(result);\n        }\n        unwrap() {\n          return this._def.innerType;\n        }\n      };\n      exports3.ZodReadonly = ZodReadonly2;\n      ZodReadonly2.create = (type, params) => {\n        return new ZodReadonly2({\n          innerType: type,\n          typeName: ZodFirstPartyTypeKind2.ZodReadonly,\n          ...processCreateParams2(params)\n        });\n      };\n      function cleanParams2(params, data) {\n        const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n        const p2 = typeof p === \"string\" ? { message: p } : p;\n        return p2;\n      }\n      function custom2(check, _params = {}, fatal) {\n        if (check)\n          return ZodAny2.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n              return r.then((r2) => {\n                if (!r2) {\n                  const params = cleanParams2(_params, data);\n                  const _fatal = params.fatal ?? fatal ?? true;\n                  ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                }\n              });\n            }\n            if (!r) {\n              const params = cleanParams2(_params, data);\n              const _fatal = params.fatal ?? fatal ?? true;\n              ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n          });\n        return ZodAny2.create();\n      }\n      exports3.late = {\n        object: ZodObject2.lazycreate\n      };\n      var ZodFirstPartyTypeKind2;\n      (function(ZodFirstPartyTypeKind3) {\n        ZodFirstPartyTypeKind3[\"ZodString\"] = \"ZodString\";\n        ZodFirstPartyTypeKind3[\"ZodNumber\"] = \"ZodNumber\";\n        ZodFirstPartyTypeKind3[\"ZodNaN\"] = \"ZodNaN\";\n        ZodFirstPartyTypeKind3[\"ZodBigInt\"] = \"ZodBigInt\";\n        ZodFirstPartyTypeKind3[\"ZodBoolean\"] = \"ZodBoolean\";\n        ZodFirstPartyTypeKind3[\"ZodDate\"] = \"ZodDate\";\n        ZodFirstPartyTypeKind3[\"ZodSymbol\"] = \"ZodSymbol\";\n        ZodFirstPartyTypeKind3[\"ZodUndefined\"] = \"ZodUndefined\";\n        ZodFirstPartyTypeKind3[\"ZodNull\"] = \"ZodNull\";\n        ZodFirstPartyTypeKind3[\"ZodAny\"] = \"ZodAny\";\n        ZodFirstPartyTypeKind3[\"ZodUnknown\"] = \"ZodUnknown\";\n        ZodFirstPartyTypeKind3[\"ZodNever\"] = \"ZodNever\";\n        ZodFirstPartyTypeKind3[\"ZodVoid\"] = \"ZodVoid\";\n        ZodFirstPartyTypeKind3[\"ZodArray\"] = \"ZodArray\";\n        ZodFirstPartyTypeKind3[\"ZodObject\"] = \"ZodObject\";\n        ZodFirstPartyTypeKind3[\"ZodUnion\"] = \"ZodUnion\";\n        ZodFirstPartyTypeKind3[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n        ZodFirstPartyTypeKind3[\"ZodIntersection\"] = \"ZodIntersection\";\n        ZodFirstPartyTypeKind3[\"ZodTuple\"] = \"ZodTuple\";\n        ZodFirstPartyTypeKind3[\"ZodRecord\"] = \"ZodRecord\";\n        ZodFirstPartyTypeKind3[\"ZodMap\"] = \"ZodMap\";\n        ZodFirstPartyTypeKind3[\"ZodSet\"] = \"ZodSet\";\n        ZodFirstPartyTypeKind3[\"ZodFunction\"] = \"ZodFunction\";\n        ZodFirstPartyTypeKind3[\"ZodLazy\"] = \"ZodLazy\";\n        ZodFirstPartyTypeKind3[\"ZodLiteral\"] = \"ZodLiteral\";\n        ZodFirstPartyTypeKind3[\"ZodEnum\"] = \"ZodEnum\";\n        ZodFirstPartyTypeKind3[\"ZodEffects\"] = \"ZodEffects\";\n        ZodFirstPartyTypeKind3[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n        ZodFirstPartyTypeKind3[\"ZodOptional\"] = \"ZodOptional\";\n        ZodFirstPartyTypeKind3[\"ZodNullable\"] = \"ZodNullable\";\n        ZodFirstPartyTypeKind3[\"ZodDefault\"] = \"ZodDefault\";\n        ZodFirstPartyTypeKind3[\"ZodCatch\"] = \"ZodCatch\";\n        ZodFirstPartyTypeKind3[\"ZodPromise\"] = \"ZodPromise\";\n        ZodFirstPartyTypeKind3[\"ZodBranded\"] = \"ZodBranded\";\n        ZodFirstPartyTypeKind3[\"ZodPipeline\"] = \"ZodPipeline\";\n        ZodFirstPartyTypeKind3[\"ZodReadonly\"] = \"ZodReadonly\";\n      })(ZodFirstPartyTypeKind2 || (exports3.ZodFirstPartyTypeKind = ZodFirstPartyTypeKind2 = {}));\n      var instanceOfType2 = (cls, params = {\n        message: `Input not instance of ${cls.name}`\n      }) => custom2((data) => data instanceof cls, params);\n      exports3.instanceof = instanceOfType2;\n      var stringType2 = ZodString2.create;\n      exports3.string = stringType2;\n      var numberType2 = ZodNumber2.create;\n      exports3.number = numberType2;\n      var nanType2 = ZodNaN2.create;\n      exports3.nan = nanType2;\n      var bigIntType2 = ZodBigInt2.create;\n      exports3.bigint = bigIntType2;\n      var booleanType2 = ZodBoolean2.create;\n      exports3.boolean = booleanType2;\n      var dateType2 = ZodDate2.create;\n      exports3.date = dateType2;\n      var symbolType2 = ZodSymbol2.create;\n      exports3.symbol = symbolType2;\n      var undefinedType2 = ZodUndefined2.create;\n      exports3.undefined = undefinedType2;\n      var nullType2 = ZodNull2.create;\n      exports3.null = nullType2;\n      var anyType2 = ZodAny2.create;\n      exports3.any = anyType2;\n      var unknownType2 = ZodUnknown2.create;\n      exports3.unknown = unknownType2;\n      var neverType2 = ZodNever2.create;\n      exports3.never = neverType2;\n      var voidType2 = ZodVoid2.create;\n      exports3.void = voidType2;\n      var arrayType2 = ZodArray2.create;\n      exports3.array = arrayType2;\n      var objectType2 = ZodObject2.create;\n      exports3.object = objectType2;\n      var strictObjectType2 = ZodObject2.strictCreate;\n      exports3.strictObject = strictObjectType2;\n      var unionType2 = ZodUnion2.create;\n      exports3.union = unionType2;\n      var discriminatedUnionType2 = ZodDiscriminatedUnion2.create;\n      exports3.discriminatedUnion = discriminatedUnionType2;\n      var intersectionType2 = ZodIntersection2.create;\n      exports3.intersection = intersectionType2;\n      var tupleType2 = ZodTuple2.create;\n      exports3.tuple = tupleType2;\n      var recordType2 = ZodRecord2.create;\n      exports3.record = recordType2;\n      var mapType2 = ZodMap2.create;\n      exports3.map = mapType2;\n      var setType2 = ZodSet2.create;\n      exports3.set = setType2;\n      var functionType2 = ZodFunction2.create;\n      exports3.function = functionType2;\n      var lazyType2 = ZodLazy2.create;\n      exports3.lazy = lazyType2;\n      var literalType2 = ZodLiteral2.create;\n      exports3.literal = literalType2;\n      var enumType2 = ZodEnum2.create;\n      exports3.enum = enumType2;\n      var nativeEnumType2 = ZodNativeEnum2.create;\n      exports3.nativeEnum = nativeEnumType2;\n      var promiseType2 = ZodPromise2.create;\n      exports3.promise = promiseType2;\n      var effectsType2 = ZodEffects2.create;\n      exports3.effect = effectsType2;\n      exports3.transformer = effectsType2;\n      var optionalType2 = ZodOptional2.create;\n      exports3.optional = optionalType2;\n      var nullableType2 = ZodNullable2.create;\n      exports3.nullable = nullableType2;\n      var preprocessType2 = ZodEffects2.createWithPreprocess;\n      exports3.preprocess = preprocessType2;\n      var pipelineType2 = ZodPipeline2.create;\n      exports3.pipeline = pipelineType2;\n      var ostring2 = () => stringType2().optional();\n      exports3.ostring = ostring2;\n      var onumber2 = () => numberType2().optional();\n      exports3.onumber = onumber2;\n      var oboolean2 = () => booleanType2().optional();\n      exports3.oboolean = oboolean2;\n      exports3.coerce = {\n        string: (arg) => ZodString2.create({ ...arg, coerce: true }),\n        number: (arg) => ZodNumber2.create({ ...arg, coerce: true }),\n        boolean: (arg) => ZodBoolean2.create({\n          ...arg,\n          coerce: true\n        }),\n        bigint: (arg) => ZodBigInt2.create({ ...arg, coerce: true }),\n        date: (arg) => ZodDate2.create({ ...arg, coerce: true })\n      };\n      exports3.NEVER = parseUtil_js_1.INVALID;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/external.js\n  var require_external = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/external.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        var desc = Object.getOwnPropertyDescriptor(m, k);\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n          desc = { enumerable: true, get: function() {\n            return m[k];\n          } };\n        }\n        Object.defineProperty(o, k2, desc);\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __exportStar2 = exports3 && exports3.__exportStar || function(m, exports4) {\n        for (var p in m)\n          if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports4, p))\n            __createBinding2(exports4, m, p);\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      __exportStar2(require_errors(), exports3);\n      __exportStar2(require_parseUtil(), exports3);\n      __exportStar2(require_typeAliases(), exports3);\n      __exportStar2(require_util(), exports3);\n      __exportStar2(require_types2(), exports3);\n      __exportStar2(require_ZodError(), exports3);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/index.js\n  var require_v3 = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/v3/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        var desc = Object.getOwnPropertyDescriptor(m, k);\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n          desc = { enumerable: true, get: function() {\n            return m[k];\n          } };\n        }\n        Object.defineProperty(o, k2, desc);\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __setModuleDefault2 = exports3 && exports3.__setModuleDefault || (Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      });\n      var __importStar2 = exports3 && exports3.__importStar || function(mod2) {\n        if (mod2 && mod2.__esModule)\n          return mod2;\n        var result = {};\n        if (mod2 != null) {\n          for (var k in mod2)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod2, k))\n              __createBinding2(result, mod2, k);\n        }\n        __setModuleDefault2(result, mod2);\n        return result;\n      };\n      var __exportStar2 = exports3 && exports3.__exportStar || function(m, exports4) {\n        for (var p in m)\n          if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports4, p))\n            __createBinding2(exports4, m, p);\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.z = void 0;\n      var z = __importStar2(require_external());\n      exports3.z = z;\n      __exportStar2(require_external(), exports3);\n      exports3.default = z;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/index.js\n  var require_cjs = __commonJS({\n    \"../../../node_modules/.pnpm/zod@3.25.56/node_modules/zod/dist/cjs/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      var __createBinding2 = exports3 && exports3.__createBinding || (Object.create ? function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        var desc = Object.getOwnPropertyDescriptor(m, k);\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n          desc = { enumerable: true, get: function() {\n            return m[k];\n          } };\n        }\n        Object.defineProperty(o, k2, desc);\n      } : function(o, m, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m[k];\n      });\n      var __exportStar2 = exports3 && exports3.__exportStar || function(m, exports4) {\n        for (var p in m)\n          if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports4, p))\n            __createBinding2(exports4, m, p);\n      };\n      var __importDefault2 = exports3 && exports3.__importDefault || function(mod2) {\n        return mod2 && mod2.__esModule ? mod2 : { \"default\": mod2 };\n      };\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      var index_js_1 = __importDefault2(require_v3());\n      __exportStar2(require_v3(), exports3);\n      exports3.default = index_js_1.default;\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/schemas.js\n  var require_schemas = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/schemas.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.commitDenyResultSchema = exports3.commitAllowResultSchema = exports3.commitParamsSchema = exports3.evalDenyResultSchema = exports3.evalAllowResultSchema = exports3.precheckDenyResultSchema = exports3.precheckAllowResultSchema = exports3.userParamsSchema = exports3.toolParamsSchema = void 0;\n      var zod_1 = require_cjs();\n      exports3.toolParamsSchema = zod_1.z.object({\n        ethRpcUrl: zod_1.z.string(),\n        rpcUrlForUniswap: zod_1.z.string(),\n        chainIdForUniswap: zod_1.z.number(),\n        tokenAddress: zod_1.z.string(),\n        tokenDecimals: zod_1.z.number(),\n        buyAmount: zod_1.z.number()\n      });\n      exports3.userParamsSchema = zod_1.z.object({\n        maxDailySpendingLimitInUsdCents: zod_1.z.bigint()\n      });\n      exports3.precheckAllowResultSchema = zod_1.z.object({\n        maxSpendingLimitInUsd: zod_1.z.number(),\n        buyAmountInUsd: zod_1.z.number()\n      });\n      exports3.precheckDenyResultSchema = zod_1.z.object({\n        reason: zod_1.z.literal(\"Attempted buy amount exceeds daily limit\"),\n        maxSpendingLimitInUsd: zod_1.z.number(),\n        buyAmountInUsd: zod_1.z.number()\n      });\n      exports3.evalAllowResultSchema = zod_1.z.object({\n        maxSpendingLimitInUsd: zod_1.z.number(),\n        buyAmountInUsd: zod_1.z.number()\n      });\n      exports3.evalDenyResultSchema = zod_1.z.object({\n        reason: zod_1.z.string(),\n        maxSpendingLimitInUsd: zod_1.z.number().optional(),\n        buyAmountInUsd: zod_1.z.number().optional()\n      });\n      exports3.commitParamsSchema = zod_1.z.object({\n        amountSpentUsd: zod_1.z.number(),\n        maxSpendingLimitInUsd: zod_1.z.number()\n      });\n      exports3.commitAllowResultSchema = zod_1.z.object({\n        spendTxHash: zod_1.z.string()\n      });\n      exports3.commitDenyResultSchema = zod_1.z.object({\n        error: zod_1.z.string()\n      });\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/lib/vincent-policy.js\n  var require_vincent_policy = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/lib/vincent-policy.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.vincentPolicy = void 0;\n      var vincent_tool_sdk_1 = (init_src(), __toCommonJS(src_exports));\n      var send_spend_tx_1 = require_send_spend_tx();\n      var check_spending_limit_1 = require_check_spending_limit();\n      var schemas_1 = require_schemas();\n      exports3.vincentPolicy = (0, vincent_tool_sdk_1.createVincentPolicy)({\n        packageName: \"@lit-protocol/vincent-policy-spending-limit\",\n        toolParamsSchema: schemas_1.toolParamsSchema,\n        userParamsSchema: schemas_1.userParamsSchema,\n        commitParamsSchema: schemas_1.commitParamsSchema,\n        precheckAllowResultSchema: schemas_1.precheckAllowResultSchema,\n        precheckDenyResultSchema: schemas_1.precheckDenyResultSchema,\n        evalAllowResultSchema: schemas_1.evalAllowResultSchema,\n        evalDenyResultSchema: schemas_1.evalDenyResultSchema,\n        commitAllowResultSchema: schemas_1.commitAllowResultSchema,\n        commitDenyResultSchema: schemas_1.commitDenyResultSchema,\n        precheck: async ({ toolParams: toolParams2, userParams }, { allow, deny, appId, delegation: { delegatorPkpInfo } }) => {\n          const { ethAddress } = delegatorPkpInfo;\n          const { buyAmount, ethRpcUrl, rpcUrlForUniswap, chainIdForUniswap, tokenAddress, tokenDecimals } = toolParams2;\n          const { maxDailySpendingLimitInUsdCents } = userParams;\n          const { buyAmountAllowed, buyAmountInUsd, adjustedMaxDailySpendingLimit } = await (0, check_spending_limit_1.checkIfBuyAmountAllowed)({\n            ethRpcUrl,\n            rpcUrlForUniswap,\n            chainIdForUniswap,\n            tokenAddress,\n            tokenDecimals,\n            buyAmount,\n            maxDailySpendingLimitInUsdCents,\n            pkpEthAddress: ethAddress,\n            appId\n          });\n          return buyAmountAllowed ? allow({\n            maxSpendingLimitInUsd: Number(adjustedMaxDailySpendingLimit),\n            buyAmountInUsd: Number(buyAmountInUsd)\n          }) : deny({\n            reason: \"Attempted buy amount exceeds daily limit\",\n            maxSpendingLimitInUsd: Number(adjustedMaxDailySpendingLimit),\n            buyAmountInUsd: Number(buyAmountInUsd)\n          });\n        },\n        evaluate: async ({ toolParams: toolParams2, userParams }, { allow, deny, appId, delegation: { delegatorPkpInfo } }) => {\n          const { ethAddress } = delegatorPkpInfo;\n          console.log(\"Evaluating spending limit policy\", JSON.stringify(toolParams2));\n          const { buyAmount, ethRpcUrl, rpcUrlForUniswap, chainIdForUniswap, tokenAddress, tokenDecimals } = toolParams2;\n          const { maxDailySpendingLimitInUsdCents } = userParams;\n          const checkBuyAmountResponse = await Lit.Actions.runOnce({ waitForResponse: true, name: \"checkBuyAmount\" }, async () => {\n            try {\n              const { buyAmountAllowed: buyAmountAllowed2, buyAmountInUsd: buyAmountInUsd2, adjustedMaxDailySpendingLimit: adjustedMaxDailySpendingLimit2 } = await (0, check_spending_limit_1.checkIfBuyAmountAllowed)({\n                ethRpcUrl,\n                rpcUrlForUniswap,\n                chainIdForUniswap,\n                tokenAddress,\n                tokenDecimals,\n                buyAmount,\n                maxDailySpendingLimitInUsdCents,\n                pkpEthAddress: ethAddress,\n                appId\n              });\n              return JSON.stringify({\n                status: \"success\",\n                buyAmountAllowed: buyAmountAllowed2,\n                buyAmountInUsd: buyAmountInUsd2.toString(),\n                adjustedMaxDailySpendingLimit: adjustedMaxDailySpendingLimit2.toString()\n              });\n            } catch (error) {\n              return JSON.stringify({\n                status: \"error\",\n                error: error instanceof Error ? error.message : String(error)\n              });\n            }\n          });\n          const parsedCheckBuyAmountResponse = JSON.parse(checkBuyAmountResponse);\n          if (parsedCheckBuyAmountResponse.status === \"error\") {\n            return deny({\n              reason: `Error checking buy amount: ${parsedCheckBuyAmountResponse.error} (evaluate)`\n            });\n          }\n          const { buyAmountAllowed, buyAmountInUsd, adjustedMaxDailySpendingLimit } = parsedCheckBuyAmountResponse;\n          console.log(\"Evaluated spending limit policy\", {\n            buyAmountAllowed,\n            buyAmountInUsd,\n            adjustedMaxDailySpendingLimit\n          });\n          return buyAmountAllowed ? allow({\n            maxSpendingLimitInUsd: Number(adjustedMaxDailySpendingLimit),\n            buyAmountInUsd: Number(buyAmountInUsd)\n          }) : deny({\n            reason: \"Attempted buy amount exceeds daily limit\",\n            maxSpendingLimitInUsd: Number(adjustedMaxDailySpendingLimit),\n            buyAmountInUsd: Number(buyAmountInUsd)\n          });\n        },\n        commit: async (params, { allow, appId, delegation: { delegatorPkpInfo } }) => {\n          const { ethAddress, publicKey } = delegatorPkpInfo;\n          const { amountSpentUsd, maxSpendingLimitInUsd } = params;\n          const spendTxHash = await (0, send_spend_tx_1.sendSpendTx)({\n            appId,\n            amountSpentUsd,\n            maxSpendingLimitInUsd,\n            spendingLimitDuration: 86400,\n            // number of seconds in a day\n            pkpEthAddress: ethAddress,\n            pkpPubKey: publicKey\n          });\n          return allow({\n            spendTxHash\n          });\n        }\n      });\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/generated/vincent-bundled-policy.ts\n  var vincent_bundled_policy_exports = {};\n  __export(vincent_bundled_policy_exports, {\n    bundledVincentPolicy: () => bundledVincentPolicy\n  });\n  var import_vincent_policy, bundledVincentPolicy;\n  var init_vincent_bundled_policy = __esm({\n    \"../vincent-policy-spending-limit/dist/src/generated/vincent-bundled-policy.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_src();\n      import_vincent_policy = __toESM(require_vincent_policy());\n      bundledVincentPolicy = asBundledVincentPolicy(import_vincent_policy.vincentPolicy, \"QmbmX6pxrgR91tF3fukp2imSLfiX5BKhFKUrrjNKaz4QR7\");\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/generated/vincent-policy-metadata.json\n  var require_vincent_policy_metadata = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/generated/vincent-policy-metadata.json\"(exports3, module) {\n      module.exports = {\n        ipfsCid: \"QmbmX6pxrgR91tF3fukp2imSLfiX5BKhFKUrrjNKaz4QR7\"\n      };\n    }\n  });\n\n  // ../vincent-policy-spending-limit/dist/src/index.js\n  var require_src = __commonJS({\n    \"../vincent-policy-spending-limit/dist/src/index.js\"(exports3) {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.vincentPolicyMetadata = exports3.bundledVincentPolicy = exports3.vincentPolicy = void 0;\n      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));\n      var vincent_policy_1 = require_vincent_policy();\n      Object.defineProperty(exports3, \"vincentPolicy\", { enumerable: true, get: function() {\n        return vincent_policy_1.vincentPolicy;\n      } });\n      var vincent_bundled_policy_1 = (init_vincent_bundled_policy(), __toCommonJS(vincent_bundled_policy_exports));\n      Object.defineProperty(exports3, \"bundledVincentPolicy\", { enumerable: true, get: function() {\n        return vincent_bundled_policy_1.bundledVincentPolicy;\n      } });\n      var vincentPolicyMetadata = tslib_1.__importStar(require_vincent_policy_metadata());\n      exports3.vincentPolicyMetadata = vincentPolicyMetadata;\n    }\n  });\n\n  // src/lib/tool-helpers/get-pkp-info.ts\n  var init_get_pkp_info = __esm({\n    \"src/lib/tool-helpers/get-pkp-info.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // src/lib/tool-helpers/get-uniswap-quote.ts\n  var import_sdk_core, import_ethers6, UNISWAP_V3_QUOTER_INTERFACE, getUniswapQuote;\n  var init_get_uniswap_quote = __esm({\n    \"src/lib/tool-helpers/get-uniswap-quote.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_sdk_core = __toESM(require_dist());\n      import_ethers6 = __toESM(require_lib32());\n      UNISWAP_V3_QUOTER_INTERFACE = new import_ethers6.ethers.utils.Interface([\n        \"function quoteExactInputSingle((address tokenIn, address tokenOut, uint256 amountIn, uint24 fee, uint160 sqrtPriceLimitX96)) external returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)\"\n      ]);\n      getUniswapQuote = async ({\n        rpcUrl,\n        chainId,\n        tokenInAddress,\n        tokenInDecimals,\n        tokenInAmount,\n        tokenOutAddress,\n        tokenOutDecimals\n      }) => {\n        console.log(\"Getting Uniswap Quote (getUniswapQuote)\", {\n          rpcUrl,\n          chainId,\n          tokenInAddress,\n          tokenInDecimals,\n          tokenInAmount,\n          tokenOutAddress,\n          tokenOutDecimals\n        });\n        const chainAddressMap = import_sdk_core.CHAIN_TO_ADDRESSES_MAP[chainId];\n        if (chainAddressMap === void 0)\n          throw new Error(`Unsupported chainId: ${chainId} (getUniswapQuote)`);\n        if (chainAddressMap.quoterAddress === void 0)\n          throw new Error(`No Uniswap V3 Quoter Address found for chainId: ${chainId} (getUniswapQuote)`);\n        const quoterAddress = chainAddressMap.quoterAddress;\n        console.log(`Using Quoter Address: ${quoterAddress} (getUniswapQuote)`);\n        const uniswapRpcProvider = new import_ethers6.ethers.providers.StaticJsonRpcProvider(rpcUrl);\n        const formattedTokenInAmount = import_ethers6.ethers.utils.parseUnits(tokenInAmount.toString(), tokenInDecimals);\n        console.log(\"Amount conversion:\", {\n          original: tokenInAmount,\n          decimals: tokenInDecimals,\n          wei: formattedTokenInAmount.toString(),\n          formatted: import_ethers6.ethers.utils.formatUnits(formattedTokenInAmount, tokenInDecimals)\n        });\n        let bestQuote = null;\n        let bestFee = null;\n        const feeTiers = [3e3, 500];\n        for (const fee of feeTiers) {\n          try {\n            const quoteParams = {\n              tokenIn: tokenInAddress,\n              tokenOut: tokenOutAddress,\n              amountIn: formattedTokenInAmount.toString(),\n              fee,\n              sqrtPriceLimitX96: 0\n            };\n            console.log(`Attempting quote with fee tier ${fee / 1e4}% (getUniswapQuote)`);\n            console.log(\"Quote parameters (getUniswapQuote):\", quoteParams);\n            const quote = await uniswapRpcProvider.call({\n              to: quoterAddress,\n              data: UNISWAP_V3_QUOTER_INTERFACE.encodeFunctionData(\"quoteExactInputSingle\", [\n                quoteParams\n              ])\n            });\n            console.log(\"Raw quote response (getUniswapQuote):\", quote);\n            const [amountOut] = UNISWAP_V3_QUOTER_INTERFACE.decodeFunctionResult(\n              \"quoteExactInputSingle\",\n              quote\n            );\n            const currentQuote = import_ethers6.ethers.BigNumber.from(amountOut);\n            if (currentQuote.isZero()) {\n              console.log(`Quote is 0 for fee tier ${fee / 1e4}% - skipping (getUniswapQuote)`);\n              continue;\n            }\n            const formattedQuote = import_ethers6.ethers.utils.formatUnits(currentQuote, tokenOutDecimals);\n            console.log(`Quote for fee tier ${fee / 1e4}% (getUniswapQuote):`, {\n              raw: currentQuote.toString(),\n              formatted: formattedQuote\n            });\n            if (!bestQuote || currentQuote.gt(bestQuote)) {\n              bestQuote = currentQuote;\n              bestFee = fee;\n              console.log(\n                `New best quote found with fee tier ${fee / 1e4}% (getUniswapQuote): ${formattedQuote}`\n              );\n            }\n          } catch (error) {\n            const err = error;\n            if (\"reason\" in err && \"message\" in err && \"code\" in err) {\n              if (err.reason === \"Unexpected error\") {\n                console.log(\n                  `Unexpected error thrown, probably no pool found for fee tier ${fee / 1e4}% (getUniswapQuote)`,\n                  err\n                );\n              } else {\n                console.log(`Quoter call failed for fee tier ${fee / 1e4}% (getUniswapQuote)`, {\n                  message: err.message,\n                  reason: err.reason,\n                  code: err.code\n                });\n              }\n              continue;\n            } else {\n              throw error;\n            }\n          }\n        }\n        if (!bestQuote || !bestFee) {\n          throw new Error(\n            \"Failed to get quote from Uniswap V3. No valid pool found for this token pair or quote returned 0 (getUniswapQuote)\"\n          );\n        }\n        const slippageTolerance = 5e-3;\n        const amountOutMin = bestQuote.mul(1e3 - slippageTolerance * 1e3).div(1e3);\n        console.log(\"Final quote details:\", {\n          bestFee: `${bestFee / 1e4}%`,\n          bestQuote: {\n            raw: bestQuote.toString(),\n            formatted: import_ethers6.ethers.utils.formatUnits(bestQuote, tokenOutDecimals)\n          },\n          minimumOutput: {\n            raw: amountOutMin.toString(),\n            formatted: import_ethers6.ethers.utils.formatUnits(amountOutMin, tokenOutDecimals)\n          },\n          slippageTolerance: `${slippageTolerance * 100}%`\n        });\n        return { bestQuote, bestFee, amountOutMin };\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/send-uniswap-tx.ts\n  var import_sdk_core2, import_ethers7, sendUniswapTx;\n  var init_send_uniswap_tx = __esm({\n    \"src/lib/tool-helpers/send-uniswap-tx.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_sdk_core2 = __toESM(require_dist());\n      import_ethers7 = __toESM(require_lib32());\n      init_tool_helpers();\n      sendUniswapTx = async ({\n        rpcUrl,\n        chainId,\n        pkpEthAddress,\n        pkpPublicKey,\n        tokenInAddress,\n        tokenOutAddress,\n        tokenInDecimals,\n        tokenOutDecimals,\n        tokenInAmount\n      }) => {\n        console.log(\"Estimating gas for Swap transaction (sendUniswapTx)\");\n        if (import_sdk_core2.CHAIN_TO_ADDRESSES_MAP[chainId] === void 0) {\n          throw new Error(`Unsupported chainId: ${chainId} (sendUniswapTx)`);\n        }\n        const uniswapRouterAddress = import_sdk_core2.CHAIN_TO_ADDRESSES_MAP[chainId].swapRouter02Address;\n        const uniswapRpcProvider = new import_ethers7.ethers.providers.StaticJsonRpcProvider(rpcUrl);\n        const partialSwapTxResponse = await Lit.Actions.runOnce(\n          { waitForResponse: true, name: \"Uniswap swap tx gas estimation\" },\n          async () => {\n            try {\n              const formattedTokenInAmount = import_ethers7.ethers.utils.parseUnits(\n                tokenInAmount.toString(),\n                tokenInDecimals\n              );\n              const uniswapV3RouterContract = new import_ethers7.ethers.Contract(\n                uniswapRouterAddress,\n                [\n                  \"function exactInputSingle((address,address,uint24,address,uint256,uint256,uint160)) external payable returns (uint256)\"\n                ],\n                uniswapRpcProvider\n              );\n              console.log(\"Getting Uniswap quote for swap (sendUniswapTx)\");\n              const uniswapQuoteResponse = await getUniswapQuote({\n                rpcUrl,\n                chainId,\n                tokenInAddress,\n                tokenInDecimals,\n                tokenInAmount,\n                tokenOutAddress,\n                tokenOutDecimals\n              });\n              const { bestFee, amountOutMin } = uniswapQuoteResponse;\n              const { estimatedGas, maxFeePerGas, maxPriorityFeePerGas } = await estimateGasForSwap(\n                uniswapV3RouterContract,\n                tokenInAddress,\n                tokenOutAddress,\n                bestFee,\n                pkpEthAddress,\n                formattedTokenInAmount,\n                amountOutMin\n              );\n              console.log(\"Encoding swap transaction data (sendUniswapTx)\", {\n                tokenInAddress,\n                tokenOutAddress,\n                bestFee,\n                pkpEthAddress,\n                formattedTokenInAmount,\n                amountOutMin,\n                sqrtPriceLimitX96: 0\n              });\n              const swapTxData = uniswapV3RouterContract.interface.encodeFunctionData(\n                \"exactInputSingle\",\n                [\n                  [\n                    tokenInAddress,\n                    tokenOutAddress,\n                    bestFee,\n                    pkpEthAddress,\n                    formattedTokenInAmount,\n                    amountOutMin,\n                    0\n                  ]\n                ]\n              );\n              return JSON.stringify({\n                status: \"success\",\n                partialSwapTx: {\n                  data: swapTxData,\n                  gasLimit: estimatedGas,\n                  maxFeePerGas,\n                  maxPriorityFeePerGas,\n                  nonce: await uniswapRpcProvider.getTransactionCount(pkpEthAddress)\n                }\n              });\n            } catch (error) {\n              return JSON.stringify({\n                status: \"error\",\n                error: error instanceof Error ? error.message : String(error)\n              });\n            }\n          }\n        );\n        const parsedPartialSwapTxResponse = JSON.parse(partialSwapTxResponse);\n        if (parsedPartialSwapTxResponse.status === \"error\") {\n          throw new Error(\n            `Error getting transaction data for swap: ${parsedPartialSwapTxResponse.error} (sendUniswapTx)`\n          );\n        }\n        const { partialSwapTx } = parsedPartialSwapTxResponse;\n        const unsignedSwapTx = {\n          to: uniswapRouterAddress,\n          data: partialSwapTx.data,\n          value: import_ethers7.ethers.BigNumber.from(0),\n          gasLimit: import_ethers7.ethers.BigNumber.from(partialSwapTx.gasLimit),\n          maxFeePerGas: import_ethers7.ethers.BigNumber.from(partialSwapTx.maxFeePerGas),\n          maxPriorityFeePerGas: import_ethers7.ethers.BigNumber.from(partialSwapTx.maxPriorityFeePerGas),\n          nonce: partialSwapTx.nonce,\n          chainId,\n          type: 2\n        };\n        console.log(\"Unsigned swap transaction object (sendUniswapTx)\", {\n          ...unsignedSwapTx,\n          value: unsignedSwapTx.value.toString(),\n          gasLimit: unsignedSwapTx.gasLimit.toString(),\n          maxFeePerGas: unsignedSwapTx.maxFeePerGas.toString(),\n          maxPriorityFeePerGas: unsignedSwapTx.maxPriorityFeePerGas.toString()\n        });\n        const signedSwapTx = await signTx(pkpPublicKey, unsignedSwapTx, \"spendingLimitSig\");\n        console.log(`Broadcasting swap transaction (sendUniswapTx)`);\n        const swapTxResponse = await Lit.Actions.runOnce(\n          { waitForResponse: true, name: \"swapTxSender\" },\n          async () => {\n            try {\n              const receipt = await uniswapRpcProvider.sendTransaction(signedSwapTx);\n              return JSON.stringify({\n                status: \"success\",\n                txHash: receipt.hash\n              });\n            } catch (error) {\n              return JSON.stringify({\n                status: \"error\",\n                error: error instanceof Error ? error.message : String(error)\n              });\n            }\n          }\n        );\n        const parsedSwapTxResponse = JSON.parse(swapTxResponse);\n        if (parsedSwapTxResponse.status === \"error\") {\n          throw new Error(\n            `Error broadcasting swap transaction: ${parsedSwapTxResponse.error} (sendUniswapTx)`\n          );\n        }\n        const { txHash } = parsedSwapTxResponse;\n        console.log(`Swap transaction broadcasted (sendUniswapTx): ${txHash}`);\n        return txHash;\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/get-eth-usd-price.ts\n  var import_ethers8, CHAINLINK_AGGREGATOR_ABI, getEthUsdPriceFromChainlink;\n  var init_get_eth_usd_price = __esm({\n    \"src/lib/tool-helpers/get-eth-usd-price.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers8 = __toESM(require_lib32());\n      CHAINLINK_AGGREGATOR_ABI = [\n        \"function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\"\n      ];\n      getEthUsdPriceFromChainlink = async ({\n        chainlinkPriceFeedAddress,\n        ethRpcUrl\n      }) => {\n        console.log(`Getting ETH price in USD from Chainlink (getEthUsdPriceFromChainlink)`, {\n          chainlinkPriceFeedAddress,\n          ethRpcUrl\n        });\n        const provider = new import_ethers8.ethers.providers.StaticJsonRpcProvider(ethRpcUrl);\n        const contract = new import_ethers8.ethers.Contract(\n          chainlinkPriceFeedAddress,\n          CHAINLINK_AGGREGATOR_ABI,\n          provider\n        );\n        const [_, answer] = await contract.latestRoundData();\n        console.log(`Got ETH price in USD (getEthUsdPriceFromChainlink)`, {\n          ethPriceInUsd: import_ethers8.ethers.utils.formatUnits(answer, 8)\n        });\n        return answer;\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/calculate-usd-value.ts\n  var import_ethers9, calculateUsdValue;\n  var init_calculate_usd_value = __esm({\n    \"src/lib/tool-helpers/calculate-usd-value.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers9 = __toESM(require_lib32());\n      init_get_eth_usd_price();\n      calculateUsdValue = async ({\n        ethRpcUrl,\n        chainlinkPriceFeedAddress,\n        amountInWeth\n      }) => {\n        const ethPriceInUsd = await getEthUsdPriceFromChainlink({ ethRpcUrl, chainlinkPriceFeedAddress });\n        const CHAINLINK_DECIMALS = 8;\n        const WETH_DECIMALS = 18;\n        const amountInUsd = amountInWeth.mul(ethPriceInUsd).div(import_ethers9.ethers.utils.parseUnits(\"1\", WETH_DECIMALS));\n        console.log(`Calculate token amount in USDC (calculateUsdValue)`, {\n          tokenAmountInWeth: import_ethers9.ethers.utils.formatUnits(amountInWeth, WETH_DECIMALS),\n          ethPriceInUsd: import_ethers9.ethers.utils.formatUnits(ethPriceInUsd, CHAINLINK_DECIMALS),\n          tokenAmountInUsd: import_ethers9.ethers.utils.formatUnits(amountInUsd, CHAINLINK_DECIMALS)\n        });\n        return amountInUsd;\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/get-token-amount-in-usd.ts\n  var import_ethers10, ETH_MAINNET_WETH_ADDRESS, ETH_MAINNET_ETH_USD_CHAINLINK_FEED, getTokenAmountInUsd;\n  var init_get_token_amount_in_usd = __esm({\n    \"src/lib/tool-helpers/get-token-amount-in-usd.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers10 = __toESM(require_lib32());\n      init_calculate_usd_value();\n      init_get_uniswap_quote();\n      ETH_MAINNET_WETH_ADDRESS = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n      ETH_MAINNET_ETH_USD_CHAINLINK_FEED = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\";\n      getTokenAmountInUsd = async ({\n        ethRpcUrl,\n        rpcUrlForUniswap,\n        chainIdForUniswap,\n        tokenAddress,\n        tokenAmount,\n        tokenDecimals\n      }) => {\n        console.log(`Getting token amount in USD (getTokenAmountInUsd)`, {\n          ethRpcUrl,\n          rpcUrlForUniswap,\n          chainIdForUniswap,\n          tokenAddress,\n          tokenAmount,\n          tokenDecimals,\n          ethMainnetWethAddress: ETH_MAINNET_WETH_ADDRESS,\n          ethMainnetEthUsdChainlinkFeed: ETH_MAINNET_ETH_USD_CHAINLINK_FEED\n        });\n        const provider = new import_ethers10.ethers.providers.JsonRpcProvider(rpcUrlForUniswap);\n        const tokenInContract = new import_ethers10.ethers.Contract(\n          tokenAddress,\n          [\"function symbol() view returns (string)\"],\n          provider\n        );\n        const tokenInSymbol = await tokenInContract.symbol();\n        console.log(`tokenInSymbol: ${tokenInSymbol} (getTokenAmountInUsd)`);\n        if (tokenInSymbol.toUpperCase() === \"WETH\") {\n          console.log(`Token is WETH, using amount directly: ${tokenAmount} (getTokenAmountInUsd)`);\n          const amountInWeth2 = import_ethers10.ethers.utils.parseUnits(tokenAmount.toString(), tokenDecimals);\n          return calculateUsdValue({\n            ethRpcUrl,\n            chainlinkPriceFeedAddress: ETH_MAINNET_ETH_USD_CHAINLINK_FEED,\n            amountInWeth: amountInWeth2\n          });\n        }\n        console.log(`Getting price in WETH from Uniswap (getTokenAmountInUsd)`, {\n          tokenInAddress: tokenAddress,\n          tokenInDecimals: tokenDecimals,\n          tokenInAmount: tokenAmount,\n          tokenOutAddress: ETH_MAINNET_WETH_ADDRESS,\n          tokenOutDecimals: 18,\n          rpcUrl: rpcUrlForUniswap,\n          chainId: chainIdForUniswap\n        });\n        const amountInWeth = await getUniswapQuote({\n          tokenInAddress: tokenAddress,\n          tokenInDecimals: tokenDecimals,\n          tokenInAmount: tokenAmount,\n          tokenOutAddress: ETH_MAINNET_WETH_ADDRESS,\n          tokenOutDecimals: 18,\n          rpcUrl: rpcUrlForUniswap,\n          chainId: chainIdForUniswap\n        });\n        const amountInUsdc = await calculateUsdValue({\n          ethRpcUrl,\n          chainlinkPriceFeedAddress: ETH_MAINNET_ETH_USD_CHAINLINK_FEED,\n          amountInWeth: amountInWeth.bestQuote\n        });\n        console.log(\"Calculated token amount in USDC (getTokenAmountInUsd)\", {\n          amountInWeth: import_ethers10.ethers.utils.formatUnits(amountInWeth.bestQuote, 18),\n          amountInUsdc: import_ethers10.ethers.utils.formatUnits(amountInUsdc, 8)\n        });\n        return amountInUsdc;\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/_version.js\n  var version2;\n  var init_version = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/_version.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      version2 = \"6.14.4\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/properties.js\n  function checkType(value, type, name) {\n    const types = type.split(\"|\").map((t) => t.trim());\n    for (let i = 0; i < types.length; i++) {\n      switch (type) {\n        case \"any\":\n          return;\n        case \"bigint\":\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          if (typeof value === type) {\n            return;\n          }\n      }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n  }\n  async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n      accum[keys[index]] = v;\n      return accum;\n    }, {});\n  }\n  function defineProperties(target, values, types) {\n    for (let key in values) {\n      let value = values[key];\n      const type = types ? types[key] : null;\n      if (type) {\n        checkType(value, type, key);\n      }\n      Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n  }\n  var init_properties = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/properties.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/errors.js\n  function stringify(value, seen) {\n    if (value == null) {\n      return \"null\";\n    }\n    if (seen == null) {\n      seen = /* @__PURE__ */ new Set();\n    }\n    if (typeof value === \"object\") {\n      if (seen.has(value)) {\n        return \"[Circular]\";\n      }\n      seen.add(value);\n    }\n    if (Array.isArray(value)) {\n      return \"[ \" + value.map((v) => stringify(v, seen)).join(\", \") + \" ]\";\n    }\n    if (value instanceof Uint8Array) {\n      const HEX = \"0123456789abcdef\";\n      let result = \"0x\";\n      for (let i = 0; i < value.length; i++) {\n        result += HEX[value[i] >> 4];\n        result += HEX[value[i] & 15];\n      }\n      return result;\n    }\n    if (typeof value === \"object\" && typeof value.toJSON === \"function\") {\n      return stringify(value.toJSON(), seen);\n    }\n    switch (typeof value) {\n      case \"boolean\":\n      case \"number\":\n      case \"symbol\":\n        return value.toString();\n      case \"bigint\":\n        return BigInt(value).toString();\n      case \"string\":\n        return JSON.stringify(value);\n      case \"object\": {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{ \" + keys.map((k) => `${stringify(k, seen)}: ${stringify(value[k], seen)}`).join(\", \") + \" }\";\n      }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n  }\n  function isError(error, code) {\n    return error && error.code === code;\n  }\n  function isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n  }\n  function makeError(message, code, info) {\n    let shortMessage = message;\n    {\n      const details = [];\n      if (info) {\n        if (\"message\" in info || \"code\" in info || \"name\" in info) {\n          throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n        }\n        for (const key in info) {\n          if (key === \"shortMessage\") {\n            continue;\n          }\n          const value = info[key];\n          details.push(key + \"=\" + stringify(value));\n        }\n      }\n      details.push(`code=${code}`);\n      details.push(`version=${version2}`);\n      if (details.length) {\n        message += \" (\" + details.join(\", \") + \")\";\n      }\n    }\n    let error;\n    switch (code) {\n      case \"INVALID_ARGUMENT\":\n        error = new TypeError(message);\n        break;\n      case \"NUMERIC_FAULT\":\n      case \"BUFFER_OVERRUN\":\n        error = new RangeError(message);\n        break;\n      default:\n        error = new Error(message);\n    }\n    defineProperties(error, { code });\n    if (info) {\n      Object.assign(error, info);\n    }\n    if (error.shortMessage == null) {\n      defineProperties(error, { shortMessage });\n    }\n    return error;\n  }\n  function assert2(check, message, code, info) {\n    if (!check) {\n      throw makeError(message, code, info);\n    }\n  }\n  function assertArgument(check, message, name, value) {\n    assert2(check, message, \"INVALID_ARGUMENT\", { argument: name, value });\n  }\n  function assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n      message = \"\";\n    }\n    if (message) {\n      message = \": \" + message;\n    }\n    assert2(count >= expectedCount, \"missing argument\" + message, \"MISSING_ARGUMENT\", {\n      count,\n      expectedCount\n    });\n    assert2(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n      count,\n      expectedCount\n    });\n  }\n  function assertNormalize(form) {\n    assert2(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"String.prototype.normalize\",\n      info: { form }\n    });\n  }\n  function assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n      className = \"\";\n    }\n    if (givenGuard !== guard) {\n      let method = className, operation = \"new\";\n      if (className) {\n        method += \".\";\n        operation += \" \" + className;\n      }\n      assert2(false, `private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n        operation\n      });\n    }\n  }\n  var _normalizeForms;\n  var init_errors2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/errors.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_version();\n      init_properties();\n      _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n        try {\n          if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n          }\n          ;\n          if (form === \"NFD\") {\n            const check = String.fromCharCode(233).normalize(\"NFD\");\n            const expected = String.fromCharCode(101, 769);\n            if (check !== expected) {\n              throw new Error(\"broken\");\n            }\n          }\n          accum.push(form);\n        } catch (error) {\n        }\n        return accum;\n      }, []);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/data.js\n  function _getBytes(value, name, copy4) {\n    if (value instanceof Uint8Array) {\n      if (copy4) {\n        return new Uint8Array(value);\n      }\n      return value;\n    }\n    if (typeof value === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n      const result = new Uint8Array((value.length - 2) / 2);\n      let offset = 2;\n      for (let i = 0; i < result.length; i++) {\n        result[i] = parseInt(value.substring(offset, offset + 2), 16);\n        offset += 2;\n      }\n      return result;\n    }\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n  }\n  function getBytes(value, name) {\n    return _getBytes(value, name, false);\n  }\n  function getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n  }\n  function isHexString(value, length) {\n    if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n      return false;\n    }\n    if (typeof length === \"number\" && value.length !== 2 + 2 * length) {\n      return false;\n    }\n    if (length === true && value.length % 2 !== 0) {\n      return false;\n    }\n    return true;\n  }\n  function isBytesLike(value) {\n    return isHexString(value, true) || value instanceof Uint8Array;\n  }\n  function hexlify(data) {\n    const bytes2 = getBytes(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes2.length; i++) {\n      const v = bytes2[i];\n      result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];\n    }\n    return result;\n  }\n  function concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n  }\n  function dataLength(data) {\n    if (isHexString(data, true)) {\n      return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n  }\n  function dataSlice(data, start, end) {\n    const bytes2 = getBytes(data);\n    if (end != null && end > bytes2.length) {\n      assert2(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n        buffer: bytes2,\n        length: bytes2.length,\n        offset: end\n      });\n    }\n    return hexlify(bytes2.slice(start == null ? 0 : start, end == null ? bytes2.length : end));\n  }\n  function zeroPad(data, length, left) {\n    const bytes2 = getBytes(data);\n    assert2(length >= bytes2.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n      buffer: new Uint8Array(bytes2),\n      length,\n      offset: length + 1\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n      result.set(bytes2, length - bytes2.length);\n    } else {\n      result.set(bytes2, 0);\n    }\n    return hexlify(result);\n  }\n  function zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n  }\n  function zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n  }\n  var HexCharacters;\n  var init_data = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/data.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_errors2();\n      HexCharacters = \"0123456789abcdef\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/maths.js\n  function fromTwos(_value, _width) {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    assert2(value >> width === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n      operation: \"fromTwos\",\n      fault: \"overflow\",\n      value: _value\n    });\n    if (value >> width - BN_1) {\n      const mask2 = (BN_1 << width) - BN_1;\n      return -((~value & mask2) + BN_1);\n    }\n    return value;\n  }\n  function toTwos(_value, _width) {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    const limit = BN_1 << width - BN_1;\n    if (value < BN_0) {\n      value = -value;\n      assert2(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n        operation: \"toTwos\",\n        fault: \"overflow\",\n        value: _value\n      });\n      const mask2 = (BN_1 << width) - BN_1;\n      return (~value & mask2) + BN_1;\n    } else {\n      assert2(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n        operation: \"toTwos\",\n        fault: \"overflow\",\n        value: _value\n      });\n    }\n    return value;\n  }\n  function mask(_value, _bits) {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & (BN_1 << bits) - BN_1;\n  }\n  function getBigInt(value, name) {\n    switch (typeof value) {\n      case \"bigint\":\n        return value;\n      case \"number\":\n        assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n        assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n        return BigInt(value);\n      case \"string\":\n        try {\n          if (value === \"\") {\n            throw new Error(\"empty string\");\n          }\n          if (value[0] === \"-\" && value[1] !== \"-\") {\n            return -BigInt(value.substring(1));\n          }\n          return BigInt(value);\n        } catch (e) {\n          assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n        }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n  }\n  function getUint(value, name) {\n    const result = getBigInt(value, name);\n    assert2(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n      fault: \"overflow\",\n      operation: \"getUint\",\n      value\n    });\n    return result;\n  }\n  function toBigInt2(value) {\n    if (value instanceof Uint8Array) {\n      let result = \"0x0\";\n      for (const v of value) {\n        result += Nibbles[v >> 4];\n        result += Nibbles[v & 15];\n      }\n      return BigInt(result);\n    }\n    return getBigInt(value);\n  }\n  function getNumber(value, name) {\n    switch (typeof value) {\n      case \"bigint\":\n        assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n        return Number(value);\n      case \"number\":\n        assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n        assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n        return value;\n      case \"string\":\n        try {\n          if (value === \"\") {\n            throw new Error(\"empty string\");\n          }\n          return getNumber(BigInt(value), name);\n        } catch (e) {\n          assertArgument(false, `invalid numeric string: ${e.message}`, name || \"value\", value);\n        }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n  }\n  function toNumber(value) {\n    return getNumber(toBigInt2(value));\n  }\n  function toBeHex(_value, _width) {\n    const value = getUint(_value, \"value\");\n    let result = value.toString(16);\n    if (_width == null) {\n      if (result.length % 2) {\n        result = \"0\" + result;\n      }\n    } else {\n      const width = getNumber(_width, \"width\");\n      assert2(width * 2 >= result.length, `value exceeds width (${width} bytes)`, \"NUMERIC_FAULT\", {\n        operation: \"toBeHex\",\n        fault: \"overflow\",\n        value: _value\n      });\n      while (result.length < width * 2) {\n        result = \"0\" + result;\n      }\n    }\n    return \"0x\" + result;\n  }\n  function toBeArray(_value) {\n    const value = getUint(_value, \"value\");\n    if (value === BN_0) {\n      return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n      hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n      const offset = i * 2;\n      result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n  }\n  function toQuantity(value) {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) {\n      result = result.substring(1);\n    }\n    if (result === \"\") {\n      result = \"0\";\n    }\n    return \"0x\" + result;\n  }\n  var BN_0, BN_1, maxValue, Nibbles;\n  var init_maths = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/maths.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n      init_errors2();\n      BN_0 = BigInt(0);\n      BN_1 = BigInt(1);\n      maxValue = 9007199254740991;\n      Nibbles = \"0123456789abcdef\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/base58.js\n  function encodeBase58(_value) {\n    const bytes2 = getBytes(_value);\n    let value = toBigInt2(bytes2);\n    let result = \"\";\n    while (value) {\n      result = Alphabet[Number(value % BN_58)] + result;\n      value /= BN_58;\n    }\n    for (let i = 0; i < bytes2.length; i++) {\n      if (bytes2[i]) {\n        break;\n      }\n      result = Alphabet[0] + result;\n    }\n    return result;\n  }\n  var Alphabet, BN_02, BN_58;\n  var init_base58 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/base58.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n      init_maths();\n      Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n      BN_02 = BigInt(0);\n      BN_58 = BigInt(58);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/base64-browser.js\n  function decodeBase64(textData) {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n      data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n  }\n  function encodeBase64(_data) {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n      textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n  }\n  var init_base64_browser = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/base64-browser.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/events.js\n  var EventPayload;\n  var init_events = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/events.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_properties();\n      EventPayload = class {\n        /**\n         *  The event filter.\n         */\n        filter;\n        /**\n         *  The **EventEmitterable**.\n         */\n        emitter;\n        #listener;\n        /**\n         *  Create a new **EventPayload** for %%emitter%% with\n         *  the %%listener%% and for %%filter%%.\n         */\n        constructor(emitter, listener, filter) {\n          this.#listener = listener;\n          defineProperties(this, { emitter, filter });\n        }\n        /**\n         *  Unregister the triggered listener for future events.\n         */\n        async removeListener() {\n          if (this.#listener == null) {\n            return;\n          }\n          await this.emitter.off(this.filter, this.#listener);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/utf8.js\n  function errorFunc(reason, offset, bytes2, output2, badCodepoint) {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes2);\n  }\n  function ignoreFunc(reason, offset, bytes2, output2, badCodepoint) {\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n      let i = 0;\n      for (let o = offset + 1; o < bytes2.length; o++) {\n        if (bytes2[o] >> 6 !== 2) {\n          break;\n        }\n        i++;\n      }\n      return i;\n    }\n    if (reason === \"OVERRUN\") {\n      return bytes2.length - offset - 1;\n    }\n    return 0;\n  }\n  function replaceFunc(reason, offset, bytes2, output2, badCodepoint) {\n    if (reason === \"OVERLONG\") {\n      assertArgument(typeof badCodepoint === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n      output2.push(badCodepoint);\n      return 0;\n    }\n    output2.push(65533);\n    return ignoreFunc(reason, offset, bytes2, output2, badCodepoint);\n  }\n  function getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n      onError = Utf8ErrorFuncs.error;\n    }\n    const bytes2 = getBytes(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    while (i < bytes2.length) {\n      const c = bytes2[i++];\n      if (c >> 7 === 0) {\n        result.push(c);\n        continue;\n      }\n      let extraLength = null;\n      let overlongMask = null;\n      if ((c & 224) === 192) {\n        extraLength = 1;\n        overlongMask = 127;\n      } else if ((c & 240) === 224) {\n        extraLength = 2;\n        overlongMask = 2047;\n      } else if ((c & 248) === 240) {\n        extraLength = 3;\n        overlongMask = 65535;\n      } else {\n        if ((c & 192) === 128) {\n          i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes2, result);\n        } else {\n          i += onError(\"BAD_PREFIX\", i - 1, bytes2, result);\n        }\n        continue;\n      }\n      if (i - 1 + extraLength >= bytes2.length) {\n        i += onError(\"OVERRUN\", i - 1, bytes2, result);\n        continue;\n      }\n      let res = c & (1 << 8 - extraLength - 1) - 1;\n      for (let j = 0; j < extraLength; j++) {\n        let nextChar = bytes2[i];\n        if ((nextChar & 192) != 128) {\n          i += onError(\"MISSING_CONTINUE\", i, bytes2, result);\n          res = null;\n          break;\n        }\n        ;\n        res = res << 6 | nextChar & 63;\n        i++;\n      }\n      if (res === null) {\n        continue;\n      }\n      if (res > 1114111) {\n        i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes2, result, res);\n        continue;\n      }\n      if (res >= 55296 && res <= 57343) {\n        i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes2, result, res);\n        continue;\n      }\n      if (res <= overlongMask) {\n        i += onError(\"OVERLONG\", i - 1 - extraLength, bytes2, result, res);\n        continue;\n      }\n      result.push(res);\n    }\n    return result;\n  }\n  function toUtf8Bytes(str, form) {\n    assertArgument(typeof str === \"string\", \"invalid string value\", \"str\", str);\n    if (form != null) {\n      assertNormalize(form);\n      str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n      const c = str.charCodeAt(i);\n      if (c < 128) {\n        result.push(c);\n      } else if (c < 2048) {\n        result.push(c >> 6 | 192);\n        result.push(c & 63 | 128);\n      } else if ((c & 64512) == 55296) {\n        i++;\n        const c2 = str.charCodeAt(i);\n        assertArgument(i < str.length && (c2 & 64512) === 56320, \"invalid surrogate pair\", \"str\", str);\n        const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);\n        result.push(pair >> 18 | 240);\n        result.push(pair >> 12 & 63 | 128);\n        result.push(pair >> 6 & 63 | 128);\n        result.push(pair & 63 | 128);\n      } else {\n        result.push(c >> 12 | 224);\n        result.push(c >> 6 & 63 | 128);\n        result.push(c & 63 | 128);\n      }\n    }\n    return new Uint8Array(result);\n  }\n  function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n      if (codePoint <= 65535) {\n        return String.fromCharCode(codePoint);\n      }\n      codePoint -= 65536;\n      return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);\n    }).join(\"\");\n  }\n  function toUtf8String(bytes2, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes2, onError));\n  }\n  var Utf8ErrorFuncs;\n  var init_utf8 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/utf8.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n      init_errors2();\n      Utf8ErrorFuncs = Object.freeze({\n        error: errorFunc,\n        ignore: ignoreFunc,\n        replace: replaceFunc\n      });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/geturl-browser.js\n  function createGetUrl(options) {\n    async function getUrl(req, _signal) {\n      assert2(_signal == null || !_signal.cancelled, \"request cancelled before sending\", \"CANCELLED\");\n      const protocol = req.url.split(\":\")[0].toLowerCase();\n      assert2(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n        info: { protocol },\n        operation: \"request\"\n      });\n      assert2(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"request\"\n      });\n      let error = null;\n      const controller = new AbortController();\n      const timer = setTimeout(() => {\n        error = makeError(\"request timeout\", \"TIMEOUT\");\n        controller.abort();\n      }, req.timeout);\n      if (_signal) {\n        _signal.addListener(() => {\n          error = makeError(\"request cancelled\", \"CANCELLED\");\n          controller.abort();\n        });\n      }\n      const init2 = Object.assign({}, options, {\n        method: req.method,\n        headers: new Headers(Array.from(req)),\n        body: req.body || void 0,\n        signal: controller.signal\n      });\n      let resp;\n      try {\n        resp = await fetch(req.url, init2);\n      } catch (_error) {\n        clearTimeout(timer);\n        if (error) {\n          throw error;\n        }\n        throw _error;\n      }\n      clearTimeout(timer);\n      const headers = {};\n      resp.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n      const respBody = await resp.arrayBuffer();\n      const body = respBody == null ? null : new Uint8Array(respBody);\n      return {\n        statusCode: resp.status,\n        statusMessage: resp.statusText,\n        headers,\n        body\n      };\n    }\n    return getUrl;\n  }\n  var defaultGetUrl;\n  var init_geturl_browser = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/geturl-browser.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_errors2();\n      defaultGetUrl = createGetUrl({});\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/fetch.js\n  async function dataGatewayFunc(url, signal) {\n    try {\n      const match = url.match(reData);\n      if (!match) {\n        throw new Error(\"invalid data\");\n      }\n      return new FetchResponse(200, \"OK\", {\n        \"content-type\": match[1] || \"text/plain\"\n      }, match[2] ? decodeBase64(match[3]) : unpercent(match[3]));\n    } catch (error) {\n      return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", {}, null, new FetchRequest(url));\n    }\n  }\n  function getIpfsGatewayFunc(baseUrl) {\n    async function gatewayIpfs(url, signal) {\n      try {\n        const match = url.match(reIpfs);\n        if (!match) {\n          throw new Error(\"invalid link\");\n        }\n        return new FetchRequest(`${baseUrl}${match[2]}`);\n      } catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", {}, null, new FetchRequest(url));\n      }\n    }\n    return gatewayIpfs;\n  }\n  function checkSignal(signal) {\n    if (signal == null) {\n      throw new Error(\"missing signal; should not happen\");\n    }\n    signal.checkSignal();\n    return signal;\n  }\n  function getTime() {\n    return (/* @__PURE__ */ new Date()).getTime();\n  }\n  function unpercent(value) {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n      return String.fromCharCode(parseInt(code, 16));\n    }));\n  }\n  function wait(delay) {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n  }\n  var MAX_ATTEMPTS, SLOT_INTERVAL, defaultGetUrlFunc, reData, reIpfs, locked, Gateways, fetchSignals, FetchCancelSignal, FetchRequest, FetchResponse;\n  var init_fetch = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/fetch.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_base64_browser();\n      init_data();\n      init_errors2();\n      init_properties();\n      init_utf8();\n      init_geturl_browser();\n      MAX_ATTEMPTS = 12;\n      SLOT_INTERVAL = 250;\n      defaultGetUrlFunc = createGetUrl();\n      reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n      reIpfs = new RegExp(\"^ipfs://(ipfs/)?(.*)$\", \"i\");\n      locked = false;\n      Gateways = {\n        \"data\": dataGatewayFunc,\n        \"ipfs\": getIpfsGatewayFunc(\"https://gateway.ipfs.io/ipfs/\")\n      };\n      fetchSignals = /* @__PURE__ */ new WeakMap();\n      FetchCancelSignal = class {\n        #listeners;\n        #cancelled;\n        constructor(request) {\n          this.#listeners = [];\n          this.#cancelled = false;\n          fetchSignals.set(request, () => {\n            if (this.#cancelled) {\n              return;\n            }\n            this.#cancelled = true;\n            for (const listener of this.#listeners) {\n              setTimeout(() => {\n                listener();\n              }, 0);\n            }\n            this.#listeners = [];\n          });\n        }\n        addListener(listener) {\n          assert2(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n          });\n          this.#listeners.push(listener);\n        }\n        get cancelled() {\n          return this.#cancelled;\n        }\n        checkSignal() {\n          assert2(!this.cancelled, \"cancelled\", \"CANCELLED\", {});\n        }\n      };\n      FetchRequest = class _FetchRequest {\n        #allowInsecure;\n        #gzip;\n        #headers;\n        #method;\n        #timeout;\n        #url;\n        #body;\n        #bodyType;\n        #creds;\n        // Hooks\n        #preflight;\n        #process;\n        #retry;\n        #signal;\n        #throttle;\n        #getUrlFunc;\n        /**\n         *  The fetch URL to request.\n         */\n        get url() {\n          return this.#url;\n        }\n        set url(url) {\n          this.#url = String(url);\n        }\n        /**\n         *  The fetch body, if any, to send as the request body. //(default: null)//\n         *\n         *  When setting a body, the intrinsic ``Content-Type`` is automatically\n         *  set and will be used if **not overridden** by setting a custom\n         *  header.\n         *\n         *  If %%body%% is null, the body is cleared (along with the\n         *  intrinsic ``Content-Type``).\n         *\n         *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n         *  ``text/plain``.\n         *\n         *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n         *  ``application/octet-stream``.\n         *\n         *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n         *  set to ``application/json``.\n         */\n        get body() {\n          if (this.#body == null) {\n            return null;\n          }\n          return new Uint8Array(this.#body);\n        }\n        set body(body) {\n          if (body == null) {\n            this.#body = void 0;\n            this.#bodyType = void 0;\n          } else if (typeof body === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n          } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n          } else if (typeof body === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n          } else {\n            throw new Error(\"invalid body\");\n          }\n        }\n        /**\n         *  Returns true if the request has a body.\n         */\n        hasBody() {\n          return this.#body != null;\n        }\n        /**\n         *  The HTTP method to use when requesting the URI. If no method\n         *  has been explicitly set, then ``GET`` is used if the body is\n         *  null and ``POST`` otherwise.\n         */\n        get method() {\n          if (this.#method) {\n            return this.#method;\n          }\n          if (this.hasBody()) {\n            return \"POST\";\n          }\n          return \"GET\";\n        }\n        set method(method) {\n          if (method == null) {\n            method = \"\";\n          }\n          this.#method = String(method).toUpperCase();\n        }\n        /**\n         *  The headers that will be used when requesting the URI. All\n         *  keys are lower-case.\n         *\n         *  This object is a copy, so any changes will **NOT** be reflected\n         *  in the ``FetchRequest``.\n         *\n         *  To set a header entry, use the ``setHeader`` method.\n         */\n        get headers() {\n          const headers = Object.assign({}, this.#headers);\n          if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n          }\n          ;\n          if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n          }\n          if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n          }\n          if (this.body) {\n            headers[\"content-length\"] = String(this.body.length);\n          }\n          return headers;\n        }\n        /**\n         *  Get the header for %%key%%, ignoring case.\n         */\n        getHeader(key) {\n          return this.headers[key.toLowerCase()];\n        }\n        /**\n         *  Set the header for %%key%% to %%value%%. All values are coerced\n         *  to a string.\n         */\n        setHeader(key, value) {\n          this.#headers[String(key).toLowerCase()] = String(value);\n        }\n        /**\n         *  Clear all headers, resetting all intrinsic headers.\n         */\n        clearHeaders() {\n          this.#headers = {};\n        }\n        [Symbol.iterator]() {\n          const headers = this.headers;\n          const keys = Object.keys(headers);\n          let index = 0;\n          return {\n            next: () => {\n              if (index < keys.length) {\n                const key = keys[index++];\n                return {\n                  value: [key, headers[key]],\n                  done: false\n                };\n              }\n              return { value: void 0, done: true };\n            }\n          };\n        }\n        /**\n         *  The value that will be sent for the ``Authorization`` header.\n         *\n         *  To set the credentials, use the ``setCredentials`` method.\n         */\n        get credentials() {\n          return this.#creds || null;\n        }\n        /**\n         *  Sets an ``Authorization`` for %%username%% with %%password%%.\n         */\n        setCredentials(username, password) {\n          assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n          this.#creds = `${username}:${password}`;\n        }\n        /**\n         *  Enable and request gzip-encoded responses. The response will\n         *  automatically be decompressed. //(default: true)//\n         */\n        get allowGzip() {\n          return this.#gzip;\n        }\n        set allowGzip(value) {\n          this.#gzip = !!value;\n        }\n        /**\n         *  Allow ``Authentication`` credentials to be sent over insecure\n         *  channels. //(default: false)//\n         */\n        get allowInsecureAuthentication() {\n          return !!this.#allowInsecure;\n        }\n        set allowInsecureAuthentication(value) {\n          this.#allowInsecure = !!value;\n        }\n        /**\n         *  The timeout (in milliseconds) to wait for a complete response.\n         *  //(default: 5 minutes)//\n         */\n        get timeout() {\n          return this.#timeout;\n        }\n        set timeout(timeout) {\n          assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n          this.#timeout = timeout;\n        }\n        /**\n         *  This function is called prior to each request, for example\n         *  during a redirection or retry in case of server throttling.\n         *\n         *  This offers an opportunity to populate headers or update\n         *  content before sending a request.\n         */\n        get preflightFunc() {\n          return this.#preflight || null;\n        }\n        set preflightFunc(preflight) {\n          this.#preflight = preflight;\n        }\n        /**\n         *  This function is called after each response, offering an\n         *  opportunity to provide client-level throttling or updating\n         *  response data.\n         *\n         *  Any error thrown in this causes the ``send()`` to throw.\n         *\n         *  To schedule a retry attempt (assuming the maximum retry limit\n         *  has not been reached), use [[response.throwThrottleError]].\n         */\n        get processFunc() {\n          return this.#process || null;\n        }\n        set processFunc(process2) {\n          this.#process = process2;\n        }\n        /**\n         *  This function is called on each retry attempt.\n         */\n        get retryFunc() {\n          return this.#retry || null;\n        }\n        set retryFunc(retry) {\n          this.#retry = retry;\n        }\n        /**\n         *  This function is called to fetch content from HTTP and\n         *  HTTPS URLs and is platform specific (e.g. nodejs vs\n         *  browsers).\n         *\n         *  This is by default the currently registered global getUrl\n         *  function, which can be changed using [[registerGetUrl]].\n         *  If this has been set, setting is to ``null`` will cause\n         *  this FetchRequest (and any future clones) to revert back to\n         *  using the currently registered global getUrl function.\n         *\n         *  Setting this is generally not necessary, but may be useful\n         *  for developers that wish to intercept requests or to\n         *  configurege a proxy or other agent.\n         */\n        get getUrlFunc() {\n          return this.#getUrlFunc || defaultGetUrlFunc;\n        }\n        set getUrlFunc(value) {\n          this.#getUrlFunc = value;\n        }\n        /**\n         *  Create a new FetchRequest instance with default values.\n         *\n         *  Once created, each property may be set before issuing a\n         *  ``.send()`` to make the request.\n         */\n        constructor(url) {\n          this.#url = String(url);\n          this.#allowInsecure = false;\n          this.#gzip = true;\n          this.#headers = {};\n          this.#method = \"\";\n          this.#timeout = 3e5;\n          this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n          };\n          this.#getUrlFunc = null;\n        }\n        toString() {\n          return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n        }\n        /**\n         *  Update the throttle parameters used to determine maximum\n         *  attempts and exponential-backoff properties.\n         */\n        setThrottleParams(params) {\n          if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n          }\n          if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n          }\n        }\n        async #send(attempt, expires, delay, _request, _response) {\n          if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n          }\n          assert2(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\",\n            reason: \"timeout\",\n            request: _request\n          });\n          if (delay > 0) {\n            await wait(delay);\n          }\n          let req = this.clone();\n          const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n          if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n              let response2 = result;\n              if (this.processFunc) {\n                checkSignal(_request.#signal);\n                try {\n                  response2 = await this.processFunc(req, response2);\n                } catch (error) {\n                  if (error.throttle == null || typeof error.stall !== \"number\") {\n                    response2.makeServerError(\"error in post-processing function\", error).assertOk();\n                  }\n                }\n              }\n              return response2;\n            }\n            req = result;\n          }\n          if (this.preflightFunc) {\n            req = await this.preflightFunc(req);\n          }\n          const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n          let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n          if (response.statusCode === 301 || response.statusCode === 302) {\n            try {\n              const location = response.headers.location || \"\";\n              return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            } catch (error) {\n            }\n            return response;\n          } else if (response.statusCode === 429) {\n            if (this.retryFunc == null || await this.retryFunc(req, response, attempt)) {\n              const retryAfter = response.headers[\"retry-after\"];\n              let delay2 = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n              if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                delay2 = parseInt(retryAfter);\n              }\n              return req.clone().#send(attempt + 1, expires, delay2, _request, response);\n            }\n          }\n          if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n              response = await this.processFunc(req, response);\n            } catch (error) {\n              if (error.throttle == null || typeof error.stall !== \"number\") {\n                response.makeServerError(\"error in post-processing function\", error).assertOk();\n              }\n              let delay2 = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n              ;\n              if (error.stall >= 0) {\n                delay2 = error.stall;\n              }\n              return req.clone().#send(attempt + 1, expires, delay2, _request, response);\n            }\n          }\n          return response;\n        }\n        /**\n         *  Resolves to the response by sending the request.\n         */\n        send() {\n          assert2(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n          this.#signal = new FetchCancelSignal(this);\n          return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", {}, null, this));\n        }\n        /**\n         *  Cancels the inflight response, causing a ``CANCELLED``\n         *  error to be rejected from the [[send]].\n         */\n        cancel() {\n          assert2(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n          const signal = fetchSignals.get(this);\n          if (!signal) {\n            throw new Error(\"missing signal; should not happen\");\n          }\n          signal();\n        }\n        /**\n         *  Returns a new [[FetchRequest]] that represents the redirection\n         *  to %%location%%.\n         */\n        redirect(location) {\n          const current = this.url.split(\":\")[0].toLowerCase();\n          const target = location.split(\":\")[0].toLowerCase();\n          assert2(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`\n          });\n          const req = new _FetchRequest(location);\n          req.method = \"GET\";\n          req.allowGzip = this.allowGzip;\n          req.timeout = this.timeout;\n          req.#headers = Object.assign({}, this.#headers);\n          if (this.#body) {\n            req.#body = new Uint8Array(this.#body);\n          }\n          req.#bodyType = this.#bodyType;\n          return req;\n        }\n        /**\n         *  Create a new copy of this request.\n         */\n        clone() {\n          const clone = new _FetchRequest(this.url);\n          clone.#method = this.#method;\n          if (this.#body) {\n            clone.#body = this.#body;\n          }\n          clone.#bodyType = this.#bodyType;\n          clone.#headers = Object.assign({}, this.#headers);\n          clone.#creds = this.#creds;\n          if (this.allowGzip) {\n            clone.allowGzip = true;\n          }\n          clone.timeout = this.timeout;\n          if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n          }\n          clone.#preflight = this.#preflight;\n          clone.#process = this.#process;\n          clone.#retry = this.#retry;\n          clone.#throttle = Object.assign({}, this.#throttle);\n          clone.#getUrlFunc = this.#getUrlFunc;\n          return clone;\n        }\n        /**\n         *  Locks all static configuration for gateways and FetchGetUrlFunc\n         *  registration.\n         */\n        static lockConfig() {\n          locked = true;\n        }\n        /**\n         *  Get the current Gateway function for %%scheme%%.\n         */\n        static getGateway(scheme) {\n          return Gateways[scheme.toLowerCase()] || null;\n        }\n        /**\n         *  Use the %%func%% when fetching URIs using %%scheme%%.\n         *\n         *  This method affects all requests globally.\n         *\n         *  If [[lockConfig]] has been called, no change is made and this\n         *  throws.\n         */\n        static registerGateway(scheme, func) {\n          scheme = scheme.toLowerCase();\n          if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n          }\n          if (locked) {\n            throw new Error(\"gateways locked\");\n          }\n          Gateways[scheme] = func;\n        }\n        /**\n         *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n         *\n         *  This method affects all requests globally.\n         *\n         *  If [[lockConfig]] has been called, no change is made and this\n         *  throws.\n         */\n        static registerGetUrl(getUrl) {\n          if (locked) {\n            throw new Error(\"gateways locked\");\n          }\n          defaultGetUrlFunc = getUrl;\n        }\n        /**\n         *  Creates a getUrl function that fetches content from HTTP and\n         *  HTTPS URLs.\n         *\n         *  The available %%options%% are dependent on the platform\n         *  implementation of the default getUrl function.\n         *\n         *  This is not generally something that is needed, but is useful\n         *  when trying to customize simple behaviour when fetching HTTP\n         *  content.\n         */\n        static createGetUrlFunc(options) {\n          return createGetUrl(options);\n        }\n        /**\n         *  Creates a function that can \"fetch\" data URIs.\n         *\n         *  Note that this is automatically done internally to support\n         *  data URIs, so it is not necessary to register it.\n         *\n         *  This is not generally something that is needed, but may\n         *  be useful in a wrapper to perfom custom data URI functionality.\n         */\n        static createDataGateway() {\n          return dataGatewayFunc;\n        }\n        /**\n         *  Creates a function that will fetch IPFS (unvalidated) from\n         *  a custom gateway baseUrl.\n         *\n         *  The default IPFS gateway used internally is\n         *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n         */\n        static createIpfsGatewayFunc(baseUrl) {\n          return getIpfsGatewayFunc(baseUrl);\n        }\n      };\n      FetchResponse = class _FetchResponse {\n        #statusCode;\n        #statusMessage;\n        #headers;\n        #body;\n        #request;\n        #error;\n        toString() {\n          return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n        }\n        /**\n         *  The response status code.\n         */\n        get statusCode() {\n          return this.#statusCode;\n        }\n        /**\n         *  The response status message.\n         */\n        get statusMessage() {\n          return this.#statusMessage;\n        }\n        /**\n         *  The response headers. All keys are lower-case.\n         */\n        get headers() {\n          return Object.assign({}, this.#headers);\n        }\n        /**\n         *  The response body, or ``null`` if there was no body.\n         */\n        get body() {\n          return this.#body == null ? null : new Uint8Array(this.#body);\n        }\n        /**\n         *  The response body as a UTF-8 encoded string, or the empty\n         *  string (i.e. ``\"\"``) if there was no body.\n         *\n         *  An error is thrown if the body is invalid UTF-8 data.\n         */\n        get bodyText() {\n          try {\n            return this.#body == null ? \"\" : toUtf8String(this.#body);\n          } catch (error) {\n            assert2(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n              operation: \"bodyText\",\n              info: { response: this }\n            });\n          }\n        }\n        /**\n         *  The response body, decoded as JSON.\n         *\n         *  An error is thrown if the body is invalid JSON-encoded data\n         *  or if there was no body.\n         */\n        get bodyJson() {\n          try {\n            return JSON.parse(this.bodyText);\n          } catch (error) {\n            assert2(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n              operation: \"bodyJson\",\n              info: { response: this }\n            });\n          }\n        }\n        [Symbol.iterator]() {\n          const headers = this.headers;\n          const keys = Object.keys(headers);\n          let index = 0;\n          return {\n            next: () => {\n              if (index < keys.length) {\n                const key = keys[index++];\n                return {\n                  value: [key, headers[key]],\n                  done: false\n                };\n              }\n              return { value: void 0, done: true };\n            }\n          };\n        }\n        constructor(statusCode, statusMessage, headers, body, request) {\n          this.#statusCode = statusCode;\n          this.#statusMessage = statusMessage;\n          this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n          }, {});\n          this.#body = body == null ? null : new Uint8Array(body);\n          this.#request = request || null;\n          this.#error = { message: \"\" };\n        }\n        /**\n         *  Return a Response with matching headers and body, but with\n         *  an error status code (i.e. 599) and %%message%% with an\n         *  optional %%error%%.\n         */\n        makeServerError(message, error) {\n          let statusMessage;\n          if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n          } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n          }\n          const response = new _FetchResponse(599, statusMessage, this.headers, this.body, this.#request || void 0);\n          response.#error = { message, error };\n          return response;\n        }\n        /**\n         *  If called within a [request.processFunc](FetchRequest-processFunc)\n         *  call, causes the request to retry as if throttled for %%stall%%\n         *  milliseconds.\n         */\n        throwThrottleError(message, stall2) {\n          if (stall2 == null) {\n            stall2 = -1;\n          } else {\n            assertArgument(Number.isInteger(stall2) && stall2 >= 0, \"invalid stall timeout\", \"stall\", stall2);\n          }\n          const error = new Error(message || \"throttling requests\");\n          defineProperties(error, { stall: stall2, throttle: true });\n          throw error;\n        }\n        /**\n         *  Get the header value for %%key%%, ignoring case.\n         */\n        getHeader(key) {\n          return this.headers[key.toLowerCase()];\n        }\n        /**\n         *  Returns true if the response has a body.\n         */\n        hasBody() {\n          return this.#body != null;\n        }\n        /**\n         *  The request made for this response.\n         */\n        get request() {\n          return this.#request;\n        }\n        /**\n         *  Returns true if this response was a success statusCode.\n         */\n        ok() {\n          return this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300;\n        }\n        /**\n         *  Throws a ``SERVER_ERROR`` if this response is not ok.\n         */\n        assertOk() {\n          if (this.ok()) {\n            return;\n          }\n          let { message, error } = this.#error;\n          if (message === \"\") {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n          }\n          let requestUrl = null;\n          if (this.request) {\n            requestUrl = this.request.url;\n          }\n          let responseBody = null;\n          try {\n            if (this.#body) {\n              responseBody = toUtf8String(this.#body);\n            }\n          } catch (e) {\n          }\n          assert2(false, message, \"SERVER_ERROR\", {\n            request: this.request || \"unknown request\",\n            response: this,\n            error,\n            info: {\n              requestUrl,\n              responseBody,\n              responseStatus: `${this.statusCode} ${this.statusMessage}`\n            }\n          });\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/rlp-decode.js\n  function hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n      result = \"0\" + result;\n    }\n    return \"0x\" + result;\n  }\n  function unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n      result = result * 256 + data[offset + i];\n    }\n    return result;\n  }\n  function _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n      const decoded = _decode(data, childOffset);\n      result.push(decoded.result);\n      childOffset += decoded.consumed;\n      assert2(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data,\n        length,\n        offset\n      });\n    }\n    return { consumed: 1 + length, result };\n  }\n  function _decode(data, offset) {\n    assert2(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n      buffer: data,\n      length: 0,\n      offset: 1\n    });\n    const checkOffset = (offset2) => {\n      assert2(offset2 <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n        buffer: data,\n        length: data.length,\n        offset: offset2\n      });\n    };\n    if (data[offset] >= 248) {\n      const lengthLength = data[offset] - 247;\n      checkOffset(offset + 1 + lengthLength);\n      const length = unarrayifyInteger(data, offset + 1, lengthLength);\n      checkOffset(offset + 1 + lengthLength + length);\n      return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    } else if (data[offset] >= 192) {\n      const length = data[offset] - 192;\n      checkOffset(offset + 1 + length);\n      return _decodeChildren(data, offset, offset + 1, length);\n    } else if (data[offset] >= 184) {\n      const lengthLength = data[offset] - 183;\n      checkOffset(offset + 1 + lengthLength);\n      const length = unarrayifyInteger(data, offset + 1, lengthLength);\n      checkOffset(offset + 1 + lengthLength + length);\n      const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n      return { consumed: 1 + lengthLength + length, result };\n    } else if (data[offset] >= 128) {\n      const length = data[offset] - 128;\n      checkOffset(offset + 1 + length);\n      const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n      return { consumed: 1 + length, result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n  }\n  function decodeRlp(_data) {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n  }\n  var init_rlp_decode = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/rlp-decode.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n      init_errors2();\n      init_data();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/rlp-encode.js\n  function arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n      result.unshift(value & 255);\n      value >>= 8;\n    }\n    return result;\n  }\n  function _encode(object2) {\n    if (Array.isArray(object2)) {\n      let payload = [];\n      object2.forEach(function(child) {\n        payload = payload.concat(_encode(child));\n      });\n      if (payload.length <= 55) {\n        payload.unshift(192 + payload.length);\n        return payload;\n      }\n      const length2 = arrayifyInteger(payload.length);\n      length2.unshift(247 + length2.length);\n      return length2.concat(payload);\n    }\n    const data = Array.prototype.slice.call(getBytes(object2, \"object\"));\n    if (data.length === 1 && data[0] <= 127) {\n      return data;\n    } else if (data.length <= 55) {\n      data.unshift(128 + data.length);\n      return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(183 + length.length);\n    return length.concat(data);\n  }\n  function encodeRlp(object2) {\n    let result = \"0x\";\n    for (const v of _encode(object2)) {\n      result += nibbles[v >> 4];\n      result += nibbles[v & 15];\n    }\n    return result;\n  }\n  var nibbles;\n  var init_rlp_encode = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/rlp-encode.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_data();\n      nibbles = \"0123456789abcdef\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/index.js\n  var init_utils = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/utils/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_base58();\n      init_data();\n      init_errors2();\n      init_events();\n      init_fetch();\n      init_maths();\n      init_properties();\n      init_rlp_decode();\n      init_rlp_encode();\n      init_utf8();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/abstract-coder.js\n  function getNames(result) {\n    return resultNames.get(result);\n  }\n  function setNames(result, names) {\n    resultNames.set(result, names);\n  }\n  function throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n  }\n  function toObject(names, items, deep) {\n    if (names.indexOf(null) >= 0) {\n      return items.map((item, index) => {\n        if (item instanceof Result) {\n          return toObject(getNames(item), item, deep);\n        }\n        return item;\n      });\n    }\n    return names.reduce((accum, name, index) => {\n      let item = items.getValue(name);\n      if (!(name in accum)) {\n        if (deep && item instanceof Result) {\n          item = toObject(getNames(item), item, deep);\n        }\n        accum[name] = item;\n      }\n      return accum;\n    }, {});\n  }\n  function getValue(value) {\n    let bytes2 = toBeArray(value);\n    assert2(bytes2.length <= WordSize, \"value out-of-bounds\", \"BUFFER_OVERRUN\", { buffer: bytes2, length: WordSize, offset: bytes2.length });\n    if (bytes2.length !== WordSize) {\n      bytes2 = getBytesCopy(concat([Padding.slice(bytes2.length % WordSize), bytes2]));\n    }\n    return bytes2;\n  }\n  var WordSize, Padding, passProperties, _guard, resultNames, Result, Coder, Writer, Reader;\n  var init_abstract_coder = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/abstract-coder.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      WordSize = 32;\n      Padding = new Uint8Array(WordSize);\n      passProperties = [\"then\"];\n      _guard = {};\n      resultNames = /* @__PURE__ */ new WeakMap();\n      Result = class _Result extends Array {\n        // No longer used; but cannot be removed as it will remove the\n        // #private field from the .d.ts which may break backwards\n        // compatibility\n        #names;\n        /**\n         *  @private\n         */\n        constructor(...args) {\n          const guard = args[0];\n          let items = args[1];\n          let names = (args[2] || []).slice();\n          let wrap = true;\n          if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n          }\n          super(items.length);\n          items.forEach((item, index) => {\n            this[index] = item;\n          });\n          const nameCounts = names.reduce((accum, name) => {\n            if (typeof name === \"string\") {\n              accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n          }, /* @__PURE__ */ new Map());\n          setNames(this, Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n              return name;\n            }\n            return null;\n          })));\n          this.#names = [];\n          if (this.#names == null) {\n            void this.#names;\n          }\n          if (!wrap) {\n            return;\n          }\n          Object.freeze(this);\n          const proxy = new Proxy(this, {\n            get: (target, prop, receiver) => {\n              if (typeof prop === \"string\") {\n                if (prop.match(/^[0-9]+$/)) {\n                  const index = getNumber(prop, \"%index\");\n                  if (index < 0 || index >= this.length) {\n                    throw new RangeError(\"out of result range\");\n                  }\n                  const item = target[index];\n                  if (item instanceof Error) {\n                    throwError(`index ${index}`, item);\n                  }\n                  return item;\n                }\n                if (passProperties.indexOf(prop) >= 0) {\n                  return Reflect.get(target, prop, receiver);\n                }\n                const value = target[prop];\n                if (value instanceof Function) {\n                  return function(...args2) {\n                    return value.apply(this === receiver ? target : this, args2);\n                  };\n                } else if (!(prop in target)) {\n                  return target.getValue.apply(this === receiver ? target : this, [prop]);\n                }\n              }\n              return Reflect.get(target, prop, receiver);\n            }\n          });\n          setNames(proxy, getNames(this));\n          return proxy;\n        }\n        /**\n         *  Returns the Result as a normal Array. If %%deep%%, any children\n         *  which are Result objects are also converted to a normal Array.\n         *\n         *  This will throw if there are any outstanding deferred\n         *  errors.\n         */\n        toArray(deep) {\n          const result = [];\n          this.forEach((item, index) => {\n            if (item instanceof Error) {\n              throwError(`index ${index}`, item);\n            }\n            if (deep && item instanceof _Result) {\n              item = item.toArray(deep);\n            }\n            result.push(item);\n          });\n          return result;\n        }\n        /**\n         *  Returns the Result as an Object with each name-value pair. If\n         *  %%deep%%, any children which are Result objects are also\n         *  converted to an Object.\n         *\n         *  This will throw if any value is unnamed, or if there are\n         *  any outstanding deferred errors.\n         */\n        toObject(deep) {\n          const names = getNames(this);\n          return names.reduce((accum, name, index) => {\n            assert2(name != null, `value at index ${index} unnamed`, \"UNSUPPORTED_OPERATION\", {\n              operation: \"toObject()\"\n            });\n            return toObject(names, this, deep);\n          }, {});\n        }\n        /**\n         *  @_ignore\n         */\n        slice(start, end) {\n          if (start == null) {\n            start = 0;\n          }\n          if (start < 0) {\n            start += this.length;\n            if (start < 0) {\n              start = 0;\n            }\n          }\n          if (end == null) {\n            end = this.length;\n          }\n          if (end < 0) {\n            end += this.length;\n            if (end < 0) {\n              end = 0;\n            }\n          }\n          if (end > this.length) {\n            end = this.length;\n          }\n          const _names = getNames(this);\n          const result = [], names = [];\n          for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(_names[i]);\n          }\n          return new _Result(_guard, result, names);\n        }\n        /**\n         *  @_ignore\n         */\n        filter(callback, thisArg) {\n          const _names = getNames(this);\n          const result = [], names = [];\n          for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n              throwError(`index ${i}`, item);\n            }\n            if (callback.call(thisArg, item, i, this)) {\n              result.push(item);\n              names.push(_names[i]);\n            }\n          }\n          return new _Result(_guard, result, names);\n        }\n        /**\n         *  @_ignore\n         */\n        map(callback, thisArg) {\n          const result = [];\n          for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n              throwError(`index ${i}`, item);\n            }\n            result.push(callback.call(thisArg, item, i, this));\n          }\n          return result;\n        }\n        /**\n         *  Returns the value for %%name%%.\n         *\n         *  Since it is possible to have a key whose name conflicts with\n         *  a method on a [[Result]] or its superclass Array, or any\n         *  JavaScript keyword, this ensures all named values are still\n         *  accessible by name.\n         */\n        getValue(name) {\n          const index = getNames(this).indexOf(name);\n          if (index === -1) {\n            return void 0;\n          }\n          const value = this[index];\n          if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, value.error);\n          }\n          return value;\n        }\n        /**\n         *  Creates a new [[Result]] for %%items%% with each entry\n         *  also accessible by its corresponding name in %%keys%%.\n         */\n        static fromItems(items, keys) {\n          return new _Result(_guard, items, keys);\n        }\n      };\n      Coder = class {\n        // The coder name:\n        //   - address, uint256, tuple, array, etc.\n        name;\n        // The fully expanded type, including composite types:\n        //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n        type;\n        // The localName bound in the signature, in this example it is \"baz\":\n        //   - tuple(address foo, uint bar) baz\n        localName;\n        // Whether this type is dynamic:\n        //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n        //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n        dynamic;\n        constructor(name, type, localName, dynamic) {\n          defineProperties(this, { name, type, localName, dynamic }, {\n            name: \"string\",\n            type: \"string\",\n            localName: \"string\",\n            dynamic: \"boolean\"\n          });\n        }\n        _throwError(message, value) {\n          assertArgument(false, message, this.localName, value);\n        }\n      };\n      Writer = class {\n        // An array of WordSize lengthed objects to concatenation\n        #data;\n        #dataLength;\n        constructor() {\n          this.#data = [];\n          this.#dataLength = 0;\n        }\n        get data() {\n          return concat(this.#data);\n        }\n        get length() {\n          return this.#dataLength;\n        }\n        #writeData(data) {\n          this.#data.push(data);\n          this.#dataLength += data.length;\n          return data.length;\n        }\n        appendWriter(writer) {\n          return this.#writeData(getBytesCopy(writer.data));\n        }\n        // Arrayish item; pad on the right to *nearest* WordSize\n        writeBytes(value) {\n          let bytes2 = getBytesCopy(value);\n          const paddingOffset = bytes2.length % WordSize;\n          if (paddingOffset) {\n            bytes2 = getBytesCopy(concat([bytes2, Padding.slice(paddingOffset)]));\n          }\n          return this.#writeData(bytes2);\n        }\n        // Numeric item; pad on the left *to* WordSize\n        writeValue(value) {\n          return this.#writeData(getValue(value));\n        }\n        // Inserts a numeric place-holder, returning a callback that can\n        // be used to asjust the value later\n        writeUpdatableValue() {\n          const offset = this.#data.length;\n          this.#data.push(Padding);\n          this.#dataLength += WordSize;\n          return (value) => {\n            this.#data[offset] = getValue(value);\n          };\n        }\n      };\n      Reader = class _Reader {\n        // Allows incomplete unpadded data to be read; otherwise an error\n        // is raised if attempting to overrun the buffer. This is required\n        // to deal with an old Solidity bug, in which event data for\n        // external (not public thoguh) was tightly packed.\n        allowLoose;\n        #data;\n        #offset;\n        #bytesRead;\n        #parent;\n        #maxInflation;\n        constructor(data, allowLoose, maxInflation) {\n          defineProperties(this, { allowLoose: !!allowLoose });\n          this.#data = getBytesCopy(data);\n          this.#bytesRead = 0;\n          this.#parent = null;\n          this.#maxInflation = maxInflation != null ? maxInflation : 1024;\n          this.#offset = 0;\n        }\n        get data() {\n          return hexlify(this.#data);\n        }\n        get dataLength() {\n          return this.#data.length;\n        }\n        get consumed() {\n          return this.#offset;\n        }\n        get bytes() {\n          return new Uint8Array(this.#data);\n        }\n        #incrementBytesRead(count) {\n          if (this.#parent) {\n            return this.#parent.#incrementBytesRead(count);\n          }\n          this.#bytesRead += count;\n          assert2(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${this.#maxInflation} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`, \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data),\n            offset: this.#offset,\n            length: count,\n            info: {\n              bytesRead: this.#bytesRead,\n              dataLength: this.dataLength\n            }\n          });\n        }\n        #peekBytes(offset, length, loose) {\n          let alignedLength = Math.ceil(length / WordSize) * WordSize;\n          if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n              alignedLength = length;\n            } else {\n              assert2(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                buffer: getBytesCopy(this.#data),\n                length: this.#data.length,\n                offset: this.#offset + alignedLength\n              });\n            }\n          }\n          return this.#data.slice(this.#offset, this.#offset + alignedLength);\n        }\n        // Create a sub-reader with the same underlying data, but offset\n        subReader(offset) {\n          const reader = new _Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n          reader.#parent = this;\n          return reader;\n        }\n        // Read bytes\n        readBytes(length, loose) {\n          let bytes2 = this.#peekBytes(0, length, !!loose);\n          this.#incrementBytesRead(length);\n          this.#offset += bytes2.length;\n          return bytes2.slice(0, length);\n        }\n        // Read a numeric values\n        readValue() {\n          return toBigInt2(this.readBytes(WordSize));\n        }\n        readIndex() {\n          return toNumber(this.readBytes(WordSize));\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js\n  function number(n2) {\n    if (!Number.isSafeInteger(n2) || n2 < 0)\n      throw new Error(`Wrong positive integer: ${n2}`);\n  }\n  function bytes(b2, ...lengths) {\n    if (!(b2 instanceof Uint8Array))\n      throw new Error(\"Expected Uint8Array\");\n    if (lengths.length > 0 && !lengths.includes(b2.length))\n      throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b2.length}`);\n  }\n  function hash(hash2) {\n    if (typeof hash2 !== \"function\" || typeof hash2.create !== \"function\")\n      throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");\n    number(hash2.outputLen);\n    number(hash2.blockLen);\n  }\n  function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n      throw new Error(\"Hash instance has been destroyed\");\n    if (checkFinished && instance.finished)\n      throw new Error(\"Hash#digest() has already been called\");\n  }\n  function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n      throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n  }\n  var init_assert = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/crypto.js\n  var crypto;\n  var init_crypto = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/crypto.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      crypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : void 0;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js\n  function utf8ToBytes(str) {\n    if (typeof str !== \"string\")\n      throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str));\n  }\n  function toBytes(data) {\n    if (typeof data === \"string\")\n      data = utf8ToBytes(data);\n    if (!u8a(data))\n      throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n  }\n  function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0;\n    arrays.forEach((a) => {\n      if (!u8a(a))\n        throw new Error(\"Uint8Array expected\");\n      r.set(a, pad);\n      pad += a.length;\n    });\n    return r;\n  }\n  function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n  }\n  function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n  }\n  function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === \"function\") {\n      return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error(\"crypto.getRandomValues must be defined\");\n  }\n  var u8a, u32, createView, rotr, isLE, Hash, toStr;\n  var init_utils2 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto();\n      u8a = (a) => a instanceof Uint8Array;\n      u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n      createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n      rotr = (word, shift) => word << 32 - shift | word >>> shift;\n      isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;\n      if (!isLE)\n        throw new Error(\"Non little-endian hardware is not supported\");\n      Hash = class {\n        // Safe version that clones internal state\n        clone() {\n          return this._cloneInto();\n        }\n      };\n      toStr = {}.toString;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/hmac.js\n  var HMAC, hmac;\n  var init_hmac = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/hmac.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_assert();\n      init_utils2();\n      HMAC = class extends Hash {\n        constructor(hash2, _key) {\n          super();\n          this.finished = false;\n          this.destroyed = false;\n          hash(hash2);\n          const key = toBytes(_key);\n          this.iHash = hash2.create();\n          if (typeof this.iHash.update !== \"function\")\n            throw new Error(\"Expected instance of class which extends utils.Hash\");\n          this.blockLen = this.iHash.blockLen;\n          this.outputLen = this.iHash.outputLen;\n          const blockLen = this.blockLen;\n          const pad = new Uint8Array(blockLen);\n          pad.set(key.length > blockLen ? hash2.create().update(key).digest() : key);\n          for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 54;\n          this.iHash.update(pad);\n          this.oHash = hash2.create();\n          for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 54 ^ 92;\n          this.oHash.update(pad);\n          pad.fill(0);\n        }\n        update(buf) {\n          exists(this);\n          this.iHash.update(buf);\n          return this;\n        }\n        digestInto(out) {\n          exists(this);\n          bytes(out, this.outputLen);\n          this.finished = true;\n          this.iHash.digestInto(out);\n          this.oHash.update(out);\n          this.oHash.digestInto(out);\n          this.destroy();\n        }\n        digest() {\n          const out = new Uint8Array(this.oHash.outputLen);\n          this.digestInto(out);\n          return out;\n        }\n        _cloneInto(to) {\n          to || (to = Object.create(Object.getPrototypeOf(this), {}));\n          const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n          to = to;\n          to.finished = finished;\n          to.destroyed = destroyed;\n          to.blockLen = blockLen;\n          to.outputLen = outputLen;\n          to.oHash = oHash._cloneInto(to.oHash);\n          to.iHash = iHash._cloneInto(to.iHash);\n          return to;\n        }\n        destroy() {\n          this.destroyed = true;\n          this.oHash.destroy();\n          this.iHash.destroy();\n        }\n      };\n      hmac = (hash2, key, message) => new HMAC(hash2, key).update(message).digest();\n      hmac.create = (hash2, key) => new HMAC(hash2, key);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_sha2.js\n  function setBigUint64(view, byteOffset, value, isLE2) {\n    if (typeof view.setBigUint64 === \"function\")\n      return view.setBigUint64(byteOffset, value, isLE2);\n    const _32n2 = BigInt(32);\n    const _u32_max = BigInt(4294967295);\n    const wh = Number(value >> _32n2 & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE2 ? 4 : 0;\n    const l = isLE2 ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE2);\n    view.setUint32(byteOffset + l, wl, isLE2);\n  }\n  var SHA2;\n  var init_sha2 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_sha2.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_assert();\n      init_utils2();\n      SHA2 = class extends Hash {\n        constructor(blockLen, outputLen, padOffset, isLE2) {\n          super();\n          this.blockLen = blockLen;\n          this.outputLen = outputLen;\n          this.padOffset = padOffset;\n          this.isLE = isLE2;\n          this.finished = false;\n          this.length = 0;\n          this.pos = 0;\n          this.destroyed = false;\n          this.buffer = new Uint8Array(blockLen);\n          this.view = createView(this.buffer);\n        }\n        update(data) {\n          exists(this);\n          const { view, buffer, blockLen } = this;\n          data = toBytes(data);\n          const len = data.length;\n          for (let pos = 0; pos < len; ) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            if (take === blockLen) {\n              const dataView = createView(data);\n              for (; blockLen <= len - pos; pos += blockLen)\n                this.process(dataView, pos);\n              continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n              this.process(view, 0);\n              this.pos = 0;\n            }\n          }\n          this.length += data.length;\n          this.roundClean();\n          return this;\n        }\n        digestInto(out) {\n          exists(this);\n          output(out, this);\n          this.finished = true;\n          const { buffer, view, blockLen, isLE: isLE2 } = this;\n          let { pos } = this;\n          buffer[pos++] = 128;\n          this.buffer.subarray(pos).fill(0);\n          if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n          }\n          for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n          setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE2);\n          this.process(view, 0);\n          const oview = createView(out);\n          const len = this.outputLen;\n          if (len % 4)\n            throw new Error(\"_sha2: outputLen should be aligned to 32bit\");\n          const outLen = len / 4;\n          const state = this.get();\n          if (outLen > state.length)\n            throw new Error(\"_sha2: outputLen bigger than state\");\n          for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE2);\n        }\n        digest() {\n          const { buffer, outputLen } = this;\n          this.digestInto(buffer);\n          const res = buffer.slice(0, outputLen);\n          this.destroy();\n          return res;\n        }\n        _cloneInto(to) {\n          to || (to = new this.constructor());\n          to.set(...this.get());\n          const { blockLen, buffer, length, finished, destroyed, pos } = this;\n          to.length = length;\n          to.pos = pos;\n          to.finished = finished;\n          to.destroyed = destroyed;\n          if (length % blockLen)\n            to.buffer.set(buffer);\n          return to;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha256.js\n  var Chi, Maj, SHA256_K, IV, SHA256_W, SHA256, sha256;\n  var init_sha256 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha256.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_sha2();\n      init_utils2();\n      Chi = (a, b2, c) => a & b2 ^ ~a & c;\n      Maj = (a, b2, c) => a & b2 ^ a & c ^ b2 & c;\n      SHA256_K = /* @__PURE__ */ new Uint32Array([\n        1116352408,\n        1899447441,\n        3049323471,\n        3921009573,\n        961987163,\n        1508970993,\n        2453635748,\n        2870763221,\n        3624381080,\n        310598401,\n        607225278,\n        1426881987,\n        1925078388,\n        2162078206,\n        2614888103,\n        3248222580,\n        3835390401,\n        4022224774,\n        264347078,\n        604807628,\n        770255983,\n        1249150122,\n        1555081692,\n        1996064986,\n        2554220882,\n        2821834349,\n        2952996808,\n        3210313671,\n        3336571891,\n        3584528711,\n        113926993,\n        338241895,\n        666307205,\n        773529912,\n        1294757372,\n        1396182291,\n        1695183700,\n        1986661051,\n        2177026350,\n        2456956037,\n        2730485921,\n        2820302411,\n        3259730800,\n        3345764771,\n        3516065817,\n        3600352804,\n        4094571909,\n        275423344,\n        430227734,\n        506948616,\n        659060556,\n        883997877,\n        958139571,\n        1322822218,\n        1537002063,\n        1747873779,\n        1955562222,\n        2024104815,\n        2227730452,\n        2361852424,\n        2428436474,\n        2756734187,\n        3204031479,\n        3329325298\n      ]);\n      IV = /* @__PURE__ */ new Uint32Array([\n        1779033703,\n        3144134277,\n        1013904242,\n        2773480762,\n        1359893119,\n        2600822924,\n        528734635,\n        1541459225\n      ]);\n      SHA256_W = /* @__PURE__ */ new Uint32Array(64);\n      SHA256 = class extends SHA2 {\n        constructor() {\n          super(64, 32, 8, false);\n          this.A = IV[0] | 0;\n          this.B = IV[1] | 0;\n          this.C = IV[2] | 0;\n          this.D = IV[3] | 0;\n          this.E = IV[4] | 0;\n          this.F = IV[5] | 0;\n          this.G = IV[6] | 0;\n          this.H = IV[7] | 0;\n        }\n        get() {\n          const { A, B, C, D, E, F, G, H } = this;\n          return [A, B, C, D, E, F, G, H];\n        }\n        // prettier-ignore\n        set(A, B, C, D, E, F, G, H) {\n          this.A = A | 0;\n          this.B = B | 0;\n          this.C = C | 0;\n          this.D = D | 0;\n          this.E = E | 0;\n          this.F = F | 0;\n          this.G = G | 0;\n          this.H = H | 0;\n        }\n        process(view, offset) {\n          for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n          for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ W15 >>> 3;\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ W2 >>> 10;\n            SHA256_W[i] = s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16] | 0;\n          }\n          let { A, B, C, D, E, F, G, H } = this;\n          for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T12 = H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i] | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = sigma0 + Maj(A, B, C) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = D + T12 | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = T12 + T2 | 0;\n          }\n          A = A + this.A | 0;\n          B = B + this.B | 0;\n          C = C + this.C | 0;\n          D = D + this.D | 0;\n          E = E + this.E | 0;\n          F = F + this.F | 0;\n          G = G + this.G | 0;\n          H = H + this.H | 0;\n          this.set(A, B, C, D, E, F, G, H);\n        }\n        roundClean() {\n          SHA256_W.fill(0);\n        }\n        destroy() {\n          this.set(0, 0, 0, 0, 0, 0, 0, 0);\n          this.buffer.fill(0);\n        }\n      };\n      sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js\n  function fromBig(n2, le = false) {\n    if (le)\n      return { h: Number(n2 & U32_MASK64), l: Number(n2 >> _32n & U32_MASK64) };\n    return { h: Number(n2 >> _32n & U32_MASK64) | 0, l: Number(n2 & U32_MASK64) | 0 };\n  }\n  function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n      const { h, l } = fromBig(lst[i], le);\n      [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n  }\n  function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: Ah + Bh + (l / 2 ** 32 | 0) | 0, l: l | 0 };\n  }\n  var U32_MASK64, _32n, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add3L, add3H, add4L, add4H, add5L, add5H, u64, u64_default;\n  var init_u64 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\n      _32n = /* @__PURE__ */ BigInt(32);\n      toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0);\n      shrSH = (h, _l, s) => h >>> s;\n      shrSL = (h, l, s) => h << 32 - s | l >>> s;\n      rotrSH = (h, l, s) => h >>> s | l << 32 - s;\n      rotrSL = (h, l, s) => h << 32 - s | l >>> s;\n      rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;\n      rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s;\n      rotr32H = (_h, l) => l;\n      rotr32L = (h, _l) => h;\n      rotlSH = (h, l, s) => h << s | l >>> 32 - s;\n      rotlSL = (h, l, s) => l << s | h >>> 32 - s;\n      rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;\n      rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s;\n      add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\n      add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;\n      add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\n      add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;\n      add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\n      add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;\n      u64 = {\n        fromBig,\n        split,\n        toBig,\n        shrSH,\n        shrSL,\n        rotrSH,\n        rotrSL,\n        rotrBH,\n        rotrBL,\n        rotr32H,\n        rotr32L,\n        rotlSH,\n        rotlSL,\n        rotlBH,\n        rotlBL,\n        add,\n        add3L,\n        add3H,\n        add4L,\n        add4H,\n        add5H,\n        add5L\n      };\n      u64_default = u64;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha512.js\n  var SHA512_Kh, SHA512_Kl, SHA512_W_H, SHA512_W_L, SHA512, sha512;\n  var init_sha512 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha512.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_sha2();\n      init_u64();\n      init_utils2();\n      [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64_default.split([\n        \"0x428a2f98d728ae22\",\n        \"0x7137449123ef65cd\",\n        \"0xb5c0fbcfec4d3b2f\",\n        \"0xe9b5dba58189dbbc\",\n        \"0x3956c25bf348b538\",\n        \"0x59f111f1b605d019\",\n        \"0x923f82a4af194f9b\",\n        \"0xab1c5ed5da6d8118\",\n        \"0xd807aa98a3030242\",\n        \"0x12835b0145706fbe\",\n        \"0x243185be4ee4b28c\",\n        \"0x550c7dc3d5ffb4e2\",\n        \"0x72be5d74f27b896f\",\n        \"0x80deb1fe3b1696b1\",\n        \"0x9bdc06a725c71235\",\n        \"0xc19bf174cf692694\",\n        \"0xe49b69c19ef14ad2\",\n        \"0xefbe4786384f25e3\",\n        \"0x0fc19dc68b8cd5b5\",\n        \"0x240ca1cc77ac9c65\",\n        \"0x2de92c6f592b0275\",\n        \"0x4a7484aa6ea6e483\",\n        \"0x5cb0a9dcbd41fbd4\",\n        \"0x76f988da831153b5\",\n        \"0x983e5152ee66dfab\",\n        \"0xa831c66d2db43210\",\n        \"0xb00327c898fb213f\",\n        \"0xbf597fc7beef0ee4\",\n        \"0xc6e00bf33da88fc2\",\n        \"0xd5a79147930aa725\",\n        \"0x06ca6351e003826f\",\n        \"0x142929670a0e6e70\",\n        \"0x27b70a8546d22ffc\",\n        \"0x2e1b21385c26c926\",\n        \"0x4d2c6dfc5ac42aed\",\n        \"0x53380d139d95b3df\",\n        \"0x650a73548baf63de\",\n        \"0x766a0abb3c77b2a8\",\n        \"0x81c2c92e47edaee6\",\n        \"0x92722c851482353b\",\n        \"0xa2bfe8a14cf10364\",\n        \"0xa81a664bbc423001\",\n        \"0xc24b8b70d0f89791\",\n        \"0xc76c51a30654be30\",\n        \"0xd192e819d6ef5218\",\n        \"0xd69906245565a910\",\n        \"0xf40e35855771202a\",\n        \"0x106aa07032bbd1b8\",\n        \"0x19a4c116b8d2d0c8\",\n        \"0x1e376c085141ab53\",\n        \"0x2748774cdf8eeb99\",\n        \"0x34b0bcb5e19b48a8\",\n        \"0x391c0cb3c5c95a63\",\n        \"0x4ed8aa4ae3418acb\",\n        \"0x5b9cca4f7763e373\",\n        \"0x682e6ff3d6b2b8a3\",\n        \"0x748f82ee5defb2fc\",\n        \"0x78a5636f43172f60\",\n        \"0x84c87814a1f0ab72\",\n        \"0x8cc702081a6439ec\",\n        \"0x90befffa23631e28\",\n        \"0xa4506cebde82bde9\",\n        \"0xbef9a3f7b2c67915\",\n        \"0xc67178f2e372532b\",\n        \"0xca273eceea26619c\",\n        \"0xd186b8c721c0c207\",\n        \"0xeada7dd6cde0eb1e\",\n        \"0xf57d4f7fee6ed178\",\n        \"0x06f067aa72176fba\",\n        \"0x0a637dc5a2c898a6\",\n        \"0x113f9804bef90dae\",\n        \"0x1b710b35131c471b\",\n        \"0x28db77f523047d84\",\n        \"0x32caab7b40c72493\",\n        \"0x3c9ebe0a15c9bebc\",\n        \"0x431d67c49c100d4c\",\n        \"0x4cc5d4becb3e42b6\",\n        \"0x597f299cfc657e2a\",\n        \"0x5fcb6fab3ad6faec\",\n        \"0x6c44198c4a475817\"\n      ].map((n2) => BigInt(n2))))();\n      SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\n      SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n      SHA512 = class extends SHA2 {\n        constructor() {\n          super(128, 64, 16, false);\n          this.Ah = 1779033703 | 0;\n          this.Al = 4089235720 | 0;\n          this.Bh = 3144134277 | 0;\n          this.Bl = 2227873595 | 0;\n          this.Ch = 1013904242 | 0;\n          this.Cl = 4271175723 | 0;\n          this.Dh = 2773480762 | 0;\n          this.Dl = 1595750129 | 0;\n          this.Eh = 1359893119 | 0;\n          this.El = 2917565137 | 0;\n          this.Fh = 2600822924 | 0;\n          this.Fl = 725511199 | 0;\n          this.Gh = 528734635 | 0;\n          this.Gl = 4215389547 | 0;\n          this.Hh = 1541459225 | 0;\n          this.Hl = 327033209 | 0;\n        }\n        // prettier-ignore\n        get() {\n          const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n          return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n        }\n        // prettier-ignore\n        set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n          this.Ah = Ah | 0;\n          this.Al = Al | 0;\n          this.Bh = Bh | 0;\n          this.Bl = Bl | 0;\n          this.Ch = Ch | 0;\n          this.Cl = Cl | 0;\n          this.Dh = Dh | 0;\n          this.Dl = Dl | 0;\n          this.Eh = Eh | 0;\n          this.El = El | 0;\n          this.Fh = Fh | 0;\n          this.Fl = Fl | 0;\n          this.Gh = Gh | 0;\n          this.Gl = Gl | 0;\n          this.Hh = Hh | 0;\n          this.Hl = Hl | 0;\n        }\n        process(view, offset) {\n          for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32(offset += 4);\n          }\n          for (let i = 16; i < 80; i++) {\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64_default.rotrSH(W15h, W15l, 1) ^ u64_default.rotrSH(W15h, W15l, 8) ^ u64_default.shrSH(W15h, W15l, 7);\n            const s0l = u64_default.rotrSL(W15h, W15l, 1) ^ u64_default.rotrSL(W15h, W15l, 8) ^ u64_default.shrSL(W15h, W15l, 7);\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64_default.rotrSH(W2h, W2l, 19) ^ u64_default.rotrBH(W2h, W2l, 61) ^ u64_default.shrSH(W2h, W2l, 6);\n            const s1l = u64_default.rotrSL(W2h, W2l, 19) ^ u64_default.rotrBL(W2h, W2l, 61) ^ u64_default.shrSL(W2h, W2l, 6);\n            const SUMl = u64_default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64_default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n          }\n          let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n          for (let i = 0; i < 80; i++) {\n            const sigma1h = u64_default.rotrSH(Eh, El, 14) ^ u64_default.rotrSH(Eh, El, 18) ^ u64_default.rotrBH(Eh, El, 41);\n            const sigma1l = u64_default.rotrSL(Eh, El, 14) ^ u64_default.rotrSL(Eh, El, 18) ^ u64_default.rotrBL(Eh, El, 41);\n            const CHIh = Eh & Fh ^ ~Eh & Gh;\n            const CHIl = El & Fl ^ ~El & Gl;\n            const T1ll = u64_default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64_default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            const sigma0h = u64_default.rotrSH(Ah, Al, 28) ^ u64_default.rotrBH(Ah, Al, 34) ^ u64_default.rotrBH(Ah, Al, 39);\n            const sigma0l = u64_default.rotrSL(Ah, Al, 28) ^ u64_default.rotrBL(Ah, Al, 34) ^ u64_default.rotrBL(Ah, Al, 39);\n            const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;\n            const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64_default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64_default.add3L(T1l, sigma0l, MAJl);\n            Ah = u64_default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n          }\n          ({ h: Ah, l: Al } = u64_default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n          ({ h: Bh, l: Bl } = u64_default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n          ({ h: Ch, l: Cl } = u64_default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n          ({ h: Dh, l: Dl } = u64_default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n          ({ h: Eh, l: El } = u64_default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n          ({ h: Fh, l: Fl } = u64_default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n          ({ h: Gh, l: Gl } = u64_default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n          ({ h: Hh, l: Hl } = u64_default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n          this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n        }\n        roundClean() {\n          SHA512_W_H.fill(0);\n          SHA512_W_L.fill(0);\n        }\n        destroy() {\n          this.buffer.fill(0);\n          this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n      };\n      sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/crypto-browser.js\n  function getGlobal() {\n    if (typeof self !== \"undefined\") {\n      return self;\n    }\n    if (typeof window !== \"undefined\") {\n      return window;\n    }\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n    throw new Error(\"unable to locate global object\");\n  }\n  function createHash(algo) {\n    switch (algo) {\n      case \"sha256\":\n        return sha256.create();\n      case \"sha512\":\n        return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n  }\n  var anyGlobal, crypto2;\n  var init_crypto_browser = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/crypto-browser.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_sha256();\n      init_sha512();\n      init_utils();\n      anyGlobal = getGlobal();\n      crypto2 = anyGlobal.crypto || anyGlobal.msCrypto;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha3.js\n  function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    for (let round = 24 - rounds; round < 24; round++) {\n      for (let x = 0; x < 10; x++)\n        B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n      for (let x = 0; x < 10; x += 2) {\n        const idx1 = (x + 8) % 10;\n        const idx0 = (x + 2) % 10;\n        const B0 = B[idx0];\n        const B1 = B[idx0 + 1];\n        const Th = rotlH(B0, B1, 1) ^ B[idx1];\n        const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n        for (let y = 0; y < 50; y += 10) {\n          s[x + y] ^= Th;\n          s[x + y + 1] ^= Tl;\n        }\n      }\n      let curH = s[2];\n      let curL = s[3];\n      for (let t = 0; t < 24; t++) {\n        const shift = SHA3_ROTL[t];\n        const Th = rotlH(curH, curL, shift);\n        const Tl = rotlL(curH, curL, shift);\n        const PI = SHA3_PI[t];\n        curH = s[PI];\n        curL = s[PI + 1];\n        s[PI] = Th;\n        s[PI + 1] = Tl;\n      }\n      for (let y = 0; y < 50; y += 10) {\n        for (let x = 0; x < 10; x++)\n          B[x] = s[y + x];\n        for (let x = 0; x < 10; x++)\n          s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n      }\n      s[0] ^= SHA3_IOTA_H[round];\n      s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n  }\n  var SHA3_PI, SHA3_ROTL, _SHA3_IOTA, _0n, _1n, _2n, _7n, _256n, _0x71n, SHA3_IOTA_H, SHA3_IOTA_L, rotlH, rotlL, Keccak, gen, sha3_224, sha3_256, sha3_384, sha3_512, keccak_224, keccak_256, keccak_384, keccak_512, genShake, shake128, shake256;\n  var init_sha3 = __esm({\n    \"../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha3.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_assert();\n      init_u64();\n      init_utils2();\n      [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\n      _0n = /* @__PURE__ */ BigInt(0);\n      _1n = /* @__PURE__ */ BigInt(1);\n      _2n = /* @__PURE__ */ BigInt(2);\n      _7n = /* @__PURE__ */ BigInt(7);\n      _256n = /* @__PURE__ */ BigInt(256);\n      _0x71n = /* @__PURE__ */ BigInt(113);\n      for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n        [x, y] = [y, (2 * x + 3 * y) % 5];\n        SHA3_PI.push(2 * (5 * y + x));\n        SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);\n        let t = _0n;\n        for (let j = 0; j < 7; j++) {\n          R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;\n          if (R & _2n)\n            t ^= _1n << (_1n << /* @__PURE__ */ BigInt(j)) - _1n;\n        }\n        _SHA3_IOTA.push(t);\n      }\n      [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n      rotlH = (h, l, s) => s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s);\n      rotlL = (h, l, s) => s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s);\n      Keccak = class _Keccak extends Hash {\n        // NOTE: we accept arguments in bytes instead of bits here.\n        constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n          super();\n          this.blockLen = blockLen;\n          this.suffix = suffix;\n          this.outputLen = outputLen;\n          this.enableXOF = enableXOF;\n          this.rounds = rounds;\n          this.pos = 0;\n          this.posOut = 0;\n          this.finished = false;\n          this.destroyed = false;\n          number(outputLen);\n          if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error(\"Sha3 supports only keccak-f1600 function\");\n          this.state = new Uint8Array(200);\n          this.state32 = u32(this.state);\n        }\n        keccak() {\n          keccakP(this.state32, this.rounds);\n          this.posOut = 0;\n          this.pos = 0;\n        }\n        update(data) {\n          exists(this);\n          const { blockLen, state } = this;\n          data = toBytes(data);\n          const len = data.length;\n          for (let pos = 0; pos < len; ) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n              state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n              this.keccak();\n          }\n          return this;\n        }\n        finish() {\n          if (this.finished)\n            return;\n          this.finished = true;\n          const { state, suffix, pos, blockLen } = this;\n          state[pos] ^= suffix;\n          if ((suffix & 128) !== 0 && pos === blockLen - 1)\n            this.keccak();\n          state[blockLen - 1] ^= 128;\n          this.keccak();\n        }\n        writeInto(out) {\n          exists(this, false);\n          bytes(out);\n          this.finish();\n          const bufferOut = this.state;\n          const { blockLen } = this;\n          for (let pos = 0, len = out.length; pos < len; ) {\n            if (this.posOut >= blockLen)\n              this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n          }\n          return out;\n        }\n        xofInto(out) {\n          if (!this.enableXOF)\n            throw new Error(\"XOF is not possible for this instance\");\n          return this.writeInto(out);\n        }\n        xof(bytes2) {\n          number(bytes2);\n          return this.xofInto(new Uint8Array(bytes2));\n        }\n        digestInto(out) {\n          output(out, this);\n          if (this.finished)\n            throw new Error(\"digest() was already called\");\n          this.writeInto(out);\n          this.destroy();\n          return out;\n        }\n        digest() {\n          return this.digestInto(new Uint8Array(this.outputLen));\n        }\n        destroy() {\n          this.destroyed = true;\n          this.state.fill(0);\n        }\n        _cloneInto(to) {\n          const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n          to || (to = new _Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n          to.state32.set(this.state32);\n          to.pos = this.pos;\n          to.posOut = this.posOut;\n          to.finished = this.finished;\n          to.rounds = rounds;\n          to.suffix = suffix;\n          to.outputLen = outputLen;\n          to.enableXOF = enableXOF;\n          to.destroyed = this.destroyed;\n          return to;\n        }\n      };\n      gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n      sha3_224 = /* @__PURE__ */ gen(6, 144, 224 / 8);\n      sha3_256 = /* @__PURE__ */ gen(6, 136, 256 / 8);\n      sha3_384 = /* @__PURE__ */ gen(6, 104, 384 / 8);\n      sha3_512 = /* @__PURE__ */ gen(6, 72, 512 / 8);\n      keccak_224 = /* @__PURE__ */ gen(1, 144, 224 / 8);\n      keccak_256 = /* @__PURE__ */ gen(1, 136, 256 / 8);\n      keccak_384 = /* @__PURE__ */ gen(1, 104, 384 / 8);\n      keccak_512 = /* @__PURE__ */ gen(1, 72, 512 / 8);\n      genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === void 0 ? outputLen : opts.dkLen, true));\n      shake128 = /* @__PURE__ */ genShake(31, 168, 128 / 8);\n      shake256 = /* @__PURE__ */ genShake(31, 136, 256 / 8);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/keccak.js\n  function keccak256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n  }\n  var locked2, _keccak256, __keccak256;\n  var init_keccak = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/keccak.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_sha3();\n      init_utils();\n      locked2 = false;\n      _keccak256 = function(data) {\n        return keccak_256(data);\n      };\n      __keccak256 = _keccak256;\n      keccak256._ = _keccak256;\n      keccak256.lock = function() {\n        locked2 = true;\n      };\n      keccak256.register = function(func) {\n        if (locked2) {\n          throw new TypeError(\"keccak256 is locked\");\n        }\n        __keccak256 = func;\n      };\n      Object.freeze(keccak256);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/sha2.js\n  function sha2562(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n  }\n  function sha5122(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n  }\n  var _sha256, _sha512, __sha256, __sha512, locked256, locked512;\n  var init_sha22 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/sha2.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto_browser();\n      init_utils();\n      _sha256 = function(data) {\n        return createHash(\"sha256\").update(data).digest();\n      };\n      _sha512 = function(data) {\n        return createHash(\"sha512\").update(data).digest();\n      };\n      __sha256 = _sha256;\n      __sha512 = _sha512;\n      locked256 = false;\n      locked512 = false;\n      sha2562._ = _sha256;\n      sha2562.lock = function() {\n        locked256 = true;\n      };\n      sha2562.register = function(func) {\n        if (locked256) {\n          throw new Error(\"sha256 is locked\");\n        }\n        __sha256 = func;\n      };\n      Object.freeze(sha2562);\n      sha5122._ = _sha512;\n      sha5122.lock = function() {\n        locked512 = true;\n      };\n      sha5122.register = function(func) {\n        if (locked512) {\n          throw new Error(\"sha512 is locked\");\n        }\n        __sha512 = func;\n      };\n      Object.freeze(sha2562);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/utils.js\n  var utils_exports = {};\n  __export(utils_exports, {\n    bitGet: () => bitGet,\n    bitLen: () => bitLen,\n    bitMask: () => bitMask,\n    bitSet: () => bitSet,\n    bytesToHex: () => bytesToHex,\n    bytesToNumberBE: () => bytesToNumberBE,\n    bytesToNumberLE: () => bytesToNumberLE,\n    concatBytes: () => concatBytes2,\n    createHmacDrbg: () => createHmacDrbg,\n    ensureBytes: () => ensureBytes,\n    equalBytes: () => equalBytes,\n    hexToBytes: () => hexToBytes,\n    hexToNumber: () => hexToNumber,\n    numberToBytesBE: () => numberToBytesBE,\n    numberToBytesLE: () => numberToBytesLE,\n    numberToHexUnpadded: () => numberToHexUnpadded,\n    numberToVarBytesBE: () => numberToVarBytesBE,\n    utf8ToBytes: () => utf8ToBytes2,\n    validateObject: () => validateObject\n  });\n  function bytesToHex(bytes2) {\n    if (!u8a2(bytes2))\n      throw new Error(\"Uint8Array expected\");\n    let hex = \"\";\n    for (let i = 0; i < bytes2.length; i++) {\n      hex += hexes[bytes2[i]];\n    }\n    return hex;\n  }\n  function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n  }\n  function hexToNumber(hex) {\n    if (typeof hex !== \"string\")\n      throw new Error(\"hex string expected, got \" + typeof hex);\n    return BigInt(hex === \"\" ? \"0\" : `0x${hex}`);\n  }\n  function hexToBytes(hex) {\n    if (typeof hex !== \"string\")\n      throw new Error(\"hex string expected, got \" + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n      throw new Error(\"padded hex string expected, got unpadded hex of length \" + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n      const j = i * 2;\n      const hexByte = hex.slice(j, j + 2);\n      const byte = Number.parseInt(hexByte, 16);\n      if (Number.isNaN(byte) || byte < 0)\n        throw new Error(\"Invalid byte sequence\");\n      array[i] = byte;\n    }\n    return array;\n  }\n  function bytesToNumberBE(bytes2) {\n    return hexToNumber(bytesToHex(bytes2));\n  }\n  function bytesToNumberLE(bytes2) {\n    if (!u8a2(bytes2))\n      throw new Error(\"Uint8Array expected\");\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes2).reverse()));\n  }\n  function numberToBytesBE(n2, len) {\n    return hexToBytes(n2.toString(16).padStart(len * 2, \"0\"));\n  }\n  function numberToBytesLE(n2, len) {\n    return numberToBytesBE(n2, len).reverse();\n  }\n  function numberToVarBytesBE(n2) {\n    return hexToBytes(numberToHexUnpadded(n2));\n  }\n  function ensureBytes(title2, hex, expectedLength) {\n    let res;\n    if (typeof hex === \"string\") {\n      try {\n        res = hexToBytes(hex);\n      } catch (e) {\n        throw new Error(`${title2} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n      }\n    } else if (u8a2(hex)) {\n      res = Uint8Array.from(hex);\n    } else {\n      throw new Error(`${title2} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === \"number\" && len !== expectedLength)\n      throw new Error(`${title2} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n  }\n  function concatBytes2(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0;\n    arrays.forEach((a) => {\n      if (!u8a2(a))\n        throw new Error(\"Uint8Array expected\");\n      r.set(a, pad);\n      pad += a.length;\n    });\n    return r;\n  }\n  function equalBytes(b1, b2) {\n    if (b1.length !== b2.length)\n      return false;\n    for (let i = 0; i < b1.length; i++)\n      if (b1[i] !== b2[i])\n        return false;\n    return true;\n  }\n  function utf8ToBytes2(str) {\n    if (typeof str !== \"string\")\n      throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str));\n  }\n  function bitLen(n2) {\n    let len;\n    for (len = 0; n2 > _0n2; n2 >>= _1n2, len += 1)\n      ;\n    return len;\n  }\n  function bitGet(n2, pos) {\n    return n2 >> BigInt(pos) & _1n2;\n  }\n  function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== \"number\" || hashLen < 2)\n      throw new Error(\"hashLen must be a number\");\n    if (typeof qByteLen !== \"number\" || qByteLen < 2)\n      throw new Error(\"qByteLen must be a number\");\n    if (typeof hmacFn !== \"function\")\n      throw new Error(\"hmacFn must be a function\");\n    let v = u8n(hashLen);\n    let k = u8n(hashLen);\n    let i = 0;\n    const reset = () => {\n      v.fill(1);\n      k.fill(0);\n      i = 0;\n    };\n    const h = (...b2) => hmacFn(k, v, ...b2);\n    const reseed = (seed = u8n()) => {\n      k = h(u8fr([0]), seed);\n      v = h();\n      if (seed.length === 0)\n        return;\n      k = h(u8fr([1]), seed);\n      v = h();\n    };\n    const gen2 = () => {\n      if (i++ >= 1e3)\n        throw new Error(\"drbg: tried 1000 values\");\n      let len = 0;\n      const out = [];\n      while (len < qByteLen) {\n        v = h();\n        const sl = v.slice();\n        out.push(sl);\n        len += v.length;\n      }\n      return concatBytes2(...out);\n    };\n    const genUntil = (seed, pred) => {\n      reset();\n      reseed(seed);\n      let res = void 0;\n      while (!(res = pred(gen2())))\n        reseed();\n      reset();\n      return res;\n    };\n    return genUntil;\n  }\n  function validateObject(object2, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n      const checkVal = validatorFns[type];\n      if (typeof checkVal !== \"function\")\n        throw new Error(`Invalid validator \"${type}\", expected function`);\n      const val = object2[fieldName];\n      if (isOptional && val === void 0)\n        return;\n      if (!checkVal(val, object2)) {\n        throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n      }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n      checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n      checkField(fieldName, type, true);\n    return object2;\n  }\n  var _0n2, _1n2, _2n2, u8a2, hexes, bitSet, bitMask, u8n, u8fr, validatorFns;\n  var init_utils3 = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/utils.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      _0n2 = BigInt(0);\n      _1n2 = BigInt(1);\n      _2n2 = BigInt(2);\n      u8a2 = (a) => a instanceof Uint8Array;\n      hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, \"0\"));\n      bitSet = (n2, pos, value) => {\n        return n2 | (value ? _1n2 : _0n2) << BigInt(pos);\n      };\n      bitMask = (n2) => (_2n2 << BigInt(n2 - 1)) - _1n2;\n      u8n = (data) => new Uint8Array(data);\n      u8fr = (arr) => Uint8Array.from(arr);\n      validatorFns = {\n        bigint: (val) => typeof val === \"bigint\",\n        function: (val) => typeof val === \"function\",\n        boolean: (val) => typeof val === \"boolean\",\n        string: (val) => typeof val === \"string\",\n        stringOrUint8Array: (val) => typeof val === \"string\" || val instanceof Uint8Array,\n        isSafeInteger: (val) => Number.isSafeInteger(val),\n        array: (val) => Array.isArray(val),\n        field: (val, object2) => object2.Fp.isValid(val),\n        hash: (val) => typeof val === \"function\" && Number.isSafeInteger(val.outputLen)\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/modular.js\n  function mod(a, b2) {\n    const result = a % b2;\n    return result >= _0n3 ? result : b2 + result;\n  }\n  function pow(num, power, modulo) {\n    if (modulo <= _0n3 || power < _0n3)\n      throw new Error(\"Expected power/modulo > 0\");\n    if (modulo === _1n3)\n      return _0n3;\n    let res = _1n3;\n    while (power > _0n3) {\n      if (power & _1n3)\n        res = res * num % modulo;\n      num = num * num % modulo;\n      power >>= _1n3;\n    }\n    return res;\n  }\n  function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n3) {\n      res *= res;\n      res %= modulo;\n    }\n    return res;\n  }\n  function invert(number2, modulo) {\n    if (number2 === _0n3 || modulo <= _0n3) {\n      throw new Error(`invert: expected positive integers, got n=${number2} mod=${modulo}`);\n    }\n    let a = mod(number2, modulo);\n    let b2 = modulo;\n    let x = _0n3, y = _1n3, u = _1n3, v = _0n3;\n    while (a !== _0n3) {\n      const q = b2 / a;\n      const r = b2 % a;\n      const m = x - u * q;\n      const n2 = y - v * q;\n      b2 = a, a = r, x = u, y = v, u = m, v = n2;\n    }\n    const gcd = b2;\n    if (gcd !== _1n3)\n      throw new Error(\"invert: does not exist\");\n    return mod(x, modulo);\n  }\n  function tonelliShanks(P) {\n    const legendreC = (P - _1n3) / _2n3;\n    let Q, S, Z;\n    for (Q = P - _1n3, S = 0; Q % _2n3 === _0n3; Q /= _2n3, S++)\n      ;\n    for (Z = _2n3; Z < P && pow(Z, legendreC, P) !== P - _1n3; Z++)\n      ;\n    if (S === 1) {\n      const p1div4 = (P + _1n3) / _4n;\n      return function tonelliFast(Fp2, n2) {\n        const root = Fp2.pow(n2, p1div4);\n        if (!Fp2.eql(Fp2.sqr(root), n2))\n          throw new Error(\"Cannot find square root\");\n        return root;\n      };\n    }\n    const Q1div2 = (Q + _1n3) / _2n3;\n    return function tonelliSlow(Fp2, n2) {\n      if (Fp2.pow(n2, legendreC) === Fp2.neg(Fp2.ONE))\n        throw new Error(\"Cannot find square root\");\n      let r = S;\n      let g = Fp2.pow(Fp2.mul(Fp2.ONE, Z), Q);\n      let x = Fp2.pow(n2, Q1div2);\n      let b2 = Fp2.pow(n2, Q);\n      while (!Fp2.eql(b2, Fp2.ONE)) {\n        if (Fp2.eql(b2, Fp2.ZERO))\n          return Fp2.ZERO;\n        let m = 1;\n        for (let t2 = Fp2.sqr(b2); m < r; m++) {\n          if (Fp2.eql(t2, Fp2.ONE))\n            break;\n          t2 = Fp2.sqr(t2);\n        }\n        const ge = Fp2.pow(g, _1n3 << BigInt(r - m - 1));\n        g = Fp2.sqr(ge);\n        x = Fp2.mul(x, ge);\n        b2 = Fp2.mul(b2, g);\n        r = m;\n      }\n      return x;\n    };\n  }\n  function FpSqrt(P) {\n    if (P % _4n === _3n) {\n      const p1div4 = (P + _1n3) / _4n;\n      return function sqrt3mod4(Fp2, n2) {\n        const root = Fp2.pow(n2, p1div4);\n        if (!Fp2.eql(Fp2.sqr(root), n2))\n          throw new Error(\"Cannot find square root\");\n        return root;\n      };\n    }\n    if (P % _8n === _5n) {\n      const c1 = (P - _5n) / _8n;\n      return function sqrt5mod8(Fp2, n2) {\n        const n22 = Fp2.mul(n2, _2n3);\n        const v = Fp2.pow(n22, c1);\n        const nv = Fp2.mul(n2, v);\n        const i = Fp2.mul(Fp2.mul(nv, _2n3), v);\n        const root = Fp2.mul(nv, Fp2.sub(i, Fp2.ONE));\n        if (!Fp2.eql(Fp2.sqr(root), n2))\n          throw new Error(\"Cannot find square root\");\n        return root;\n      };\n    }\n    if (P % _16n === _9n) {\n    }\n    return tonelliShanks(P);\n  }\n  function validateField(field) {\n    const initial = {\n      ORDER: \"bigint\",\n      MASK: \"bigint\",\n      BYTES: \"isSafeInteger\",\n      BITS: \"isSafeInteger\"\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n      map[val] = \"function\";\n      return map;\n    }, initial);\n    return validateObject(field, opts);\n  }\n  function FpPow(f, num, power) {\n    if (power < _0n3)\n      throw new Error(\"Expected power > 0\");\n    if (power === _0n3)\n      return f.ONE;\n    if (power === _1n3)\n      return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n3) {\n      if (power & _1n3)\n        p = f.mul(p, d);\n      d = f.sqr(d);\n      power >>= _1n3;\n    }\n    return p;\n  }\n  function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n      if (f.is0(num))\n        return acc;\n      tmp[i] = acc;\n      return f.mul(acc, num);\n    }, f.ONE);\n    const inverted = f.inv(lastMultiplied);\n    nums.reduceRight((acc, num, i) => {\n      if (f.is0(num))\n        return acc;\n      tmp[i] = f.mul(acc, tmp[i]);\n      return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n  }\n  function nLength(n2, nBitLength) {\n    const _nBitLength = nBitLength !== void 0 ? nBitLength : n2.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n  }\n  function Field(ORDER, bitLen2, isLE2 = false, redef = {}) {\n    if (ORDER <= _0n3)\n      throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen2);\n    if (BYTES > 2048)\n      throw new Error(\"Field lengths over 2048 bytes are not supported\");\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n      ORDER,\n      BITS,\n      BYTES,\n      MASK: bitMask(BITS),\n      ZERO: _0n3,\n      ONE: _1n3,\n      create: (num) => mod(num, ORDER),\n      isValid: (num) => {\n        if (typeof num !== \"bigint\")\n          throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n        return _0n3 <= num && num < ORDER;\n      },\n      is0: (num) => num === _0n3,\n      isOdd: (num) => (num & _1n3) === _1n3,\n      neg: (num) => mod(-num, ORDER),\n      eql: (lhs, rhs) => lhs === rhs,\n      sqr: (num) => mod(num * num, ORDER),\n      add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n      sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n      mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n      pow: (num, power) => FpPow(f, num, power),\n      div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n      // Same as above, but doesn't normalize\n      sqrN: (num) => num * num,\n      addN: (lhs, rhs) => lhs + rhs,\n      subN: (lhs, rhs) => lhs - rhs,\n      mulN: (lhs, rhs) => lhs * rhs,\n      inv: (num) => invert(num, ORDER),\n      sqrt: redef.sqrt || ((n2) => sqrtP(f, n2)),\n      invertBatch: (lst) => FpInvertBatch(f, lst),\n      // TODO: do we really need constant cmov?\n      // We don't have const-time bigints anyway, so probably will be not very useful\n      cmov: (a, b2, c) => c ? b2 : a,\n      toBytes: (num) => isLE2 ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES),\n      fromBytes: (bytes2) => {\n        if (bytes2.length !== BYTES)\n          throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes2.length}`);\n        return isLE2 ? bytesToNumberLE(bytes2) : bytesToNumberBE(bytes2);\n      }\n    });\n    return Object.freeze(f);\n  }\n  function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== \"bigint\")\n      throw new Error(\"field order must be bigint\");\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n  }\n  function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n  }\n  function mapHashToField(key, fieldOrder, isLE2 = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    if (len < 16 || len < minLen || len > 1024)\n      throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE2 ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    const reduced = mod(num, fieldOrder - _1n3) + _1n3;\n    return isLE2 ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n  }\n  var _0n3, _1n3, _2n3, _3n, _4n, _5n, _8n, _9n, _16n, FIELD_FIELDS;\n  var init_modular = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/modular.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils3();\n      _0n3 = BigInt(0);\n      _1n3 = BigInt(1);\n      _2n3 = BigInt(2);\n      _3n = BigInt(3);\n      _4n = BigInt(4);\n      _5n = BigInt(5);\n      _8n = BigInt(8);\n      _9n = BigInt(9);\n      _16n = BigInt(16);\n      FIELD_FIELDS = [\n        \"create\",\n        \"isValid\",\n        \"is0\",\n        \"neg\",\n        \"inv\",\n        \"sqrt\",\n        \"sqr\",\n        \"eql\",\n        \"add\",\n        \"sub\",\n        \"mul\",\n        \"pow\",\n        \"div\",\n        \"addN\",\n        \"subN\",\n        \"mulN\",\n        \"sqrN\"\n      ];\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/curve.js\n  function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n      const neg = item.negate();\n      return condition ? neg : item;\n    };\n    const opts = (W) => {\n      const windows = Math.ceil(bits / W) + 1;\n      const windowSize = 2 ** (W - 1);\n      return { windows, windowSize };\n    };\n    return {\n      constTimeNegate,\n      // non-const time multiplication ladder\n      unsafeLadder(elm, n2) {\n        let p = c.ZERO;\n        let d = elm;\n        while (n2 > _0n4) {\n          if (n2 & _1n4)\n            p = p.add(d);\n          d = d.double();\n          n2 >>= _1n4;\n        }\n        return p;\n      },\n      /**\n       * Creates a wNAF precomputation window. Used for caching.\n       * Default window size is set by `utils.precompute()` and is equal to 8.\n       * Number of precomputed points depends on the curve size:\n       * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n       * - 𝑊 is the window size\n       * - 𝑛 is the bitlength of the curve order.\n       * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n       * @returns precomputed point tables flattened to a single array\n       */\n      precomputeWindow(elm, W) {\n        const { windows, windowSize } = opts(W);\n        const points = [];\n        let p = elm;\n        let base = p;\n        for (let window2 = 0; window2 < windows; window2++) {\n          base = p;\n          points.push(base);\n          for (let i = 1; i < windowSize; i++) {\n            base = base.add(p);\n            points.push(base);\n          }\n          p = base.double();\n        }\n        return points;\n      },\n      /**\n       * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n       * @param W window size\n       * @param precomputes precomputed tables\n       * @param n scalar (we don't check here, but should be less than curve order)\n       * @returns real and fake (for const-time) points\n       */\n      wNAF(W, precomputes, n2) {\n        const { windows, windowSize } = opts(W);\n        let p = c.ZERO;\n        let f = c.BASE;\n        const mask2 = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window2 = 0; window2 < windows; window2++) {\n          const offset = window2 * windowSize;\n          let wbits = Number(n2 & mask2);\n          n2 >>= shiftBy;\n          if (wbits > windowSize) {\n            wbits -= maxNumber;\n            n2 += _1n4;\n          }\n          const offset1 = offset;\n          const offset2 = offset + Math.abs(wbits) - 1;\n          const cond1 = window2 % 2 !== 0;\n          const cond2 = wbits < 0;\n          if (wbits === 0) {\n            f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n          } else {\n            p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n          }\n        }\n        return { p, f };\n      },\n      wNAFCached(P, precomputesMap, n2, transform) {\n        const W = P._WINDOW_SIZE || 1;\n        let comp = precomputesMap.get(P);\n        if (!comp) {\n          comp = this.precomputeWindow(P, W);\n          if (W !== 1) {\n            precomputesMap.set(P, transform(comp));\n          }\n        }\n        return this.wNAF(W, comp, n2);\n      }\n    };\n  }\n  function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n      n: \"bigint\",\n      h: \"bigint\",\n      Gx: \"field\",\n      Gy: \"field\"\n    }, {\n      nBitLength: \"isSafeInteger\",\n      nByteLength: \"isSafeInteger\"\n    });\n    return Object.freeze({\n      ...nLength(curve.n, curve.nBitLength),\n      ...curve,\n      ...{ p: curve.Fp.ORDER }\n    });\n  }\n  var _0n4, _1n4;\n  var init_curve = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/curve.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_modular();\n      init_utils3();\n      _0n4 = BigInt(0);\n      _1n4 = BigInt(1);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/weierstrass.js\n  function validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    validateObject(opts, {\n      a: \"field\",\n      b: \"field\"\n    }, {\n      allowedPrivateKeyLengths: \"array\",\n      wrapPrivateKey: \"boolean\",\n      isTorsionFree: \"function\",\n      clearCofactor: \"function\",\n      allowInfinityPoint: \"boolean\",\n      fromBytes: \"function\",\n      toBytes: \"function\"\n    });\n    const { endo, Fp: Fp2, a } = opts;\n    if (endo) {\n      if (!Fp2.eql(a, Fp2.ZERO)) {\n        throw new Error(\"Endomorphism can only be defined for Koblitz curves that have a=0\");\n      }\n      if (typeof endo !== \"object\" || typeof endo.beta !== \"bigint\" || typeof endo.splitScalar !== \"function\") {\n        throw new Error(\"Expected endomorphism with beta: bigint and splitScalar: function\");\n      }\n    }\n    return Object.freeze({ ...opts });\n  }\n  function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp: Fp2 } = CURVE;\n    const toBytes2 = CURVE.toBytes || ((_c, point, _isCompressed) => {\n      const a = point.toAffine();\n      return concatBytes2(Uint8Array.from([4]), Fp2.toBytes(a.x), Fp2.toBytes(a.y));\n    });\n    const fromBytes = CURVE.fromBytes || ((bytes2) => {\n      const tail = bytes2.subarray(1);\n      const x = Fp2.fromBytes(tail.subarray(0, Fp2.BYTES));\n      const y = Fp2.fromBytes(tail.subarray(Fp2.BYTES, 2 * Fp2.BYTES));\n      return { x, y };\n    });\n    function weierstrassEquation(x) {\n      const { a, b: b2 } = CURVE;\n      const x2 = Fp2.sqr(x);\n      const x3 = Fp2.mul(x2, x);\n      return Fp2.add(Fp2.add(x3, Fp2.mul(x, a)), b2);\n    }\n    if (!Fp2.eql(Fp2.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n      throw new Error(\"bad generator point: equation left != right\");\n    function isWithinCurveOrder(num) {\n      return typeof num === \"bigint\" && _0n5 < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n      if (!isWithinCurveOrder(num))\n        throw new Error(\"Expected valid bigint: 0 < bigint < curve.n\");\n    }\n    function normPrivateKeyToScalar(key) {\n      const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: n2 } = CURVE;\n      if (lengths && typeof key !== \"bigint\") {\n        if (key instanceof Uint8Array)\n          key = bytesToHex(key);\n        if (typeof key !== \"string\" || !lengths.includes(key.length))\n          throw new Error(\"Invalid key\");\n        key = key.padStart(nByteLength * 2, \"0\");\n      }\n      let num;\n      try {\n        num = typeof key === \"bigint\" ? key : bytesToNumberBE(ensureBytes(\"private key\", key, nByteLength));\n      } catch (error) {\n        throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n      }\n      if (wrapPrivateKey)\n        num = mod(num, n2);\n      assertGE(num);\n      return num;\n    }\n    const pointPrecomputes = /* @__PURE__ */ new Map();\n    function assertPrjPoint(other) {\n      if (!(other instanceof Point2))\n        throw new Error(\"ProjectivePoint expected\");\n    }\n    class Point2 {\n      constructor(px, py, pz) {\n        this.px = px;\n        this.py = py;\n        this.pz = pz;\n        if (px == null || !Fp2.isValid(px))\n          throw new Error(\"x required\");\n        if (py == null || !Fp2.isValid(py))\n          throw new Error(\"y required\");\n        if (pz == null || !Fp2.isValid(pz))\n          throw new Error(\"z required\");\n      }\n      // Does not validate if the point is on-curve.\n      // Use fromHex instead, or call assertValidity() later.\n      static fromAffine(p) {\n        const { x, y } = p || {};\n        if (!p || !Fp2.isValid(x) || !Fp2.isValid(y))\n          throw new Error(\"invalid affine point\");\n        if (p instanceof Point2)\n          throw new Error(\"projective point not allowed\");\n        const is0 = (i) => Fp2.eql(i, Fp2.ZERO);\n        if (is0(x) && is0(y))\n          return Point2.ZERO;\n        return new Point2(x, y, Fp2.ONE);\n      }\n      get x() {\n        return this.toAffine().x;\n      }\n      get y() {\n        return this.toAffine().y;\n      }\n      /**\n       * Takes a bunch of Projective Points but executes only one\n       * inversion on all of them. Inversion is very slow operation,\n       * so this improves performance massively.\n       * Optimization: converts a list of projective points to a list of identical points with Z=1.\n       */\n      static normalizeZ(points) {\n        const toInv = Fp2.invertBatch(points.map((p) => p.pz));\n        return points.map((p, i) => p.toAffine(toInv[i])).map(Point2.fromAffine);\n      }\n      /**\n       * Converts hash string or Uint8Array to Point.\n       * @param hex short/long ECDSA hex\n       */\n      static fromHex(hex) {\n        const P = Point2.fromAffine(fromBytes(ensureBytes(\"pointHex\", hex)));\n        P.assertValidity();\n        return P;\n      }\n      // Multiplies generator point by privateKey.\n      static fromPrivateKey(privateKey) {\n        return Point2.BASE.multiply(normPrivateKeyToScalar(privateKey));\n      }\n      // \"Private method\", don't use it directly\n      _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n      }\n      // A point on curve is valid if it conforms to equation.\n      assertValidity() {\n        if (this.is0()) {\n          if (CURVE.allowInfinityPoint && !Fp2.is0(this.py))\n            return;\n          throw new Error(\"bad point: ZERO\");\n        }\n        const { x, y } = this.toAffine();\n        if (!Fp2.isValid(x) || !Fp2.isValid(y))\n          throw new Error(\"bad point: x or y not FE\");\n        const left = Fp2.sqr(y);\n        const right = weierstrassEquation(x);\n        if (!Fp2.eql(left, right))\n          throw new Error(\"bad point: equation left != right\");\n        if (!this.isTorsionFree())\n          throw new Error(\"bad point: not in prime-order subgroup\");\n      }\n      hasEvenY() {\n        const { y } = this.toAffine();\n        if (Fp2.isOdd)\n          return !Fp2.isOdd(y);\n        throw new Error(\"Field doesn't support isOdd\");\n      }\n      /**\n       * Compare one point to another.\n       */\n      equals(other) {\n        assertPrjPoint(other);\n        const { px: X1, py: Y1, pz: Z1 } = this;\n        const { px: X2, py: Y2, pz: Z2 } = other;\n        const U1 = Fp2.eql(Fp2.mul(X1, Z2), Fp2.mul(X2, Z1));\n        const U2 = Fp2.eql(Fp2.mul(Y1, Z2), Fp2.mul(Y2, Z1));\n        return U1 && U2;\n      }\n      /**\n       * Flips point to one corresponding to (x, -y) in Affine coordinates.\n       */\n      negate() {\n        return new Point2(this.px, Fp2.neg(this.py), this.pz);\n      }\n      // Renes-Costello-Batina exception-free doubling formula.\n      // There is 30% faster Jacobian formula, but it is not complete.\n      // https://eprint.iacr.org/2015/1060, algorithm 3\n      // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n      double() {\n        const { a, b: b2 } = CURVE;\n        const b3 = Fp2.mul(b2, _3n2);\n        const { px: X1, py: Y1, pz: Z1 } = this;\n        let X3 = Fp2.ZERO, Y3 = Fp2.ZERO, Z3 = Fp2.ZERO;\n        let t0 = Fp2.mul(X1, X1);\n        let t1 = Fp2.mul(Y1, Y1);\n        let t2 = Fp2.mul(Z1, Z1);\n        let t3 = Fp2.mul(X1, Y1);\n        t3 = Fp2.add(t3, t3);\n        Z3 = Fp2.mul(X1, Z1);\n        Z3 = Fp2.add(Z3, Z3);\n        X3 = Fp2.mul(a, Z3);\n        Y3 = Fp2.mul(b3, t2);\n        Y3 = Fp2.add(X3, Y3);\n        X3 = Fp2.sub(t1, Y3);\n        Y3 = Fp2.add(t1, Y3);\n        Y3 = Fp2.mul(X3, Y3);\n        X3 = Fp2.mul(t3, X3);\n        Z3 = Fp2.mul(b3, Z3);\n        t2 = Fp2.mul(a, t2);\n        t3 = Fp2.sub(t0, t2);\n        t3 = Fp2.mul(a, t3);\n        t3 = Fp2.add(t3, Z3);\n        Z3 = Fp2.add(t0, t0);\n        t0 = Fp2.add(Z3, t0);\n        t0 = Fp2.add(t0, t2);\n        t0 = Fp2.mul(t0, t3);\n        Y3 = Fp2.add(Y3, t0);\n        t2 = Fp2.mul(Y1, Z1);\n        t2 = Fp2.add(t2, t2);\n        t0 = Fp2.mul(t2, t3);\n        X3 = Fp2.sub(X3, t0);\n        Z3 = Fp2.mul(t2, t1);\n        Z3 = Fp2.add(Z3, Z3);\n        Z3 = Fp2.add(Z3, Z3);\n        return new Point2(X3, Y3, Z3);\n      }\n      // Renes-Costello-Batina exception-free addition formula.\n      // There is 30% faster Jacobian formula, but it is not complete.\n      // https://eprint.iacr.org/2015/1060, algorithm 1\n      // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n      add(other) {\n        assertPrjPoint(other);\n        const { px: X1, py: Y1, pz: Z1 } = this;\n        const { px: X2, py: Y2, pz: Z2 } = other;\n        let X3 = Fp2.ZERO, Y3 = Fp2.ZERO, Z3 = Fp2.ZERO;\n        const a = CURVE.a;\n        const b3 = Fp2.mul(CURVE.b, _3n2);\n        let t0 = Fp2.mul(X1, X2);\n        let t1 = Fp2.mul(Y1, Y2);\n        let t2 = Fp2.mul(Z1, Z2);\n        let t3 = Fp2.add(X1, Y1);\n        let t4 = Fp2.add(X2, Y2);\n        t3 = Fp2.mul(t3, t4);\n        t4 = Fp2.add(t0, t1);\n        t3 = Fp2.sub(t3, t4);\n        t4 = Fp2.add(X1, Z1);\n        let t5 = Fp2.add(X2, Z2);\n        t4 = Fp2.mul(t4, t5);\n        t5 = Fp2.add(t0, t2);\n        t4 = Fp2.sub(t4, t5);\n        t5 = Fp2.add(Y1, Z1);\n        X3 = Fp2.add(Y2, Z2);\n        t5 = Fp2.mul(t5, X3);\n        X3 = Fp2.add(t1, t2);\n        t5 = Fp2.sub(t5, X3);\n        Z3 = Fp2.mul(a, t4);\n        X3 = Fp2.mul(b3, t2);\n        Z3 = Fp2.add(X3, Z3);\n        X3 = Fp2.sub(t1, Z3);\n        Z3 = Fp2.add(t1, Z3);\n        Y3 = Fp2.mul(X3, Z3);\n        t1 = Fp2.add(t0, t0);\n        t1 = Fp2.add(t1, t0);\n        t2 = Fp2.mul(a, t2);\n        t4 = Fp2.mul(b3, t4);\n        t1 = Fp2.add(t1, t2);\n        t2 = Fp2.sub(t0, t2);\n        t2 = Fp2.mul(a, t2);\n        t4 = Fp2.add(t4, t2);\n        t0 = Fp2.mul(t1, t4);\n        Y3 = Fp2.add(Y3, t0);\n        t0 = Fp2.mul(t5, t4);\n        X3 = Fp2.mul(t3, X3);\n        X3 = Fp2.sub(X3, t0);\n        t0 = Fp2.mul(t3, t1);\n        Z3 = Fp2.mul(t5, Z3);\n        Z3 = Fp2.add(Z3, t0);\n        return new Point2(X3, Y3, Z3);\n      }\n      subtract(other) {\n        return this.add(other.negate());\n      }\n      is0() {\n        return this.equals(Point2.ZERO);\n      }\n      wNAF(n2) {\n        return wnaf.wNAFCached(this, pointPrecomputes, n2, (comp) => {\n          const toInv = Fp2.invertBatch(comp.map((p) => p.pz));\n          return comp.map((p, i) => p.toAffine(toInv[i])).map(Point2.fromAffine);\n        });\n      }\n      /**\n       * Non-constant-time multiplication. Uses double-and-add algorithm.\n       * It's faster, but should only be used when you don't care about\n       * an exposed private key e.g. sig verification, which works over *public* keys.\n       */\n      multiplyUnsafe(n2) {\n        const I = Point2.ZERO;\n        if (n2 === _0n5)\n          return I;\n        assertGE(n2);\n        if (n2 === _1n5)\n          return this;\n        const { endo } = CURVE;\n        if (!endo)\n          return wnaf.unsafeLadder(this, n2);\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);\n        let k1p = I;\n        let k2p = I;\n        let d = this;\n        while (k1 > _0n5 || k2 > _0n5) {\n          if (k1 & _1n5)\n            k1p = k1p.add(d);\n          if (k2 & _1n5)\n            k2p = k2p.add(d);\n          d = d.double();\n          k1 >>= _1n5;\n          k2 >>= _1n5;\n        }\n        if (k1neg)\n          k1p = k1p.negate();\n        if (k2neg)\n          k2p = k2p.negate();\n        k2p = new Point2(Fp2.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        return k1p.add(k2p);\n      }\n      /**\n       * Constant time multiplication.\n       * Uses wNAF method. Windowed method may be 10% faster,\n       * but takes 2x longer to generate and consumes 2x memory.\n       * Uses precomputes when available.\n       * Uses endomorphism for Koblitz curves.\n       * @param scalar by which the point would be multiplied\n       * @returns New point\n       */\n      multiply(scalar) {\n        assertGE(scalar);\n        let n2 = scalar;\n        let point, fake;\n        const { endo } = CURVE;\n        if (endo) {\n          const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);\n          let { p: k1p, f: f1p } = this.wNAF(k1);\n          let { p: k2p, f: f2p } = this.wNAF(k2);\n          k1p = wnaf.constTimeNegate(k1neg, k1p);\n          k2p = wnaf.constTimeNegate(k2neg, k2p);\n          k2p = new Point2(Fp2.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n          point = k1p.add(k2p);\n          fake = f1p.add(f2p);\n        } else {\n          const { p, f } = this.wNAF(n2);\n          point = p;\n          fake = f;\n        }\n        return Point2.normalizeZ([point, fake])[0];\n      }\n      /**\n       * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n       * Not using Strauss-Shamir trick: precomputation tables are faster.\n       * The trick could be useful if both P and Q are not G (not in our case).\n       * @returns non-zero affine point\n       */\n      multiplyAndAddUnsafe(Q, a, b2) {\n        const G = Point2.BASE;\n        const mul = (P, a2) => a2 === _0n5 || a2 === _1n5 || !P.equals(G) ? P.multiplyUnsafe(a2) : P.multiply(a2);\n        const sum = mul(this, a).add(mul(Q, b2));\n        return sum.is0() ? void 0 : sum;\n      }\n      // Converts Projective point to affine (x, y) coordinates.\n      // Can accept precomputed Z^-1 - for example, from invertBatch.\n      // (x, y, z) ∋ (x=x/z, y=y/z)\n      toAffine(iz) {\n        const { px: x, py: y, pz: z } = this;\n        const is0 = this.is0();\n        if (iz == null)\n          iz = is0 ? Fp2.ONE : Fp2.inv(z);\n        const ax = Fp2.mul(x, iz);\n        const ay = Fp2.mul(y, iz);\n        const zz = Fp2.mul(z, iz);\n        if (is0)\n          return { x: Fp2.ZERO, y: Fp2.ZERO };\n        if (!Fp2.eql(zz, Fp2.ONE))\n          throw new Error(\"invZ was invalid\");\n        return { x: ax, y: ay };\n      }\n      isTorsionFree() {\n        const { h: cofactor, isTorsionFree } = CURVE;\n        if (cofactor === _1n5)\n          return true;\n        if (isTorsionFree)\n          return isTorsionFree(Point2, this);\n        throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\");\n      }\n      clearCofactor() {\n        const { h: cofactor, clearCofactor } = CURVE;\n        if (cofactor === _1n5)\n          return this;\n        if (clearCofactor)\n          return clearCofactor(Point2, this);\n        return this.multiplyUnsafe(CURVE.h);\n      }\n      toRawBytes(isCompressed = true) {\n        this.assertValidity();\n        return toBytes2(Point2, this, isCompressed);\n      }\n      toHex(isCompressed = true) {\n        return bytesToHex(this.toRawBytes(isCompressed));\n      }\n    }\n    Point2.BASE = new Point2(CURVE.Gx, CURVE.Gy, Fp2.ONE);\n    Point2.ZERO = new Point2(Fp2.ZERO, Fp2.ONE, Fp2.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point2, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    return {\n      CURVE,\n      ProjectivePoint: Point2,\n      normPrivateKeyToScalar,\n      weierstrassEquation,\n      isWithinCurveOrder\n    };\n  }\n  function validateOpts(curve) {\n    const opts = validateBasic(curve);\n    validateObject(opts, {\n      hash: \"hash\",\n      hmac: \"function\",\n      randomBytes: \"function\"\n    }, {\n      bits2int: \"function\",\n      bits2int_modN: \"function\",\n      lowS: \"boolean\"\n    });\n    return Object.freeze({ lowS: true, ...opts });\n  }\n  function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp: Fp2, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp2.BYTES + 1;\n    const uncompressedLen = 2 * Fp2.BYTES + 1;\n    function isValidFieldElement(num) {\n      return _0n5 < num && num < Fp2.ORDER;\n    }\n    function modN(a) {\n      return mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n      return invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point2, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder } = weierstrassPoints({\n      ...CURVE,\n      toBytes(_c, point, isCompressed) {\n        const a = point.toAffine();\n        const x = Fp2.toBytes(a.x);\n        const cat = concatBytes2;\n        if (isCompressed) {\n          return cat(Uint8Array.from([point.hasEvenY() ? 2 : 3]), x);\n        } else {\n          return cat(Uint8Array.from([4]), x, Fp2.toBytes(a.y));\n        }\n      },\n      fromBytes(bytes2) {\n        const len = bytes2.length;\n        const head = bytes2[0];\n        const tail = bytes2.subarray(1);\n        if (len === compressedLen && (head === 2 || head === 3)) {\n          const x = bytesToNumberBE(tail);\n          if (!isValidFieldElement(x))\n            throw new Error(\"Point is not on curve\");\n          const y2 = weierstrassEquation(x);\n          let y = Fp2.sqrt(y2);\n          const isYOdd = (y & _1n5) === _1n5;\n          const isHeadOdd = (head & 1) === 1;\n          if (isHeadOdd !== isYOdd)\n            y = Fp2.neg(y);\n          return { x, y };\n        } else if (len === uncompressedLen && head === 4) {\n          const x = Fp2.fromBytes(tail.subarray(0, Fp2.BYTES));\n          const y = Fp2.fromBytes(tail.subarray(Fp2.BYTES, 2 * Fp2.BYTES));\n          return { x, y };\n        } else {\n          throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n        }\n      }\n    });\n    const numToNByteStr = (num) => bytesToHex(numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number2) {\n      const HALF = CURVE_ORDER >> _1n5;\n      return number2 > HALF;\n    }\n    function normalizeS(s) {\n      return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    const slcNum = (b2, from, to) => bytesToNumberBE(b2.slice(from, to));\n    class Signature2 {\n      constructor(r, s, recovery) {\n        this.r = r;\n        this.s = s;\n        this.recovery = recovery;\n        this.assertValidity();\n      }\n      // pair (bytes of r, bytes of s)\n      static fromCompact(hex) {\n        const l = CURVE.nByteLength;\n        hex = ensureBytes(\"compactSignature\", hex, l * 2);\n        return new Signature2(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n      }\n      // DER encoded ECDSA signature\n      // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n      static fromDER(hex) {\n        const { r, s } = DER.toSig(ensureBytes(\"DER\", hex));\n        return new Signature2(r, s);\n      }\n      assertValidity() {\n        if (!isWithinCurveOrder(this.r))\n          throw new Error(\"r must be 0 < r < CURVE.n\");\n        if (!isWithinCurveOrder(this.s))\n          throw new Error(\"s must be 0 < s < CURVE.n\");\n      }\n      addRecoveryBit(recovery) {\n        return new Signature2(this.r, this.s, recovery);\n      }\n      recoverPublicKey(msgHash) {\n        const { r, s, recovery: rec } = this;\n        const h = bits2int_modN(ensureBytes(\"msgHash\", msgHash));\n        if (rec == null || ![0, 1, 2, 3].includes(rec))\n          throw new Error(\"recovery id invalid\");\n        const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n        if (radj >= Fp2.ORDER)\n          throw new Error(\"recovery id 2 or 3 invalid\");\n        const prefix = (rec & 1) === 0 ? \"02\" : \"03\";\n        const R = Point2.fromHex(prefix + numToNByteStr(radj));\n        const ir = invN(radj);\n        const u1 = modN(-h * ir);\n        const u2 = modN(s * ir);\n        const Q = Point2.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n          throw new Error(\"point at infinify\");\n        Q.assertValidity();\n        return Q;\n      }\n      // Signatures should be low-s, to prevent malleability.\n      hasHighS() {\n        return isBiggerThanHalfOrder(this.s);\n      }\n      normalizeS() {\n        return this.hasHighS() ? new Signature2(this.r, modN(-this.s), this.recovery) : this;\n      }\n      // DER-encoded\n      toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n      }\n      toDERHex() {\n        return DER.hexFromSig({ r: this.r, s: this.s });\n      }\n      // padded bytes of r, then padded bytes of s\n      toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n      }\n      toCompactHex() {\n        return numToNByteStr(this.r) + numToNByteStr(this.s);\n      }\n    }\n    const utils = {\n      isValidPrivateKey(privateKey) {\n        try {\n          normPrivateKeyToScalar(privateKey);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      },\n      normPrivateKeyToScalar,\n      /**\n       * Produces cryptographically secure private key from random of size\n       * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n       */\n      randomPrivateKey: () => {\n        const length = getMinHashLength(CURVE.n);\n        return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n      },\n      /**\n       * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n       * Allows to massively speed-up `point.multiply(scalar)`.\n       * @returns cached point\n       * @example\n       * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n       * fast.multiply(privKey); // much faster ECDH now\n       */\n      precompute(windowSize = 8, point = Point2.BASE) {\n        point._setWindowSize(windowSize);\n        point.multiply(BigInt(3));\n        return point;\n      }\n    };\n    function getPublicKey(privateKey, isCompressed = true) {\n      return Point2.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    function isProbPub(item) {\n      const arr = item instanceof Uint8Array;\n      const str = typeof item === \"string\";\n      const len = (arr || str) && item.length;\n      if (arr)\n        return len === compressedLen || len === uncompressedLen;\n      if (str)\n        return len === 2 * compressedLen || len === 2 * uncompressedLen;\n      if (item instanceof Point2)\n        return true;\n      return false;\n    }\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n      if (isProbPub(privateA))\n        throw new Error(\"first arg must be private key\");\n      if (!isProbPub(publicB))\n        throw new Error(\"second arg must be public key\");\n      const b2 = Point2.fromHex(publicB);\n      return b2.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    const bits2int = CURVE.bits2int || function(bytes2) {\n      const num = bytesToNumberBE(bytes2);\n      const delta = bytes2.length * 8 - CURVE.nBitLength;\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n    const bits2int_modN = CURVE.bits2int_modN || function(bytes2) {\n      return modN(bits2int(bytes2));\n    };\n    const ORDER_MASK = bitMask(CURVE.nBitLength);\n    function int2octets(num) {\n      if (typeof num !== \"bigint\")\n        throw new Error(\"bigint expected\");\n      if (!(_0n5 <= num && num < ORDER_MASK))\n        throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n      return numberToBytesBE(num, CURVE.nByteLength);\n    }\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n      if ([\"recovered\", \"canonical\"].some((k) => k in opts))\n        throw new Error(\"sign() legacy options not supported\");\n      const { hash: hash2, randomBytes: randomBytes2 } = CURVE;\n      let { lowS, prehash, extraEntropy: ent } = opts;\n      if (lowS == null)\n        lowS = true;\n      msgHash = ensureBytes(\"msgHash\", msgHash);\n      if (prehash)\n        msgHash = ensureBytes(\"prehashed msgHash\", hash2(msgHash));\n      const h1int = bits2int_modN(msgHash);\n      const d = normPrivateKeyToScalar(privateKey);\n      const seedArgs = [int2octets(d), int2octets(h1int)];\n      if (ent != null) {\n        const e = ent === true ? randomBytes2(Fp2.BYTES) : ent;\n        seedArgs.push(ensureBytes(\"extraEntropy\", e));\n      }\n      const seed = concatBytes2(...seedArgs);\n      const m = h1int;\n      function k2sig(kBytes) {\n        const k = bits2int(kBytes);\n        if (!isWithinCurveOrder(k))\n          return;\n        const ik = invN(k);\n        const q = Point2.BASE.multiply(k).toAffine();\n        const r = modN(q.x);\n        if (r === _0n5)\n          return;\n        const s = modN(ik * modN(m + r * d));\n        if (s === _0n5)\n          return;\n        let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n5);\n        let normS = s;\n        if (lowS && isBiggerThanHalfOrder(s)) {\n          normS = normalizeS(s);\n          recovery ^= 1;\n        }\n        return new Signature2(r, normS, recovery);\n      }\n      return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n      const { seed, k2sig } = prepSig(msgHash, privKey, opts);\n      const C = CURVE;\n      const drbg = createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n      return drbg(seed, k2sig);\n    }\n    Point2.BASE._setWindowSize(8);\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n      const sg = signature;\n      msgHash = ensureBytes(\"msgHash\", msgHash);\n      publicKey = ensureBytes(\"publicKey\", publicKey);\n      if (\"strict\" in opts)\n        throw new Error(\"options.strict was renamed to lowS\");\n      const { lowS, prehash } = opts;\n      let _sig = void 0;\n      let P;\n      try {\n        if (typeof sg === \"string\" || sg instanceof Uint8Array) {\n          try {\n            _sig = Signature2.fromDER(sg);\n          } catch (derError) {\n            if (!(derError instanceof DER.Err))\n              throw derError;\n            _sig = Signature2.fromCompact(sg);\n          }\n        } else if (typeof sg === \"object\" && typeof sg.r === \"bigint\" && typeof sg.s === \"bigint\") {\n          const { r: r2, s: s2 } = sg;\n          _sig = new Signature2(r2, s2);\n        } else {\n          throw new Error(\"PARSE\");\n        }\n        P = Point2.fromHex(publicKey);\n      } catch (error) {\n        if (error.message === \"PARSE\")\n          throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n        return false;\n      }\n      if (lowS && _sig.hasHighS())\n        return false;\n      if (prehash)\n        msgHash = CURVE.hash(msgHash);\n      const { r, s } = _sig;\n      const h = bits2int_modN(msgHash);\n      const is = invN(s);\n      const u1 = modN(h * is);\n      const u2 = modN(r * is);\n      const R = Point2.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine();\n      if (!R)\n        return false;\n      const v = modN(R.x);\n      return v === r;\n    }\n    return {\n      CURVE,\n      getPublicKey,\n      getSharedSecret,\n      sign,\n      verify,\n      ProjectivePoint: Point2,\n      Signature: Signature2,\n      utils\n    };\n  }\n  var b2n, h2b, DER, _0n5, _1n5, _2n4, _3n2, _4n2;\n  var init_weierstrass = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/weierstrass.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_modular();\n      init_utils3();\n      init_utils3();\n      init_curve();\n      ({ bytesToNumberBE: b2n, hexToBytes: h2b } = utils_exports);\n      DER = {\n        // asn.1 DER encoding utils\n        Err: class DERErr extends Error {\n          constructor(m = \"\") {\n            super(m);\n          }\n        },\n        _parseInt(data) {\n          const { Err: E } = DER;\n          if (data.length < 2 || data[0] !== 2)\n            throw new E(\"Invalid signature integer tag\");\n          const len = data[1];\n          const res = data.subarray(2, len + 2);\n          if (!len || res.length !== len)\n            throw new E(\"Invalid signature integer: wrong length\");\n          if (res[0] & 128)\n            throw new E(\"Invalid signature integer: negative\");\n          if (res[0] === 0 && !(res[1] & 128))\n            throw new E(\"Invalid signature integer: unnecessary leading zero\");\n          return { d: b2n(res), l: data.subarray(len + 2) };\n        },\n        toSig(hex) {\n          const { Err: E } = DER;\n          const data = typeof hex === \"string\" ? h2b(hex) : hex;\n          if (!(data instanceof Uint8Array))\n            throw new Error(\"ui8a expected\");\n          let l = data.length;\n          if (l < 2 || data[0] != 48)\n            throw new E(\"Invalid signature tag\");\n          if (data[1] !== l - 2)\n            throw new E(\"Invalid signature: incorrect length\");\n          const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n          const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n          if (rBytesLeft.length)\n            throw new E(\"Invalid signature: left bytes after parsing\");\n          return { r, s };\n        },\n        hexFromSig(sig) {\n          const slice = (s2) => Number.parseInt(s2[0], 16) & 8 ? \"00\" + s2 : s2;\n          const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n          };\n          const s = slice(h(sig.s));\n          const r = slice(h(sig.r));\n          const shl = s.length / 2;\n          const rhl = r.length / 2;\n          const sl = h(shl);\n          const rl = h(rhl);\n          return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n        }\n      };\n      _0n5 = BigInt(0);\n      _1n5 = BigInt(1);\n      _2n4 = BigInt(2);\n      _3n2 = BigInt(3);\n      _4n2 = BigInt(4);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/_shortw_utils.js\n  function getHash(hash2) {\n    return {\n      hash: hash2,\n      hmac: (key, ...msgs) => hmac(hash2, key, concatBytes(...msgs)),\n      randomBytes\n    };\n  }\n  function createCurve(curveDef, defHash) {\n    const create = (hash2) => weierstrass({ ...curveDef, ...getHash(hash2) });\n    return Object.freeze({ ...create(defHash), create });\n  }\n  var init_shortw_utils = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/_shortw_utils.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_hmac();\n      init_utils2();\n      init_weierstrass();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/secp256k1.js\n  function sqrtMod(y) {\n    const P = secp256k1P;\n    const _3n3 = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = y * y * y % P;\n    const b3 = b2 * b2 * y % P;\n    const b6 = pow2(b3, _3n3, P) * b3 % P;\n    const b9 = pow2(b6, _3n3, P) * b3 % P;\n    const b11 = pow2(b9, _2n5, P) * b2 % P;\n    const b22 = pow2(b11, _11n, P) * b11 % P;\n    const b44 = pow2(b22, _22n, P) * b22 % P;\n    const b88 = pow2(b44, _44n, P) * b44 % P;\n    const b176 = pow2(b88, _88n, P) * b88 % P;\n    const b220 = pow2(b176, _44n, P) * b44 % P;\n    const b223 = pow2(b220, _3n3, P) * b3 % P;\n    const t1 = pow2(b223, _23n, P) * b22 % P;\n    const t2 = pow2(t1, _6n, P) * b2 % P;\n    const root = pow2(t2, _2n5, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n      throw new Error(\"Cannot find square root\");\n    return root;\n  }\n  var secp256k1P, secp256k1N, _1n6, _2n5, divNearest, Fp, secp256k1, _0n6, Point;\n  var init_secp256k1 = __esm({\n    \"../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/secp256k1.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_sha256();\n      init_modular();\n      init_shortw_utils();\n      secp256k1P = BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\");\n      secp256k1N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n      _1n6 = BigInt(1);\n      _2n5 = BigInt(2);\n      divNearest = (a, b2) => (a + b2 / _2n5) / b2;\n      Fp = Field(secp256k1P, void 0, void 0, { sqrt: sqrtMod });\n      secp256k1 = createCurve({\n        a: BigInt(0),\n        b: BigInt(7),\n        Fp,\n        n: secp256k1N,\n        // Base point (x, y) aka generator point\n        Gx: BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),\n        Gy: BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),\n        h: BigInt(1),\n        lowS: true,\n        /**\n         * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n         * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n         * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n         * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n         */\n        endo: {\n          beta: BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),\n          splitScalar: (k) => {\n            const n2 = secp256k1N;\n            const a1 = BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\");\n            const b1 = -_1n6 * BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\");\n            const a2 = BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\");\n            const b2 = a1;\n            const POW_2_128 = BigInt(\"0x100000000000000000000000000000000\");\n            const c1 = divNearest(b2 * k, n2);\n            const c2 = divNearest(-b1 * k, n2);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n2);\n            let k2 = mod(-c1 * b1 - c2 * b2, n2);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n              k1 = n2 - k1;\n            if (k2neg)\n              k2 = n2 - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n              throw new Error(\"splitScalar: Endomorphism failed, k=\" + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n          }\n        }\n      }, sha256);\n      _0n6 = BigInt(0);\n      Point = secp256k1.ProjectivePoint;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/addresses.js\n  var ZeroAddress;\n  var init_addresses = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/addresses.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      ZeroAddress = \"0x0000000000000000000000000000000000000000\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/hashes.js\n  var ZeroHash;\n  var init_hashes = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/hashes.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      ZeroHash = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/index.js\n  var init_constants2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/constants/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_addresses();\n      init_hashes();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/signature.js\n  function toUint256(value) {\n    return zeroPadValue(toBeArray(value), 32);\n  }\n  var BN_03, BN_12, BN_2, BN_27, BN_28, BN_35, _guard2, Signature;\n  var init_signature = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/signature.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_constants2();\n      init_utils();\n      BN_03 = BigInt(0);\n      BN_12 = BigInt(1);\n      BN_2 = BigInt(2);\n      BN_27 = BigInt(27);\n      BN_28 = BigInt(28);\n      BN_35 = BigInt(35);\n      _guard2 = {};\n      Signature = class _Signature {\n        #r;\n        #s;\n        #v;\n        #networkV;\n        /**\n         *  The ``r`` value for a signature.\n         *\n         *  This represents the ``x`` coordinate of a \"reference\" or\n         *  challenge point, from which the ``y`` can be computed.\n         */\n        get r() {\n          return this.#r;\n        }\n        set r(value) {\n          assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n          this.#r = hexlify(value);\n        }\n        /**\n         *  The ``s`` value for a signature.\n         */\n        get s() {\n          return this.#s;\n        }\n        set s(_value) {\n          assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n          const value = hexlify(_value);\n          assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n          this.#s = value;\n        }\n        /**\n         *  The ``v`` value for a signature.\n         *\n         *  Since a given ``x`` value for ``r`` has two possible values for\n         *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n         *  values to use.\n         *\n         *  It is normalized to the values ``27`` or ``28`` for legacy\n         *  purposes.\n         */\n        get v() {\n          return this.#v;\n        }\n        set v(value) {\n          const v = getNumber(value, \"value\");\n          assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n          this.#v = v;\n        }\n        /**\n         *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n         *  transactions, this value is ``null``.\n         */\n        get networkV() {\n          return this.#networkV;\n        }\n        /**\n         *  The chain ID for EIP-155 legacy transactions. For non-legacy\n         *  transactions, this value is ``null``.\n         */\n        get legacyChainId() {\n          const v = this.networkV;\n          if (v == null) {\n            return null;\n          }\n          return _Signature.getChainId(v);\n        }\n        /**\n         *  The ``yParity`` for the signature.\n         *\n         *  See ``v`` for more details on how this value is used.\n         */\n        get yParity() {\n          return this.v === 27 ? 0 : 1;\n        }\n        /**\n         *  The [[link-eip-2098]] compact representation of the ``yParity``\n         *  and ``s`` compacted into a single ``bytes32``.\n         */\n        get yParityAndS() {\n          const yParityAndS = getBytes(this.s);\n          if (this.yParity) {\n            yParityAndS[0] |= 128;\n          }\n          return hexlify(yParityAndS);\n        }\n        /**\n         *  The [[link-eip-2098]] compact representation.\n         */\n        get compactSerialized() {\n          return concat([this.r, this.yParityAndS]);\n        }\n        /**\n         *  The serialized representation.\n         */\n        get serialized() {\n          return concat([this.r, this.s, this.yParity ? \"0x1c\" : \"0x1b\"]);\n        }\n        /**\n         *  @private\n         */\n        constructor(guard, r, s, v) {\n          assertPrivate(guard, _guard2, \"Signature\");\n          this.#r = r;\n          this.#s = s;\n          this.#v = v;\n          this.#networkV = null;\n        }\n        [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n          return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n        }\n        /**\n         *  Returns a new identical [[Signature]].\n         */\n        clone() {\n          const clone = new _Signature(_guard2, this.r, this.s, this.v);\n          if (this.networkV) {\n            clone.#networkV = this.networkV;\n          }\n          return clone;\n        }\n        /**\n         *  Returns a representation that is compatible with ``JSON.stringify``.\n         */\n        toJSON() {\n          const networkV = this.networkV;\n          return {\n            _type: \"signature\",\n            networkV: networkV != null ? networkV.toString() : null,\n            r: this.r,\n            s: this.s,\n            v: this.v\n          };\n        }\n        /**\n         *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n         *\n         *  @example:\n         *    Signature.getChainId(45)\n         *    //_result:\n         *\n         *    Signature.getChainId(46)\n         *    //_result:\n         */\n        static getChainId(v) {\n          const bv = getBigInt(v, \"v\");\n          if (bv == BN_27 || bv == BN_28) {\n            return BN_03;\n          }\n          assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n          return (bv - BN_35) / BN_2;\n        }\n        /**\n         *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n         *\n         *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n         *  property to include the chain ID.\n         *\n         *  @example:\n         *    Signature.getChainIdV(5, 27)\n         *    //_result:\n         *\n         *    Signature.getChainIdV(5, 28)\n         *    //_result:\n         *\n         */\n        static getChainIdV(chainId, v) {\n          return getBigInt(chainId) * BN_2 + BigInt(35 + v - 27);\n        }\n        /**\n         *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n         *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n         *\n         *  @example:\n         *    // The values 0 and 1 imply v is actually yParity\n         *    Signature.getNormalizedV(0)\n         *    //_result:\n         *\n         *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n         *    Signature.getNormalizedV(27)\n         *    //_result:\n         *\n         *    // Legacy EIP-155 transaction (i.e. >= 35)\n         *    Signature.getNormalizedV(46)\n         *    //_result:\n         *\n         *    // Invalid values throw\n         *    Signature.getNormalizedV(5)\n         *    //_error:\n         */\n        static getNormalizedV(v) {\n          const bv = getBigInt(v);\n          if (bv === BN_03 || bv === BN_27) {\n            return 27;\n          }\n          if (bv === BN_12 || bv === BN_28) {\n            return 28;\n          }\n          assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n          return bv & BN_12 ? 27 : 28;\n        }\n        /**\n         *  Creates a new [[Signature]].\n         *\n         *  If no %%sig%% is provided, a new [[Signature]] is created\n         *  with default values.\n         *\n         *  If %%sig%% is a string, it is parsed.\n         */\n        static from(sig) {\n          function assertError(check, message) {\n            assertArgument(check, message, \"signature\", sig);\n          }\n          ;\n          if (sig == null) {\n            return new _Signature(_guard2, ZeroHash, ZeroHash, 27);\n          }\n          if (typeof sig === \"string\") {\n            const bytes2 = getBytes(sig, \"signature\");\n            if (bytes2.length === 64) {\n              const r2 = hexlify(bytes2.slice(0, 32));\n              const s2 = bytes2.slice(32, 64);\n              const v2 = s2[0] & 128 ? 28 : 27;\n              s2[0] &= 127;\n              return new _Signature(_guard2, r2, hexlify(s2), v2);\n            }\n            if (bytes2.length === 65) {\n              const r2 = hexlify(bytes2.slice(0, 32));\n              const s2 = bytes2.slice(32, 64);\n              assertError((s2[0] & 128) === 0, \"non-canonical s\");\n              const v2 = _Signature.getNormalizedV(bytes2[64]);\n              return new _Signature(_guard2, r2, hexlify(s2), v2);\n            }\n            assertError(false, \"invalid raw signature length\");\n          }\n          if (sig instanceof _Signature) {\n            return sig.clone();\n          }\n          const _r = sig.r;\n          assertError(_r != null, \"missing r\");\n          const r = toUint256(_r);\n          const s = function(s2, yParityAndS) {\n            if (s2 != null) {\n              return toUint256(s2);\n            }\n            if (yParityAndS != null) {\n              assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n              const bytes2 = getBytes(yParityAndS);\n              bytes2[0] &= 127;\n              return hexlify(bytes2);\n            }\n            assertError(false, \"missing s\");\n          }(sig.s, sig.yParityAndS);\n          assertError((getBytes(s)[0] & 128) == 0, \"non-canonical s\");\n          const { networkV, v } = function(_v, yParityAndS, yParity) {\n            if (_v != null) {\n              const v2 = getBigInt(_v);\n              return {\n                networkV: v2 >= BN_35 ? v2 : void 0,\n                v: _Signature.getNormalizedV(v2)\n              };\n            }\n            if (yParityAndS != null) {\n              assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n              return { v: getBytes(yParityAndS)[0] & 128 ? 28 : 27 };\n            }\n            if (yParity != null) {\n              switch (getNumber(yParity, \"sig.yParity\")) {\n                case 0:\n                  return { v: 27 };\n                case 1:\n                  return { v: 28 };\n              }\n              assertError(false, \"invalid yParity\");\n            }\n            assertError(false, \"missing v\");\n          }(sig.v, sig.yParityAndS, sig.yParity);\n          const result = new _Signature(_guard2, r, s, v);\n          if (networkV) {\n            result.#networkV = networkV;\n          }\n          assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n          assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n          return result;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/signing-key.js\n  var SigningKey;\n  var init_signing_key = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/signing-key.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_secp256k1();\n      init_utils();\n      init_signature();\n      SigningKey = class _SigningKey {\n        #privateKey;\n        /**\n         *  Creates a new **SigningKey** for %%privateKey%%.\n         */\n        constructor(privateKey) {\n          assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n          this.#privateKey = hexlify(privateKey);\n        }\n        /**\n         *  The private key.\n         */\n        get privateKey() {\n          return this.#privateKey;\n        }\n        /**\n         *  The uncompressed public key.\n         *\n         * This will always begin with the prefix ``0x04`` and be 132\n         * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n         */\n        get publicKey() {\n          return _SigningKey.computePublicKey(this.#privateKey);\n        }\n        /**\n         *  The compressed public key.\n         *\n         *  This will always begin with either the prefix ``0x02`` or ``0x03``\n         *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n         *  nibbles)\n         */\n        get compressedPublicKey() {\n          return _SigningKey.computePublicKey(this.#privateKey, true);\n        }\n        /**\n         *  Return the signature of the signed %%digest%%.\n         */\n        sign(digest) {\n          assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n          const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n          });\n          return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: sig.recovery ? 28 : 27\n          });\n        }\n        /**\n         *  Returns the [[link-wiki-ecdh]] shared secret between this\n         *  private key and the %%other%% key.\n         *\n         *  The %%other%% key may be any type of key, a raw public key,\n         *  a compressed/uncompressed pubic key or aprivate key.\n         *\n         *  Best practice is usually to use a cryptographic hash on the\n         *  returned value before using it as a symetric secret.\n         *\n         *  @example:\n         *    sign1 = new SigningKey(id(\"some-secret-1\"))\n         *    sign2 = new SigningKey(id(\"some-secret-2\"))\n         *\n         *    // Notice that privA.computeSharedSecret(pubB)...\n         *    sign1.computeSharedSecret(sign2.publicKey)\n         *    //_result:\n         *\n         *    // ...is equal to privB.computeSharedSecret(pubA).\n         *    sign2.computeSharedSecret(sign1.publicKey)\n         *    //_result:\n         */\n        computeSharedSecret(other) {\n          const pubKey = _SigningKey.computePublicKey(other);\n          return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n        }\n        /**\n         *  Compute the public key for %%key%%, optionally %%compressed%%.\n         *\n         *  The %%key%% may be any type of key, a raw public key, a\n         *  compressed/uncompressed public key or private key.\n         *\n         *  @example:\n         *    sign = new SigningKey(id(\"some-secret\"));\n         *\n         *    // Compute the uncompressed public key for a private key\n         *    SigningKey.computePublicKey(sign.privateKey)\n         *    //_result:\n         *\n         *    // Compute the compressed public key for a private key\n         *    SigningKey.computePublicKey(sign.privateKey, true)\n         *    //_result:\n         *\n         *    // Compute the uncompressed public key\n         *    SigningKey.computePublicKey(sign.publicKey, false);\n         *    //_result:\n         *\n         *    // Compute the Compressed a public key\n         *    SigningKey.computePublicKey(sign.publicKey, true);\n         *    //_result:\n         */\n        static computePublicKey(key, compressed) {\n          let bytes2 = getBytes(key, \"key\");\n          if (bytes2.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes2, !!compressed);\n            return hexlify(pubKey);\n          }\n          if (bytes2.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 4;\n            pub.set(bytes2, 1);\n            bytes2 = pub;\n          }\n          const point = secp256k1.ProjectivePoint.fromHex(bytes2);\n          return hexlify(point.toRawBytes(compressed));\n        }\n        /**\n         *  Returns the public key for the private key which produced the\n         *  %%signature%% for the given %%digest%%.\n         *\n         *  @example:\n         *    key = new SigningKey(id(\"some-secret\"))\n         *    digest = id(\"hello world\")\n         *    sig = key.sign(digest)\n         *\n         *    // Notice the signer public key...\n         *    key.publicKey\n         *    //_result:\n         *\n         *    // ...is equal to the recovered public key\n         *    SigningKey.recoverPublicKey(digest, sig)\n         *    //_result:\n         *\n         */\n        static recoverPublicKey(digest, signature) {\n          assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n          const sig = Signature.from(signature);\n          let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s])));\n          secpSig = secpSig.addRecoveryBit(sig.yParity);\n          const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n          assertArgument(pubKey != null, \"invalid signature for digest\", \"signature\", signature);\n          return \"0x\" + pubKey.toHex(false);\n        }\n        /**\n         *  Returns the point resulting from adding the ellipic curve points\n         *  %%p0%% and %%p1%%.\n         *\n         *  This is not a common function most developers should require, but\n         *  can be useful for certain privacy-specific techniques.\n         *\n         *  For example, it is used by [[HDNodeWallet]] to compute child\n         *  addresses from parent public keys and chain codes.\n         */\n        static addPoints(p0, p1, compressed) {\n          const pub0 = secp256k1.ProjectivePoint.fromHex(_SigningKey.computePublicKey(p0).substring(2));\n          const pub1 = secp256k1.ProjectivePoint.fromHex(_SigningKey.computePublicKey(p1).substring(2));\n          return \"0x\" + pub0.add(pub1).toHex(!!compressed);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/index.js\n  var init_crypto2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/crypto/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_keccak();\n      init_sha22();\n      init_signing_key();\n      init_signature();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/address.js\n  function getChecksumAddress(address) {\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n      expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = getBytes(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n      if (hashed[i >> 1] >> 4 >= 8) {\n        chars[i] = chars[i].toUpperCase();\n      }\n      if ((hashed[i >> 1] & 15) >= 8) {\n        chars[i + 1] = chars[i + 1].toUpperCase();\n      }\n    }\n    return \"0x\" + chars.join(\"\");\n  }\n  function ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => {\n      return ibanLookup[c];\n    }).join(\"\");\n    while (expanded.length >= safeDigits) {\n      let block = expanded.substring(0, safeDigits);\n      expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - parseInt(expanded, 10) % 97);\n    while (checksum.length < 2) {\n      checksum = \"0\" + checksum;\n    }\n    return checksum;\n  }\n  function fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_04;\n    for (let i = 0; i < value.length; i++) {\n      result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n  }\n  function getAddress(address) {\n    assertArgument(typeof address === \"string\", \"invalid address\", \"address\", address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n      if (!address.startsWith(\"0x\")) {\n        address = \"0x\" + address;\n      }\n      const result = getChecksumAddress(address);\n      assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, \"bad address checksum\", \"address\", address);\n      return result;\n    }\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n      assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n      let result = fromBase36(address.substring(4)).toString(16);\n      while (result.length < 40) {\n        result = \"0\" + result;\n      }\n      return getChecksumAddress(\"0x\" + result);\n    }\n    assertArgument(false, \"invalid address\", \"address\", address);\n  }\n  var BN_04, BN_36, ibanLookup, safeDigits, Base36;\n  var init_address = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/address.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto2();\n      init_utils();\n      BN_04 = BigInt(0);\n      BN_36 = BigInt(36);\n      ibanLookup = {};\n      for (let i = 0; i < 10; i++) {\n        ibanLookup[String(i)] = String(i);\n      }\n      for (let i = 0; i < 26; i++) {\n        ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n      }\n      safeDigits = 15;\n      Base36 = function() {\n        ;\n        const result = {};\n        for (let i = 0; i < 36; i++) {\n          const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n          result[key] = BigInt(i);\n        }\n        return result;\n      }();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/contract-address.js\n  function getCreateAddress(tx) {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n      nonceHex = \"0x\";\n    } else if (nonceHex.length % 2) {\n      nonceHex = \"0x0\" + nonceHex;\n    } else {\n      nonceHex = \"0x\" + nonceHex;\n    }\n    return getAddress(dataSlice(keccak256(encodeRlp([from, nonceHex])), 12));\n  }\n  var init_contract_address = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/contract-address.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto2();\n      init_utils();\n      init_address();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/checks.js\n  function isAddressable(value) {\n    return value && typeof value.getAddress === \"function\";\n  }\n  async function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n      assert2(typeof target !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n      assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n  }\n  function resolveAddress(target, resolver) {\n    if (typeof target === \"string\") {\n      if (target.match(/^0x[0-9a-f]{40}$/i)) {\n        return getAddress(target);\n      }\n      assert2(resolver != null, \"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n      return checkAddress(target, resolver.resolveName(target));\n    } else if (isAddressable(target)) {\n      return checkAddress(target, target.getAddress());\n    } else if (target && typeof target.then === \"function\") {\n      return checkAddress(target, target);\n    }\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n  }\n  var init_checks = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/checks.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_address();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/index.js\n  var init_address2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/address/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address();\n      init_contract_address();\n      init_checks();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/typed.js\n  function n(value, width) {\n    let signed2 = false;\n    if (width < 0) {\n      signed2 = true;\n      width *= -1;\n    }\n    return new Typed(_gaurd, `${signed2 ? \"\" : \"u\"}int${width}`, value, { signed: signed2, width });\n  }\n  function b(value, size) {\n    return new Typed(_gaurd, `bytes${size ? size : \"\"}`, value, { size });\n  }\n  var _gaurd, _typedSymbol, Typed;\n  var init_typed = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/typed.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      _gaurd = {};\n      _typedSymbol = Symbol.for(\"_ethers_typed\");\n      Typed = class _Typed {\n        /**\n         *  The type, as a Solidity-compatible type.\n         */\n        type;\n        /**\n         *  The actual value.\n         */\n        value;\n        #options;\n        /**\n         *  @_ignore:\n         */\n        _typedSymbol;\n        /**\n         *  @_ignore:\n         */\n        constructor(gaurd, type, value, options) {\n          if (options == null) {\n            options = null;\n          }\n          assertPrivate(_gaurd, gaurd, \"Typed\");\n          defineProperties(this, { _typedSymbol, type, value });\n          this.#options = options;\n          this.format();\n        }\n        /**\n         *  Format the type as a Human-Readable type.\n         */\n        format() {\n          if (this.type === \"array\") {\n            throw new Error(\"\");\n          } else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n          } else if (this.type === \"tuple\") {\n            return `tuple(${this.value.map((v) => v.format()).join(\",\")})`;\n          }\n          return this.type;\n        }\n        /**\n         *  The default value returned by this type.\n         */\n        defaultValue() {\n          return 0;\n        }\n        /**\n         *  The minimum value for numeric types.\n         */\n        minValue() {\n          return 0;\n        }\n        /**\n         *  The maximum value for numeric types.\n         */\n        maxValue() {\n          return 0;\n        }\n        /**\n         *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n         */\n        isBigInt() {\n          return !!this.type.match(/^u?int[0-9]+$/);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n         */\n        isData() {\n          return this.type.startsWith(\"bytes\");\n        }\n        /**\n         *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n         */\n        isString() {\n          return this.type === \"string\";\n        }\n        /**\n         *  Returns the tuple name, if this is a tuple. Throws otherwise.\n         */\n        get tupleName() {\n          if (this.type !== \"tuple\") {\n            throw TypeError(\"not a tuple\");\n          }\n          return this.#options;\n        }\n        // Returns the length of this type as an array\n        // - `null` indicates the length is unforced, it could be dynamic\n        // - `-1` indicates the length is dynamic\n        // - any other value indicates it is a static array and is its length\n        /**\n         *  Returns the length of the array type or ``-1`` if it is dynamic.\n         *\n         *  Throws if the type is not an array.\n         */\n        get arrayLength() {\n          if (this.type !== \"array\") {\n            throw TypeError(\"not an array\");\n          }\n          if (this.#options === true) {\n            return -1;\n          }\n          if (this.#options === false) {\n            return this.value.length;\n          }\n          return null;\n        }\n        /**\n         *  Returns a new **Typed** of %%type%% with the %%value%%.\n         */\n        static from(type, value) {\n          return new _Typed(_gaurd, type, value);\n        }\n        /**\n         *  Return a new ``uint8`` type for %%v%%.\n         */\n        static uint8(v) {\n          return n(v, 8);\n        }\n        /**\n         *  Return a new ``uint16`` type for %%v%%.\n         */\n        static uint16(v) {\n          return n(v, 16);\n        }\n        /**\n         *  Return a new ``uint24`` type for %%v%%.\n         */\n        static uint24(v) {\n          return n(v, 24);\n        }\n        /**\n         *  Return a new ``uint32`` type for %%v%%.\n         */\n        static uint32(v) {\n          return n(v, 32);\n        }\n        /**\n         *  Return a new ``uint40`` type for %%v%%.\n         */\n        static uint40(v) {\n          return n(v, 40);\n        }\n        /**\n         *  Return a new ``uint48`` type for %%v%%.\n         */\n        static uint48(v) {\n          return n(v, 48);\n        }\n        /**\n         *  Return a new ``uint56`` type for %%v%%.\n         */\n        static uint56(v) {\n          return n(v, 56);\n        }\n        /**\n         *  Return a new ``uint64`` type for %%v%%.\n         */\n        static uint64(v) {\n          return n(v, 64);\n        }\n        /**\n         *  Return a new ``uint72`` type for %%v%%.\n         */\n        static uint72(v) {\n          return n(v, 72);\n        }\n        /**\n         *  Return a new ``uint80`` type for %%v%%.\n         */\n        static uint80(v) {\n          return n(v, 80);\n        }\n        /**\n         *  Return a new ``uint88`` type for %%v%%.\n         */\n        static uint88(v) {\n          return n(v, 88);\n        }\n        /**\n         *  Return a new ``uint96`` type for %%v%%.\n         */\n        static uint96(v) {\n          return n(v, 96);\n        }\n        /**\n         *  Return a new ``uint104`` type for %%v%%.\n         */\n        static uint104(v) {\n          return n(v, 104);\n        }\n        /**\n         *  Return a new ``uint112`` type for %%v%%.\n         */\n        static uint112(v) {\n          return n(v, 112);\n        }\n        /**\n         *  Return a new ``uint120`` type for %%v%%.\n         */\n        static uint120(v) {\n          return n(v, 120);\n        }\n        /**\n         *  Return a new ``uint128`` type for %%v%%.\n         */\n        static uint128(v) {\n          return n(v, 128);\n        }\n        /**\n         *  Return a new ``uint136`` type for %%v%%.\n         */\n        static uint136(v) {\n          return n(v, 136);\n        }\n        /**\n         *  Return a new ``uint144`` type for %%v%%.\n         */\n        static uint144(v) {\n          return n(v, 144);\n        }\n        /**\n         *  Return a new ``uint152`` type for %%v%%.\n         */\n        static uint152(v) {\n          return n(v, 152);\n        }\n        /**\n         *  Return a new ``uint160`` type for %%v%%.\n         */\n        static uint160(v) {\n          return n(v, 160);\n        }\n        /**\n         *  Return a new ``uint168`` type for %%v%%.\n         */\n        static uint168(v) {\n          return n(v, 168);\n        }\n        /**\n         *  Return a new ``uint176`` type for %%v%%.\n         */\n        static uint176(v) {\n          return n(v, 176);\n        }\n        /**\n         *  Return a new ``uint184`` type for %%v%%.\n         */\n        static uint184(v) {\n          return n(v, 184);\n        }\n        /**\n         *  Return a new ``uint192`` type for %%v%%.\n         */\n        static uint192(v) {\n          return n(v, 192);\n        }\n        /**\n         *  Return a new ``uint200`` type for %%v%%.\n         */\n        static uint200(v) {\n          return n(v, 200);\n        }\n        /**\n         *  Return a new ``uint208`` type for %%v%%.\n         */\n        static uint208(v) {\n          return n(v, 208);\n        }\n        /**\n         *  Return a new ``uint216`` type for %%v%%.\n         */\n        static uint216(v) {\n          return n(v, 216);\n        }\n        /**\n         *  Return a new ``uint224`` type for %%v%%.\n         */\n        static uint224(v) {\n          return n(v, 224);\n        }\n        /**\n         *  Return a new ``uint232`` type for %%v%%.\n         */\n        static uint232(v) {\n          return n(v, 232);\n        }\n        /**\n         *  Return a new ``uint240`` type for %%v%%.\n         */\n        static uint240(v) {\n          return n(v, 240);\n        }\n        /**\n         *  Return a new ``uint248`` type for %%v%%.\n         */\n        static uint248(v) {\n          return n(v, 248);\n        }\n        /**\n         *  Return a new ``uint256`` type for %%v%%.\n         */\n        static uint256(v) {\n          return n(v, 256);\n        }\n        /**\n         *  Return a new ``uint256`` type for %%v%%.\n         */\n        static uint(v) {\n          return n(v, 256);\n        }\n        /**\n         *  Return a new ``int8`` type for %%v%%.\n         */\n        static int8(v) {\n          return n(v, -8);\n        }\n        /**\n         *  Return a new ``int16`` type for %%v%%.\n         */\n        static int16(v) {\n          return n(v, -16);\n        }\n        /**\n         *  Return a new ``int24`` type for %%v%%.\n         */\n        static int24(v) {\n          return n(v, -24);\n        }\n        /**\n         *  Return a new ``int32`` type for %%v%%.\n         */\n        static int32(v) {\n          return n(v, -32);\n        }\n        /**\n         *  Return a new ``int40`` type for %%v%%.\n         */\n        static int40(v) {\n          return n(v, -40);\n        }\n        /**\n         *  Return a new ``int48`` type for %%v%%.\n         */\n        static int48(v) {\n          return n(v, -48);\n        }\n        /**\n         *  Return a new ``int56`` type for %%v%%.\n         */\n        static int56(v) {\n          return n(v, -56);\n        }\n        /**\n         *  Return a new ``int64`` type for %%v%%.\n         */\n        static int64(v) {\n          return n(v, -64);\n        }\n        /**\n         *  Return a new ``int72`` type for %%v%%.\n         */\n        static int72(v) {\n          return n(v, -72);\n        }\n        /**\n         *  Return a new ``int80`` type for %%v%%.\n         */\n        static int80(v) {\n          return n(v, -80);\n        }\n        /**\n         *  Return a new ``int88`` type for %%v%%.\n         */\n        static int88(v) {\n          return n(v, -88);\n        }\n        /**\n         *  Return a new ``int96`` type for %%v%%.\n         */\n        static int96(v) {\n          return n(v, -96);\n        }\n        /**\n         *  Return a new ``int104`` type for %%v%%.\n         */\n        static int104(v) {\n          return n(v, -104);\n        }\n        /**\n         *  Return a new ``int112`` type for %%v%%.\n         */\n        static int112(v) {\n          return n(v, -112);\n        }\n        /**\n         *  Return a new ``int120`` type for %%v%%.\n         */\n        static int120(v) {\n          return n(v, -120);\n        }\n        /**\n         *  Return a new ``int128`` type for %%v%%.\n         */\n        static int128(v) {\n          return n(v, -128);\n        }\n        /**\n         *  Return a new ``int136`` type for %%v%%.\n         */\n        static int136(v) {\n          return n(v, -136);\n        }\n        /**\n         *  Return a new ``int144`` type for %%v%%.\n         */\n        static int144(v) {\n          return n(v, -144);\n        }\n        /**\n         *  Return a new ``int52`` type for %%v%%.\n         */\n        static int152(v) {\n          return n(v, -152);\n        }\n        /**\n         *  Return a new ``int160`` type for %%v%%.\n         */\n        static int160(v) {\n          return n(v, -160);\n        }\n        /**\n         *  Return a new ``int168`` type for %%v%%.\n         */\n        static int168(v) {\n          return n(v, -168);\n        }\n        /**\n         *  Return a new ``int176`` type for %%v%%.\n         */\n        static int176(v) {\n          return n(v, -176);\n        }\n        /**\n         *  Return a new ``int184`` type for %%v%%.\n         */\n        static int184(v) {\n          return n(v, -184);\n        }\n        /**\n         *  Return a new ``int92`` type for %%v%%.\n         */\n        static int192(v) {\n          return n(v, -192);\n        }\n        /**\n         *  Return a new ``int200`` type for %%v%%.\n         */\n        static int200(v) {\n          return n(v, -200);\n        }\n        /**\n         *  Return a new ``int208`` type for %%v%%.\n         */\n        static int208(v) {\n          return n(v, -208);\n        }\n        /**\n         *  Return a new ``int216`` type for %%v%%.\n         */\n        static int216(v) {\n          return n(v, -216);\n        }\n        /**\n         *  Return a new ``int224`` type for %%v%%.\n         */\n        static int224(v) {\n          return n(v, -224);\n        }\n        /**\n         *  Return a new ``int232`` type for %%v%%.\n         */\n        static int232(v) {\n          return n(v, -232);\n        }\n        /**\n         *  Return a new ``int240`` type for %%v%%.\n         */\n        static int240(v) {\n          return n(v, -240);\n        }\n        /**\n         *  Return a new ``int248`` type for %%v%%.\n         */\n        static int248(v) {\n          return n(v, -248);\n        }\n        /**\n         *  Return a new ``int256`` type for %%v%%.\n         */\n        static int256(v) {\n          return n(v, -256);\n        }\n        /**\n         *  Return a new ``int256`` type for %%v%%.\n         */\n        static int(v) {\n          return n(v, -256);\n        }\n        /**\n         *  Return a new ``bytes1`` type for %%v%%.\n         */\n        static bytes1(v) {\n          return b(v, 1);\n        }\n        /**\n         *  Return a new ``bytes2`` type for %%v%%.\n         */\n        static bytes2(v) {\n          return b(v, 2);\n        }\n        /**\n         *  Return a new ``bytes3`` type for %%v%%.\n         */\n        static bytes3(v) {\n          return b(v, 3);\n        }\n        /**\n         *  Return a new ``bytes4`` type for %%v%%.\n         */\n        static bytes4(v) {\n          return b(v, 4);\n        }\n        /**\n         *  Return a new ``bytes5`` type for %%v%%.\n         */\n        static bytes5(v) {\n          return b(v, 5);\n        }\n        /**\n         *  Return a new ``bytes6`` type for %%v%%.\n         */\n        static bytes6(v) {\n          return b(v, 6);\n        }\n        /**\n         *  Return a new ``bytes7`` type for %%v%%.\n         */\n        static bytes7(v) {\n          return b(v, 7);\n        }\n        /**\n         *  Return a new ``bytes8`` type for %%v%%.\n         */\n        static bytes8(v) {\n          return b(v, 8);\n        }\n        /**\n         *  Return a new ``bytes9`` type for %%v%%.\n         */\n        static bytes9(v) {\n          return b(v, 9);\n        }\n        /**\n         *  Return a new ``bytes10`` type for %%v%%.\n         */\n        static bytes10(v) {\n          return b(v, 10);\n        }\n        /**\n         *  Return a new ``bytes11`` type for %%v%%.\n         */\n        static bytes11(v) {\n          return b(v, 11);\n        }\n        /**\n         *  Return a new ``bytes12`` type for %%v%%.\n         */\n        static bytes12(v) {\n          return b(v, 12);\n        }\n        /**\n         *  Return a new ``bytes13`` type for %%v%%.\n         */\n        static bytes13(v) {\n          return b(v, 13);\n        }\n        /**\n         *  Return a new ``bytes14`` type for %%v%%.\n         */\n        static bytes14(v) {\n          return b(v, 14);\n        }\n        /**\n         *  Return a new ``bytes15`` type for %%v%%.\n         */\n        static bytes15(v) {\n          return b(v, 15);\n        }\n        /**\n         *  Return a new ``bytes16`` type for %%v%%.\n         */\n        static bytes16(v) {\n          return b(v, 16);\n        }\n        /**\n         *  Return a new ``bytes17`` type for %%v%%.\n         */\n        static bytes17(v) {\n          return b(v, 17);\n        }\n        /**\n         *  Return a new ``bytes18`` type for %%v%%.\n         */\n        static bytes18(v) {\n          return b(v, 18);\n        }\n        /**\n         *  Return a new ``bytes19`` type for %%v%%.\n         */\n        static bytes19(v) {\n          return b(v, 19);\n        }\n        /**\n         *  Return a new ``bytes20`` type for %%v%%.\n         */\n        static bytes20(v) {\n          return b(v, 20);\n        }\n        /**\n         *  Return a new ``bytes21`` type for %%v%%.\n         */\n        static bytes21(v) {\n          return b(v, 21);\n        }\n        /**\n         *  Return a new ``bytes22`` type for %%v%%.\n         */\n        static bytes22(v) {\n          return b(v, 22);\n        }\n        /**\n         *  Return a new ``bytes23`` type for %%v%%.\n         */\n        static bytes23(v) {\n          return b(v, 23);\n        }\n        /**\n         *  Return a new ``bytes24`` type for %%v%%.\n         */\n        static bytes24(v) {\n          return b(v, 24);\n        }\n        /**\n         *  Return a new ``bytes25`` type for %%v%%.\n         */\n        static bytes25(v) {\n          return b(v, 25);\n        }\n        /**\n         *  Return a new ``bytes26`` type for %%v%%.\n         */\n        static bytes26(v) {\n          return b(v, 26);\n        }\n        /**\n         *  Return a new ``bytes27`` type for %%v%%.\n         */\n        static bytes27(v) {\n          return b(v, 27);\n        }\n        /**\n         *  Return a new ``bytes28`` type for %%v%%.\n         */\n        static bytes28(v) {\n          return b(v, 28);\n        }\n        /**\n         *  Return a new ``bytes29`` type for %%v%%.\n         */\n        static bytes29(v) {\n          return b(v, 29);\n        }\n        /**\n         *  Return a new ``bytes30`` type for %%v%%.\n         */\n        static bytes30(v) {\n          return b(v, 30);\n        }\n        /**\n         *  Return a new ``bytes31`` type for %%v%%.\n         */\n        static bytes31(v) {\n          return b(v, 31);\n        }\n        /**\n         *  Return a new ``bytes32`` type for %%v%%.\n         */\n        static bytes32(v) {\n          return b(v, 32);\n        }\n        /**\n         *  Return a new ``address`` type for %%v%%.\n         */\n        static address(v) {\n          return new _Typed(_gaurd, \"address\", v);\n        }\n        /**\n         *  Return a new ``bool`` type for %%v%%.\n         */\n        static bool(v) {\n          return new _Typed(_gaurd, \"bool\", !!v);\n        }\n        /**\n         *  Return a new ``bytes`` type for %%v%%.\n         */\n        static bytes(v) {\n          return new _Typed(_gaurd, \"bytes\", v);\n        }\n        /**\n         *  Return a new ``string`` type for %%v%%.\n         */\n        static string(v) {\n          return new _Typed(_gaurd, \"string\", v);\n        }\n        /**\n         *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n         */\n        static array(v, dynamic) {\n          throw new Error(\"not implemented yet\");\n          return new _Typed(_gaurd, \"array\", v, dynamic);\n        }\n        /**\n         *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n         */\n        static tuple(v, name) {\n          throw new Error(\"not implemented yet\");\n          return new _Typed(_gaurd, \"tuple\", v, name);\n        }\n        /**\n         *  Return a new ``uint8`` type for %%v%%.\n         */\n        static overrides(v) {\n          return new _Typed(_gaurd, \"overrides\", Object.assign({}, v));\n        }\n        /**\n         *  Returns true only if %%value%% is a [[Typed]] instance.\n         */\n        static isTyped(value) {\n          return value && typeof value === \"object\" && \"_typedSymbol\" in value && value._typedSymbol === _typedSymbol;\n        }\n        /**\n         *  If the value is a [[Typed]] instance, validates the underlying value\n         *  and returns it, otherwise returns value directly.\n         *\n         *  This is useful for functions that with to accept either a [[Typed]]\n         *  object or values.\n         */\n        static dereference(value, type) {\n          if (_Typed.isTyped(value)) {\n            if (value.type !== type) {\n              throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);\n            }\n            return value.value;\n          }\n          return value;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/address.js\n  var AddressCoder;\n  var init_address3 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/address.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_maths();\n      init_typed();\n      init_abstract_coder();\n      AddressCoder = class extends Coder {\n        constructor(localName) {\n          super(\"address\", \"address\", localName, false);\n        }\n        defaultValue() {\n          return \"0x0000000000000000000000000000000000000000\";\n        }\n        encode(writer, _value) {\n          let value = Typed.dereference(_value, \"string\");\n          try {\n            value = getAddress(value);\n          } catch (error) {\n            return this._throwError(error.message, _value);\n          }\n          return writer.writeValue(value);\n        }\n        decode(reader) {\n          return getAddress(toBeHex(reader.readValue(), 20));\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/anonymous.js\n  var AnonymousCoder;\n  var init_anonymous = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/anonymous.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_abstract_coder();\n      AnonymousCoder = class extends Coder {\n        coder;\n        constructor(coder) {\n          super(coder.name, coder.type, \"_\", coder.dynamic);\n          this.coder = coder;\n        }\n        defaultValue() {\n          return this.coder.defaultValue();\n        }\n        encode(writer, value) {\n          return this.coder.encode(writer, value);\n        }\n        decode(reader) {\n          return this.coder.decode(reader);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/array.js\n  function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n      arrayValues = values;\n    } else if (values && typeof values === \"object\") {\n      let unique = {};\n      arrayValues = coders.map((coder) => {\n        const name = coder.localName;\n        assert2(name, \"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n        assert2(!unique[name], \"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n        unique[name] = true;\n        return values[name];\n      });\n    } else {\n      assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n      let value = arrayValues[index];\n      if (coder.dynamic) {\n        let dynamicOffset = dynamicWriter.length;\n        coder.encode(dynamicWriter, value);\n        let updateFunc = staticWriter.writeUpdatableValue();\n        updateFuncs.push((baseOffset) => {\n          updateFunc(baseOffset + dynamicOffset);\n        });\n      } else {\n        coder.encode(staticWriter, value);\n      }\n    });\n    updateFuncs.forEach((func) => {\n      func(staticWriter.length);\n    });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n  }\n  function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n      let value = null;\n      if (coder.dynamic) {\n        let offset = reader.readIndex();\n        let offsetReader = baseReader.subReader(offset);\n        try {\n          value = coder.decode(offsetReader);\n        } catch (error) {\n          if (isError(error, \"BUFFER_OVERRUN\")) {\n            throw error;\n          }\n          value = error;\n          value.baseType = coder.name;\n          value.name = coder.localName;\n          value.type = coder.type;\n        }\n      } else {\n        try {\n          value = coder.decode(reader);\n        } catch (error) {\n          if (isError(error, \"BUFFER_OVERRUN\")) {\n            throw error;\n          }\n          value = error;\n          value.baseType = coder.name;\n          value.name = coder.localName;\n          value.type = coder.type;\n        }\n      }\n      if (value == void 0) {\n        throw new Error(\"investigate\");\n      }\n      values.push(value);\n      keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n  }\n  var ArrayCoder;\n  var init_array = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/array.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_typed();\n      init_abstract_coder();\n      init_anonymous();\n      ArrayCoder = class extends Coder {\n        coder;\n        length;\n        constructor(coder, length, localName) {\n          const type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n          const dynamic = length === -1 || coder.dynamic;\n          super(\"array\", type, localName, dynamic);\n          defineProperties(this, { coder, length });\n        }\n        defaultValue() {\n          const defaultChild = this.coder.defaultValue();\n          const result = [];\n          for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n          }\n          return result;\n        }\n        encode(writer, _value) {\n          const value = Typed.dereference(_value, \"array\");\n          if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n          }\n          let count = this.length;\n          if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n          }\n          assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n          let coders = [];\n          for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n          }\n          return pack(writer, coders, value);\n        }\n        decode(reader) {\n          let count = this.length;\n          if (count === -1) {\n            count = reader.readIndex();\n            assert2(count * WordSize <= reader.dataLength, \"insufficient data length\", \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n          }\n          let coders = [];\n          for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n          }\n          return unpack(reader, coders);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/boolean.js\n  var BooleanCoder;\n  var init_boolean = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/boolean.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_typed();\n      init_abstract_coder();\n      BooleanCoder = class extends Coder {\n        constructor(localName) {\n          super(\"bool\", \"bool\", localName, false);\n        }\n        defaultValue() {\n          return false;\n        }\n        encode(writer, _value) {\n          const value = Typed.dereference(_value, \"bool\");\n          return writer.writeValue(value ? 1 : 0);\n        }\n        decode(reader) {\n          return !!reader.readValue();\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/bytes.js\n  var DynamicBytesCoder, BytesCoder;\n  var init_bytes = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/bytes.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_abstract_coder();\n      DynamicBytesCoder = class extends Coder {\n        constructor(type, localName) {\n          super(type, type, localName, true);\n        }\n        defaultValue() {\n          return \"0x\";\n        }\n        encode(writer, value) {\n          value = getBytesCopy(value);\n          let length = writer.writeValue(value.length);\n          length += writer.writeBytes(value);\n          return length;\n        }\n        decode(reader) {\n          return reader.readBytes(reader.readIndex(), true);\n        }\n      };\n      BytesCoder = class extends DynamicBytesCoder {\n        constructor(localName) {\n          super(\"bytes\", localName);\n        }\n        decode(reader) {\n          return hexlify(super.decode(reader));\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js\n  var FixedBytesCoder;\n  var init_fixed_bytes = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_typed();\n      init_abstract_coder();\n      FixedBytesCoder = class extends Coder {\n        size;\n        constructor(size, localName) {\n          let name = \"bytes\" + String(size);\n          super(name, name, localName, false);\n          defineProperties(this, { size }, { size: \"number\" });\n        }\n        defaultValue() {\n          return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n        }\n        encode(writer, _value) {\n          let data = getBytesCopy(Typed.dereference(_value, this.type));\n          if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n          }\n          return writer.writeBytes(data);\n        }\n        decode(reader) {\n          return hexlify(reader.readBytes(this.size));\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/null.js\n  var Empty, NullCoder;\n  var init_null = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/null.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_abstract_coder();\n      Empty = new Uint8Array([]);\n      NullCoder = class extends Coder {\n        constructor(localName) {\n          super(\"null\", \"\", localName, false);\n        }\n        defaultValue() {\n          return null;\n        }\n        encode(writer, value) {\n          if (value != null) {\n            this._throwError(\"not null\", value);\n          }\n          return writer.writeBytes(Empty);\n        }\n        decode(reader) {\n          reader.readBytes(0);\n          return null;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/number.js\n  var BN_05, BN_13, BN_MAX_UINT256, NumberCoder;\n  var init_number = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/number.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_typed();\n      init_abstract_coder();\n      BN_05 = BigInt(0);\n      BN_13 = BigInt(1);\n      BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      NumberCoder = class extends Coder {\n        size;\n        signed;\n        constructor(size, signed2, localName) {\n          const name = (signed2 ? \"int\" : \"uint\") + size * 8;\n          super(name, name, localName, false);\n          defineProperties(this, { size, signed: signed2 }, { size: \"number\", signed: \"boolean\" });\n        }\n        defaultValue() {\n          return 0;\n        }\n        encode(writer, _value) {\n          let value = getBigInt(Typed.dereference(_value, this.type));\n          let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n          if (this.signed) {\n            let bounds = mask(maxUintValue, this.size * 8 - 1);\n            if (value > bounds || value < -(bounds + BN_13)) {\n              this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n          } else if (value < BN_05 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n          }\n          return writer.writeValue(value);\n        }\n        decode(reader) {\n          let value = mask(reader.readValue(), this.size * 8);\n          if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n          }\n          return value;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/string.js\n  var StringCoder;\n  var init_string = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/string.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utf8();\n      init_typed();\n      init_bytes();\n      StringCoder = class extends DynamicBytesCoder {\n        constructor(localName) {\n          super(\"string\", localName);\n        }\n        defaultValue() {\n          return \"\";\n        }\n        encode(writer, _value) {\n          return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n        }\n        decode(reader) {\n          return toUtf8String(super.decode(reader));\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/tuple.js\n  var TupleCoder;\n  var init_tuple = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/coders/tuple.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_properties();\n      init_typed();\n      init_abstract_coder();\n      init_array();\n      TupleCoder = class extends Coder {\n        coders;\n        constructor(coders, localName) {\n          let dynamic = false;\n          const types = [];\n          coders.forEach((coder) => {\n            if (coder.dynamic) {\n              dynamic = true;\n            }\n            types.push(coder.type);\n          });\n          const type = \"tuple(\" + types.join(\",\") + \")\";\n          super(\"tuple\", type, localName, dynamic);\n          defineProperties(this, { coders: Object.freeze(coders.slice()) });\n        }\n        defaultValue() {\n          const values = [];\n          this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n          });\n          const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n              if (!accum[name]) {\n                accum[name] = 0;\n              }\n              accum[name]++;\n            }\n            return accum;\n          }, {});\n          this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n              return;\n            }\n            if (name === \"length\") {\n              name = \"_length\";\n            }\n            if (values[name] != null) {\n              return;\n            }\n            values[name] = values[index];\n          });\n          return Object.freeze(values);\n        }\n        encode(writer, _value) {\n          const value = Typed.dereference(_value, \"tuple\");\n          return pack(writer, this.coders, value);\n        }\n        decode(reader) {\n          return unpack(reader, this.coders);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/accesslist.js\n  function accessSetify(addr, storageKeys) {\n    return {\n      address: getAddress(addr),\n      storageKeys: storageKeys.map((storageKey, index) => {\n        assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${index}]`, storageKey);\n        return storageKey.toLowerCase();\n      })\n    };\n  }\n  function accessListify(value) {\n    if (Array.isArray(value)) {\n      return value.map((set, index) => {\n        if (Array.isArray(set)) {\n          assertArgument(set.length === 2, \"invalid slot set\", `value[${index}]`, set);\n          return accessSetify(set[0], set[1]);\n        }\n        assertArgument(set != null && typeof set === \"object\", \"invalid address-slot set\", \"value\", value);\n        return accessSetify(set.address, set.storageKeys);\n      });\n    }\n    assertArgument(value != null && typeof value === \"object\", \"invalid access list\", \"value\", value);\n    const result = Object.keys(value).map((addr) => {\n      const storageKeys = value[addr].reduce((accum, storageKey) => {\n        accum[storageKey] = true;\n        return accum;\n      }, {});\n      return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b2) => a.address.localeCompare(b2.address));\n    return result;\n  }\n  var init_accesslist = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/accesslist.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_utils();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/authorization.js\n  function authorizationify(auth) {\n    return {\n      address: getAddress(auth.address),\n      nonce: getBigInt(auth.nonce != null ? auth.nonce : 0),\n      chainId: getBigInt(auth.chainId != null ? auth.chainId : 0),\n      signature: Signature.from(auth.signature)\n    };\n  }\n  var init_authorization = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/authorization.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_crypto2();\n      init_utils();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/address.js\n  function computeAddress(key) {\n    let pubkey;\n    if (typeof key === \"string\") {\n      pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n      pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n  }\n  function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n  }\n  var init_address4 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/address.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_crypto2();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/transaction.js\n  function getKzgLibrary(kzg) {\n    const blobToKzgCommitment = (blob) => {\n      if (\"computeBlobProof\" in kzg) {\n        if (\"blobToKzgCommitment\" in kzg && typeof kzg.blobToKzgCommitment === \"function\") {\n          return getBytes(kzg.blobToKzgCommitment(hexlify(blob)));\n        }\n      } else if (\"blobToKzgCommitment\" in kzg && typeof kzg.blobToKzgCommitment === \"function\") {\n        return getBytes(kzg.blobToKzgCommitment(blob));\n      }\n      if (\"blobToKZGCommitment\" in kzg && typeof kzg.blobToKZGCommitment === \"function\") {\n        return getBytes(kzg.blobToKZGCommitment(hexlify(blob)));\n      }\n      assertArgument(false, \"unsupported KZG library\", \"kzg\", kzg);\n    };\n    const computeBlobKzgProof = (blob, commitment) => {\n      if (\"computeBlobProof\" in kzg && typeof kzg.computeBlobProof === \"function\") {\n        return getBytes(kzg.computeBlobProof(hexlify(blob), hexlify(commitment)));\n      }\n      if (\"computeBlobKzgProof\" in kzg && typeof kzg.computeBlobKzgProof === \"function\") {\n        return kzg.computeBlobKzgProof(blob, commitment);\n      }\n      if (\"computeBlobKZGProof\" in kzg && typeof kzg.computeBlobKZGProof === \"function\") {\n        return getBytes(kzg.computeBlobKZGProof(hexlify(blob), hexlify(commitment)));\n      }\n      assertArgument(false, \"unsupported KZG library\", \"kzg\", kzg);\n    };\n    return { blobToKzgCommitment, computeBlobKzgProof };\n  }\n  function getVersionedHash(version3, hash2) {\n    let versioned = version3.toString(16);\n    while (versioned.length < 2) {\n      versioned = \"0\" + versioned;\n    }\n    versioned += sha2562(hash2).substring(4);\n    return \"0x\" + versioned;\n  }\n  function handleAddress(value) {\n    if (value === \"0x\") {\n      return null;\n    }\n    return getAddress(value);\n  }\n  function handleAccessList(value, param) {\n    try {\n      return accessListify(value);\n    } catch (error) {\n      assertArgument(false, error.message, param, value);\n    }\n  }\n  function handleAuthorizationList(value, param) {\n    try {\n      if (!Array.isArray(value)) {\n        throw new Error(\"authorizationList: invalid array\");\n      }\n      const result = [];\n      for (let i = 0; i < value.length; i++) {\n        const auth = value[i];\n        if (!Array.isArray(auth)) {\n          throw new Error(`authorization[${i}]: invalid array`);\n        }\n        if (auth.length !== 6) {\n          throw new Error(`authorization[${i}]: wrong length`);\n        }\n        if (!auth[1]) {\n          throw new Error(`authorization[${i}]: null address`);\n        }\n        result.push({\n          address: handleAddress(auth[1]),\n          nonce: handleUint(auth[2], \"nonce\"),\n          chainId: handleUint(auth[0], \"chainId\"),\n          signature: Signature.from({\n            yParity: handleNumber(auth[3], \"yParity\"),\n            r: zeroPadValue(auth[4], 32),\n            s: zeroPadValue(auth[5], 32)\n          })\n        });\n      }\n      return result;\n    } catch (error) {\n      assertArgument(false, error.message, param, value);\n    }\n  }\n  function handleNumber(_value, param) {\n    if (_value === \"0x\") {\n      return 0;\n    }\n    return getNumber(_value, param);\n  }\n  function handleUint(_value, param) {\n    if (_value === \"0x\") {\n      return BN_06;\n    }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n  }\n  function formatNumber(_value, name) {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n  }\n  function formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n  }\n  function formatAuthorizationList(value) {\n    return value.map((a) => {\n      return [\n        formatNumber(a.chainId, \"chainId\"),\n        a.address,\n        formatNumber(a.nonce, \"nonce\"),\n        formatNumber(a.signature.yParity, \"yParity\"),\n        toBeArray(a.signature.r),\n        toBeArray(a.signature.s)\n      ];\n    });\n  }\n  function formatHashes(value, param) {\n    assertArgument(Array.isArray(value), `invalid ${param}`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n      assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${i}]`, value[i]);\n    }\n    return value;\n  }\n  function _parseLegacy(data) {\n    const fields = decodeRlp(data);\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6), \"invalid field count for legacy transaction\", \"data\", data);\n    const tx = {\n      type: 0,\n      nonce: handleNumber(fields[0], \"nonce\"),\n      gasPrice: handleUint(fields[1], \"gasPrice\"),\n      gasLimit: handleUint(fields[2], \"gasLimit\"),\n      to: handleAddress(fields[3]),\n      value: handleUint(fields[4], \"value\"),\n      data: hexlify(fields[5]),\n      chainId: BN_06\n    };\n    if (fields.length === 6) {\n      return tx;\n    }\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n    if (r === BN_06 && s === BN_06) {\n      tx.chainId = v;\n    } else {\n      let chainId = (v - BN_352) / BN_22;\n      if (chainId < BN_06) {\n        chainId = BN_06;\n      }\n      tx.chainId = chainId;\n      assertArgument(chainId !== BN_06 || (v === BN_272 || v === BN_282), \"non-canonical legacy v\", \"v\", fields[6]);\n      tx.signature = Signature.from({\n        r: zeroPadValue(fields[7], 32),\n        s: zeroPadValue(fields[8], 32),\n        v\n      });\n    }\n    return tx;\n  }\n  function _serializeLegacy(tx, sig) {\n    const fields = [\n      formatNumber(tx.nonce, \"nonce\"),\n      formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n      formatNumber(tx.gasLimit, \"gasLimit\"),\n      tx.to || \"0x\",\n      formatNumber(tx.value, \"value\"),\n      tx.data\n    ];\n    let chainId = BN_06;\n    if (tx.chainId != BN_06) {\n      chainId = getBigInt(tx.chainId, \"tx.chainId\");\n      assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    } else if (tx.signature) {\n      const legacy = tx.signature.legacyChainId;\n      if (legacy != null) {\n        chainId = legacy;\n      }\n    }\n    if (!sig) {\n      if (chainId !== BN_06) {\n        fields.push(toBeArray(chainId));\n        fields.push(\"0x\");\n        fields.push(\"0x\");\n      }\n      return encodeRlp(fields);\n    }\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_06) {\n      v = Signature.getChainIdV(chainId, sig.v);\n    } else if (BigInt(sig.v) !== v) {\n      assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n    return encodeRlp(fields);\n  }\n  function _parseEipSignature(tx, fields) {\n    let yParity;\n    try {\n      yParity = handleNumber(fields[0], \"yParity\");\n      if (yParity !== 0 && yParity !== 1) {\n        throw new Error(\"bad yParity\");\n      }\n    } catch (error) {\n      assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n  }\n  function _parseEip1559(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12), \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n    const tx = {\n      type: 2,\n      chainId: handleUint(fields[0], \"chainId\"),\n      nonce: handleNumber(fields[1], \"nonce\"),\n      maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n      maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n      gasPrice: null,\n      gasLimit: handleUint(fields[4], \"gasLimit\"),\n      to: handleAddress(fields[5]),\n      value: handleUint(fields[6], \"value\"),\n      data: hexlify(fields[7]),\n      accessList: handleAccessList(fields[8], \"accessList\")\n    };\n    if (fields.length === 9) {\n      return tx;\n    }\n    _parseEipSignature(tx, fields.slice(9));\n    return tx;\n  }\n  function _serializeEip1559(tx, sig) {\n    const fields = [\n      formatNumber(tx.chainId, \"chainId\"),\n      formatNumber(tx.nonce, \"nonce\"),\n      formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n      formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n      formatNumber(tx.gasLimit, \"gasLimit\"),\n      tx.to || \"0x\",\n      formatNumber(tx.value, \"value\"),\n      tx.data,\n      formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n      fields.push(formatNumber(sig.yParity, \"yParity\"));\n      fields.push(toBeArray(sig.r));\n      fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x02\", encodeRlp(fields)]);\n  }\n  function _parseEip2930(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11), \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n    const tx = {\n      type: 1,\n      chainId: handleUint(fields[0], \"chainId\"),\n      nonce: handleNumber(fields[1], \"nonce\"),\n      gasPrice: handleUint(fields[2], \"gasPrice\"),\n      gasLimit: handleUint(fields[3], \"gasLimit\"),\n      to: handleAddress(fields[4]),\n      value: handleUint(fields[5], \"value\"),\n      data: hexlify(fields[6]),\n      accessList: handleAccessList(fields[7], \"accessList\")\n    };\n    if (fields.length === 8) {\n      return tx;\n    }\n    _parseEipSignature(tx, fields.slice(8));\n    return tx;\n  }\n  function _serializeEip2930(tx, sig) {\n    const fields = [\n      formatNumber(tx.chainId, \"chainId\"),\n      formatNumber(tx.nonce, \"nonce\"),\n      formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n      formatNumber(tx.gasLimit, \"gasLimit\"),\n      tx.to || \"0x\",\n      formatNumber(tx.value, \"value\"),\n      tx.data,\n      formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n      fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n      fields.push(toBeArray(sig.r));\n      fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x01\", encodeRlp(fields)]);\n  }\n  function _parseEip4844(data) {\n    let fields = decodeRlp(getBytes(data).slice(1));\n    let typeName = \"3\";\n    let blobs = null;\n    if (fields.length === 4 && Array.isArray(fields[0])) {\n      typeName = \"3 (network format)\";\n      const fBlobs = fields[1], fCommits = fields[2], fProofs = fields[3];\n      assertArgument(Array.isArray(fBlobs), \"invalid network format: blobs not an array\", \"fields[1]\", fBlobs);\n      assertArgument(Array.isArray(fCommits), \"invalid network format: commitments not an array\", \"fields[2]\", fCommits);\n      assertArgument(Array.isArray(fProofs), \"invalid network format: proofs not an array\", \"fields[3]\", fProofs);\n      assertArgument(fBlobs.length === fCommits.length, \"invalid network format: blobs/commitments length mismatch\", \"fields\", fields);\n      assertArgument(fBlobs.length === fProofs.length, \"invalid network format: blobs/proofs length mismatch\", \"fields\", fields);\n      blobs = [];\n      for (let i = 0; i < fields[1].length; i++) {\n        blobs.push({\n          data: fBlobs[i],\n          commitment: fCommits[i],\n          proof: fProofs[i]\n        });\n      }\n      fields = fields[0];\n    }\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14), `invalid field count for transaction type: ${typeName}`, \"data\", hexlify(data));\n    const tx = {\n      type: 3,\n      chainId: handleUint(fields[0], \"chainId\"),\n      nonce: handleNumber(fields[1], \"nonce\"),\n      maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n      maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n      gasPrice: null,\n      gasLimit: handleUint(fields[4], \"gasLimit\"),\n      to: handleAddress(fields[5]),\n      value: handleUint(fields[6], \"value\"),\n      data: hexlify(fields[7]),\n      accessList: handleAccessList(fields[8], \"accessList\"),\n      maxFeePerBlobGas: handleUint(fields[9], \"maxFeePerBlobGas\"),\n      blobVersionedHashes: fields[10]\n    };\n    if (blobs) {\n      tx.blobs = blobs;\n    }\n    assertArgument(tx.to != null, `invalid address for transaction type: ${typeName}`, \"data\", data);\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n      assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${i}: must be length 32`, \"data\", data);\n    }\n    if (fields.length === 11) {\n      return tx;\n    }\n    _parseEipSignature(tx, fields.slice(11));\n    return tx;\n  }\n  function _serializeEip4844(tx, sig, blobs) {\n    const fields = [\n      formatNumber(tx.chainId, \"chainId\"),\n      formatNumber(tx.nonce, \"nonce\"),\n      formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n      formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n      formatNumber(tx.gasLimit, \"gasLimit\"),\n      tx.to || ZeroAddress,\n      formatNumber(tx.value, \"value\"),\n      tx.data,\n      formatAccessList(tx.accessList || []),\n      formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n      formatHashes(tx.blobVersionedHashes || [], \"blobVersionedHashes\")\n    ];\n    if (sig) {\n      fields.push(formatNumber(sig.yParity, \"yParity\"));\n      fields.push(toBeArray(sig.r));\n      fields.push(toBeArray(sig.s));\n      if (blobs) {\n        return concat([\n          \"0x03\",\n          encodeRlp([\n            fields,\n            blobs.map((b2) => b2.data),\n            blobs.map((b2) => b2.commitment),\n            blobs.map((b2) => b2.proof)\n          ])\n        ]);\n      }\n    }\n    return concat([\"0x03\", encodeRlp(fields)]);\n  }\n  function _parseEip7702(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 10 || fields.length === 13), \"invalid field count for transaction type: 4\", \"data\", hexlify(data));\n    const tx = {\n      type: 4,\n      chainId: handleUint(fields[0], \"chainId\"),\n      nonce: handleNumber(fields[1], \"nonce\"),\n      maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n      maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n      gasPrice: null,\n      gasLimit: handleUint(fields[4], \"gasLimit\"),\n      to: handleAddress(fields[5]),\n      value: handleUint(fields[6], \"value\"),\n      data: hexlify(fields[7]),\n      accessList: handleAccessList(fields[8], \"accessList\"),\n      authorizationList: handleAuthorizationList(fields[9], \"authorizationList\")\n    };\n    if (fields.length === 10) {\n      return tx;\n    }\n    _parseEipSignature(tx, fields.slice(10));\n    return tx;\n  }\n  function _serializeEip7702(tx, sig) {\n    const fields = [\n      formatNumber(tx.chainId, \"chainId\"),\n      formatNumber(tx.nonce, \"nonce\"),\n      formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n      formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n      formatNumber(tx.gasLimit, \"gasLimit\"),\n      tx.to || \"0x\",\n      formatNumber(tx.value, \"value\"),\n      tx.data,\n      formatAccessList(tx.accessList || []),\n      formatAuthorizationList(tx.authorizationList || [])\n    ];\n    if (sig) {\n      fields.push(formatNumber(sig.yParity, \"yParity\"));\n      fields.push(toBeArray(sig.r));\n      fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x04\", encodeRlp(fields)]);\n  }\n  var BN_06, BN_22, BN_272, BN_282, BN_352, BN_MAX_UINT, BLOB_SIZE, Transaction;\n  var init_transaction = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/transaction.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_addresses();\n      init_crypto2();\n      init_utils();\n      init_accesslist();\n      init_authorization();\n      init_address4();\n      BN_06 = BigInt(0);\n      BN_22 = BigInt(2);\n      BN_272 = BigInt(27);\n      BN_282 = BigInt(28);\n      BN_352 = BigInt(35);\n      BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      BLOB_SIZE = 4096 * 32;\n      Transaction = class _Transaction {\n        #type;\n        #to;\n        #data;\n        #nonce;\n        #gasLimit;\n        #gasPrice;\n        #maxPriorityFeePerGas;\n        #maxFeePerGas;\n        #value;\n        #chainId;\n        #sig;\n        #accessList;\n        #maxFeePerBlobGas;\n        #blobVersionedHashes;\n        #kzg;\n        #blobs;\n        #auths;\n        /**\n         *  The transaction type.\n         *\n         *  If null, the type will be automatically inferred based on\n         *  explicit properties.\n         */\n        get type() {\n          return this.#type;\n        }\n        set type(value) {\n          switch (value) {\n            case null:\n              this.#type = null;\n              break;\n            case 0:\n            case \"legacy\":\n              this.#type = 0;\n              break;\n            case 1:\n            case \"berlin\":\n            case \"eip-2930\":\n              this.#type = 1;\n              break;\n            case 2:\n            case \"london\":\n            case \"eip-1559\":\n              this.#type = 2;\n              break;\n            case 3:\n            case \"cancun\":\n            case \"eip-4844\":\n              this.#type = 3;\n              break;\n            case 4:\n            case \"pectra\":\n            case \"eip-7702\":\n              this.#type = 4;\n              break;\n            default:\n              assertArgument(false, \"unsupported transaction type\", \"type\", value);\n          }\n        }\n        /**\n         *  The name of the transaction type.\n         */\n        get typeName() {\n          switch (this.type) {\n            case 0:\n              return \"legacy\";\n            case 1:\n              return \"eip-2930\";\n            case 2:\n              return \"eip-1559\";\n            case 3:\n              return \"eip-4844\";\n            case 4:\n              return \"eip-7702\";\n          }\n          return null;\n        }\n        /**\n         *  The ``to`` address for the transaction or ``null`` if the\n         *  transaction is an ``init`` transaction.\n         */\n        get to() {\n          const value = this.#to;\n          if (value == null && this.type === 3) {\n            return ZeroAddress;\n          }\n          return value;\n        }\n        set to(value) {\n          this.#to = value == null ? null : getAddress(value);\n        }\n        /**\n         *  The transaction nonce.\n         */\n        get nonce() {\n          return this.#nonce;\n        }\n        set nonce(value) {\n          this.#nonce = getNumber(value, \"value\");\n        }\n        /**\n         *  The gas limit.\n         */\n        get gasLimit() {\n          return this.#gasLimit;\n        }\n        set gasLimit(value) {\n          this.#gasLimit = getBigInt(value);\n        }\n        /**\n         *  The gas price.\n         *\n         *  On legacy networks this defines the fee that will be paid. On\n         *  EIP-1559 networks, this should be ``null``.\n         */\n        get gasPrice() {\n          const value = this.#gasPrice;\n          if (value == null && (this.type === 0 || this.type === 1)) {\n            return BN_06;\n          }\n          return value;\n        }\n        set gasPrice(value) {\n          this.#gasPrice = value == null ? null : getBigInt(value, \"gasPrice\");\n        }\n        /**\n         *  The maximum priority fee per unit of gas to pay. On legacy\n         *  networks this should be ``null``.\n         */\n        get maxPriorityFeePerGas() {\n          const value = this.#maxPriorityFeePerGas;\n          if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n              return BN_06;\n            }\n            return null;\n          }\n          return value;\n        }\n        set maxPriorityFeePerGas(value) {\n          this.#maxPriorityFeePerGas = value == null ? null : getBigInt(value, \"maxPriorityFeePerGas\");\n        }\n        /**\n         *  The maximum total fee per unit of gas to pay. On legacy\n         *  networks this should be ``null``.\n         */\n        get maxFeePerGas() {\n          const value = this.#maxFeePerGas;\n          if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n              return BN_06;\n            }\n            return null;\n          }\n          return value;\n        }\n        set maxFeePerGas(value) {\n          this.#maxFeePerGas = value == null ? null : getBigInt(value, \"maxFeePerGas\");\n        }\n        /**\n         *  The transaction data. For ``init`` transactions this is the\n         *  deployment code.\n         */\n        get data() {\n          return this.#data;\n        }\n        set data(value) {\n          this.#data = hexlify(value);\n        }\n        /**\n         *  The amount of ether (in wei) to send in this transactions.\n         */\n        get value() {\n          return this.#value;\n        }\n        set value(value) {\n          this.#value = getBigInt(value, \"value\");\n        }\n        /**\n         *  The chain ID this transaction is valid on.\n         */\n        get chainId() {\n          return this.#chainId;\n        }\n        set chainId(value) {\n          this.#chainId = getBigInt(value);\n        }\n        /**\n         *  If signed, the signature for this transaction.\n         */\n        get signature() {\n          return this.#sig || null;\n        }\n        set signature(value) {\n          this.#sig = value == null ? null : Signature.from(value);\n        }\n        /**\n         *  The access list.\n         *\n         *  An access list permits discounted (but pre-paid) access to\n         *  bytecode and state variable access within contract execution.\n         */\n        get accessList() {\n          const value = this.#accessList || null;\n          if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n              return [];\n            }\n            return null;\n          }\n          return value;\n        }\n        set accessList(value) {\n          this.#accessList = value == null ? null : accessListify(value);\n        }\n        get authorizationList() {\n          const value = this.#auths || null;\n          if (value == null) {\n            if (this.type === 4) {\n              return [];\n            }\n          }\n          return value;\n        }\n        set authorizationList(auths) {\n          this.#auths = auths == null ? null : auths.map((a) => authorizationify(a));\n        }\n        /**\n         *  The max fee per blob gas for Cancun transactions.\n         */\n        get maxFeePerBlobGas() {\n          const value = this.#maxFeePerBlobGas;\n          if (value == null && this.type === 3) {\n            return BN_06;\n          }\n          return value;\n        }\n        set maxFeePerBlobGas(value) {\n          this.#maxFeePerBlobGas = value == null ? null : getBigInt(value, \"maxFeePerBlobGas\");\n        }\n        /**\n         *  The BLOb versioned hashes for Cancun transactions.\n         */\n        get blobVersionedHashes() {\n          let value = this.#blobVersionedHashes;\n          if (value == null && this.type === 3) {\n            return [];\n          }\n          return value;\n        }\n        set blobVersionedHashes(value) {\n          if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n              assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${i}]`, value[i]);\n            }\n          }\n          this.#blobVersionedHashes = value;\n        }\n        /**\n         *  The BLObs for the Transaction, if any.\n         *\n         *  If ``blobs`` is non-``null``, then the [[seriailized]]\n         *  will return the network formatted sidecar, otherwise it\n         *  will return the standard [[link-eip-2718]] payload. The\n         *  [[unsignedSerialized]] is unaffected regardless.\n         *\n         *  When setting ``blobs``, either fully valid [[Blob]] objects\n         *  may be specified (i.e. correctly padded, with correct\n         *  committments and proofs) or a raw [[BytesLike]] may\n         *  be provided.\n         *\n         *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**\n         *  be already set. The blob will be correctly padded and the\n         *  [[KzgLibrary]] will be used to compute the committment and\n         *  proof for the blob.\n         *\n         *  A BLOb is a sequence of field elements, each of which must\n         *  be within the BLS field modulo, so some additional processing\n         *  may be required to encode arbitrary data to ensure each 32 byte\n         *  field is within the valid range.\n         *\n         *  Setting this automatically populates [[blobVersionedHashes]],\n         *  overwriting any existing values. Setting this to ``null``\n         *  does **not** remove the [[blobVersionedHashes]], leaving them\n         *  present.\n         */\n        get blobs() {\n          if (this.#blobs == null) {\n            return null;\n          }\n          return this.#blobs.map((b2) => Object.assign({}, b2));\n        }\n        set blobs(_blobs) {\n          if (_blobs == null) {\n            this.#blobs = null;\n            return;\n          }\n          const blobs = [];\n          const versionedHashes = [];\n          for (let i = 0; i < _blobs.length; i++) {\n            const blob = _blobs[i];\n            if (isBytesLike(blob)) {\n              assert2(this.#kzg, \"adding a raw blob requires a KZG library\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"set blobs()\"\n              });\n              let data = getBytes(blob);\n              assertArgument(data.length <= BLOB_SIZE, \"blob is too large\", `blobs[${i}]`, blob);\n              if (data.length !== BLOB_SIZE) {\n                const padded = new Uint8Array(BLOB_SIZE);\n                padded.set(data);\n                data = padded;\n              }\n              const commit = this.#kzg.blobToKzgCommitment(data);\n              const proof = hexlify(this.#kzg.computeBlobKzgProof(data, commit));\n              blobs.push({\n                data: hexlify(data),\n                commitment: hexlify(commit),\n                proof\n              });\n              versionedHashes.push(getVersionedHash(1, commit));\n            } else {\n              const commit = hexlify(blob.commitment);\n              blobs.push({\n                data: hexlify(blob.data),\n                commitment: commit,\n                proof: hexlify(blob.proof)\n              });\n              versionedHashes.push(getVersionedHash(1, commit));\n            }\n          }\n          this.#blobs = blobs;\n          this.#blobVersionedHashes = versionedHashes;\n        }\n        get kzg() {\n          return this.#kzg;\n        }\n        set kzg(kzg) {\n          if (kzg == null) {\n            this.#kzg = null;\n          } else {\n            this.#kzg = getKzgLibrary(kzg);\n          }\n        }\n        /**\n         *  Creates a new Transaction with default values.\n         */\n        constructor() {\n          this.#type = null;\n          this.#to = null;\n          this.#nonce = 0;\n          this.#gasLimit = BN_06;\n          this.#gasPrice = null;\n          this.#maxPriorityFeePerGas = null;\n          this.#maxFeePerGas = null;\n          this.#data = \"0x\";\n          this.#value = BN_06;\n          this.#chainId = BN_06;\n          this.#sig = null;\n          this.#accessList = null;\n          this.#maxFeePerBlobGas = null;\n          this.#blobVersionedHashes = null;\n          this.#kzg = null;\n          this.#blobs = null;\n          this.#auths = null;\n        }\n        /**\n         *  The transaction hash, if signed. Otherwise, ``null``.\n         */\n        get hash() {\n          if (this.signature == null) {\n            return null;\n          }\n          return keccak256(this.#getSerialized(true, false));\n        }\n        /**\n         *  The pre-image hash of this transaction.\n         *\n         *  This is the digest that a [[Signer]] must sign to authorize\n         *  this transaction.\n         */\n        get unsignedHash() {\n          return keccak256(this.unsignedSerialized);\n        }\n        /**\n         *  The sending address, if signed. Otherwise, ``null``.\n         */\n        get from() {\n          if (this.signature == null) {\n            return null;\n          }\n          return recoverAddress(this.unsignedHash, this.signature);\n        }\n        /**\n         *  The public key of the sender, if signed. Otherwise, ``null``.\n         */\n        get fromPublicKey() {\n          if (this.signature == null) {\n            return null;\n          }\n          return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n        }\n        /**\n         *  Returns true if signed.\n         *\n         *  This provides a Type Guard that properties requiring a signed\n         *  transaction are non-null.\n         */\n        isSigned() {\n          return this.signature != null;\n        }\n        #getSerialized(signed2, sidecar) {\n          assert2(!signed2 || this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n          const sig = signed2 ? this.signature : null;\n          switch (this.inferType()) {\n            case 0:\n              return _serializeLegacy(this, sig);\n            case 1:\n              return _serializeEip2930(this, sig);\n            case 2:\n              return _serializeEip1559(this, sig);\n            case 3:\n              return _serializeEip4844(this, sig, sidecar ? this.blobs : null);\n            case 4:\n              return _serializeEip7702(this, sig);\n          }\n          assert2(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n        }\n        /**\n         *  The serialized transaction.\n         *\n         *  This throws if the transaction is unsigned. For the pre-image,\n         *  use [[unsignedSerialized]].\n         */\n        get serialized() {\n          return this.#getSerialized(true, true);\n        }\n        /**\n         *  The transaction pre-image.\n         *\n         *  The hash of this is the digest which needs to be signed to\n         *  authorize this transaction.\n         */\n        get unsignedSerialized() {\n          return this.#getSerialized(false, false);\n        }\n        /**\n         *  Return the most \"likely\" type; currently the highest\n         *  supported transaction type.\n         */\n        inferType() {\n          const types = this.inferTypes();\n          if (types.indexOf(2) >= 0) {\n            return 2;\n          }\n          return types.pop();\n        }\n        /**\n         *  Validates the explicit properties and returns a list of compatible\n         *  transaction types.\n         */\n        inferTypes() {\n          const hasGasPrice = this.gasPrice != null;\n          const hasFee = this.maxFeePerGas != null || this.maxPriorityFeePerGas != null;\n          const hasAccessList = this.accessList != null;\n          const hasBlob = this.#maxFeePerBlobGas != null || this.#blobVersionedHashes;\n          if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert2(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n          }\n          assert2(!hasFee || this.type !== 0 && this.type !== 1, \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n          assert2(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this });\n          const types = [];\n          if (this.type != null) {\n            types.push(this.type);\n          } else {\n            if (this.authorizationList && this.authorizationList.length) {\n              types.push(4);\n            } else if (hasFee) {\n              types.push(2);\n            } else if (hasGasPrice) {\n              types.push(1);\n              if (!hasAccessList) {\n                types.push(0);\n              }\n            } else if (hasAccessList) {\n              types.push(1);\n              types.push(2);\n            } else if (hasBlob && this.to) {\n              types.push(3);\n            } else {\n              types.push(0);\n              types.push(1);\n              types.push(2);\n              types.push(3);\n            }\n          }\n          types.sort();\n          return types;\n        }\n        /**\n         *  Returns true if this transaction is a legacy transaction (i.e.\n         *  ``type === 0``).\n         *\n         *  This provides a Type Guard that the related properties are\n         *  non-null.\n         */\n        isLegacy() {\n          return this.type === 0;\n        }\n        /**\n         *  Returns true if this transaction is berlin hardform transaction (i.e.\n         *  ``type === 1``).\n         *\n         *  This provides a Type Guard that the related properties are\n         *  non-null.\n         */\n        isBerlin() {\n          return this.type === 1;\n        }\n        /**\n         *  Returns true if this transaction is london hardform transaction (i.e.\n         *  ``type === 2``).\n         *\n         *  This provides a Type Guard that the related properties are\n         *  non-null.\n         */\n        isLondon() {\n          return this.type === 2;\n        }\n        /**\n         *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n         *  transaction.\n         *\n         *  This provides a Type Guard that the related properties are\n         *  non-null.\n         */\n        isCancun() {\n          return this.type === 3;\n        }\n        /**\n         *  Create a copy of this transaciton.\n         */\n        clone() {\n          return _Transaction.from(this);\n        }\n        /**\n         *  Return a JSON-friendly object.\n         */\n        toJSON() {\n          const s = (v) => {\n            if (v == null) {\n              return null;\n            }\n            return v.toString();\n          };\n          return {\n            type: this.type,\n            to: this.to,\n            //            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON() : null,\n            accessList: this.accessList\n          };\n        }\n        /**\n         *  Create a **Transaction** from a serialized transaction or a\n         *  Transaction-like object.\n         */\n        static from(tx) {\n          if (tx == null) {\n            return new _Transaction();\n          }\n          if (typeof tx === \"string\") {\n            const payload = getBytes(tx);\n            if (payload[0] >= 127) {\n              return _Transaction.from(_parseLegacy(payload));\n            }\n            switch (payload[0]) {\n              case 1:\n                return _Transaction.from(_parseEip2930(payload));\n              case 2:\n                return _Transaction.from(_parseEip1559(payload));\n              case 3:\n                return _Transaction.from(_parseEip4844(payload));\n              case 4:\n                return _Transaction.from(_parseEip7702(payload));\n            }\n            assert2(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n          }\n          const result = new _Transaction();\n          if (tx.type != null) {\n            result.type = tx.type;\n          }\n          if (tx.to != null) {\n            result.to = tx.to;\n          }\n          if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n          }\n          if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n          }\n          if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n          }\n          if (tx.maxPriorityFeePerGas != null) {\n            result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n          }\n          if (tx.maxFeePerGas != null) {\n            result.maxFeePerGas = tx.maxFeePerGas;\n          }\n          if (tx.maxFeePerBlobGas != null) {\n            result.maxFeePerBlobGas = tx.maxFeePerBlobGas;\n          }\n          if (tx.data != null) {\n            result.data = tx.data;\n          }\n          if (tx.value != null) {\n            result.value = tx.value;\n          }\n          if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n          }\n          if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n          }\n          if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n          }\n          if (tx.authorizationList != null) {\n            result.authorizationList = tx.authorizationList;\n          }\n          if (tx.blobVersionedHashes != null) {\n            result.blobVersionedHashes = tx.blobVersionedHashes;\n          }\n          if (tx.kzg != null) {\n            result.kzg = tx.kzg;\n          }\n          if (tx.blobs != null) {\n            result.blobs = tx.blobs;\n          }\n          if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.hash'\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n          }\n          if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.from'\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n          }\n          return result;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/index.js\n  var init_transaction2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/transaction/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_accesslist();\n      init_authorization();\n      init_transaction();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/id.js\n  function id(value) {\n    return keccak256(toUtf8Bytes(value));\n  }\n  var init_id = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/id.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto2();\n      init_utils();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/@adraffy+ens-normalize@1.10.1/node_modules/@adraffy/ens-normalize/dist/index.mjs\n  function decode_arithmetic(bytes2) {\n    let pos = 0;\n    function u16() {\n      return bytes2[pos++] << 8 | bytes2[pos++];\n    }\n    let symbol_count = u16();\n    let total = 1;\n    let acc = [0, 1];\n    for (let i = 1; i < symbol_count; i++) {\n      acc.push(total += u16());\n    }\n    let skip = u16();\n    let pos_payload = pos;\n    pos += skip;\n    let read_width = 0;\n    let read_buffer = 0;\n    function read_bit() {\n      if (read_width == 0) {\n        read_buffer = read_buffer << 8 | bytes2[pos++];\n        read_width = 8;\n      }\n      return read_buffer >> --read_width & 1;\n    }\n    const N = 31;\n    const FULL = 2 ** N;\n    const HALF = FULL >>> 1;\n    const QRTR = HALF >> 1;\n    const MASK = FULL - 1;\n    let register = 0;\n    for (let i = 0; i < N; i++)\n      register = register << 1 | read_bit();\n    let symbols = [];\n    let low = 0;\n    let range = FULL;\n    while (true) {\n      let value = Math.floor(((register - low + 1) * total - 1) / range);\n      let start = 0;\n      let end = symbol_count;\n      while (end - start > 1) {\n        let mid = start + end >>> 1;\n        if (value < acc[mid]) {\n          end = mid;\n        } else {\n          start = mid;\n        }\n      }\n      if (start == 0)\n        break;\n      symbols.push(start);\n      let a = low + Math.floor(range * acc[start] / total);\n      let b2 = low + Math.floor(range * acc[start + 1] / total) - 1;\n      while (((a ^ b2) & HALF) == 0) {\n        register = register << 1 & MASK | read_bit();\n        a = a << 1 & MASK;\n        b2 = b2 << 1 & MASK | 1;\n      }\n      while (a & ~b2 & QRTR) {\n        register = register & HALF | register << 1 & MASK >>> 1 | read_bit();\n        a = a << 1 ^ HALF;\n        b2 = (b2 ^ HALF) << 1 | HALF | 1;\n      }\n      low = a;\n      range = 1 + b2 - a;\n    }\n    let offset = symbol_count - 4;\n    return symbols.map((x) => {\n      switch (x - offset) {\n        case 3:\n          return offset + 65792 + (bytes2[pos_payload++] << 16 | bytes2[pos_payload++] << 8 | bytes2[pos_payload++]);\n        case 2:\n          return offset + 256 + (bytes2[pos_payload++] << 8 | bytes2[pos_payload++]);\n        case 1:\n          return offset + bytes2[pos_payload++];\n        default:\n          return x - 1;\n      }\n    });\n  }\n  function read_payload(v) {\n    let pos = 0;\n    return () => v[pos++];\n  }\n  function read_compressed_payload(s) {\n    return read_payload(decode_arithmetic(unsafe_atob(s)));\n  }\n  function unsafe_atob(s) {\n    let lookup = [];\n    [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\n    let n2 = s.length;\n    let ret = new Uint8Array(6 * n2 >> 3);\n    for (let i = 0, pos = 0, width = 0, carry = 0; i < n2; i++) {\n      carry = carry << 6 | lookup[s.charCodeAt(i)];\n      width += 6;\n      if (width >= 8) {\n        ret[pos++] = carry >> (width -= 8);\n      }\n    }\n    return ret;\n  }\n  function signed(i) {\n    return i & 1 ? ~i >> 1 : i >> 1;\n  }\n  function read_deltas(n2, next) {\n    let v = Array(n2);\n    for (let i = 0, x = 0; i < n2; i++)\n      v[i] = x += signed(next());\n    return v;\n  }\n  function read_sorted(next, prev = 0) {\n    let ret = [];\n    while (true) {\n      let x = next();\n      let n2 = next();\n      if (!n2)\n        break;\n      prev += x;\n      for (let i = 0; i < n2; i++) {\n        ret.push(prev + i);\n      }\n      prev += n2 + 1;\n    }\n    return ret;\n  }\n  function read_sorted_arrays(next) {\n    return read_array_while(() => {\n      let v = read_sorted(next);\n      if (v.length)\n        return v;\n    });\n  }\n  function read_mapped(next) {\n    let ret = [];\n    while (true) {\n      let w = next();\n      if (w == 0)\n        break;\n      ret.push(read_linear_table(w, next));\n    }\n    while (true) {\n      let w = next() - 1;\n      if (w < 0)\n        break;\n      ret.push(read_replacement_table(w, next));\n    }\n    return ret.flat();\n  }\n  function read_array_while(next) {\n    let v = [];\n    while (true) {\n      let x = next(v.length);\n      if (!x)\n        break;\n      v.push(x);\n    }\n    return v;\n  }\n  function read_transposed(n2, w, next) {\n    let m = Array(n2).fill().map(() => []);\n    for (let i = 0; i < w; i++) {\n      read_deltas(n2, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n  }\n  function read_linear_table(w, next) {\n    let dx = 1 + next();\n    let dy = next();\n    let vN = read_array_while(next);\n    let m = read_transposed(vN.length, 1 + w, next);\n    return m.flatMap((v, i) => {\n      let [x, ...ys] = v;\n      return Array(vN[i]).fill().map((_, j) => {\n        let j_dy = j * dy;\n        return [x + j * dx, ys.map((y) => y + j_dy)];\n      });\n    });\n  }\n  function read_replacement_table(w, next) {\n    let n2 = 1 + next();\n    let m = read_transposed(n2, 1 + w, next);\n    return m.map((v) => [v[0], v.slice(1)]);\n  }\n  function read_trie(next) {\n    let ret = [];\n    let sorted = read_sorted(next);\n    expand(decode([]), []);\n    return ret;\n    function decode(Q) {\n      let S = next();\n      let B = read_array_while(() => {\n        let cps = read_sorted(next).map((i) => sorted[i]);\n        if (cps.length)\n          return decode(cps);\n      });\n      return { S, B, Q };\n    }\n    function expand({ S, B }, cps, saved) {\n      if (S & 4 && saved === cps[cps.length - 1])\n        return;\n      if (S & 2)\n        saved = cps[cps.length - 1];\n      if (S & 1)\n        ret.push(cps);\n      for (let br of B) {\n        for (let cp of br.Q) {\n          expand(br, [...cps, cp], saved);\n        }\n      }\n    }\n  }\n  function hex_cp(cp) {\n    return cp.toString(16).toUpperCase().padStart(2, \"0\");\n  }\n  function quote_cp(cp) {\n    return `{${hex_cp(cp)}}`;\n  }\n  function explode_cp(s) {\n    let cps = [];\n    for (let pos = 0, len = s.length; pos < len; ) {\n      let cp = s.codePointAt(pos);\n      pos += cp < 65536 ? 1 : 2;\n      cps.push(cp);\n    }\n    return cps;\n  }\n  function str_from_cps(cps) {\n    const chunk = 4096;\n    let len = cps.length;\n    if (len < chunk)\n      return String.fromCodePoint(...cps);\n    let buf = [];\n    for (let i = 0; i < len; ) {\n      buf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\n    }\n    return buf.join(\"\");\n  }\n  function compare_arrays(a, b2) {\n    let n2 = a.length;\n    let c = n2 - b2.length;\n    for (let i = 0; c == 0 && i < n2; i++)\n      c = a[i] - b2[i];\n    return c;\n  }\n  function unpack_cc(packed) {\n    return packed >> 24 & 255;\n  }\n  function unpack_cp(packed) {\n    return packed & 16777215;\n  }\n  function init$1() {\n    let r = read_compressed_payload(COMPRESSED);\n    SHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map((x) => [x, i + 1 << 24])));\n    EXCLUSIONS = new Set(read_sorted(r));\n    DECOMP = /* @__PURE__ */ new Map();\n    RECOMP = /* @__PURE__ */ new Map();\n    for (let [cp, cps] of read_mapped(r)) {\n      if (!EXCLUSIONS.has(cp) && cps.length == 2) {\n        let [a, b2] = cps;\n        let bucket = RECOMP.get(a);\n        if (!bucket) {\n          bucket = /* @__PURE__ */ new Map();\n          RECOMP.set(a, bucket);\n        }\n        bucket.set(b2, cp);\n      }\n      DECOMP.set(cp, cps.reverse());\n    }\n  }\n  function is_hangul(cp) {\n    return cp >= S0 && cp < S1;\n  }\n  function compose_pair(a, b2) {\n    if (a >= L0 && a < L1 && b2 >= V0 && b2 < V1) {\n      return S0 + (a - L0) * N_COUNT + (b2 - V0) * T_COUNT;\n    } else if (is_hangul(a) && b2 > T0 && b2 < T1 && (a - S0) % T_COUNT == 0) {\n      return a + (b2 - T0);\n    } else {\n      let recomp = RECOMP.get(a);\n      if (recomp) {\n        recomp = recomp.get(b2);\n        if (recomp) {\n          return recomp;\n        }\n      }\n      return -1;\n    }\n  }\n  function decomposed(cps) {\n    if (!SHIFTED_RANK)\n      init$1();\n    let ret = [];\n    let buf = [];\n    let check_order = false;\n    function add2(cp) {\n      let cc = SHIFTED_RANK.get(cp);\n      if (cc) {\n        check_order = true;\n        cp |= cc;\n      }\n      ret.push(cp);\n    }\n    for (let cp of cps) {\n      while (true) {\n        if (cp < 128) {\n          ret.push(cp);\n        } else if (is_hangul(cp)) {\n          let s_index = cp - S0;\n          let l_index = s_index / N_COUNT | 0;\n          let v_index = s_index % N_COUNT / T_COUNT | 0;\n          let t_index = s_index % T_COUNT;\n          add2(L0 + l_index);\n          add2(V0 + v_index);\n          if (t_index > 0)\n            add2(T0 + t_index);\n        } else {\n          let mapped = DECOMP.get(cp);\n          if (mapped) {\n            buf.push(...mapped);\n          } else {\n            add2(cp);\n          }\n        }\n        if (!buf.length)\n          break;\n        cp = buf.pop();\n      }\n    }\n    if (check_order && ret.length > 1) {\n      let prev_cc = unpack_cc(ret[0]);\n      for (let i = 1; i < ret.length; i++) {\n        let cc = unpack_cc(ret[i]);\n        if (cc == 0 || prev_cc <= cc) {\n          prev_cc = cc;\n          continue;\n        }\n        let j = i - 1;\n        while (true) {\n          let tmp = ret[j + 1];\n          ret[j + 1] = ret[j];\n          ret[j] = tmp;\n          if (!j)\n            break;\n          prev_cc = unpack_cc(ret[--j]);\n          if (prev_cc <= cc)\n            break;\n        }\n        prev_cc = unpack_cc(ret[i]);\n      }\n    }\n    return ret;\n  }\n  function composed_from_decomposed(v) {\n    let ret = [];\n    let stack = [];\n    let prev_cp = -1;\n    let prev_cc = 0;\n    for (let packed of v) {\n      let cc = unpack_cc(packed);\n      let cp = unpack_cp(packed);\n      if (prev_cp == -1) {\n        if (cc == 0) {\n          prev_cp = cp;\n        } else {\n          ret.push(cp);\n        }\n      } else if (prev_cc > 0 && prev_cc >= cc) {\n        if (cc == 0) {\n          ret.push(prev_cp, ...stack);\n          stack.length = 0;\n          prev_cp = cp;\n        } else {\n          stack.push(cp);\n        }\n        prev_cc = cc;\n      } else {\n        let composed = compose_pair(prev_cp, cp);\n        if (composed >= 0) {\n          prev_cp = composed;\n        } else if (prev_cc == 0 && cc == 0) {\n          ret.push(prev_cp);\n          prev_cp = cp;\n        } else {\n          stack.push(cp);\n          prev_cc = cc;\n        }\n      }\n    }\n    if (prev_cp >= 0) {\n      ret.push(prev_cp, ...stack);\n    }\n    return ret;\n  }\n  function nfd(cps) {\n    return decomposed(cps).map(unpack_cp);\n  }\n  function nfc(cps) {\n    return composed_from_decomposed(decomposed(cps));\n  }\n  function group_has_cp(g, cp) {\n    return g.P.has(cp) || g.Q.has(cp);\n  }\n  function init() {\n    if (MAPPED)\n      return;\n    let r = read_compressed_payload(COMPRESSED$1);\n    const read_sorted_array = () => read_sorted(r);\n    const read_sorted_set = () => new Set(read_sorted_array());\n    const set_add_many = (set, v) => v.forEach((x) => set.add(x));\n    MAPPED = new Map(read_mapped(r));\n    IGNORED = read_sorted_set();\n    CM = read_sorted_array();\n    NSM = new Set(read_sorted_array().map((i) => CM[i]));\n    CM = new Set(CM);\n    ESCAPE = read_sorted_set();\n    NFC_CHECK = read_sorted_set();\n    let chunks = read_sorted_arrays(r);\n    let unrestricted = r();\n    const read_chunked = () => {\n      let set = /* @__PURE__ */ new Set();\n      read_sorted_array().forEach((i) => set_add_many(set, chunks[i]));\n      set_add_many(set, read_sorted_array());\n      return set;\n    };\n    GROUPS = read_array_while((i) => {\n      let N = read_array_while(r).map((x) => x + 96);\n      if (N.length) {\n        let R = i >= unrestricted;\n        N[0] -= 32;\n        N = str_from_cps(N);\n        if (R)\n          N = `Restricted[${N}]`;\n        let P = read_chunked();\n        let Q = read_chunked();\n        let M = !r();\n        return { N, P, Q, M, R };\n      }\n    });\n    WHOLE_VALID = read_sorted_set();\n    WHOLE_MAP = /* @__PURE__ */ new Map();\n    let wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b2) => a - b2);\n    wholes.forEach((cp, i) => {\n      let d = r();\n      let w = wholes[i] = d ? wholes[i - d] : { V: [], M: /* @__PURE__ */ new Map() };\n      w.V.push(cp);\n      if (!WHOLE_VALID.has(cp)) {\n        WHOLE_MAP.set(cp, w);\n      }\n    });\n    for (let { V, M } of new Set(WHOLE_MAP.values())) {\n      let recs = [];\n      for (let cp of V) {\n        let gs = GROUPS.filter((g) => group_has_cp(g, cp));\n        let rec = recs.find(({ G }) => gs.some((g) => G.has(g)));\n        if (!rec) {\n          rec = { G: /* @__PURE__ */ new Set(), V: [] };\n          recs.push(rec);\n        }\n        rec.V.push(cp);\n        set_add_many(rec.G, gs);\n      }\n      let union = recs.flatMap((x) => Array_from(x.G));\n      for (let { G, V: V2 } of recs) {\n        let complement = new Set(union.filter((g) => !G.has(g)));\n        for (let cp of V2) {\n          M.set(cp, complement);\n        }\n      }\n    }\n    VALID = /* @__PURE__ */ new Set();\n    let multi = /* @__PURE__ */ new Set();\n    const add_to_union = (cp) => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\n    for (let g of GROUPS) {\n      for (let cp of g.P)\n        add_to_union(cp);\n      for (let cp of g.Q)\n        add_to_union(cp);\n    }\n    for (let cp of VALID) {\n      if (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\n        WHOLE_MAP.set(cp, UNIQUE_PH);\n      }\n    }\n    set_add_many(VALID, nfd(VALID));\n    EMOJI_LIST = read_trie(r).map((v) => Emoji.from(v)).sort(compare_arrays);\n    EMOJI_ROOT = /* @__PURE__ */ new Map();\n    for (let cps of EMOJI_LIST) {\n      let prev = [EMOJI_ROOT];\n      for (let cp of cps) {\n        let next = prev.map((node) => {\n          let child = node.get(cp);\n          if (!child) {\n            child = /* @__PURE__ */ new Map();\n            node.set(cp, child);\n          }\n          return child;\n        });\n        if (cp === FE0F) {\n          prev.push(...next);\n        } else {\n          prev = next;\n        }\n      }\n      for (let x of prev) {\n        x.V = cps;\n      }\n    }\n  }\n  function quoted_cp(cp) {\n    return (should_escape(cp) ? \"\" : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\n  }\n  function bidi_qq(s) {\n    return `\"${s}\"\\u200E`;\n  }\n  function check_label_extension(cps) {\n    if (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\n      throw new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`);\n    }\n  }\n  function check_leading_underscore(cps) {\n    const UNDERSCORE = 95;\n    for (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\n      if (cps[--i] !== UNDERSCORE) {\n        throw new Error(\"underscore allowed only at start\");\n      }\n    }\n  }\n  function check_fenced(cps) {\n    let cp = cps[0];\n    let prev = FENCED.get(cp);\n    if (prev)\n      throw error_placement(`leading ${prev}`);\n    let n2 = cps.length;\n    let last = -1;\n    for (let i = 1; i < n2; i++) {\n      cp = cps[i];\n      let match = FENCED.get(cp);\n      if (match) {\n        if (last == i)\n          throw error_placement(`${prev} + ${match}`);\n        last = i + 1;\n        prev = match;\n      }\n    }\n    if (last == n2)\n      throw error_placement(`trailing ${prev}`);\n  }\n  function safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\n    let buf = [];\n    if (is_combining_mark(cps[0]))\n      buf.push(\"\\u25CC\");\n    if (cps.length > max) {\n      max >>= 1;\n      cps = [...cps.slice(0, max), 8230, ...cps.slice(-max)];\n    }\n    let prev = 0;\n    let n2 = cps.length;\n    for (let i = 0; i < n2; i++) {\n      let cp = cps[i];\n      if (should_escape(cp)) {\n        buf.push(str_from_cps(cps.slice(prev, i)));\n        buf.push(quoter(cp));\n        prev = i + 1;\n      }\n    }\n    buf.push(str_from_cps(cps.slice(prev, n2)));\n    return buf.join(\"\");\n  }\n  function is_combining_mark(cp) {\n    init();\n    return CM.has(cp);\n  }\n  function should_escape(cp) {\n    init();\n    return ESCAPE.has(cp);\n  }\n  function ens_normalize(name) {\n    return flatten(split2(name, nfc, filter_fe0f));\n  }\n  function split2(name, nf, ef) {\n    if (!name)\n      return [];\n    init();\n    let offset = 0;\n    return name.split(STOP_CH).map((label) => {\n      let input = explode_cp(label);\n      let info = {\n        input,\n        offset\n        // codepoint, not substring!\n      };\n      offset += input.length + 1;\n      try {\n        let tokens = info.tokens = tokens_from_str(input, nf, ef);\n        let token_count = tokens.length;\n        let type;\n        if (!token_count) {\n          throw new Error(`empty label`);\n        }\n        let norm = info.output = tokens.flat();\n        check_leading_underscore(norm);\n        let emoji = info.emoji = token_count > 1 || tokens[0].is_emoji;\n        if (!emoji && norm.every((cp) => cp < 128)) {\n          check_label_extension(norm);\n          type = \"ASCII\";\n        } else {\n          let chars = tokens.flatMap((x) => x.is_emoji ? [] : x);\n          if (!chars.length) {\n            type = \"Emoji\";\n          } else {\n            if (CM.has(norm[0]))\n              throw error_placement(\"leading combining mark\");\n            for (let i = 1; i < token_count; i++) {\n              let cps = tokens[i];\n              if (!cps.is_emoji && CM.has(cps[0])) {\n                throw error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i - 1])} + ${safe_str_from_cps([cps[0]])}\"`);\n              }\n            }\n            check_fenced(norm);\n            let unique = Array_from(new Set(chars));\n            let [g] = determine_group(unique);\n            check_group(g, chars);\n            check_whole(g, unique);\n            type = g.N;\n          }\n        }\n        info.type = type;\n      } catch (err) {\n        info.error = err;\n      }\n      return info;\n    });\n  }\n  function check_whole(group, unique) {\n    let maker;\n    let shared = [];\n    for (let cp of unique) {\n      let whole = WHOLE_MAP.get(cp);\n      if (whole === UNIQUE_PH)\n        return;\n      if (whole) {\n        let set = whole.M.get(cp);\n        maker = maker ? maker.filter((g) => set.has(g)) : Array_from(set);\n        if (!maker.length)\n          return;\n      } else {\n        shared.push(cp);\n      }\n    }\n    if (maker) {\n      for (let g of maker) {\n        if (shared.every((cp) => group_has_cp(g, cp))) {\n          throw new Error(`whole-script confusable: ${group.N}/${g.N}`);\n        }\n      }\n    }\n  }\n  function determine_group(unique) {\n    let groups = GROUPS;\n    for (let cp of unique) {\n      let gs = groups.filter((g) => group_has_cp(g, cp));\n      if (!gs.length) {\n        if (!GROUPS.some((g) => group_has_cp(g, cp))) {\n          throw error_disallowed(cp);\n        } else {\n          throw error_group_member(groups[0], cp);\n        }\n      }\n      groups = gs;\n      if (gs.length == 1)\n        break;\n    }\n    return groups;\n  }\n  function flatten(split3) {\n    return split3.map(({ input, error, output: output2 }) => {\n      if (error) {\n        let msg = error.message;\n        throw new Error(split3.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`);\n      }\n      return str_from_cps(output2);\n    }).join(STOP_CH);\n  }\n  function error_disallowed(cp) {\n    return new Error(`disallowed character: ${quoted_cp(cp)}`);\n  }\n  function error_group_member(g, cp) {\n    let quoted = quoted_cp(cp);\n    let gg = GROUPS.find((g2) => g2.P.has(cp));\n    if (gg) {\n      quoted = `${gg.N} ${quoted}`;\n    }\n    return new Error(`illegal mixture: ${g.N} + ${quoted}`);\n  }\n  function error_placement(where) {\n    return new Error(`illegal placement: ${where}`);\n  }\n  function check_group(g, cps) {\n    for (let cp of cps) {\n      if (!group_has_cp(g, cp)) {\n        throw error_group_member(g, cp);\n      }\n    }\n    if (g.M) {\n      let decomposed2 = nfd(cps);\n      for (let i = 1, e = decomposed2.length; i < e; i++) {\n        if (NSM.has(decomposed2[i])) {\n          let j = i + 1;\n          for (let cp; j < e && NSM.has(cp = decomposed2[j]); j++) {\n            for (let k = i; k < j; k++) {\n              if (decomposed2[k] == cp) {\n                throw new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\n              }\n            }\n          }\n          if (j - i > NSM_MAX) {\n            throw new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed2.slice(i - 1, j)))} (${j - i}/${NSM_MAX})`);\n          }\n          i = j;\n        }\n      }\n    }\n  }\n  function tokens_from_str(input, nf, ef) {\n    let ret = [];\n    let chars = [];\n    input = input.slice().reverse();\n    while (input.length) {\n      let emoji = consume_emoji_reversed(input);\n      if (emoji) {\n        if (chars.length) {\n          ret.push(nf(chars));\n          chars = [];\n        }\n        ret.push(ef(emoji));\n      } else {\n        let cp = input.pop();\n        if (VALID.has(cp)) {\n          chars.push(cp);\n        } else {\n          let cps = MAPPED.get(cp);\n          if (cps) {\n            chars.push(...cps);\n          } else if (!IGNORED.has(cp)) {\n            throw error_disallowed(cp);\n          }\n        }\n      }\n    }\n    if (chars.length) {\n      ret.push(nf(chars));\n    }\n    return ret;\n  }\n  function filter_fe0f(cps) {\n    return cps.filter((cp) => cp != FE0F);\n  }\n  function consume_emoji_reversed(cps, eaten) {\n    let node = EMOJI_ROOT;\n    let emoji;\n    let pos = cps.length;\n    while (pos) {\n      node = node.get(cps[--pos]);\n      if (!node)\n        break;\n      let { V } = node;\n      if (V) {\n        emoji = V;\n        if (eaten)\n          eaten.push(...cps.slice(pos).reverse());\n        cps.length = pos;\n      }\n    }\n    return emoji;\n  }\n  var COMPRESSED$1, FENCED, NSM_MAX, COMPRESSED, S0, L0, V0, T0, L_COUNT, V_COUNT, T_COUNT, N_COUNT, S_COUNT, S1, L1, V1, T1, SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP, HYPHEN, STOP_CH, FE0F, UNIQUE_PH, Array_from, Emoji, MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\n  var init_dist = __esm({\n    \"../../../node_modules/.pnpm/@adraffy+ens-normalize@1.10.1/node_modules/@adraffy/ens-normalize/dist/index.mjs\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      COMPRESSED$1 = \"\";\n      FENCED = /* @__PURE__ */ new Map([[8217, \"apostrophe\"], [8260, \"fraction slash\"], [12539, \"middle dot\"]]);\n      NSM_MAX = 4;\n      COMPRESSED = \"AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g\";\n      S0 = 44032;\n      L0 = 4352;\n      V0 = 4449;\n      T0 = 4519;\n      L_COUNT = 19;\n      V_COUNT = 21;\n      T_COUNT = 28;\n      N_COUNT = V_COUNT * T_COUNT;\n      S_COUNT = L_COUNT * N_COUNT;\n      S1 = S0 + S_COUNT;\n      L1 = L0 + L_COUNT;\n      V1 = V0 + V_COUNT;\n      T1 = T0 + T_COUNT;\n      HYPHEN = 45;\n      STOP_CH = \".\";\n      FE0F = 65039;\n      UNIQUE_PH = 1;\n      Array_from = (x) => Array.from(x);\n      Emoji = class extends Array {\n        get is_emoji() {\n          return true;\n        }\n        // free tagging system\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/namehash.js\n  function checkComponent(comp) {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp);\n    return comp;\n  }\n  function ensNameSplit(name) {\n    const bytes2 = toUtf8Bytes(ensNormalize(name));\n    const comps = [];\n    if (name.length === 0) {\n      return comps;\n    }\n    let last = 0;\n    for (let i = 0; i < bytes2.length; i++) {\n      const d = bytes2[i];\n      if (d === 46) {\n        comps.push(checkComponent(bytes2.slice(last, i)));\n        last = i + 1;\n      }\n    }\n    assertArgument(last < bytes2.length, \"invalid ENS name; empty component\", \"name\", name);\n    comps.push(checkComponent(bytes2.slice(last)));\n    return comps;\n  }\n  function ensNormalize(name) {\n    try {\n      if (name.length === 0) {\n        throw new Error(\"empty label\");\n      }\n      return ens_normalize(name);\n    } catch (error) {\n      assertArgument(false, `invalid ENS name (${error.message})`, \"name\", name);\n    }\n  }\n  function namehash(name) {\n    assertArgument(typeof name === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n    let result = Zeros;\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n      result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n    return hexlify(result);\n  }\n  function dnsEncode(name, _maxLength) {\n    const length = _maxLength != null ? _maxLength : 63;\n    assertArgument(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n      assertArgument(comp.length <= length, `label ${JSON.stringify(name)} exceeds ${length} bytes`, \"name\", name);\n      const bytes2 = new Uint8Array(comp.length + 1);\n      bytes2.set(comp, 1);\n      bytes2[0] = bytes2.length - 1;\n      return bytes2;\n    }))) + \"00\";\n  }\n  var Zeros;\n  var init_namehash = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/namehash.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto2();\n      init_utils();\n      init_dist();\n      Zeros = new Uint8Array(32);\n      Zeros.fill(0);\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/typed-data.js\n  function hexPadRight(value) {\n    const bytes2 = getBytes(value);\n    const padOffset = bytes2.length % 32;\n    if (padOffset) {\n      return concat([bytes2, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes2);\n  }\n  function checkString(key) {\n    return function(value) {\n      assertArgument(typeof value === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n      return value;\n    };\n  }\n  function getBaseEncoder(type) {\n    {\n      const match = type.match(/^(u?)int(\\d+)$/);\n      if (match) {\n        const signed2 = match[1] === \"\";\n        const width = parseInt(match[2]);\n        assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n        const boundsUpper = mask(BN_MAX_UINT2562, signed2 ? width - 1 : width);\n        const boundsLower = signed2 ? (boundsUpper + BN_14) * BN__1 : BN_07;\n        return function(_value) {\n          const value = getBigInt(_value, \"value\");\n          assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n          return toBeHex(signed2 ? toTwos(value, 256) : value, 32);\n        };\n      }\n    }\n    {\n      const match = type.match(/^bytes(\\d+)$/);\n      if (match) {\n        const width = parseInt(match[1]);\n        assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n        return function(value) {\n          const bytes2 = getBytes(value);\n          assertArgument(bytes2.length === width, `invalid length for ${type}`, \"value\", value);\n          return hexPadRight(value);\n        };\n      }\n    }\n    switch (type) {\n      case \"address\":\n        return function(value) {\n          return zeroPadValue(getAddress(value), 32);\n        };\n      case \"bool\":\n        return function(value) {\n          return !value ? hexFalse : hexTrue;\n        };\n      case \"bytes\":\n        return function(value) {\n          return keccak256(value);\n        };\n      case \"string\":\n        return function(value) {\n          return id(value);\n        };\n    }\n    return null;\n  }\n  function encodeType(name, fields) {\n    return `${name}(${fields.map(({ name: name2, type }) => type + \" \" + name2).join(\",\")})`;\n  }\n  function splitArray(type) {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n      return {\n        base: match[1],\n        index: match[2] + match[4],\n        array: {\n          base: match[1],\n          prefix: match[1] + match[2],\n          count: match[5] ? parseInt(match[5]) : -1\n        }\n      };\n    }\n    return { base: type };\n  }\n  var padding, BN__1, BN_07, BN_14, BN_MAX_UINT2562, hexTrue, hexFalse, domainFieldTypes, domainFieldNames, domainChecks, TypedDataEncoder;\n  var init_typed_data = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/typed-data.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_crypto2();\n      init_utils();\n      init_id();\n      padding = new Uint8Array(32);\n      padding.fill(0);\n      BN__1 = BigInt(-1);\n      BN_07 = BigInt(0);\n      BN_14 = BigInt(1);\n      BN_MAX_UINT2562 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      hexTrue = toBeHex(BN_14, 32);\n      hexFalse = toBeHex(BN_07, 32);\n      domainFieldTypes = {\n        name: \"string\",\n        version: \"string\",\n        chainId: \"uint256\",\n        verifyingContract: \"address\",\n        salt: \"bytes32\"\n      };\n      domainFieldNames = [\n        \"name\",\n        \"version\",\n        \"chainId\",\n        \"verifyingContract\",\n        \"salt\"\n      ];\n      domainChecks = {\n        name: checkString(\"name\"),\n        version: checkString(\"version\"),\n        chainId: function(_value) {\n          const value = getBigInt(_value, \"domain.chainId\");\n          assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n          if (Number.isSafeInteger(value)) {\n            return Number(value);\n          }\n          return toQuantity(value);\n        },\n        verifyingContract: function(value) {\n          try {\n            return getAddress(value).toLowerCase();\n          } catch (error) {\n          }\n          assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n        },\n        salt: function(value) {\n          const bytes2 = getBytes(value, \"domain.salt\");\n          assertArgument(bytes2.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n          return hexlify(bytes2);\n        }\n      };\n      TypedDataEncoder = class _TypedDataEncoder {\n        /**\n         *  The primary type for the structured [[types]].\n         *\n         *  This is derived automatically from the [[types]], since no\n         *  recursion is possible, once the DAG for the types is consturcted\n         *  internally, the primary type must be the only remaining type with\n         *  no parent nodes.\n         */\n        primaryType;\n        #types;\n        /**\n         *  The types.\n         */\n        get types() {\n          return JSON.parse(this.#types);\n        }\n        #fullTypes;\n        #encoderCache;\n        /**\n         *  Create a new **TypedDataEncoder** for %%types%%.\n         *\n         *  This performs all necessary checking that types are valid and\n         *  do not violate the [[link-eip-712]] structural constraints as\n         *  well as computes the [[primaryType]].\n         */\n        constructor(_types) {\n          this.#fullTypes = /* @__PURE__ */ new Map();\n          this.#encoderCache = /* @__PURE__ */ new Map();\n          const links = /* @__PURE__ */ new Map();\n          const parents = /* @__PURE__ */ new Map();\n          const subtypes = /* @__PURE__ */ new Map();\n          const types = {};\n          Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type: type2 }) => {\n              let { base, index } = splitArray(type2);\n              if (base === \"int\" && !_types[\"int\"]) {\n                base = \"int256\";\n              }\n              if (base === \"uint\" && !_types[\"uint\"]) {\n                base = \"uint256\";\n              }\n              return { name, type: base + (index || \"\") };\n            });\n            links.set(type, /* @__PURE__ */ new Set());\n            parents.set(type, []);\n            subtypes.set(type, /* @__PURE__ */ new Set());\n          });\n          this.#types = JSON.stringify(types);\n          for (const name in types) {\n            const uniqueNames = /* @__PURE__ */ new Set();\n            for (const field of types[name]) {\n              assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", _types);\n              uniqueNames.add(field.name);\n              const baseType = splitArray(field.type).base;\n              assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", _types);\n              const encoder = getBaseEncoder(baseType);\n              if (encoder) {\n                continue;\n              }\n              assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", _types);\n              parents.get(baseType).push(name);\n              links.get(name).add(baseType);\n            }\n          }\n          const primaryTypes = Array.from(parents.keys()).filter((n2) => parents.get(n2).length === 0);\n          assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n          assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(\", \")}`, \"types\", _types);\n          defineProperties(this, { primaryType: primaryTypes[0] });\n          function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", _types);\n            found.add(type);\n            for (const child of links.get(type)) {\n              if (!parents.has(child)) {\n                continue;\n              }\n              checkCircular(child, found);\n              for (const subtype of found) {\n                subtypes.get(subtype).add(child);\n              }\n            }\n            found.delete(type);\n          }\n          checkCircular(this.primaryType, /* @__PURE__ */ new Set());\n          for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n          }\n        }\n        /**\n         *  Returnthe encoder for the specific %%type%%.\n         */\n        getEncoder(type) {\n          let encoder = this.#encoderCache.get(type);\n          if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n          }\n          return encoder;\n        }\n        #getEncoder(type) {\n          {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n              return encoder;\n            }\n          }\n          const array = splitArray(type).array;\n          if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n              assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n              let result = value.map(subEncoder);\n              if (this.#fullTypes.has(subtype)) {\n                result = result.map(keccak256);\n              }\n              return keccak256(concat(result));\n            };\n          }\n          const fields = this.types[type];\n          if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n              const values = fields.map(({ name, type: type2 }) => {\n                const result = this.getEncoder(type2)(value[name]);\n                if (this.#fullTypes.has(type2)) {\n                  return keccak256(result);\n                }\n                return result;\n              });\n              values.unshift(encodedType);\n              return concat(values);\n            };\n          }\n          assertArgument(false, `unknown type: ${type}`, \"type\", type);\n        }\n        /**\n         *  Return the full type for %%name%%.\n         */\n        encodeType(name) {\n          const result = this.#fullTypes.get(name);\n          assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n          return result;\n        }\n        /**\n         *  Return the encoded %%value%% for the %%type%%.\n         */\n        encodeData(type, value) {\n          return this.getEncoder(type)(value);\n        }\n        /**\n         *  Returns the hash of %%value%% for the type of %%name%%.\n         */\n        hashStruct(name, value) {\n          return keccak256(this.encodeData(name, value));\n        }\n        /**\n         *  Return the fulled encoded %%value%% for the [[types]].\n         */\n        encode(value) {\n          return this.encodeData(this.primaryType, value);\n        }\n        /**\n         *  Return the hash of the fully encoded %%value%% for the [[types]].\n         */\n        hash(value) {\n          return this.hashStruct(this.primaryType, value);\n        }\n        /**\n         *  @_ignore:\n         */\n        _visit(type, value, callback) {\n          {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n              return callback(type, value);\n            }\n          }\n          const array = splitArray(type).array;\n          if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n            return value.map((v) => this._visit(array.prefix, v, callback));\n          }\n          const fields = this.types[type];\n          if (fields) {\n            return fields.reduce((accum, { name, type: type2 }) => {\n              accum[name] = this._visit(type2, value[name], callback);\n              return accum;\n            }, {});\n          }\n          assertArgument(false, `unknown type: ${type}`, \"type\", type);\n        }\n        /**\n         *  Call %%calback%% for each value in %%value%%, passing the type and\n         *  component within %%value%%.\n         *\n         *  This is useful for replacing addresses or other transformation that\n         *  may be desired on each component, based on its type.\n         */\n        visit(value, callback) {\n          return this._visit(this.primaryType, value, callback);\n        }\n        /**\n         *  Create a new **TypedDataEncoder** for %%types%%.\n         */\n        static from(types) {\n          return new _TypedDataEncoder(types);\n        }\n        /**\n         *  Return the primary type for %%types%%.\n         */\n        static getPrimaryType(types) {\n          return _TypedDataEncoder.from(types).primaryType;\n        }\n        /**\n         *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n         */\n        static hashStruct(name, types, value) {\n          return _TypedDataEncoder.from(types).hashStruct(name, value);\n        }\n        /**\n         *  Return the domain hash for %%domain%%.\n         */\n        static hashDomain(domain2) {\n          const domainFields = [];\n          for (const name in domain2) {\n            if (domain2[name] == null) {\n              continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain2);\n            domainFields.push({ name, type });\n          }\n          domainFields.sort((a, b2) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b2.name);\n          });\n          return _TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain2);\n        }\n        /**\n         *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n         */\n        static encode(domain2, types, value) {\n          return concat([\n            \"0x1901\",\n            _TypedDataEncoder.hashDomain(domain2),\n            _TypedDataEncoder.from(types).hash(value)\n          ]);\n        }\n        /**\n         *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n         */\n        static hash(domain2, types, value) {\n          return keccak256(_TypedDataEncoder.encode(domain2, types, value));\n        }\n        // Replaces all address types with ENS names with their looked up address\n        /**\n         * Resolves to the value from resolving all addresses in %%value%% for\n         * %%types%% and the %%domain%%.\n         */\n        static async resolveNames(domain2, types, value, resolveName) {\n          domain2 = Object.assign({}, domain2);\n          for (const key in domain2) {\n            if (domain2[key] == null) {\n              delete domain2[key];\n            }\n          }\n          const ensCache = {};\n          if (domain2.verifyingContract && !isHexString(domain2.verifyingContract, 20)) {\n            ensCache[domain2.verifyingContract] = \"0x\";\n          }\n          const encoder = _TypedDataEncoder.from(types);\n          encoder.visit(value, (type, value2) => {\n            if (type === \"address\" && !isHexString(value2, 20)) {\n              ensCache[value2] = \"0x\";\n            }\n            return value2;\n          });\n          for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n          }\n          if (domain2.verifyingContract && ensCache[domain2.verifyingContract]) {\n            domain2.verifyingContract = ensCache[domain2.verifyingContract];\n          }\n          value = encoder.visit(value, (type, value2) => {\n            if (type === \"address\" && ensCache[value2]) {\n              return ensCache[value2];\n            }\n            return value2;\n          });\n          return { domain: domain2, value };\n        }\n        /**\n         *  Returns the JSON-encoded payload expected by nodes which implement\n         *  the JSON-RPC [[link-eip-712]] method.\n         */\n        static getPayload(domain2, types, value) {\n          _TypedDataEncoder.hashDomain(domain2);\n          const domainValues = {};\n          const domainTypes = [];\n          domainFieldNames.forEach((name) => {\n            const value2 = domain2[name];\n            if (value2 == null) {\n              return;\n            }\n            domainValues[name] = domainChecks[name](value2);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n          });\n          const encoder = _TypedDataEncoder.from(types);\n          types = encoder.types;\n          const typesWithDomain = Object.assign({}, types);\n          assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n          typesWithDomain.EIP712Domain = domainTypes;\n          encoder.encode(value);\n          return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value2) => {\n              if (type.match(/^bytes(\\d*)/)) {\n                return hexlify(getBytes(value2));\n              }\n              if (type.match(/^u?int/)) {\n                return getBigInt(value2).toString();\n              }\n              switch (type) {\n                case \"address\":\n                  return value2.toLowerCase();\n                case \"bool\":\n                  return !!value2;\n                case \"string\":\n                  assertArgument(typeof value2 === \"string\", \"invalid string\", \"value\", value2);\n                  return value2;\n              }\n              assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n          };\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/index.js\n  var init_hash = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/hash/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_id();\n      init_namehash();\n      init_typed_data();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/fragments.js\n  function setify(items) {\n    const result = /* @__PURE__ */ new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n  }\n  function lex(text) {\n    const tokens = [];\n    const throwError2 = (message) => {\n      const token = offset < text.length ? JSON.stringify(text[offset]) : \"$EOI\";\n      throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n      let cur = text.substring(offset);\n      let match = cur.match(regexWhitespacePrefix);\n      if (match) {\n        offset += match[1].length;\n        cur = text.substring(offset);\n      }\n      const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n      tokens.push(token);\n      let type = SimpleTokens[cur[0]] || \"\";\n      if (type) {\n        token.type = type;\n        token.text = cur[0];\n        offset++;\n        if (type === \"OPEN_PAREN\") {\n          brackets.push(tokens.length - 1);\n          commas.push(tokens.length - 1);\n        } else if (type == \"CLOSE_PAREN\") {\n          if (brackets.length === 0) {\n            throwError2(\"no matching open bracket\");\n          }\n          token.match = brackets.pop();\n          tokens[token.match].match = tokens.length - 1;\n          token.depth--;\n          token.linkBack = commas.pop();\n          tokens[token.linkBack].linkNext = tokens.length - 1;\n        } else if (type === \"COMMA\") {\n          token.linkBack = commas.pop();\n          tokens[token.linkBack].linkNext = tokens.length - 1;\n          commas.push(tokens.length - 1);\n        } else if (type === \"OPEN_BRACKET\") {\n          token.type = \"BRACKET\";\n        } else if (type === \"CLOSE_BRACKET\") {\n          let suffix = tokens.pop().text;\n          if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n            const value = tokens.pop().text;\n            suffix = value + suffix;\n            tokens[tokens.length - 1].value = getNumber(value);\n          }\n          if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n            throw new Error(\"missing opening bracket\");\n          }\n          tokens[tokens.length - 1].text += suffix;\n        }\n        continue;\n      }\n      match = cur.match(regexIdPrefix);\n      if (match) {\n        token.text = match[1];\n        offset += token.text.length;\n        if (Keywords.has(token.text)) {\n          token.type = \"KEYWORD\";\n          continue;\n        }\n        if (token.text.match(regexType)) {\n          token.type = \"TYPE\";\n          continue;\n        }\n        token.type = \"ID\";\n        continue;\n      }\n      match = cur.match(regexNumberPrefix);\n      if (match) {\n        token.text = match[1];\n        token.type = \"NUMBER\";\n        offset += token.text.length;\n        continue;\n      }\n      throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n  }\n  function allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n      if (set.has(key)) {\n        included.push(key);\n      }\n    }\n    if (included.length > 1) {\n      throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n  }\n  function consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n      const keyword = tokens.pop().text;\n      if (keyword !== type) {\n        throw new Error(`expected ${type}, got ${keyword}`);\n      }\n    }\n    return tokens.popType(\"ID\");\n  }\n  function consumeKeywords(tokens, allowed) {\n    const keywords = /* @__PURE__ */ new Set();\n    while (true) {\n      const keyword = tokens.peekType(\"KEYWORD\");\n      if (keyword == null || allowed && !allowed.has(keyword)) {\n        break;\n      }\n      tokens.pop();\n      if (keywords.has(keyword)) {\n        throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n      }\n      keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n  }\n  function consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    if (modifiers.has(\"view\")) {\n      return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n      return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n      return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n      return \"nonpayable\";\n    }\n    if (modifiers.has(\"constant\")) {\n      return \"view\";\n    }\n    return \"nonpayable\";\n  }\n  function consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n  }\n  function consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n      tokens.pop();\n      if (tokens.peekType(\"NUMBER\")) {\n        return getBigInt(tokens.pop().text);\n      }\n      throw new Error(\"invalid gas\");\n    }\n    return null;\n  }\n  function consumeEoi(tokens) {\n    if (tokens.length) {\n      throw new Error(`unexpected tokens at offset ${tokens.offset}: ${tokens.toString()}`);\n    }\n  }\n  function verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n      return \"uint256\";\n    }\n    if (type === \"int\") {\n      return \"int256\";\n    }\n    if (match[2]) {\n      const length = parseInt(match[2]);\n      assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    } else if (match[3]) {\n      const size = parseInt(match[3]);\n      assertArgument(size !== 0 && size <= 256 && size % 8 === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n  }\n  function joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join(format === \"full\" ? \", \" : \",\") + \")\";\n  }\n  var _kwVisibDeploy, KwVisibDeploy, _kwVisib, KwVisib, _kwTypes, KwTypes, _kwModifiers, KwModifiers, _kwOther, _keywords, Keywords, SimpleTokens, regexWhitespacePrefix, regexNumberPrefix, regexIdPrefix, regexId, regexType, TokenString, regexArrayType, _guard3, internal, ParamTypeInternal, ErrorFragmentInternal, EventFragmentInternal, ConstructorFragmentInternal, FallbackFragmentInternal, FunctionFragmentInternal, StructFragmentInternal, ParamType, Fragment, NamedFragment, ErrorFragment, EventFragment, ConstructorFragment, FallbackFragment, FunctionFragment, StructFragment;\n  var init_fragments = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/fragments.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_hash();\n      _kwVisibDeploy = \"external public payable override\";\n      KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n      _kwVisib = \"constant external internal payable private public pure view override\";\n      KwVisib = setify(_kwVisib.split(\" \"));\n      _kwTypes = \"constructor error event fallback function receive struct\";\n      KwTypes = setify(_kwTypes.split(\" \"));\n      _kwModifiers = \"calldata memory storage payable indexed\";\n      KwModifiers = setify(_kwModifiers.split(\" \"));\n      _kwOther = \"tuple returns\";\n      _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\n      Keywords = setify(_keywords.split(\" \"));\n      SimpleTokens = {\n        \"(\": \"OPEN_PAREN\",\n        \")\": \"CLOSE_PAREN\",\n        \"[\": \"OPEN_BRACKET\",\n        \"]\": \"CLOSE_BRACKET\",\n        \",\": \"COMMA\",\n        \"@\": \"AT\"\n      };\n      regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\n      regexNumberPrefix = new RegExp(\"^([0-9]+)\");\n      regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n      regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\n      regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\n      TokenString = class _TokenString {\n        #offset;\n        #tokens;\n        get offset() {\n          return this.#offset;\n        }\n        get length() {\n          return this.#tokens.length - this.#offset;\n        }\n        constructor(tokens) {\n          this.#offset = 0;\n          this.#tokens = tokens.slice();\n        }\n        clone() {\n          return new _TokenString(this.#tokens);\n        }\n        reset() {\n          this.#offset = 0;\n        }\n        #subTokenString(from = 0, to = 0) {\n          return new _TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n              match: t.match - from,\n              linkBack: t.linkBack - from,\n              linkNext: t.linkNext - from\n            }));\n          }));\n        }\n        // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n        popKeyword(allowed) {\n          const top = this.peek();\n          if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n          }\n          return this.pop().text;\n        }\n        // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n        popType(type) {\n          if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${type}; got ${top.type} ${JSON.stringify(top.text)}`);\n          }\n          return this.pop().text;\n        }\n        // Pops and returns a \"(\" TOKENS \")\"\n        popParen() {\n          const top = this.peek();\n          if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n          }\n          const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n          this.#offset = top.match + 1;\n          return result;\n        }\n        // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n        popParams() {\n          const top = this.peek();\n          if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n          }\n          const result = [];\n          while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n          }\n          this.#offset = top.match + 1;\n          return result;\n        }\n        // Returns the top Token, throwing if out of tokens\n        peek() {\n          if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n          }\n          return this.#tokens[this.#offset];\n        }\n        // Returns the next value, if it is a keyword in `allowed`\n        peekKeyword(allowed) {\n          const top = this.peekType(\"KEYWORD\");\n          return top != null && allowed.has(top) ? top : null;\n        }\n        // Returns the value of the next token if it is `type`\n        peekType(type) {\n          if (this.length === 0) {\n            return null;\n          }\n          const top = this.peek();\n          return top.type === type ? top.text : null;\n        }\n        // Returns the next token; throws if out of tokens\n        pop() {\n          const result = this.peek();\n          this.#offset++;\n          return result;\n        }\n        toString() {\n          const tokens = [];\n          for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n          }\n          return `<TokenString ${tokens.join(\" \")}>`;\n        }\n      };\n      regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n      _guard3 = {};\n      internal = Symbol.for(\"_ethers_internal\");\n      ParamTypeInternal = \"_ParamTypeInternal\";\n      ErrorFragmentInternal = \"_ErrorInternal\";\n      EventFragmentInternal = \"_EventInternal\";\n      ConstructorFragmentInternal = \"_ConstructorInternal\";\n      FallbackFragmentInternal = \"_FallbackInternal\";\n      FunctionFragmentInternal = \"_FunctionInternal\";\n      StructFragmentInternal = \"_StructInternal\";\n      ParamType = class _ParamType {\n        /**\n         *  The local name of the parameter (or ``\"\"`` if unbound)\n         */\n        name;\n        /**\n         *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n         *  ``\"uint256[3][]\"``)\n         */\n        type;\n        /**\n         *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n         */\n        baseType;\n        /**\n         *  True if the parameters is indexed.\n         *\n         *  For non-indexable types this is ``null``.\n         */\n        indexed;\n        /**\n         *  The components for the tuple.\n         *\n         *  For non-tuple types this is ``null``.\n         */\n        components;\n        /**\n         *  The array length, or ``-1`` for dynamic-lengthed arrays.\n         *\n         *  For non-array types this is ``null``.\n         */\n        arrayLength;\n        /**\n         *  The type of each child in the array.\n         *\n         *  For non-array types this is ``null``.\n         */\n        arrayChildren;\n        /**\n         *  @private\n         */\n        constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n          assertPrivate(guard, _guard3, \"ParamType\");\n          Object.defineProperty(this, internal, { value: ParamTypeInternal });\n          if (components) {\n            components = Object.freeze(components.slice());\n          }\n          if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n              throw new Error(\"\");\n            }\n          } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n          }\n          if (baseType === \"tuple\") {\n            if (components == null) {\n              throw new Error(\"\");\n            }\n          } else if (components != null) {\n            throw new Error(\"\");\n          }\n          defineProperties(this, {\n            name,\n            type,\n            baseType,\n            indexed,\n            components,\n            arrayLength,\n            arrayChildren\n          });\n        }\n        /**\n         *  Return a string representation of this type.\n         *\n         *  For example,\n         *\n         *  ``sighash\" => \"(uint256,address)\"``\n         *\n         *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n         *\n         *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n         */\n        format(format) {\n          if (format == null) {\n            format = \"sighash\";\n          }\n          if (format === \"json\") {\n            const name = this.name || \"\";\n            if (this.isArray()) {\n              const result3 = JSON.parse(this.arrayChildren.format(\"json\"));\n              result3.name = name;\n              result3.type += `[${this.arrayLength < 0 ? \"\" : String(this.arrayLength)}]`;\n              return JSON.stringify(result3);\n            }\n            const result2 = {\n              type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n              name\n            };\n            if (typeof this.indexed === \"boolean\") {\n              result2.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n              result2.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result2);\n          }\n          let result = \"\";\n          if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${this.arrayLength < 0 ? \"\" : String(this.arrayLength)}]`;\n          } else {\n            if (this.isTuple()) {\n              result += \"(\" + this.components.map((comp) => comp.format(format)).join(format === \"full\" ? \", \" : \",\") + \")\";\n            } else {\n              result += this.type;\n            }\n          }\n          if (format !== \"sighash\") {\n            if (this.indexed === true) {\n              result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n              result += \" \" + this.name;\n            }\n          }\n          return result;\n        }\n        /**\n         *  Returns true if %%this%% is an Array type.\n         *\n         *  This provides a type gaurd ensuring that [[arrayChildren]]\n         *  and [[arrayLength]] are non-null.\n         */\n        isArray() {\n          return this.baseType === \"array\";\n        }\n        /**\n         *  Returns true if %%this%% is a Tuple type.\n         *\n         *  This provides a type gaurd ensuring that [[components]]\n         *  is non-null.\n         */\n        isTuple() {\n          return this.baseType === \"tuple\";\n        }\n        /**\n         *  Returns true if %%this%% is an Indexable type.\n         *\n         *  This provides a type gaurd ensuring that [[indexed]]\n         *  is non-null.\n         */\n        isIndexable() {\n          return this.indexed != null;\n        }\n        /**\n         *  Walks the **ParamType** with %%value%%, calling %%process%%\n         *  on each type, destructing the %%value%% recursively.\n         */\n        walk(value, process2) {\n          if (this.isArray()) {\n            if (!Array.isArray(value)) {\n              throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n              throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => _this.arrayChildren.walk(v, process2));\n          }\n          if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n              throw new Error(\"invalid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n              throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => _this.components[i].walk(v, process2));\n          }\n          return process2(this.type, value);\n        }\n        #walkAsync(promises, value, process2, setValue) {\n          if (this.isArray()) {\n            if (!Array.isArray(value)) {\n              throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n              throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result2 = value.slice();\n            result2.forEach((value2, index) => {\n              childType.#walkAsync(promises, value2, process2, (value3) => {\n                result2[index] = value3;\n              });\n            });\n            setValue(result2);\n            return;\n          }\n          if (this.isTuple()) {\n            const components = this.components;\n            let result2;\n            if (Array.isArray(value)) {\n              result2 = value.slice();\n            } else {\n              if (value == null || typeof value !== \"object\") {\n                throw new Error(\"invalid tuple value\");\n              }\n              result2 = components.map((param) => {\n                if (!param.name) {\n                  throw new Error(\"cannot use object value with unnamed components\");\n                }\n                if (!(param.name in value)) {\n                  throw new Error(`missing value for component ${param.name}`);\n                }\n                return value[param.name];\n              });\n            }\n            if (result2.length !== this.components.length) {\n              throw new Error(\"array is wrong length\");\n            }\n            result2.forEach((value2, index) => {\n              components[index].#walkAsync(promises, value2, process2, (value3) => {\n                result2[index] = value3;\n              });\n            });\n            setValue(result2);\n            return;\n          }\n          const result = process2(this.type, value);\n          if (result.then) {\n            promises.push(async function() {\n              setValue(await result);\n            }());\n          } else {\n            setValue(result);\n          }\n        }\n        /**\n         *  Walks the **ParamType** with %%value%%, asynchronously calling\n         *  %%process%% on each type, destructing the %%value%% recursively.\n         *\n         *  This can be used to resolve ENS names by walking and resolving each\n         *  ``\"address\"`` type.\n         */\n        async walkAsync(value, process2) {\n          const promises = [];\n          const result = [value];\n          this.#walkAsync(promises, value, process2, (value2) => {\n            result[0] = value2;\n          });\n          if (promises.length) {\n            await Promise.all(promises);\n          }\n          return result[0];\n        }\n        /**\n         *  Creates a new **ParamType** for %%obj%%.\n         *\n         *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n         *  otherwise the ``indexed`` keyword will throw an error.\n         */\n        static from(obj, allowIndexed) {\n          if (_ParamType.isParamType(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            try {\n              return _ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n              assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            let type2 = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n              baseType = \"tuple\";\n              comps = obj.popParams().map((t) => _ParamType.from(t));\n              type2 = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            } else {\n              type2 = verifyBasicType(obj.popType(\"TYPE\"));\n              baseType = type2;\n            }\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n              const bracket = obj.pop();\n              arrayChildren = new _ParamType(_guard3, \"\", type2, baseType, null, comps, arrayLength, arrayChildren);\n              arrayLength = bracket.value;\n              type2 += bracket.text;\n              baseType = \"array\";\n              comps = null;\n            }\n            let indexed2 = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n              if (!allowIndexed) {\n                throw new Error(\"\");\n              }\n              indexed2 = true;\n            }\n            const name2 = obj.peekType(\"ID\") ? obj.pop().text : \"\";\n            if (obj.length) {\n              throw new Error(\"leftover tokens\");\n            }\n            return new _ParamType(_guard3, name2, type2, baseType, indexed2, comps, arrayLength, arrayChildren);\n          }\n          const name = obj.name;\n          assertArgument(!name || typeof name === \"string\" && name.match(regexId), \"invalid name\", \"obj.name\", name);\n          let indexed = obj.indexed;\n          if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n          }\n          let type = obj.type;\n          let arrayMatch = type.match(regexArrayType);\n          if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = _ParamType.from({\n              type: arrayMatch[1],\n              components: obj.components\n            });\n            return new _ParamType(_guard3, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n          }\n          if (type === \"tuple\" || type.startsWith(\n            \"tuple(\"\n            /* fix: ) */\n          ) || type.startsWith(\n            \"(\"\n            /* fix: ) */\n          )) {\n            const comps = obj.components != null ? obj.components.map((c) => _ParamType.from(c)) : null;\n            const tuple = new _ParamType(_guard3, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            return tuple;\n          }\n          type = verifyBasicType(obj.type);\n          return new _ParamType(_guard3, name || \"\", type, type, indexed, null, null, null);\n        }\n        /**\n         *  Returns true if %%value%% is a **ParamType**.\n         */\n        static isParamType(value) {\n          return value && value[internal] === ParamTypeInternal;\n        }\n      };\n      Fragment = class _Fragment {\n        /**\n         *  The type of the fragment.\n         */\n        type;\n        /**\n         *  The inputs for the fragment.\n         */\n        inputs;\n        /**\n         *  @private\n         */\n        constructor(guard, type, inputs) {\n          assertPrivate(guard, _guard3, \"Fragment\");\n          inputs = Object.freeze(inputs.slice());\n          defineProperties(this, { type, inputs });\n        }\n        /**\n         *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n         *  ABI frgament type.\n         */\n        static from(obj) {\n          if (typeof obj === \"string\") {\n            try {\n              _Fragment.from(JSON.parse(obj));\n            } catch (e) {\n            }\n            return _Fragment.from(lex(obj));\n          }\n          if (obj instanceof TokenString) {\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n              case \"constructor\":\n                return ConstructorFragment.from(obj);\n              case \"error\":\n                return ErrorFragment.from(obj);\n              case \"event\":\n                return EventFragment.from(obj);\n              case \"fallback\":\n              case \"receive\":\n                return FallbackFragment.from(obj);\n              case \"function\":\n                return FunctionFragment.from(obj);\n              case \"struct\":\n                return StructFragment.from(obj);\n            }\n          } else if (typeof obj === \"object\") {\n            switch (obj.type) {\n              case \"constructor\":\n                return ConstructorFragment.from(obj);\n              case \"error\":\n                return ErrorFragment.from(obj);\n              case \"event\":\n                return EventFragment.from(obj);\n              case \"fallback\":\n              case \"receive\":\n                return FallbackFragment.from(obj);\n              case \"function\":\n                return FunctionFragment.from(obj);\n              case \"struct\":\n                return StructFragment.from(obj);\n            }\n            assert2(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n              operation: \"Fragment.from\"\n            });\n          }\n          assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n        }\n        /**\n         *  Returns true if %%value%% is a [[ConstructorFragment]].\n         */\n        static isConstructor(value) {\n          return ConstructorFragment.isFragment(value);\n        }\n        /**\n         *  Returns true if %%value%% is an [[ErrorFragment]].\n         */\n        static isError(value) {\n          return ErrorFragment.isFragment(value);\n        }\n        /**\n         *  Returns true if %%value%% is an [[EventFragment]].\n         */\n        static isEvent(value) {\n          return EventFragment.isFragment(value);\n        }\n        /**\n         *  Returns true if %%value%% is a [[FunctionFragment]].\n         */\n        static isFunction(value) {\n          return FunctionFragment.isFragment(value);\n        }\n        /**\n         *  Returns true if %%value%% is a [[StructFragment]].\n         */\n        static isStruct(value) {\n          return StructFragment.isFragment(value);\n        }\n      };\n      NamedFragment = class extends Fragment {\n        /**\n         *  The name of the fragment.\n         */\n        name;\n        /**\n         *  @private\n         */\n        constructor(guard, type, name, inputs) {\n          super(guard, type, inputs);\n          assertArgument(typeof name === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n          inputs = Object.freeze(inputs.slice());\n          defineProperties(this, { name });\n        }\n      };\n      ErrorFragment = class _ErrorFragment extends NamedFragment {\n        /**\n         *  @private\n         */\n        constructor(guard, name, inputs) {\n          super(guard, \"error\", name, inputs);\n          Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n        }\n        /**\n         *  The Custom Error selector.\n         */\n        get selector() {\n          return id(this.format(\"sighash\")).substring(0, 10);\n        }\n        /**\n         *  Returns a string representation of this fragment as %%format%%.\n         */\n        format(format) {\n          if (format == null) {\n            format = \"sighash\";\n          }\n          if (format === \"json\") {\n            return JSON.stringify({\n              type: \"error\",\n              name: this.name,\n              inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n          }\n          const result = [];\n          if (format !== \"sighash\") {\n            result.push(\"error\");\n          }\n          result.push(this.name + joinParams(format, this.inputs));\n          return result.join(\" \");\n        }\n        /**\n         *  Returns a new **ErrorFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (_ErrorFragment.isFragment(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            return _ErrorFragment.from(lex(obj));\n          } else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new _ErrorFragment(_guard3, name, inputs);\n          }\n          return new _ErrorFragment(_guard3, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is an\n         *  **ErrorFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === ErrorFragmentInternal;\n        }\n      };\n      EventFragment = class _EventFragment extends NamedFragment {\n        /**\n         *  Whether this event is anonymous.\n         */\n        anonymous;\n        /**\n         *  @private\n         */\n        constructor(guard, name, inputs, anonymous) {\n          super(guard, \"event\", name, inputs);\n          Object.defineProperty(this, internal, { value: EventFragmentInternal });\n          defineProperties(this, { anonymous });\n        }\n        /**\n         *  The Event topic hash.\n         */\n        get topicHash() {\n          return id(this.format(\"sighash\"));\n        }\n        /**\n         *  Returns a string representation of this event as %%format%%.\n         */\n        format(format) {\n          if (format == null) {\n            format = \"sighash\";\n          }\n          if (format === \"json\") {\n            return JSON.stringify({\n              type: \"event\",\n              anonymous: this.anonymous,\n              name: this.name,\n              inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n          }\n          const result = [];\n          if (format !== \"sighash\") {\n            result.push(\"event\");\n          }\n          result.push(this.name + joinParams(format, this.inputs));\n          if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n          }\n          return result.join(\" \");\n        }\n        /**\n         *  Return the topic hash for an event with %%name%% and %%params%%.\n         */\n        static getTopicHash(name, params) {\n          params = (params || []).map((p) => ParamType.from(p));\n          const fragment = new _EventFragment(_guard3, name, params, false);\n          return fragment.topicHash;\n        }\n        /**\n         *  Returns a new **EventFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (_EventFragment.isFragment(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            try {\n              return _EventFragment.from(lex(obj));\n            } catch (error) {\n              assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new _EventFragment(_guard3, name, inputs, anonymous);\n          }\n          return new _EventFragment(_guard3, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is an\n         *  **EventFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === EventFragmentInternal;\n        }\n      };\n      ConstructorFragment = class _ConstructorFragment extends Fragment {\n        /**\n         *  Whether the constructor can receive an endowment.\n         */\n        payable;\n        /**\n         *  The recommended gas limit for deployment or ``null``.\n         */\n        gas;\n        /**\n         *  @private\n         */\n        constructor(guard, type, inputs, payable, gas) {\n          super(guard, type, inputs);\n          Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n          defineProperties(this, { payable, gas });\n        }\n        /**\n         *  Returns a string representation of this constructor as %%format%%.\n         */\n        format(format) {\n          assert2(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n          if (format === \"json\") {\n            return JSON.stringify({\n              type: \"constructor\",\n              stateMutability: this.payable ? \"payable\" : \"undefined\",\n              payable: this.payable,\n              gas: this.gas != null ? this.gas : void 0,\n              inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n          }\n          const result = [`constructor${joinParams(format, this.inputs)}`];\n          if (this.payable) {\n            result.push(\"payable\");\n          }\n          if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n          }\n          return result.join(\" \");\n        }\n        /**\n         *  Returns a new **ConstructorFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (_ConstructorFragment.isFragment(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            try {\n              return _ConstructorFragment.from(lex(obj));\n            } catch (error) {\n              assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new _ConstructorFragment(_guard3, \"constructor\", inputs, payable, gas);\n          }\n          return new _ConstructorFragment(_guard3, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, obj.gas != null ? obj.gas : null);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is a\n         *  **ConstructorFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === ConstructorFragmentInternal;\n        }\n      };\n      FallbackFragment = class _FallbackFragment extends Fragment {\n        /**\n         *  If the function can be sent value during invocation.\n         */\n        payable;\n        constructor(guard, inputs, payable) {\n          super(guard, \"fallback\", inputs);\n          Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n          defineProperties(this, { payable });\n        }\n        /**\n         *  Returns a string representation of this fallback as %%format%%.\n         */\n        format(format) {\n          const type = this.inputs.length === 0 ? \"receive\" : \"fallback\";\n          if (format === \"json\") {\n            const stateMutability = this.payable ? \"payable\" : \"nonpayable\";\n            return JSON.stringify({ type, stateMutability });\n          }\n          return `${type}()${this.payable ? \" payable\" : \"\"}`;\n        }\n        /**\n         *  Returns a new **FallbackFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (_FallbackFragment.isFragment(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            try {\n              return _FallbackFragment.from(lex(obj));\n            } catch (error) {\n              assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            if (type === \"receive\") {\n              const inputs2 = consumeParams(obj);\n              assertArgument(inputs2.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs2);\n              consumeKeywords(obj, setify([\"payable\"]));\n              consumeEoi(obj);\n              return new _FallbackFragment(_guard3, [], true);\n            }\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n              assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            } else {\n              inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n              const outputs = consumeParams(obj);\n              assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new _FallbackFragment(_guard3, inputs, mutability === \"payable\");\n          }\n          if (obj.type === \"receive\") {\n            return new _FallbackFragment(_guard3, [], true);\n          }\n          if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = obj.stateMutability === \"payable\";\n            return new _FallbackFragment(_guard3, inputs, payable);\n          }\n          assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is a\n         *  **FallbackFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === FallbackFragmentInternal;\n        }\n      };\n      FunctionFragment = class _FunctionFragment extends NamedFragment {\n        /**\n         *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n         */\n        constant;\n        /**\n         *  The returned types for the result of calling this function.\n         */\n        outputs;\n        /**\n         *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n         *  or ``pure``)\n         */\n        stateMutability;\n        /**\n         *  If the function can be sent value during invocation.\n         */\n        payable;\n        /**\n         *  The recommended gas limit to send when calling this function.\n         */\n        gas;\n        /**\n         *  @private\n         */\n        constructor(guard, name, stateMutability, inputs, outputs, gas) {\n          super(guard, \"function\", name, inputs);\n          Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n          outputs = Object.freeze(outputs.slice());\n          const constant = stateMutability === \"view\" || stateMutability === \"pure\";\n          const payable = stateMutability === \"payable\";\n          defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n        }\n        /**\n         *  The Function selector.\n         */\n        get selector() {\n          return id(this.format(\"sighash\")).substring(0, 10);\n        }\n        /**\n         *  Returns a string representation of this function as %%format%%.\n         */\n        format(format) {\n          if (format == null) {\n            format = \"sighash\";\n          }\n          if (format === \"json\") {\n            return JSON.stringify({\n              type: \"function\",\n              name: this.name,\n              constant: this.constant,\n              stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : void 0,\n              payable: this.payable,\n              gas: this.gas != null ? this.gas : void 0,\n              inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n              outputs: this.outputs.map((o) => JSON.parse(o.format(format)))\n            });\n          }\n          const result = [];\n          if (format !== \"sighash\") {\n            result.push(\"function\");\n          }\n          result.push(this.name + joinParams(format, this.inputs));\n          if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n              result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n              result.push(\"returns\");\n              result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n              result.push(`@${this.gas.toString()}`);\n            }\n          }\n          return result.join(\" \");\n        }\n        /**\n         *  Return the selector for a function with %%name%% and %%params%%.\n         */\n        static getSelector(name, params) {\n          params = (params || []).map((p) => ParamType.from(p));\n          const fragment = new _FunctionFragment(_guard3, name, \"view\", params, [], null);\n          return fragment.selector;\n        }\n        /**\n         *  Returns a new **FunctionFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (_FunctionFragment.isFragment(obj)) {\n            return obj;\n          }\n          if (typeof obj === \"string\") {\n            try {\n              return _FunctionFragment.from(lex(obj));\n            } catch (error) {\n              assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n              outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new _FunctionFragment(_guard3, name, mutability, inputs, outputs, gas);\n          }\n          let stateMutability = obj.stateMutability;\n          if (stateMutability == null) {\n            stateMutability = \"payable\";\n            if (typeof obj.constant === \"boolean\") {\n              stateMutability = \"view\";\n              if (!obj.constant) {\n                stateMutability = \"payable\";\n                if (typeof obj.payable === \"boolean\" && !obj.payable) {\n                  stateMutability = \"nonpayable\";\n                }\n              }\n            } else if (typeof obj.payable === \"boolean\" && !obj.payable) {\n              stateMutability = \"nonpayable\";\n            }\n          }\n          return new _FunctionFragment(_guard3, obj.name, stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], obj.gas != null ? obj.gas : null);\n        }\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is a\n         *  **FunctionFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === FunctionFragmentInternal;\n        }\n      };\n      StructFragment = class _StructFragment extends NamedFragment {\n        /**\n         *  @private\n         */\n        constructor(guard, name, inputs) {\n          super(guard, \"struct\", name, inputs);\n          Object.defineProperty(this, internal, { value: StructFragmentInternal });\n        }\n        /**\n         *  Returns a string representation of this struct as %%format%%.\n         */\n        format() {\n          throw new Error(\"@TODO\");\n        }\n        /**\n         *  Returns a new **StructFragment** for %%obj%%.\n         */\n        static from(obj) {\n          if (typeof obj === \"string\") {\n            try {\n              return _StructFragment.from(lex(obj));\n            } catch (error) {\n              assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n          } else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new _StructFragment(_guard3, name, inputs);\n          }\n          return new _StructFragment(_guard3, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n        }\n        // @TODO: fix this return type\n        /**\n         *  Returns ``true`` and provides a type guard if %%value%% is a\n         *  **StructFragment**.\n         */\n        static isFragment(value) {\n          return value && value[internal] === StructFragmentInternal;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/abi-coder.js\n  function getBuiltinCallException(action, tx, data, abiCoder) {\n    let message = \"missing revert data\";\n    let reason = null;\n    const invocation = null;\n    let revert = null;\n    if (data) {\n      message = \"execution reverted\";\n      const bytes2 = getBytes(data);\n      data = hexlify(data);\n      if (bytes2.length === 0) {\n        message += \" (no data present; likely require(false) occurred\";\n        reason = \"require(false)\";\n      } else if (bytes2.length % 32 !== 4) {\n        message += \" (could not decode reason; invalid data length)\";\n      } else if (hexlify(bytes2.slice(0, 4)) === \"0x08c379a0\") {\n        try {\n          reason = abiCoder.decode([\"string\"], bytes2.slice(4))[0];\n          revert = {\n            signature: \"Error(string)\",\n            name: \"Error\",\n            args: [reason]\n          };\n          message += `: ${JSON.stringify(reason)}`;\n        } catch (error) {\n          message += \" (could not decode reason; invalid string data)\";\n        }\n      } else if (hexlify(bytes2.slice(0, 4)) === \"0x4e487b71\") {\n        try {\n          const code = Number(abiCoder.decode([\"uint256\"], bytes2.slice(4))[0]);\n          revert = {\n            signature: \"Panic(uint256)\",\n            name: \"Panic\",\n            args: [code]\n          };\n          reason = `Panic due to ${PanicReasons.get(code) || \"UNKNOWN\"}(${code})`;\n          message += `: ${reason}`;\n        } catch (error) {\n          message += \" (could not decode panic code)\";\n        }\n      } else {\n        message += \" (unknown custom error)\";\n      }\n    }\n    const transaction = {\n      to: tx.to ? getAddress(tx.to) : null,\n      data: tx.data || \"0x\"\n    };\n    if (tx.from) {\n      transaction.from = getAddress(tx.from);\n    }\n    return makeError(message, \"CALL_EXCEPTION\", {\n      action,\n      data,\n      reason,\n      transaction,\n      invocation,\n      revert\n    });\n  }\n  var PanicReasons, paramTypeBytes, paramTypeNumber, defaultCoder, defaultMaxInflation, AbiCoder;\n  var init_abi_coder = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/abi-coder.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_abstract_coder();\n      init_address3();\n      init_array();\n      init_boolean();\n      init_bytes();\n      init_fixed_bytes();\n      init_null();\n      init_number();\n      init_string();\n      init_tuple();\n      init_fragments();\n      init_address2();\n      init_utils();\n      PanicReasons = /* @__PURE__ */ new Map();\n      PanicReasons.set(0, \"GENERIC_PANIC\");\n      PanicReasons.set(1, \"ASSERT_FALSE\");\n      PanicReasons.set(17, \"OVERFLOW\");\n      PanicReasons.set(18, \"DIVIDE_BY_ZERO\");\n      PanicReasons.set(33, \"ENUM_RANGE_ERROR\");\n      PanicReasons.set(34, \"BAD_STORAGE_DATA\");\n      PanicReasons.set(49, \"STACK_UNDERFLOW\");\n      PanicReasons.set(50, \"ARRAY_RANGE_ERROR\");\n      PanicReasons.set(65, \"OUT_OF_MEMORY\");\n      PanicReasons.set(81, \"UNINITIALIZED_FUNCTION_CALL\");\n      paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\n      paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n      defaultCoder = null;\n      defaultMaxInflation = 1024;\n      AbiCoder = class _AbiCoder {\n        #getCoder(param) {\n          if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n          }\n          if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n          }\n          switch (param.baseType) {\n            case \"address\":\n              return new AddressCoder(param.name);\n            case \"bool\":\n              return new BooleanCoder(param.name);\n            case \"string\":\n              return new StringCoder(param.name);\n            case \"bytes\":\n              return new BytesCoder(param.name);\n            case \"\":\n              return new NullCoder(param.name);\n          }\n          let match = param.type.match(paramTypeNumber);\n          if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && size % 8 === 0, \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, match[1] === \"int\", param.name);\n          }\n          match = param.type.match(paramTypeBytes);\n          if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n          }\n          assertArgument(false, \"invalid type\", \"type\", param.type);\n        }\n        /**\n         *  Get the default values for the given %%types%%.\n         *\n         *  For example, a ``uint`` is by default ``0`` and ``bool``\n         *  is by default ``false``.\n         */\n        getDefaultValue(types) {\n          const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n          const coder = new TupleCoder(coders, \"_\");\n          return coder.defaultValue();\n        }\n        /**\n         *  Encode the %%values%% as the %%types%% into ABI data.\n         *\n         *  @returns DataHexstring\n         */\n        encode(types, values) {\n          assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n          const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n          const coder = new TupleCoder(coders, \"_\");\n          const writer = new Writer();\n          coder.encode(writer, values);\n          return writer.data;\n        }\n        /**\n         *  Decode the ABI %%data%% as the %%types%% into values.\n         *\n         *  If %%loose%% decoding is enabled, then strict padding is\n         *  not enforced. Some older versions of Solidity incorrectly\n         *  padded event data emitted from ``external`` functions.\n         */\n        decode(types, data, loose) {\n          const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n          const coder = new TupleCoder(coders, \"_\");\n          return coder.decode(new Reader(data, loose, defaultMaxInflation));\n        }\n        static _setDefaultMaxInflation(value) {\n          assertArgument(typeof value === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n          defaultMaxInflation = value;\n        }\n        /**\n         *  Returns the shared singleton instance of a default [[AbiCoder]].\n         *\n         *  On the first call, the instance is created internally.\n         */\n        static defaultAbiCoder() {\n          if (defaultCoder == null) {\n            defaultCoder = new _AbiCoder();\n          }\n          return defaultCoder;\n        }\n        /**\n         *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n         *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n         *  the Transaction %%tx%%.\n         */\n        static getBuiltinCallException(action, tx, data) {\n          return getBuiltinCallException(action, tx, data, _AbiCoder.defaultAbiCoder());\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/interface.js\n  var LogDescription, TransactionDescription, ErrorDescription, Indexed, PanicReasons2, BuiltinErrors, Interface;\n  var init_interface = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/interface.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_crypto2();\n      init_hash();\n      init_utils();\n      init_abi_coder();\n      init_abstract_coder();\n      init_fragments();\n      init_typed();\n      LogDescription = class {\n        /**\n         *  The matching fragment for the ``topic0``.\n         */\n        fragment;\n        /**\n         *  The name of the Event.\n         */\n        name;\n        /**\n         *  The full Event signature.\n         */\n        signature;\n        /**\n         *  The topic hash for the Event.\n         */\n        topic;\n        /**\n         *  The arguments passed into the Event with ``emit``.\n         */\n        args;\n        /**\n         *  @_ignore:\n         */\n        constructor(fragment, topic, args) {\n          const name = fragment.name, signature = fragment.format();\n          defineProperties(this, {\n            fragment,\n            name,\n            signature,\n            topic,\n            args\n          });\n        }\n      };\n      TransactionDescription = class {\n        /**\n         *  The matching fragment from the transaction ``data``.\n         */\n        fragment;\n        /**\n         *  The name of the Function from the transaction ``data``.\n         */\n        name;\n        /**\n         *  The arguments passed to the Function from the transaction ``data``.\n         */\n        args;\n        /**\n         *  The full Function signature from the transaction ``data``.\n         */\n        signature;\n        /**\n         *  The selector for the Function from the transaction ``data``.\n         */\n        selector;\n        /**\n         *  The ``value`` (in wei) from the transaction.\n         */\n        value;\n        /**\n         *  @_ignore:\n         */\n        constructor(fragment, selector, args, value) {\n          const name = fragment.name, signature = fragment.format();\n          defineProperties(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n            value\n          });\n        }\n      };\n      ErrorDescription = class {\n        /**\n         *  The matching fragment.\n         */\n        fragment;\n        /**\n         *  The name of the Error.\n         */\n        name;\n        /**\n         *  The arguments passed to the Error with ``revert``.\n         */\n        args;\n        /**\n         *  The full Error signature.\n         */\n        signature;\n        /**\n         *  The selector for the Error.\n         */\n        selector;\n        /**\n         *  @_ignore:\n         */\n        constructor(fragment, selector, args) {\n          const name = fragment.name, signature = fragment.format();\n          defineProperties(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector\n          });\n        }\n      };\n      Indexed = class {\n        /**\n         *  The ``keccak256`` of the value logged.\n         */\n        hash;\n        /**\n         *  @_ignore:\n         */\n        _isIndexed;\n        /**\n         *  Returns ``true`` if %%value%% is an **Indexed**.\n         *\n         *  This provides a Type Guard for property access.\n         */\n        static isIndexed(value) {\n          return !!(value && value._isIndexed);\n        }\n        /**\n         *  @_ignore:\n         */\n        constructor(hash2) {\n          defineProperties(this, { hash: hash2, _isIndexed: true });\n        }\n      };\n      PanicReasons2 = {\n        \"0\": \"generic panic\",\n        \"1\": \"assert(false)\",\n        \"17\": \"arithmetic overflow\",\n        \"18\": \"division or modulo by zero\",\n        \"33\": \"enum overflow\",\n        \"34\": \"invalid encoded storage byte array accessed\",\n        \"49\": \"out-of-bounds array access; popping on an empty array\",\n        \"50\": \"out-of-bounds access of an array or bytesN\",\n        \"65\": \"out of memory\",\n        \"81\": \"uninitialized function\"\n      };\n      BuiltinErrors = {\n        \"0x08c379a0\": {\n          signature: \"Error(string)\",\n          name: \"Error\",\n          inputs: [\"string\"],\n          reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n          }\n        },\n        \"0x4e487b71\": {\n          signature: \"Panic(uint256)\",\n          name: \"Panic\",\n          inputs: [\"uint256\"],\n          reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 255 && PanicReasons2[code.toString()]) {\n              reason = PanicReasons2[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n          }\n        }\n      };\n      Interface = class _Interface {\n        /**\n         *  All the Contract ABI members (i.e. methods, events, errors, etc).\n         */\n        fragments;\n        /**\n         *  The Contract constructor.\n         */\n        deploy;\n        /**\n         *  The Fallback method, if any.\n         */\n        fallback;\n        /**\n         *  If receiving ether is supported.\n         */\n        receive;\n        #errors;\n        #events;\n        #functions;\n        //    #structs: Map<string, StructFragment>;\n        #abiCoder;\n        /**\n         *  Create a new Interface for the %%fragments%%.\n         */\n        constructor(fragments) {\n          let abi = [];\n          if (typeof fragments === \"string\") {\n            abi = JSON.parse(fragments);\n          } else {\n            abi = fragments;\n          }\n          this.#functions = /* @__PURE__ */ new Map();\n          this.#errors = /* @__PURE__ */ new Map();\n          this.#events = /* @__PURE__ */ new Map();\n          const frags = [];\n          for (const a of abi) {\n            try {\n              frags.push(Fragment.from(a));\n            } catch (error) {\n              console.log(`[Warning] Invalid Fragment ${JSON.stringify(a)}:`, error.message);\n            }\n          }\n          defineProperties(this, {\n            fragments: Object.freeze(frags)\n          });\n          let fallback = null;\n          let receive = false;\n          this.#abiCoder = this.getAbiCoder();\n          this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n              case \"constructor\":\n                if (this.deploy) {\n                  console.log(\"duplicate definition - constructor\");\n                  return;\n                }\n                defineProperties(this, { deploy: fragment });\n                return;\n              case \"fallback\":\n                if (fragment.inputs.length === 0) {\n                  receive = true;\n                } else {\n                  assertArgument(!fallback || fragment.payable !== fallback.payable, \"conflicting fallback fragments\", `fragments[${index}]`, fragment);\n                  fallback = fragment;\n                  receive = fallback.payable;\n                }\n                return;\n              case \"function\":\n                bucket = this.#functions;\n                break;\n              case \"event\":\n                bucket = this.#events;\n                break;\n              case \"error\":\n                bucket = this.#errors;\n                break;\n              default:\n                return;\n            }\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n              return;\n            }\n            bucket.set(signature, fragment);\n          });\n          if (!this.deploy) {\n            defineProperties(this, {\n              deploy: ConstructorFragment.from(\"constructor()\")\n            });\n          }\n          defineProperties(this, { fallback, receive });\n        }\n        /**\n         *  Returns the entire Human-Readable ABI, as an array of\n         *  signatures, optionally as %%minimal%% strings, which\n         *  removes parameter names and unneceesary spaces.\n         */\n        format(minimal) {\n          const format = minimal ? \"minimal\" : \"full\";\n          const abi = this.fragments.map((f) => f.format(format));\n          return abi;\n        }\n        /**\n         *  Return the JSON-encoded ABI. This is the format Solidiy\n         *  returns.\n         */\n        formatJson() {\n          const abi = this.fragments.map((f) => f.format(\"json\"));\n          return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        /**\n         *  The ABI coder that will be used to encode and decode binary\n         *  data.\n         */\n        getAbiCoder() {\n          return AbiCoder.defaultAbiCoder();\n        }\n        // Find a function definition by any means necessary (unless it is ambiguous)\n        #getFunction(key, values, forceUnique) {\n          if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n              if (selector === fragment.selector) {\n                return fragment;\n              }\n            }\n            return null;\n          }\n          if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n              if (name.split(\n                \"(\"\n                /* fix:) */\n              )[0] === key) {\n                matching.push(fragment);\n              }\n            }\n            if (values) {\n              const lastValue = values.length > 0 ? values[values.length - 1] : null;\n              let valueLength = values.length;\n              let allowOptions = true;\n              if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                allowOptions = false;\n                valueLength--;\n              }\n              for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs.length;\n                if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                  matching.splice(i, 1);\n                }\n              }\n              for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs;\n                for (let j = 0; j < values.length; j++) {\n                  if (!Typed.isTyped(values[j])) {\n                    continue;\n                  }\n                  if (j >= inputs.length) {\n                    if (values[j].type === \"overrides\") {\n                      continue;\n                    }\n                    matching.splice(i, 1);\n                    break;\n                  }\n                  if (values[j].type !== inputs[j].baseType) {\n                    matching.splice(i, 1);\n                    break;\n                  }\n                }\n              }\n            }\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n              const lastArg = values[values.length - 1];\n              if (lastArg == null || Array.isArray(lastArg) || typeof lastArg !== \"object\") {\n                matching.splice(0, 1);\n              }\n            }\n            if (matching.length === 0) {\n              return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n              const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n              assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n          }\n          const result = this.#functions.get(FunctionFragment.from(key).format());\n          if (result) {\n            return result;\n          }\n          return null;\n        }\n        /**\n         *  Get the function name for %%key%%, which may be a function selector,\n         *  function name or function signature that belongs to the ABI.\n         */\n        getFunctionName(key) {\n          const fragment = this.#getFunction(key, null, false);\n          assertArgument(fragment, \"no matching function\", \"key\", key);\n          return fragment.name;\n        }\n        /**\n         *  Returns true if %%key%% (a function selector, function name or\n         *  function signature) is present in the ABI.\n         *\n         *  In the case of a function name, the name may be ambiguous, so\n         *  accessing the [[FunctionFragment]] may require refinement.\n         */\n        hasFunction(key) {\n          return !!this.#getFunction(key, null, false);\n        }\n        /**\n         *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n         *  selector, function name or function signature that belongs to the ABI.\n         *\n         *  If %%values%% is provided, it will use the Typed API to handle\n         *  ambiguous cases where multiple functions match by name.\n         *\n         *  If the %%key%% and %%values%% do not refine to a single function in\n         *  the ABI, this will throw.\n         */\n        getFunction(key, values) {\n          return this.#getFunction(key, values || null, true);\n        }\n        /**\n         *  Iterate over all functions, calling %%callback%%, sorted by their name.\n         */\n        forEachFunction(callback) {\n          const names = Array.from(this.#functions.keys());\n          names.sort((a, b2) => a.localeCompare(b2));\n          for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#functions.get(name), i);\n          }\n        }\n        // Find an event definition by any means necessary (unless it is ambiguous)\n        #getEvent(key, values, forceUnique) {\n          if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n              if (eventTopic === fragment.topicHash) {\n                return fragment;\n              }\n            }\n            return null;\n          }\n          if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n              if (name.split(\n                \"(\"\n                /* fix:) */\n              )[0] === key) {\n                matching.push(fragment);\n              }\n            }\n            if (values) {\n              for (let i = matching.length - 1; i >= 0; i--) {\n                if (matching[i].inputs.length < values.length) {\n                  matching.splice(i, 1);\n                }\n              }\n              for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs;\n                for (let j = 0; j < values.length; j++) {\n                  if (!Typed.isTyped(values[j])) {\n                    continue;\n                  }\n                  if (values[j].type !== inputs[j].baseType) {\n                    matching.splice(i, 1);\n                    break;\n                  }\n                }\n              }\n            }\n            if (matching.length === 0) {\n              return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n              const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n              assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n          }\n          const result = this.#events.get(EventFragment.from(key).format());\n          if (result) {\n            return result;\n          }\n          return null;\n        }\n        /**\n         *  Get the event name for %%key%%, which may be a topic hash,\n         *  event name or event signature that belongs to the ABI.\n         */\n        getEventName(key) {\n          const fragment = this.#getEvent(key, null, false);\n          assertArgument(fragment, \"no matching event\", \"key\", key);\n          return fragment.name;\n        }\n        /**\n         *  Returns true if %%key%% (an event topic hash, event name or\n         *  event signature) is present in the ABI.\n         *\n         *  In the case of an event name, the name may be ambiguous, so\n         *  accessing the [[EventFragment]] may require refinement.\n         */\n        hasEvent(key) {\n          return !!this.#getEvent(key, null, false);\n        }\n        /**\n         *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n         *  event name or event signature that belongs to the ABI.\n         *\n         *  If %%values%% is provided, it will use the Typed API to handle\n         *  ambiguous cases where multiple events match by name.\n         *\n         *  If the %%key%% and %%values%% do not refine to a single event in\n         *  the ABI, this will throw.\n         */\n        getEvent(key, values) {\n          return this.#getEvent(key, values || null, true);\n        }\n        /**\n         *  Iterate over all events, calling %%callback%%, sorted by their name.\n         */\n        forEachEvent(callback) {\n          const names = Array.from(this.#events.keys());\n          names.sort((a, b2) => a.localeCompare(b2));\n          for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#events.get(name), i);\n          }\n        }\n        /**\n         *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n         *  selector, error name or error signature that belongs to the ABI.\n         *\n         *  If %%values%% is provided, it will use the Typed API to handle\n         *  ambiguous cases where multiple errors match by name.\n         *\n         *  If the %%key%% and %%values%% do not refine to a single error in\n         *  the ABI, this will throw.\n         */\n        getError(key, values) {\n          if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n              return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n              if (selector === fragment.selector) {\n                return fragment;\n              }\n            }\n            return null;\n          }\n          if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n              if (name.split(\n                \"(\"\n                /* fix:) */\n              )[0] === key) {\n                matching.push(fragment);\n              }\n            }\n            if (matching.length === 0) {\n              if (key === \"Error\") {\n                return ErrorFragment.from(\"error Error(string)\");\n              }\n              if (key === \"Panic\") {\n                return ErrorFragment.from(\"error Panic(uint256)\");\n              }\n              return null;\n            } else if (matching.length > 1) {\n              const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n              assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, \"name\", key);\n            }\n            return matching[0];\n          }\n          key = ErrorFragment.from(key).format();\n          if (key === \"Error(string)\") {\n            return ErrorFragment.from(\"error Error(string)\");\n          }\n          if (key === \"Panic(uint256)\") {\n            return ErrorFragment.from(\"error Panic(uint256)\");\n          }\n          const result = this.#errors.get(key);\n          if (result) {\n            return result;\n          }\n          return null;\n        }\n        /**\n         *  Iterate over all errors, calling %%callback%%, sorted by their name.\n         */\n        forEachError(callback) {\n          const names = Array.from(this.#errors.keys());\n          names.sort((a, b2) => a.localeCompare(b2));\n          for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#errors.get(name), i);\n          }\n        }\n        // Get the 4-byte selector used by Solidity to identify a function\n        /*\n        getSelector(fragment: ErrorFragment | FunctionFragment): string {\n            if (typeof(fragment) === \"string\") {\n                const matches: Array<Fragment> = [ ];\n        \n                try { matches.push(this.getFunction(fragment)); } catch (error) { }\n                try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n        \n                if (matches.length === 0) {\n                    logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n                } else if (matches.length > 1) {\n                    logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n                }\n        \n                fragment = matches[0];\n            }\n        \n            return dataSlice(id(fragment.format()), 0, 4);\n        }\n            */\n        // Get the 32-byte topic hash used by Solidity to identify an event\n        /*\n        getEventTopic(fragment: EventFragment): string {\n            //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n            return id(fragment.format());\n        }\n        */\n        _decodeParams(params, data) {\n          return this.#abiCoder.decode(params, data);\n        }\n        _encodeParams(params, values) {\n          return this.#abiCoder.encode(params, values);\n        }\n        /**\n         *  Encodes a ``tx.data`` object for deploying the Contract with\n         *  the %%values%% as the constructor arguments.\n         */\n        encodeDeploy(values) {\n          return this._encodeParams(this.deploy.inputs, values || []);\n        }\n        /**\n         *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n         *  specified error (see [[getError]] for valid values for\n         *  %%key%%).\n         *\n         *  Most developers should prefer the [[parseCallResult]] method instead,\n         *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n         *  corresponding error.\n         */\n        decodeErrorResult(fragment, data) {\n          if (typeof fragment === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n          }\n          assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, \"data\", data);\n          return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n        }\n        /**\n         *  Encodes the transaction revert data for a call result that\n         *  reverted from the the Contract with the sepcified %%error%%\n         *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n         *\n         *  This is generally not used by most developers, unless trying to mock\n         *  a result from a Contract.\n         */\n        encodeErrorResult(fragment, values) {\n          if (typeof fragment === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n          }\n          return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n          ]);\n        }\n        /**\n         *  Decodes the %%data%% from a transaction ``tx.data`` for\n         *  the function specified (see [[getFunction]] for valid values\n         *  for %%fragment%%).\n         *\n         *  Most developers should prefer the [[parseTransaction]] method\n         *  instead, which will automatically detect the fragment.\n         */\n        decodeFunctionData(fragment, data) {\n          if (typeof fragment === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n          }\n          assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, \"data\", data);\n          return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n        }\n        /**\n         *  Encodes the ``tx.data`` for a transaction that calls the function\n         *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n         *  the %%values%%.\n         */\n        encodeFunctionData(fragment, values) {\n          if (typeof fragment === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n          }\n          return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n          ]);\n        }\n        /**\n         *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n         *  specified function (see [[getFunction]] for valid values for\n         *  %%key%%).\n         *\n         *  Most developers should prefer the [[parseCallResult]] method instead,\n         *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n         *  corresponding error.\n         */\n        decodeFunctionResult(fragment, data) {\n          if (typeof fragment === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n          }\n          let message = \"invalid length for result data\";\n          const bytes2 = getBytesCopy(data);\n          if (bytes2.length % 32 === 0) {\n            try {\n              return this.#abiCoder.decode(fragment.outputs, bytes2);\n            } catch (error) {\n              message = \"could not decode result data\";\n            }\n          }\n          assert2(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes2),\n            info: { method: fragment.name, signature: fragment.format() }\n          });\n        }\n        makeError(_data, tx) {\n          const data = getBytes(_data, \"data\");\n          const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n          const customPrefix = \"execution reverted (unknown custom error)\";\n          if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n            const ef = this.getError(selector);\n            if (ef) {\n              try {\n                const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                error.revert = {\n                  name: ef.name,\n                  signature: ef.format(),\n                  args\n                };\n                error.reason = error.revert.signature;\n                error.message = `execution reverted: ${error.reason}`;\n              } catch (e) {\n                error.message = `execution reverted (coult not decode custom error)`;\n              }\n            }\n          }\n          const parsed = this.parseTransaction(tx);\n          if (parsed) {\n            error.invocation = {\n              method: parsed.name,\n              signature: parsed.signature,\n              args: parsed.args\n            };\n          }\n          return error;\n        }\n        /**\n         *  Encodes the result data (e.g. from an ``eth_call``) for the\n         *  specified function (see [[getFunction]] for valid values\n         *  for %%fragment%%) with %%values%%.\n         *\n         *  This is generally not used by most developers, unless trying to mock\n         *  a result from a Contract.\n         */\n        encodeFunctionResult(fragment, values) {\n          if (typeof fragment === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n          }\n          return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n        }\n        /*\n            spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n                const promises: Array<Promise<>> = [ ];\n                const process = function(type: ParamType, value: any): any {\n                    if (type.baseType === \"array\") {\n                        return descend(type.child\n                    }\n                    if (type. === \"address\") {\n                    }\n                };\n        \n                const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                    if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                    \n                };\n        \n                const result: Array<any> = [ ];\n                values.forEach((value, index) => {\n                    if (value == null) {\n                        topics.push(null);\n                    } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                        logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                    } else if (Array.isArray(value)) {\n                        topics.push(value.map((value) => encodeTopic(param, value)));\n                    } else {\n                        topics.push(encodeTopic(param, value));\n                    }\n                });\n            }\n        */\n        // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n        encodeFilterTopics(fragment, values) {\n          if (typeof fragment === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n          }\n          assert2(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length });\n          const topics = [];\n          if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n          }\n          const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n              return id(value);\n            } else if (param.type === \"bytes\") {\n              return keccak256(hexlify(value));\n            }\n            if (param.type === \"bool\" && typeof value === \"boolean\") {\n              value = value ? \"0x01\" : \"0x00\";\n            } else if (param.type.match(/^u?int/)) {\n              value = toBeHex(value);\n            } else if (param.type.match(/^bytes/)) {\n              value = zeroPadBytes(value, 32);\n            } else if (param.type === \"address\") {\n              this.#abiCoder.encode([\"address\"], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n          };\n          values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n              assertArgument(value == null, \"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n              return;\n            }\n            if (value == null) {\n              topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n              assertArgument(false, \"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n            } else if (Array.isArray(value)) {\n              topics.push(value.map((value2) => encodeTopic(param, value2)));\n            } else {\n              topics.push(encodeTopic(param, value));\n            }\n          });\n          while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n          }\n          return topics;\n        }\n        encodeEventLog(fragment, values) {\n          if (typeof fragment === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n          }\n          const topics = [];\n          const dataTypes = [];\n          const dataValues = [];\n          if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n          }\n          assertArgument(values.length === fragment.inputs.length, \"event arguments/values mismatch\", \"values\", values);\n          fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n              if (param.type === \"string\") {\n                topics.push(id(value));\n              } else if (param.type === \"bytes\") {\n                topics.push(keccak256(value));\n              } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                throw new Error(\"not implemented\");\n              } else {\n                topics.push(this.#abiCoder.encode([param.type], [value]));\n              }\n            } else {\n              dataTypes.push(param);\n              dataValues.push(value);\n            }\n          });\n          return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics\n          };\n        }\n        // Decode a filter for the event and the search criteria\n        decodeEventLog(fragment, data, topics) {\n          if (typeof fragment === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n          }\n          if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n          }\n          const indexed = [];\n          const nonIndexed = [];\n          const dynamic = [];\n          fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n              if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                dynamic.push(true);\n              } else {\n                indexed.push(param);\n                dynamic.push(false);\n              }\n            } else {\n              nonIndexed.push(param);\n              dynamic.push(false);\n            }\n          });\n          const resultIndexed = topics != null ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n          const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n          const values = [];\n          const keys = [];\n          let nonIndexedIndex = 0, indexedIndex = 0;\n          fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n              if (resultIndexed == null) {\n                value = new Indexed(null);\n              } else if (dynamic[index]) {\n                value = new Indexed(resultIndexed[indexedIndex++]);\n              } else {\n                try {\n                  value = resultIndexed[indexedIndex++];\n                } catch (error) {\n                  value = error;\n                }\n              }\n            } else {\n              try {\n                value = resultNonIndexed[nonIndexedIndex++];\n              } catch (error) {\n                value = error;\n              }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n          });\n          return Result.fromItems(values, keys);\n        }\n        /**\n         *  Parses a transaction, finding the matching function and extracts\n         *  the parameter values along with other useful function details.\n         *\n         *  If the matching function cannot be found, return null.\n         */\n        parseTransaction(tx) {\n          const data = getBytes(tx.data, \"tx.data\");\n          const value = getBigInt(tx.value != null ? tx.value : 0, \"tx.value\");\n          const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n          if (!fragment) {\n            return null;\n          }\n          const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n          return new TransactionDescription(fragment, fragment.selector, args, value);\n        }\n        parseCallResult(data) {\n          throw new Error(\"@TODO\");\n        }\n        /**\n         *  Parses a receipt log, finding the matching event and extracts\n         *  the parameter values along with other useful event details.\n         *\n         *  If the matching event cannot be found, returns null.\n         */\n        parseLog(log) {\n          const fragment = this.getEvent(log.topics[0]);\n          if (!fragment || fragment.anonymous) {\n            return null;\n          }\n          return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n        }\n        /**\n         *  Parses a revert data, finding the matching error and extracts\n         *  the parameter values along with other useful error details.\n         *\n         *  If the matching error cannot be found, returns null.\n         */\n        parseError(data) {\n          const hexData = hexlify(data);\n          const fragment = this.getError(dataSlice(hexData, 0, 4));\n          if (!fragment) {\n            return null;\n          }\n          const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n          return new ErrorDescription(fragment, fragment.selector, args);\n        }\n        /**\n         *  Creates a new [[Interface]] from the ABI %%value%%.\n         *\n         *  The %%value%% may be provided as an existing [[Interface]] object,\n         *  a JSON-encoded ABI or any Human-Readable ABI format.\n         */\n        static from(value) {\n          if (value instanceof _Interface) {\n            return value;\n          }\n          if (typeof value === \"string\") {\n            return new _Interface(JSON.parse(value));\n          }\n          if (typeof value.formatJson === \"function\") {\n            return new _Interface(value.formatJson());\n          }\n          if (typeof value.format === \"function\") {\n            return new _Interface(value.format(\"json\"));\n          }\n          return new _Interface(value);\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/index.js\n  var init_abi = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/abi/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_abi_coder();\n      init_interface();\n      init_typed();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/provider.js\n  function getValue2(value) {\n    if (value == null) {\n      return null;\n    }\n    return value;\n  }\n  function toJson(value) {\n    if (value == null) {\n      return null;\n    }\n    return value.toString();\n  }\n  function copyRequest(req) {\n    const result = {};\n    if (req.to) {\n      result.to = req.to;\n    }\n    if (req.from) {\n      result.from = req.from;\n    }\n    if (req.data) {\n      result.data = hexlify(req.data);\n    }\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n      if (!(key in req) || req[key] == null) {\n        continue;\n      }\n      result[key] = getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n      if (!(key in req) || req[key] == null) {\n        continue;\n      }\n      result[key] = getNumber(req[key], `request.${key}`);\n    }\n    if (req.accessList) {\n      result.accessList = accessListify(req.accessList);\n    }\n    if (req.authorizationList) {\n      result.authorizationList = req.authorizationList.slice();\n    }\n    if (\"blockTag\" in req) {\n      result.blockTag = req.blockTag;\n    }\n    if (\"enableCcipRead\" in req) {\n      result.enableCcipRead = !!req.enableCcipRead;\n    }\n    if (\"customData\" in req) {\n      result.customData = req.customData;\n    }\n    if (\"blobVersionedHashes\" in req && req.blobVersionedHashes) {\n      result.blobVersionedHashes = req.blobVersionedHashes.slice();\n    }\n    if (\"kzg\" in req) {\n      result.kzg = req.kzg;\n    }\n    if (\"blobs\" in req && req.blobs) {\n      result.blobs = req.blobs.map((b2) => {\n        if (isBytesLike(b2)) {\n          return hexlify(b2);\n        }\n        return Object.assign({}, b2);\n      });\n    }\n    return result;\n  }\n  function createOrphanedBlockFilter(block) {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n  }\n  function createReorderedTransactionFilter(tx, other) {\n    return { orphan: \"reorder-transaction\", tx, other };\n  }\n  function createRemovedTransactionFilter(tx) {\n    return { orphan: \"drop-transaction\", tx };\n  }\n  function createRemovedLogFilter(log) {\n    return { orphan: \"drop-log\", log: {\n      transactionHash: log.transactionHash,\n      blockHash: log.blockHash,\n      blockNumber: log.blockNumber,\n      address: log.address,\n      data: log.data,\n      topics: Object.freeze(log.topics.slice()),\n      index: log.index\n    } };\n  }\n  var BN_08, FeeData, Block, Log, TransactionReceipt, TransactionResponse;\n  var init_provider = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/provider.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_transaction2();\n      BN_08 = BigInt(0);\n      FeeData = class {\n        /**\n         *  The gas price for legacy networks.\n         */\n        gasPrice;\n        /**\n         *  The maximum fee to pay per gas.\n         *\n         *  The base fee per gas is defined by the network and based on\n         *  congestion, increasing the cost during times of heavy load\n         *  and lowering when less busy.\n         *\n         *  The actual fee per gas will be the base fee for the block\n         *  and the priority fee, up to the max fee per gas.\n         *\n         *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n         */\n        maxFeePerGas;\n        /**\n         *  The additional amout to pay per gas to encourage a validator\n         *  to include the transaction.\n         *\n         *  The purpose of this is to compensate the validator for the\n         *  adjusted risk for including a given transaction.\n         *\n         *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n         */\n        maxPriorityFeePerGas;\n        /**\n         *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n         *  %%maxPriorityFeePerGas%%.\n         */\n        constructor(gasPrice, maxFeePerGas, maxPriorityFeePerGas) {\n          defineProperties(this, {\n            gasPrice: getValue2(gasPrice),\n            maxFeePerGas: getValue2(maxFeePerGas),\n            maxPriorityFeePerGas: getValue2(maxPriorityFeePerGas)\n          });\n        }\n        /**\n         *  Returns a JSON-friendly value.\n         */\n        toJSON() {\n          const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = this;\n          return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas)\n          };\n        }\n      };\n      Block = class {\n        /**\n         *  The provider connected to the block used to fetch additional details\n         *  if necessary.\n         */\n        provider;\n        /**\n         *  The block number, sometimes called the block height. This is a\n         *  sequential number that is one higher than the parent block.\n         */\n        number;\n        /**\n         *  The block hash.\n         *\n         *  This hash includes all properties, so can be safely used to identify\n         *  an exact set of block properties.\n         */\n        hash;\n        /**\n         *  The timestamp for this block, which is the number of seconds since\n         *  epoch that this block was included.\n         */\n        timestamp;\n        /**\n         *  The block hash of the parent block.\n         */\n        parentHash;\n        /**\n         *  The hash tree root of the parent beacon block for the given\n         *  execution block. See [[link-eip-4788]].\n         */\n        parentBeaconBlockRoot;\n        /**\n         *  The nonce.\n         *\n         *  On legacy networks, this is the random number inserted which\n         *  permitted the difficulty target to be reached.\n         */\n        nonce;\n        /**\n         *  The difficulty target.\n         *\n         *  On legacy networks, this is the proof-of-work target required\n         *  for a block to meet the protocol rules to be included.\n         *\n         *  On modern networks, this is a random number arrived at using\n         *  randao.  @TODO: Find links?\n         */\n        difficulty;\n        /**\n         *  The total gas limit for this block.\n         */\n        gasLimit;\n        /**\n         *  The total gas used in this block.\n         */\n        gasUsed;\n        /**\n         *  The root hash for the global state after applying changes\n         *  in this block.\n         */\n        stateRoot;\n        /**\n         *  The hash of the transaction receipts trie.\n         */\n        receiptsRoot;\n        /**\n         *  The total amount of blob gas consumed by the transactions\n         *  within the block. See [[link-eip-4844]].\n         */\n        blobGasUsed;\n        /**\n         *  The running total of blob gas consumed in excess of the\n         *  target, prior to the block. See [[link-eip-4844]].\n         */\n        excessBlobGas;\n        /**\n         *  The miner coinbase address, wihch receives any subsidies for\n         *  including this block.\n         */\n        miner;\n        /**\n         *  The latest RANDAO mix of the post beacon state of\n         *  the previous block.\n         */\n        prevRandao;\n        /**\n         *  Any extra data the validator wished to include.\n         */\n        extraData;\n        /**\n         *  The base fee per gas that all transactions in this block were\n         *  charged.\n         *\n         *  This adjusts after each block, depending on how congested the network\n         *  is.\n         */\n        baseFeePerGas;\n        #transactions;\n        /**\n         *  Create a new **Block** object.\n         *\n         *  This should generally not be necessary as the unless implementing a\n         *  low-level library.\n         */\n        constructor(block, provider) {\n          this.#transactions = block.transactions.map((tx) => {\n            if (typeof tx !== \"string\") {\n              return new TransactionResponse(tx, provider);\n            }\n            return tx;\n          });\n          defineProperties(this, {\n            provider,\n            hash: getValue2(block.hash),\n            number: block.number,\n            timestamp: block.timestamp,\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            prevRandao: getValue2(block.prevRandao),\n            extraData: block.extraData,\n            baseFeePerGas: getValue2(block.baseFeePerGas),\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot\n          });\n        }\n        /**\n         *  Returns the list of transaction hashes, in the order\n         *  they were executed within the block.\n         */\n        get transactions() {\n          return this.#transactions.map((tx) => {\n            if (typeof tx === \"string\") {\n              return tx;\n            }\n            return tx.hash;\n          });\n        }\n        /**\n         *  Returns the complete transactions, in the order they\n         *  were executed within the block.\n         *\n         *  This is only available for blocks which prefetched\n         *  transactions, by passing ``true`` to %%prefetchTxs%%\n         *  into [[Provider-getBlock]].\n         */\n        get prefetchedTransactions() {\n          const txs = this.#transactions.slice();\n          if (txs.length === 0) {\n            return [];\n          }\n          assert2(typeof txs[0] === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n          });\n          return txs;\n        }\n        /**\n         *  Returns a JSON-friendly value.\n         */\n        toJSON() {\n          const { baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash: hash2, miner, prevRandao, nonce, number: number2, parentHash, parentBeaconBlockRoot, stateRoot, receiptsRoot, timestamp, transactions } = this;\n          return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash: hash2,\n            miner,\n            prevRandao,\n            nonce,\n            number: number2,\n            parentHash,\n            timestamp,\n            parentBeaconBlockRoot,\n            stateRoot,\n            receiptsRoot,\n            transactions\n          };\n        }\n        [Symbol.iterator]() {\n          let index = 0;\n          const txs = this.transactions;\n          return {\n            next: () => {\n              if (index < this.length) {\n                return {\n                  value: txs[index++],\n                  done: false\n                };\n              }\n              return { value: void 0, done: true };\n            }\n          };\n        }\n        /**\n         *  The number of transactions in this block.\n         */\n        get length() {\n          return this.#transactions.length;\n        }\n        /**\n         *  The [[link-js-date]] this block was included at.\n         */\n        get date() {\n          if (this.timestamp == null) {\n            return null;\n          }\n          return new Date(this.timestamp * 1e3);\n        }\n        /**\n         *  Get the transaction at %%indexe%% within this block.\n         */\n        async getTransaction(indexOrHash) {\n          let tx = void 0;\n          if (typeof indexOrHash === \"number\") {\n            tx = this.#transactions[indexOrHash];\n          } else {\n            const hash2 = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n              if (typeof v === \"string\") {\n                if (v !== hash2) {\n                  continue;\n                }\n                tx = v;\n                break;\n              } else {\n                if (v.hash !== hash2) {\n                  continue;\n                }\n                tx = v;\n                break;\n              }\n            }\n          }\n          if (tx == null) {\n            throw new Error(\"no such tx\");\n          }\n          if (typeof tx === \"string\") {\n            return await this.provider.getTransaction(tx);\n          } else {\n            return tx;\n          }\n        }\n        /**\n         *  If a **Block** was fetched with a request to include the transactions\n         *  this will allow synchronous access to those transactions.\n         *\n         *  If the transactions were not prefetched, this will throw.\n         */\n        getPrefetchedTransaction(indexOrHash) {\n          const txs = this.prefetchedTransactions;\n          if (typeof indexOrHash === \"number\") {\n            return txs[indexOrHash];\n          }\n          indexOrHash = indexOrHash.toLowerCase();\n          for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n              return tx;\n            }\n          }\n          assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n        }\n        /**\n         *  Returns true if this block been mined. This provides a type guard\n         *  for all properties on a [[MinedBlock]].\n         */\n        isMined() {\n          return !!this.hash;\n        }\n        /**\n         *  Returns true if this block is an [[link-eip-2930]] block.\n         */\n        isLondon() {\n          return !!this.baseFeePerGas;\n        }\n        /**\n         *  @_ignore:\n         */\n        orphanedEvent() {\n          if (!this.isMined()) {\n            throw new Error(\"\");\n          }\n          return createOrphanedBlockFilter(this);\n        }\n      };\n      Log = class {\n        /**\n         *  The provider connected to the log used to fetch additional details\n         *  if necessary.\n         */\n        provider;\n        /**\n         *  The transaction hash of the transaction this log occurred in. Use the\n         *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n         */\n        transactionHash;\n        /**\n         *  The block hash of the block this log occurred in. Use the\n         *  [[Log-getBlock]] to get the [[Block]].\n         */\n        blockHash;\n        /**\n         *  The block number of the block this log occurred in. It is preferred\n         *  to use the [[Block-hash]] when fetching the related [[Block]],\n         *  since in the case of an orphaned block, the block at that height may\n         *  have changed.\n         */\n        blockNumber;\n        /**\n         *  If the **Log** represents a block that was removed due to an orphaned\n         *  block, this will be true.\n         *\n         *  This can only happen within an orphan event listener.\n         */\n        removed;\n        /**\n         *  The address of the contract that emitted this log.\n         */\n        address;\n        /**\n         *  The data included in this log when it was emitted.\n         */\n        data;\n        /**\n         *  The indexed topics included in this log when it was emitted.\n         *\n         *  All topics are included in the bloom filters, so they can be\n         *  efficiently filtered using the [[Provider-getLogs]] method.\n         */\n        topics;\n        /**\n         *  The index within the block this log occurred at. This is generally\n         *  not useful to developers, but can be used with the various roots\n         *  to proof inclusion within a block.\n         */\n        index;\n        /**\n         *  The index within the transaction of this log.\n         */\n        transactionIndex;\n        /**\n         *  @_ignore:\n         */\n        constructor(log, provider) {\n          this.provider = provider;\n          const topics = Object.freeze(log.topics.slice());\n          defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex\n          });\n        }\n        /**\n         *  Returns a JSON-compatible object.\n         */\n        toJSON() {\n          const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n          return {\n            _type: \"log\",\n            address,\n            blockHash,\n            blockNumber,\n            data,\n            index,\n            removed,\n            topics,\n            transactionHash,\n            transactionIndex\n          };\n        }\n        /**\n         *  Returns the block that this log occurred in.\n         */\n        async getBlock() {\n          const block = await this.provider.getBlock(this.blockHash);\n          assert2(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n          return block;\n        }\n        /**\n         *  Returns the transaction that this log occurred in.\n         */\n        async getTransaction() {\n          const tx = await this.provider.getTransaction(this.transactionHash);\n          assert2(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n          return tx;\n        }\n        /**\n         *  Returns the transaction receipt fot the transaction that this\n         *  log occurred in.\n         */\n        async getTransactionReceipt() {\n          const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n          assert2(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", {});\n          return receipt;\n        }\n        /**\n         *  @_ignore:\n         */\n        removedEvent() {\n          return createRemovedLogFilter(this);\n        }\n      };\n      TransactionReceipt = class {\n        /**\n         *  The provider connected to the log used to fetch additional details\n         *  if necessary.\n         */\n        provider;\n        /**\n         *  The address the transaction was sent to.\n         */\n        to;\n        /**\n         *  The sender of the transaction.\n         */\n        from;\n        /**\n         *  The address of the contract if the transaction was directly\n         *  responsible for deploying one.\n         *\n         *  This is non-null **only** if the ``to`` is empty and the ``data``\n         *  was successfully executed as initcode.\n         */\n        contractAddress;\n        /**\n         *  The transaction hash.\n         */\n        hash;\n        /**\n         *  The index of this transaction within the block transactions.\n         */\n        index;\n        /**\n         *  The block hash of the [[Block]] this transaction was included in.\n         */\n        blockHash;\n        /**\n         *  The block number of the [[Block]] this transaction was included in.\n         */\n        blockNumber;\n        /**\n         *  The bloom filter bytes that represent all logs that occurred within\n         *  this transaction. This is generally not useful for most developers,\n         *  but can be used to validate the included logs.\n         */\n        logsBloom;\n        /**\n         *  The actual amount of gas used by this transaction.\n         *\n         *  When creating a transaction, the amount of gas that will be used can\n         *  only be approximated, but the sender must pay the gas fee for the\n         *  entire gas limit. After the transaction, the difference is refunded.\n         */\n        gasUsed;\n        /**\n         *  The gas used for BLObs. See [[link-eip-4844]].\n         */\n        blobGasUsed;\n        /**\n         *  The amount of gas used by all transactions within the block for this\n         *  and all transactions with a lower ``index``.\n         *\n         *  This is generally not useful for developers but can be used to\n         *  validate certain aspects of execution.\n         */\n        cumulativeGasUsed;\n        /**\n         *  The actual gas price used during execution.\n         *\n         *  Due to the complexity of [[link-eip-1559]] this value can only\n         *  be caluclated after the transaction has been mined, snce the base\n         *  fee is protocol-enforced.\n         */\n        gasPrice;\n        /**\n         *  The price paid per BLOB in gas. See [[link-eip-4844]].\n         */\n        blobGasPrice;\n        /**\n         *  The [[link-eip-2718]] transaction type.\n         */\n        type;\n        //readonly byzantium!: boolean;\n        /**\n         *  The status of this transaction, indicating success (i.e. ``1``) or\n         *  a revert (i.e. ``0``).\n         *\n         *  This is available in post-byzantium blocks, but some backends may\n         *  backfill this value.\n         */\n        status;\n        /**\n         *  The root hash of this transaction.\n         *\n         *  This is no present and was only included in pre-byzantium blocks, but\n         *  could be used to validate certain parts of the receipt.\n         */\n        root;\n        #logs;\n        /**\n         *  @_ignore:\n         */\n        constructor(tx, provider) {\n          this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n          }));\n          let gasPrice = BN_08;\n          if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n          } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n          }\n          defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n          });\n        }\n        /**\n         *  The logs for this transaction.\n         */\n        get logs() {\n          return this.#logs;\n        }\n        /**\n         *  Returns a JSON-compatible representation.\n         */\n        toJSON() {\n          const {\n            to,\n            from,\n            contractAddress,\n            hash: hash2,\n            index,\n            blockHash,\n            blockNumber,\n            logsBloom,\n            logs,\n            //byzantium, \n            status,\n            root\n          } = this;\n          return {\n            _type: \"TransactionReceipt\",\n            blockHash,\n            blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash: hash2,\n            index,\n            logs,\n            logsBloom,\n            root,\n            status,\n            to\n          };\n        }\n        /**\n         *  @_ignore:\n         */\n        get length() {\n          return this.logs.length;\n        }\n        [Symbol.iterator]() {\n          let index = 0;\n          return {\n            next: () => {\n              if (index < this.length) {\n                return { value: this.logs[index++], done: false };\n              }\n              return { value: void 0, done: true };\n            }\n          };\n        }\n        /**\n         *  The total fee for this transaction, in wei.\n         */\n        get fee() {\n          return this.gasUsed * this.gasPrice;\n        }\n        /**\n         *  Resolves to the block this transaction occurred in.\n         */\n        async getBlock() {\n          const block = await this.provider.getBlock(this.blockHash);\n          if (block == null) {\n            throw new Error(\"TODO\");\n          }\n          return block;\n        }\n        /**\n         *  Resolves to the transaction this transaction occurred in.\n         */\n        async getTransaction() {\n          const tx = await this.provider.getTransaction(this.hash);\n          if (tx == null) {\n            throw new Error(\"TODO\");\n          }\n          return tx;\n        }\n        /**\n         *  Resolves to the return value of the execution of this transaction.\n         *\n         *  Support for this feature is limited, as it requires an archive node\n         *  with the ``debug_`` or ``trace_`` API enabled.\n         */\n        async getResult() {\n          return await this.provider.getTransactionResult(this.hash);\n        }\n        /**\n         *  Resolves to the number of confirmations this transaction has.\n         */\n        async confirmations() {\n          return await this.provider.getBlockNumber() - this.blockNumber + 1;\n        }\n        /**\n         *  @_ignore:\n         */\n        removedEvent() {\n          return createRemovedTransactionFilter(this);\n        }\n        /**\n         *  @_ignore:\n         */\n        reorderedEvent(other) {\n          assert2(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n          return createReorderedTransactionFilter(this, other);\n        }\n      };\n      TransactionResponse = class _TransactionResponse {\n        /**\n         *  The provider this is connected to, which will influence how its\n         *  methods will resolve its async inspection methods.\n         */\n        provider;\n        /**\n         *  The block number of the block that this transaction was included in.\n         *\n         *  This is ``null`` for pending transactions.\n         */\n        blockNumber;\n        /**\n         *  The blockHash of the block that this transaction was included in.\n         *\n         *  This is ``null`` for pending transactions.\n         */\n        blockHash;\n        /**\n         *  The index within the block that this transaction resides at.\n         */\n        index;\n        /**\n         *  The transaction hash.\n         */\n        hash;\n        /**\n         *  The [[link-eip-2718]] transaction envelope type. This is\n         *  ``0`` for legacy transactions types.\n         */\n        type;\n        /**\n         *  The receiver of this transaction.\n         *\n         *  If ``null``, then the transaction is an initcode transaction.\n         *  This means the result of executing the [[data]] will be deployed\n         *  as a new contract on chain (assuming it does not revert) and the\n         *  address may be computed using [[getCreateAddress]].\n         */\n        to;\n        /**\n         *  The sender of this transaction. It is implicitly computed\n         *  from the transaction pre-image hash (as the digest) and the\n         *  [[signature]] using ecrecover.\n         */\n        from;\n        /**\n         *  The nonce, which is used to prevent replay attacks and offer\n         *  a method to ensure transactions from a given sender are explicitly\n         *  ordered.\n         *\n         *  When sending a transaction, this must be equal to the number of\n         *  transactions ever sent by [[from]].\n         */\n        nonce;\n        /**\n         *  The maximum units of gas this transaction can consume. If execution\n         *  exceeds this, the entries transaction is reverted and the sender\n         *  is charged for the full amount, despite not state changes being made.\n         */\n        gasLimit;\n        /**\n         *  The gas price can have various values, depending on the network.\n         *\n         *  In modern networks, for transactions that are included this is\n         *  the //effective gas price// (the fee per gas that was actually\n         *  charged), while for transactions that have not been included yet\n         *  is the [[maxFeePerGas]].\n         *\n         *  For legacy transactions, or transactions on legacy networks, this\n         *  is the fee that will be charged per unit of gas the transaction\n         *  consumes.\n         */\n        gasPrice;\n        /**\n         *  The maximum priority fee (per unit of gas) to allow a\n         *  validator to charge the sender. This is inclusive of the\n         *  [[maxFeeFeePerGas]].\n         */\n        maxPriorityFeePerGas;\n        /**\n         *  The maximum fee (per unit of gas) to allow this transaction\n         *  to charge the sender.\n         */\n        maxFeePerGas;\n        /**\n         *  The [[link-eip-4844]] max fee per BLOb gas.\n         */\n        maxFeePerBlobGas;\n        /**\n         *  The data.\n         */\n        data;\n        /**\n         *  The value, in wei. Use [[formatEther]] to format this value\n         *  as ether.\n         */\n        value;\n        /**\n         *  The chain ID.\n         */\n        chainId;\n        /**\n         *  The signature.\n         */\n        signature;\n        /**\n         *  The [[link-eip-2930]] access list for transaction types that\n         *  support it, otherwise ``null``.\n         */\n        accessList;\n        /**\n         *  The [[link-eip-4844]] BLOb versioned hashes.\n         */\n        blobVersionedHashes;\n        /**\n         *  The [[link-eip-7702]] authorizations (if any).\n         */\n        authorizationList;\n        #startBlock;\n        /**\n         *  @_ignore:\n         */\n        constructor(tx, provider) {\n          this.provider = provider;\n          this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n          this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n          this.hash = tx.hash;\n          this.index = tx.index;\n          this.type = tx.type;\n          this.from = tx.from;\n          this.to = tx.to || null;\n          this.gasLimit = tx.gasLimit;\n          this.nonce = tx.nonce;\n          this.data = tx.data;\n          this.value = tx.value;\n          this.gasPrice = tx.gasPrice;\n          this.maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? tx.maxPriorityFeePerGas : null;\n          this.maxFeePerGas = tx.maxFeePerGas != null ? tx.maxFeePerGas : null;\n          this.maxFeePerBlobGas = tx.maxFeePerBlobGas != null ? tx.maxFeePerBlobGas : null;\n          this.chainId = tx.chainId;\n          this.signature = tx.signature;\n          this.accessList = tx.accessList != null ? tx.accessList : null;\n          this.blobVersionedHashes = tx.blobVersionedHashes != null ? tx.blobVersionedHashes : null;\n          this.authorizationList = tx.authorizationList != null ? tx.authorizationList : null;\n          this.#startBlock = -1;\n        }\n        /**\n         *  Returns a JSON-compatible representation of this transaction.\n         */\n        toJSON() {\n          const { blockNumber, blockHash, index, hash: hash2, type, to, from, nonce, data, signature, accessList, blobVersionedHashes } = this;\n          return {\n            _type: \"TransactionResponse\",\n            accessList,\n            blockNumber,\n            blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data,\n            from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash: hash2,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce,\n            signature,\n            to,\n            index,\n            type,\n            value: toJson(this.value)\n          };\n        }\n        /**\n         *  Resolves to the Block that this transaction was included in.\n         *\n         *  This will return null if the transaction has not been included yet.\n         */\n        async getBlock() {\n          let blockNumber = this.blockNumber;\n          if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n              blockNumber = tx.blockNumber;\n            }\n          }\n          if (blockNumber == null) {\n            return null;\n          }\n          const block = this.provider.getBlock(blockNumber);\n          if (block == null) {\n            throw new Error(\"TODO\");\n          }\n          return block;\n        }\n        /**\n         *  Resolves to this transaction being re-requested from the\n         *  provider. This can be used if you have an unmined transaction\n         *  and wish to get an up-to-date populated instance.\n         */\n        async getTransaction() {\n          return this.provider.getTransaction(this.hash);\n        }\n        /**\n         *  Resolve to the number of confirmations this transaction has.\n         */\n        async confirmations() {\n          if (this.blockNumber == null) {\n            const { tx, blockNumber: blockNumber2 } = await resolveProperties({\n              tx: this.getTransaction(),\n              blockNumber: this.provider.getBlockNumber()\n            });\n            if (tx == null || tx.blockNumber == null) {\n              return 0;\n            }\n            return blockNumber2 - tx.blockNumber + 1;\n          }\n          const blockNumber = await this.provider.getBlockNumber();\n          return blockNumber - this.blockNumber + 1;\n        }\n        /**\n         *  Resolves once this transaction has been mined and has\n         *  %%confirms%% blocks including it (default: ``1``) with an\n         *  optional %%timeout%%.\n         *\n         *  This can resolve to ``null`` only if %%confirms%% is ``0``\n         *  and the transaction has not been mined, otherwise this will\n         *  wait until enough confirmations have completed.\n         */\n        async wait(_confirms, _timeout) {\n          const confirms = _confirms == null ? 1 : _confirms;\n          const timeout = _timeout == null ? 0 : _timeout;\n          let startBlock = this.#startBlock;\n          let nextScan = -1;\n          let stopScanning = startBlock === -1 ? true : false;\n          const checkReplacement = async () => {\n            if (stopScanning) {\n              return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n              blockNumber: this.provider.getBlockNumber(),\n              nonce: this.provider.getTransactionCount(this.from)\n            });\n            if (nonce < this.nonce) {\n              startBlock = blockNumber;\n              return;\n            }\n            if (stopScanning) {\n              return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n              return;\n            }\n            if (nextScan === -1) {\n              nextScan = startBlock - 3;\n              if (nextScan < this.#startBlock) {\n                nextScan = this.#startBlock;\n              }\n            }\n            while (nextScan <= blockNumber) {\n              if (stopScanning) {\n                return null;\n              }\n              const block = await this.provider.getBlock(nextScan, true);\n              if (block == null) {\n                return;\n              }\n              for (const hash2 of block) {\n                if (hash2 === this.hash) {\n                  return;\n                }\n              }\n              for (let i = 0; i < block.length; i++) {\n                const tx = await block.getTransaction(i);\n                if (tx.from === this.from && tx.nonce === this.nonce) {\n                  if (stopScanning) {\n                    return null;\n                  }\n                  const receipt2 = await this.provider.getTransactionReceipt(tx.hash);\n                  if (receipt2 == null) {\n                    return;\n                  }\n                  if (blockNumber - receipt2.blockNumber + 1 < confirms) {\n                    return;\n                  }\n                  let reason = \"replaced\";\n                  if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                    reason = \"repriced\";\n                  } else if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_08) {\n                    reason = \"cancelled\";\n                  }\n                  assert2(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                    cancelled: reason === \"replaced\" || reason === \"cancelled\",\n                    reason,\n                    replacement: tx.replaceableTransaction(startBlock),\n                    hash: tx.hash,\n                    receipt: receipt2\n                  });\n                }\n              }\n              nextScan++;\n            }\n            return;\n          };\n          const checkReceipt = (receipt2) => {\n            if (receipt2 == null || receipt2.status !== 0) {\n              return receipt2;\n            }\n            assert2(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n              action: \"sendTransaction\",\n              data: null,\n              reason: null,\n              invocation: null,\n              revert: null,\n              transaction: {\n                to: receipt2.to,\n                from: receipt2.from,\n                data: \"\"\n                // @TODO: in v7, split out sendTransaction properties\n              },\n              receipt: receipt2\n            });\n          };\n          const receipt = await this.provider.getTransactionReceipt(this.hash);\n          if (confirms === 0) {\n            return checkReceipt(receipt);\n          }\n          if (receipt) {\n            if (confirms === 1 || await receipt.confirmations() >= confirms) {\n              return checkReceipt(receipt);\n            }\n          } else {\n            await checkReplacement();\n            if (confirms === 0) {\n              return null;\n            }\n          }\n          const waiter = new Promise((resolve, reject) => {\n            const cancellers = [];\n            const cancel = () => {\n              cancellers.forEach((c) => c());\n            };\n            cancellers.push(() => {\n              stopScanning = true;\n            });\n            if (timeout > 0) {\n              const timer = setTimeout(() => {\n                cancel();\n                reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n              }, timeout);\n              cancellers.push(() => {\n                clearTimeout(timer);\n              });\n            }\n            const txListener = async (receipt2) => {\n              if (await receipt2.confirmations() >= confirms) {\n                cancel();\n                try {\n                  resolve(checkReceipt(receipt2));\n                } catch (error) {\n                  reject(error);\n                }\n              }\n            };\n            cancellers.push(() => {\n              this.provider.off(this.hash, txListener);\n            });\n            this.provider.on(this.hash, txListener);\n            if (startBlock >= 0) {\n              const replaceListener = async () => {\n                try {\n                  await checkReplacement();\n                } catch (error) {\n                  if (isError(error, \"TRANSACTION_REPLACED\")) {\n                    cancel();\n                    reject(error);\n                    return;\n                  }\n                }\n                if (!stopScanning) {\n                  this.provider.once(\"block\", replaceListener);\n                }\n              };\n              cancellers.push(() => {\n                this.provider.off(\"block\", replaceListener);\n              });\n              this.provider.once(\"block\", replaceListener);\n            }\n          });\n          return await waiter;\n        }\n        /**\n         *  Returns ``true`` if this transaction has been included.\n         *\n         *  This is effective only as of the time the TransactionResponse\n         *  was instantiated. To get up-to-date information, use\n         *  [[getTransaction]].\n         *\n         *  This provides a Type Guard that this transaction will have\n         *  non-null property values for properties that are null for\n         *  unmined transactions.\n         */\n        isMined() {\n          return this.blockHash != null;\n        }\n        /**\n         *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n         *  transaction.\n         *\n         *  This provides a Type Guard that this transaction will have\n         *  the ``null``-ness for hardfork-specific properties set correctly.\n         */\n        isLegacy() {\n          return this.type === 0;\n        }\n        /**\n         *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n         *  transaction. See [[link-eip-2070]].\n         *\n         *  This provides a Type Guard that this transaction will have\n         *  the ``null``-ness for hardfork-specific properties set correctly.\n         */\n        isBerlin() {\n          return this.type === 1;\n        }\n        /**\n         *  Returns true if the transaction is a London (i.e. ``type == 2``)\n         *  transaction. See [[link-eip-1559]].\n         *\n         *  This provides a Type Guard that this transaction will have\n         *  the ``null``-ness for hardfork-specific properties set correctly.\n         */\n        isLondon() {\n          return this.type === 2;\n        }\n        /**\n         *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n         *  transaction. See [[link-eip-4844]].\n         */\n        isCancun() {\n          return this.type === 3;\n        }\n        /**\n         *  Returns a filter which can be used to listen for orphan events\n         *  that evict this transaction.\n         */\n        removedEvent() {\n          assert2(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n          return createRemovedTransactionFilter(this);\n        }\n        /**\n         *  Returns a filter which can be used to listen for orphan events\n         *  that re-order this event against %%other%%.\n         */\n        reorderedEvent(other) {\n          assert2(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n          assert2(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n          return createReorderedTransactionFilter(this, other);\n        }\n        /**\n         *  Returns a new TransactionResponse instance which has the ability to\n         *  detect (and throw an error) if the transaction is replaced, which\n         *  will begin scanning at %%startBlock%%.\n         *\n         *  This should generally not be used by developers and is intended\n         *  primarily for internal use. Setting an incorrect %%startBlock%% can\n         *  have devastating performance consequences if used incorrectly.\n         */\n        replaceableTransaction(startBlock) {\n          assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n          const tx = new _TransactionResponse(this, this.provider);\n          tx.#startBlock = startBlock;\n          return tx;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/wrappers.js\n  var EventLog, UndecodedEventLog, ContractTransactionReceipt, ContractTransactionResponse, ContractUnknownEventPayload, ContractEventPayload;\n  var init_wrappers = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/wrappers.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_provider();\n      init_utils();\n      EventLog = class extends Log {\n        /**\n         *  The Contract Interface.\n         */\n        interface;\n        /**\n         *  The matching event.\n         */\n        fragment;\n        /**\n         *  The parsed arguments passed to the event by ``emit``.\n         */\n        args;\n        /**\n         * @_ignore:\n         */\n        constructor(log, iface, fragment) {\n          super(log, log.provider);\n          const args = iface.decodeEventLog(fragment, log.data, log.topics);\n          defineProperties(this, { args, fragment, interface: iface });\n        }\n        /**\n         *  The name of the event.\n         */\n        get eventName() {\n          return this.fragment.name;\n        }\n        /**\n         *  The signature of the event.\n         */\n        get eventSignature() {\n          return this.fragment.format();\n        }\n      };\n      UndecodedEventLog = class extends Log {\n        /**\n         *  The error encounted when trying to decode the log.\n         */\n        error;\n        /**\n         * @_ignore:\n         */\n        constructor(log, error) {\n          super(log, log.provider);\n          defineProperties(this, { error });\n        }\n      };\n      ContractTransactionReceipt = class extends TransactionReceipt {\n        #iface;\n        /**\n         *  @_ignore:\n         */\n        constructor(iface, provider, tx) {\n          super(tx, provider);\n          this.#iface = iface;\n        }\n        /**\n         *  The parsed logs for any [[Log]] which has a matching event in the\n         *  Contract ABI.\n         */\n        get logs() {\n          return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]) : null;\n            if (fragment) {\n              try {\n                return new EventLog(log, this.#iface, fragment);\n              } catch (error) {\n                return new UndecodedEventLog(log, error);\n              }\n            }\n            return log;\n          });\n        }\n      };\n      ContractTransactionResponse = class extends TransactionResponse {\n        #iface;\n        /**\n         *  @_ignore:\n         */\n        constructor(iface, provider, tx) {\n          super(tx, provider);\n          this.#iface = iface;\n        }\n        /**\n         *  Resolves once this transaction has been mined and has\n         *  %%confirms%% blocks including it (default: ``1``) with an\n         *  optional %%timeout%%.\n         *\n         *  This can resolve to ``null`` only if %%confirms%% is ``0``\n         *  and the transaction has not been mined, otherwise this will\n         *  wait until enough confirmations have completed.\n         */\n        async wait(confirms, timeout) {\n          const receipt = await super.wait(confirms, timeout);\n          if (receipt == null) {\n            return null;\n          }\n          return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n        }\n      };\n      ContractUnknownEventPayload = class extends EventPayload {\n        /**\n         *  The log with no matching events.\n         */\n        log;\n        /**\n         *  @_event:\n         */\n        constructor(contract, listener, filter, log) {\n          super(contract, listener, filter);\n          defineProperties(this, { log });\n        }\n        /**\n         *  Resolves to the block the event occured in.\n         */\n        async getBlock() {\n          return await this.log.getBlock();\n        }\n        /**\n         *  Resolves to the transaction the event occured in.\n         */\n        async getTransaction() {\n          return await this.log.getTransaction();\n        }\n        /**\n         *  Resolves to the transaction receipt the event occured in.\n         */\n        async getTransactionReceipt() {\n          return await this.log.getTransactionReceipt();\n        }\n      };\n      ContractEventPayload = class extends ContractUnknownEventPayload {\n        /**\n         *  @_ignore:\n         */\n        constructor(contract, listener, filter, fragment, _log) {\n          super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n          const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n          defineProperties(this, { args, fragment });\n        }\n        /**\n         *  The event name.\n         */\n        get eventName() {\n          return this.fragment.name;\n        }\n        /**\n         *  The event signature.\n         */\n        get eventSignature() {\n          return this.fragment.format();\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/contract.js\n  function canCall(value) {\n    return value && typeof value.call === \"function\";\n  }\n  function canEstimate(value) {\n    return value && typeof value.estimateGas === \"function\";\n  }\n  function canResolve(value) {\n    return value && typeof value.resolveName === \"function\";\n  }\n  function canSend(value) {\n    return value && typeof value.sendTransaction === \"function\";\n  }\n  function getResolver(value) {\n    if (value != null) {\n      if (canResolve(value)) {\n        return value;\n      }\n      if (value.provider) {\n        return value.provider;\n      }\n    }\n    return void 0;\n  }\n  function getRunner(value, feature) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value[feature] === \"function\") {\n      return value;\n    }\n    if (value.provider && typeof value.provider[feature] === \"function\") {\n      return value.provider;\n    }\n    return null;\n  }\n  function getProvider(value) {\n    if (value == null) {\n      return null;\n    }\n    return value.provider || null;\n  }\n  async function copyOverrides(arg, allowed) {\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof _overrides === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n    const overrides = copyRequest(_overrides);\n    assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n    if (overrides.from) {\n      overrides.from = overrides.from;\n    }\n    return overrides;\n  }\n  async function resolveArgs(_runner, inputs, args) {\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    return await Promise.all(inputs.map((param, index) => {\n      return param.walkAsync(args[index], (type, value) => {\n        value = Typed.dereference(value, type);\n        if (type === \"address\") {\n          return resolveAddress(value, resolver);\n        }\n        return value;\n      });\n    }));\n  }\n  function buildWrappedFallback(contract) {\n    const populateTransaction = async function(overrides) {\n      const tx = await copyOverrides(overrides, [\"data\"]);\n      tx.to = await contract.getAddress();\n      if (tx.from) {\n        tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n      }\n      const iface = contract.interface;\n      const noValue = getBigInt(tx.value || BN_09, \"overrides.value\") === BN_09;\n      const noData = (tx.data || \"0x\") === \"0x\";\n      if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n        assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n      }\n      assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n      const payable = iface.receive || iface.fallback && iface.fallback.payable;\n      assertArgument(payable || noValue, \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n      assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n      return tx;\n    };\n    const staticCall = async function(overrides) {\n      const runner = getRunner(contract.runner, \"call\");\n      assert2(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n      const tx = await populateTransaction(overrides);\n      try {\n        return await runner.call(tx);\n      } catch (error) {\n        if (isCallException(error) && error.data) {\n          throw contract.interface.makeError(error.data, tx);\n        }\n        throw error;\n      }\n    };\n    const send = async function(overrides) {\n      const runner = contract.runner;\n      assert2(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n      const tx = await runner.sendTransaction(await populateTransaction(overrides));\n      const provider = getProvider(contract.runner);\n      return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    const estimateGas = async function(overrides) {\n      const runner = getRunner(contract.runner, \"estimateGas\");\n      assert2(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n      return await runner.estimateGas(await populateTransaction(overrides));\n    };\n    const method = async (overrides) => {\n      return await send(overrides);\n    };\n    defineProperties(method, {\n      _contract: contract,\n      estimateGas,\n      populateTransaction,\n      send,\n      staticCall\n    });\n    return method;\n  }\n  function buildWrappedMethod(contract, key) {\n    const getFragment = function(...args) {\n      const fragment = contract.interface.getFunction(key, args);\n      assert2(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\",\n        info: { key, args }\n      });\n      return fragment;\n    };\n    const populateTransaction = async function(...args) {\n      const fragment = getFragment(...args);\n      let overrides = {};\n      if (fragment.inputs.length + 1 === args.length) {\n        overrides = await copyOverrides(args.pop());\n        if (overrides.from) {\n          overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n        }\n      }\n      if (fragment.inputs.length !== args.length) {\n        throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n      }\n      const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n      return Object.assign({}, overrides, await resolveProperties({\n        to: contract.getAddress(),\n        data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n      }));\n    };\n    const staticCall = async function(...args) {\n      const result = await staticCallResult(...args);\n      if (result.length === 1) {\n        return result[0];\n      }\n      return result;\n    };\n    const send = async function(...args) {\n      const runner = contract.runner;\n      assert2(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n      const tx = await runner.sendTransaction(await populateTransaction(...args));\n      const provider = getProvider(contract.runner);\n      return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    const estimateGas = async function(...args) {\n      const runner = getRunner(contract.runner, \"estimateGas\");\n      assert2(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n      return await runner.estimateGas(await populateTransaction(...args));\n    };\n    const staticCallResult = async function(...args) {\n      const runner = getRunner(contract.runner, \"call\");\n      assert2(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n      const tx = await populateTransaction(...args);\n      let result = \"0x\";\n      try {\n        result = await runner.call(tx);\n      } catch (error) {\n        if (isCallException(error) && error.data) {\n          throw contract.interface.makeError(error.data, tx);\n        }\n        throw error;\n      }\n      const fragment = getFragment(...args);\n      return contract.interface.decodeFunctionResult(fragment, result);\n    };\n    const method = async (...args) => {\n      const fragment = getFragment(...args);\n      if (fragment.constant) {\n        return await staticCall(...args);\n      }\n      return await send(...args);\n    };\n    defineProperties(method, {\n      name: contract.interface.getFunctionName(key),\n      _contract: contract,\n      _key: key,\n      getFragment,\n      estimateGas,\n      populateTransaction,\n      send,\n      staticCall,\n      staticCallResult\n    });\n    Object.defineProperty(method, \"fragment\", {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        const fragment = contract.interface.getFunction(key);\n        assert2(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n          operation: \"fragment\",\n          info: { key }\n        });\n        return fragment;\n      }\n    });\n    return method;\n  }\n  function buildWrappedEvent(contract, key) {\n    const getFragment = function(...args) {\n      const fragment = contract.interface.getEvent(key, args);\n      assert2(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\",\n        info: { key, args }\n      });\n      return fragment;\n    };\n    const method = function(...args) {\n      return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n    defineProperties(method, {\n      name: contract.interface.getEventName(key),\n      _contract: contract,\n      _key: key,\n      getFragment\n    });\n    Object.defineProperty(method, \"fragment\", {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        const fragment = contract.interface.getEvent(key);\n        assert2(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n          operation: \"fragment\",\n          info: { key }\n        });\n        return fragment;\n      }\n    });\n    return method;\n  }\n  function setInternal(contract, values) {\n    internalValues.set(contract[internal2], values);\n  }\n  function getInternal(contract) {\n    return internalValues.get(contract[internal2]);\n  }\n  function isDeferred(value) {\n    return value && typeof value === \"object\" && \"getTopicFilter\" in value && typeof value.getTopicFilter === \"function\" && value.fragment;\n  }\n  async function getSubInfo(contract, event) {\n    let topics;\n    let fragment = null;\n    if (Array.isArray(event)) {\n      const topicHashify = function(name) {\n        if (isHexString(name, 32)) {\n          return name;\n        }\n        const fragment2 = contract.interface.getEvent(name);\n        assertArgument(fragment2, \"unknown fragment\", \"name\", name);\n        return fragment2.topicHash;\n      };\n      topics = event.map((e) => {\n        if (e == null) {\n          return null;\n        }\n        if (Array.isArray(e)) {\n          return e.map(topicHashify);\n        }\n        return topicHashify(e);\n      });\n    } else if (event === \"*\") {\n      topics = [null];\n    } else if (typeof event === \"string\") {\n      if (isHexString(event, 32)) {\n        topics = [event];\n      } else {\n        fragment = contract.interface.getEvent(event);\n        assertArgument(fragment, \"unknown fragment\", \"event\", event);\n        topics = [fragment.topicHash];\n      }\n    } else if (isDeferred(event)) {\n      topics = await event.getTopicFilter();\n    } else if (\"fragment\" in event) {\n      fragment = event.fragment;\n      topics = [fragment.topicHash];\n    } else {\n      assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n    topics = topics.map((t) => {\n      if (t == null) {\n        return null;\n      }\n      if (Array.isArray(t)) {\n        const items = Array.from(new Set(t.map((t2) => t2.toLowerCase())).values());\n        if (items.length === 1) {\n          return items[0];\n        }\n        items.sort();\n        return items;\n      }\n      return t.toLowerCase();\n    });\n    const tag = topics.map((t) => {\n      if (t == null) {\n        return \"null\";\n      }\n      if (Array.isArray(t)) {\n        return t.join(\"|\");\n      }\n      return t;\n    }).join(\"&\");\n    return { fragment, tag, topics };\n  }\n  async function hasSub(contract, event) {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n  }\n  async function getSub(contract, operation, event) {\n    const provider = getProvider(contract.runner);\n    assert2(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", { operation });\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n    const { addr, subs } = getInternal(contract);\n    let sub = subs.get(tag);\n    if (!sub) {\n      const address = addr ? addr : contract;\n      const filter = { address, topics };\n      const listener = (log) => {\n        let foundFragment = fragment;\n        if (foundFragment == null) {\n          try {\n            foundFragment = contract.interface.getEvent(log.topics[0]);\n          } catch (error) {\n          }\n        }\n        if (foundFragment) {\n          const _foundFragment = foundFragment;\n          const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n          emit2(contract, event, args, (listener2) => {\n            return new ContractEventPayload(contract, listener2, event, _foundFragment, log);\n          });\n        } else {\n          emit2(contract, event, [], (listener2) => {\n            return new ContractUnknownEventPayload(contract, listener2, event, log);\n          });\n        }\n      };\n      let starting = [];\n      const start = () => {\n        if (starting.length) {\n          return;\n        }\n        starting.push(provider.on(filter, listener));\n      };\n      const stop = async () => {\n        if (starting.length == 0) {\n          return;\n        }\n        let started = starting;\n        starting = [];\n        await Promise.all(started);\n        provider.off(filter, listener);\n      };\n      sub = { tag, listeners: [], start, stop };\n      subs.set(tag, sub);\n    }\n    return sub;\n  }\n  async function _emit(contract, event, args, payloadFunc) {\n    await lastEmit;\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n      return false;\n    }\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once: once2 }) => {\n      const passArgs = Array.from(args);\n      if (payloadFunc) {\n        passArgs.push(payloadFunc(once2 ? null : listener));\n      }\n      try {\n        listener.call(contract, ...passArgs);\n      } catch (error) {\n      }\n      return !once2;\n    });\n    if (sub.listeners.length === 0) {\n      sub.stop();\n      getInternal(contract).subs.delete(sub.tag);\n    }\n    return count > 0;\n  }\n  async function emit2(contract, event, args, payloadFunc) {\n    try {\n      await lastEmit;\n    } catch (error) {\n    }\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n  }\n  function _ContractBase() {\n    return BaseContract;\n  }\n  var BN_09, PreparedTopicFilter, internal2, internalValues, lastEmit, passProperties2, BaseContract, Contract;\n  var init_contract = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/contract.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_abi();\n      init_address2();\n      init_provider();\n      init_utils();\n      init_wrappers();\n      BN_09 = BigInt(0);\n      PreparedTopicFilter = class {\n        #filter;\n        fragment;\n        constructor(contract, fragment, args) {\n          defineProperties(this, { fragment });\n          if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n          }\n          const runner = getRunner(contract.runner, \"resolveName\");\n          const resolver = canResolve(runner) ? runner : null;\n          this.#filter = async function() {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n              const arg = args[index];\n              if (arg == null) {\n                return null;\n              }\n              return param.walkAsync(args[index], (type, value) => {\n                if (type === \"address\") {\n                  if (Array.isArray(value)) {\n                    return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                  }\n                  return resolveAddress(value, resolver);\n                }\n                return value;\n              });\n            }));\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n          }();\n        }\n        getTopicFilter() {\n          return this.#filter;\n        }\n      };\n      internal2 = Symbol.for(\"_ethersInternal_contract\");\n      internalValues = /* @__PURE__ */ new WeakMap();\n      lastEmit = Promise.resolve();\n      passProperties2 = [\"then\"];\n      BaseContract = class _BaseContract {\n        /**\n         *  The target to connect to.\n         *\n         *  This can be an address, ENS name or any [[Addressable]], such as\n         *  another contract. To get the resovled address, use the ``getAddress``\n         *  method.\n         */\n        target;\n        /**\n         *  The contract Interface.\n         */\n        interface;\n        /**\n         *  The connected runner. This is generally a [[Provider]] or a\n         *  [[Signer]], which dictates what operations are supported.\n         *\n         *  For example, a **Contract** connected to a [[Provider]] may\n         *  only execute read-only operations.\n         */\n        runner;\n        /**\n         *  All the Events available on this contract.\n         */\n        filters;\n        /**\n         *  @_ignore:\n         */\n        [internal2];\n        /**\n         *  The fallback or receive function if any.\n         */\n        fallback;\n        /**\n         *  Creates a new contract connected to %%target%% with the %%abi%% and\n         *  optionally connected to a %%runner%% to perform operations on behalf\n         *  of.\n         */\n        constructor(target, abi, runner, _deployTx) {\n          assertArgument(typeof target === \"string\" || isAddressable(target), \"invalid value for Contract target\", \"target\", target);\n          if (runner == null) {\n            runner = null;\n          }\n          const iface = Interface.from(abi);\n          defineProperties(this, { target, runner, interface: iface });\n          Object.defineProperty(this, internal2, { value: {} });\n          let addrPromise;\n          let addr = null;\n          let deployTx = null;\n          if (_deployTx) {\n            const provider = getProvider(runner);\n            deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n          }\n          let subs = /* @__PURE__ */ new Map();\n          if (typeof target === \"string\") {\n            if (isHexString(target)) {\n              addr = target;\n              addrPromise = Promise.resolve(target);\n            } else {\n              const resolver = getRunner(runner, \"resolveName\");\n              if (!canResolve(resolver)) {\n                throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                  operation: \"resolveName\"\n                });\n              }\n              addrPromise = resolver.resolveName(target).then((addr2) => {\n                if (addr2 == null) {\n                  throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                    value: target\n                  });\n                }\n                getInternal(this).addr = addr2;\n                return addr2;\n              });\n            }\n          } else {\n            addrPromise = target.getAddress().then((addr2) => {\n              if (addr2 == null) {\n                throw new Error(\"TODO\");\n              }\n              getInternal(this).addr = addr2;\n              return addr2;\n            });\n          }\n          setInternal(this, { addrPromise, addr, deployTx, subs });\n          const filters = new Proxy({}, {\n            get: (target2, prop, receiver) => {\n              if (typeof prop === \"symbol\" || passProperties2.indexOf(prop) >= 0) {\n                return Reflect.get(target2, prop, receiver);\n              }\n              try {\n                return this.getEvent(prop);\n              } catch (error) {\n                if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                  throw error;\n                }\n              }\n              return void 0;\n            },\n            has: (target2, prop) => {\n              if (passProperties2.indexOf(prop) >= 0) {\n                return Reflect.has(target2, prop);\n              }\n              return Reflect.has(target2, prop) || this.interface.hasEvent(String(prop));\n            }\n          });\n          defineProperties(this, { filters });\n          defineProperties(this, {\n            fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null\n          });\n          return new Proxy(this, {\n            get: (target2, prop, receiver) => {\n              if (typeof prop === \"symbol\" || prop in target2 || passProperties2.indexOf(prop) >= 0) {\n                return Reflect.get(target2, prop, receiver);\n              }\n              try {\n                return target2.getFunction(prop);\n              } catch (error) {\n                if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                  throw error;\n                }\n              }\n              return void 0;\n            },\n            has: (target2, prop) => {\n              if (typeof prop === \"symbol\" || prop in target2 || passProperties2.indexOf(prop) >= 0) {\n                return Reflect.has(target2, prop);\n              }\n              return target2.interface.hasFunction(prop);\n            }\n          });\n        }\n        /**\n         *  Return a new Contract instance with the same target and ABI, but\n         *  a different %%runner%%.\n         */\n        connect(runner) {\n          return new _BaseContract(this.target, this.interface, runner);\n        }\n        /**\n         *  Return a new Contract instance with the same ABI and runner, but\n         *  a different %%target%%.\n         */\n        attach(target) {\n          return new _BaseContract(target, this.interface, this.runner);\n        }\n        /**\n         *  Return the resolved address of this Contract.\n         */\n        async getAddress() {\n          return await getInternal(this).addrPromise;\n        }\n        /**\n         *  Return the deployed bytecode or null if no bytecode is found.\n         */\n        async getDeployedCode() {\n          const provider = getProvider(this.runner);\n          assert2(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n          const code = await provider.getCode(await this.getAddress());\n          if (code === \"0x\") {\n            return null;\n          }\n          return code;\n        }\n        /**\n         *  Resolve to this Contract once the bytecode has been deployed, or\n         *  resolve immediately if already deployed.\n         */\n        async waitForDeployment() {\n          const deployTx = this.deploymentTransaction();\n          if (deployTx) {\n            await deployTx.wait();\n            return this;\n          }\n          const code = await this.getDeployedCode();\n          if (code != null) {\n            return this;\n          }\n          const provider = getProvider(this.runner);\n          assert2(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n          return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n              try {\n                const code2 = await this.getDeployedCode();\n                if (code2 != null) {\n                  return resolve(this);\n                }\n                provider.once(\"block\", checkCode);\n              } catch (error) {\n                reject(error);\n              }\n            };\n            checkCode();\n          });\n        }\n        /**\n         *  Return the transaction used to deploy this contract.\n         *\n         *  This is only available if this instance was returned from a\n         *  [[ContractFactory]].\n         */\n        deploymentTransaction() {\n          return getInternal(this).deployTx;\n        }\n        /**\n         *  Return the function for a given name. This is useful when a contract\n         *  method name conflicts with a JavaScript name such as ``prototype`` or\n         *  when using a Contract programatically.\n         */\n        getFunction(key) {\n          if (typeof key !== \"string\") {\n            key = key.format();\n          }\n          const func = buildWrappedMethod(this, key);\n          return func;\n        }\n        /**\n         *  Return the event for a given name. This is useful when a contract\n         *  event name conflicts with a JavaScript name such as ``prototype`` or\n         *  when using a Contract programatically.\n         */\n        getEvent(key) {\n          if (typeof key !== \"string\") {\n            key = key.format();\n          }\n          return buildWrappedEvent(this, key);\n        }\n        /**\n         *  @_ignore:\n         */\n        async queryTransaction(hash2) {\n          throw new Error(\"@TODO\");\n        }\n        /*\n            // @TODO: this is a non-backwards compatible change, but will be added\n            //        in v7 and in a potential SmartContract class in an upcoming\n            //        v6 release\n            async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n                const provider = getProvider(this.runner);\n                assert(provider, \"contract runner does not have a provider\",\n                    \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n        \n                const receipt = await provider.getTransactionReceipt(hash);\n                if (receipt == null) { return null; }\n        \n                return new ContractTransactionReceipt(this.interface, provider, receipt);\n            }\n            */\n        /**\n         *  Provide historic access to event data for %%event%% in the range\n         *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n         *  inclusive.\n         */\n        async queryFilter(event, fromBlock, toBlock) {\n          if (fromBlock == null) {\n            fromBlock = 0;\n          }\n          if (toBlock == null) {\n            toBlock = \"latest\";\n          }\n          const { addr, addrPromise } = getInternal(this);\n          const address = addr ? addr : await addrPromise;\n          const { fragment, topics } = await getSubInfo(this, event);\n          const filter = { address, topics, fromBlock, toBlock };\n          const provider = getProvider(this.runner);\n          assert2(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n          return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n              try {\n                foundFragment = this.interface.getEvent(log.topics[0]);\n              } catch (error) {\n              }\n            }\n            if (foundFragment) {\n              try {\n                return new EventLog(log, this.interface, foundFragment);\n              } catch (error) {\n                return new UndecodedEventLog(log, error);\n              }\n            }\n            return new Log(log, provider);\n          });\n        }\n        /**\n         *  Add an event %%listener%% for the %%event%%.\n         */\n        async on(event, listener) {\n          const sub = await getSub(this, \"on\", event);\n          sub.listeners.push({ listener, once: false });\n          sub.start();\n          return this;\n        }\n        /**\n         *  Add an event %%listener%% for the %%event%%, but remove the listener\n         *  after it is fired once.\n         */\n        async once(event, listener) {\n          const sub = await getSub(this, \"once\", event);\n          sub.listeners.push({ listener, once: true });\n          sub.start();\n          return this;\n        }\n        /**\n         *  Emit an %%event%% calling all listeners with %%args%%.\n         *\n         *  Resolves to ``true`` if any listeners were called.\n         */\n        async emit(event, ...args) {\n          return await emit2(this, event, args, null);\n        }\n        /**\n         *  Resolves to the number of listeners of %%event%% or the total number\n         *  of listeners if unspecified.\n         */\n        async listenerCount(event) {\n          if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n              return 0;\n            }\n            return sub.listeners.length;\n          }\n          const { subs } = getInternal(this);\n          let total = 0;\n          for (const { listeners: listeners2 } of subs.values()) {\n            total += listeners2.length;\n          }\n          return total;\n        }\n        /**\n         *  Resolves to the listeners subscribed to %%event%% or all listeners\n         *  if unspecified.\n         */\n        async listeners(event) {\n          if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n              return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n          }\n          const { subs } = getInternal(this);\n          let result = [];\n          for (const { listeners: listeners2 } of subs.values()) {\n            result = result.concat(listeners2.map(({ listener }) => listener));\n          }\n          return result;\n        }\n        /**\n         *  Remove the %%listener%% from the listeners for %%event%% or remove\n         *  all listeners if unspecified.\n         */\n        async off(event, listener) {\n          const sub = await hasSub(this, event);\n          if (!sub) {\n            return this;\n          }\n          if (listener) {\n            const index = sub.listeners.map(({ listener: listener2 }) => listener2).indexOf(listener);\n            if (index >= 0) {\n              sub.listeners.splice(index, 1);\n            }\n          }\n          if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n          }\n          return this;\n        }\n        /**\n         *  Remove all the listeners for %%event%% or remove all listeners if\n         *  unspecified.\n         */\n        async removeAllListeners(event) {\n          if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n              return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n          } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n              stop();\n              subs.delete(tag);\n            }\n          }\n          return this;\n        }\n        /**\n         *  Alias for [on].\n         */\n        async addListener(event, listener) {\n          return await this.on(event, listener);\n        }\n        /**\n         *  Alias for [off].\n         */\n        async removeListener(event, listener) {\n          return await this.off(event, listener);\n        }\n        /**\n         *  Create a new Class for the %%abi%%.\n         */\n        static buildClass(abi) {\n          class CustomContract extends _BaseContract {\n            constructor(address, runner = null) {\n              super(address, abi, runner);\n            }\n          }\n          return CustomContract;\n        }\n        /**\n         *  Create a new BaseContract with a specified Interface.\n         */\n        static from(target, abi, runner) {\n          if (runner == null) {\n            runner = null;\n          }\n          const contract = new this(target, abi, runner);\n          return contract;\n        }\n      };\n      Contract = class extends _ContractBase() {\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/index.js\n  var init_contract2 = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/contract/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_contract();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/ens-resolver.js\n  function getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n      link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n      link = link.substring(7);\n    } else {\n      assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n    return `https://gateway.ipfs.io/ipfs/${link}`;\n  }\n  var MulticoinProviderPlugin, matcherIpfs, matchers, EnsResolver;\n  var init_ens_resolver = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/ens-resolver.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_constants2();\n      init_contract2();\n      init_hash();\n      init_utils();\n      MulticoinProviderPlugin = class {\n        /**\n         *  The name.\n         */\n        name;\n        /**\n         *  Creates a new **MulticoinProviderPluing** for %%name%%.\n         */\n        constructor(name) {\n          defineProperties(this, { name });\n        }\n        connect(proivder) {\n          return this;\n        }\n        /**\n         *  Returns ``true`` if %%coinType%% is supported by this plugin.\n         */\n        supportsCoinType(coinType) {\n          return false;\n        }\n        /**\n         *  Resolves to the encoded %%address%% for %%coinType%%.\n         */\n        async encodeAddress(coinType, address) {\n          throw new Error(\"unsupported coin\");\n        }\n        /**\n         *  Resolves to the decoded %%data%% for %%coinType%%.\n         */\n        async decodeAddress(coinType, data) {\n          throw new Error(\"unsupported coin\");\n        }\n      };\n      matcherIpfs = new RegExp(\"^(ipfs)://(.*)$\", \"i\");\n      matchers = [\n        new RegExp(\"^(https)://(.*)$\", \"i\"),\n        new RegExp(\"^(data):(.*)$\", \"i\"),\n        matcherIpfs,\n        new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\")\n      ];\n      EnsResolver = class _EnsResolver {\n        /**\n         *  The connected provider.\n         */\n        provider;\n        /**\n         *  The address of the resolver.\n         */\n        address;\n        /**\n         *  The name this resolver was resolved against.\n         */\n        name;\n        // For EIP-2544 names, the ancestor that provided the resolver\n        #supports2544;\n        #resolver;\n        constructor(provider, address, name) {\n          defineProperties(this, { provider, address, name });\n          this.#supports2544 = null;\n          this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\"\n          ], provider);\n        }\n        /**\n         *  Resolves to true if the resolver supports wildcard resolution.\n         */\n        async supportsWildcard() {\n          if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n              try {\n                return await this.#resolver.supportsInterface(\"0x9061b923\");\n              } catch (error) {\n                if (isError(error, \"CALL_EXCEPTION\")) {\n                  return false;\n                }\n                this.#supports2544 = null;\n                throw error;\n              }\n            })();\n          }\n          return await this.#supports2544;\n        }\n        async #fetch(funcName, params) {\n          params = (params || []).slice();\n          const iface = this.#resolver.interface;\n          params.unshift(namehash(this.name));\n          let fragment = null;\n          if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert2(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n              info: { funcName }\n            });\n            params = [\n              dnsEncode(this.name, 255),\n              iface.encodeFunctionData(fragment, params)\n            ];\n            funcName = \"resolve(bytes,bytes)\";\n          }\n          params.push({\n            enableCcipRead: true\n          });\n          try {\n            const result = await this.#resolver[funcName](...params);\n            if (fragment) {\n              return iface.decodeFunctionResult(fragment, result)[0];\n            }\n            return result;\n          } catch (error) {\n            if (!isError(error, \"CALL_EXCEPTION\")) {\n              throw error;\n            }\n          }\n          return null;\n        }\n        /**\n         *  Resolves to the address for %%coinType%% or null if the\n         *  provided %%coinType%% has not been configured.\n         */\n        async getAddress(coinType) {\n          if (coinType == null) {\n            coinType = 60;\n          }\n          if (coinType === 60) {\n            try {\n              const result = await this.#fetch(\"addr(bytes32)\");\n              if (result == null || result === ZeroAddress) {\n                return null;\n              }\n              return result;\n            } catch (error) {\n              if (isError(error, \"CALL_EXCEPTION\")) {\n                return null;\n              }\n              throw error;\n            }\n          }\n          if (coinType >= 0 && coinType < 2147483648) {\n            let ethCoinType = coinType + 2147483648;\n            const data2 = await this.#fetch(\"addr(bytes32,uint)\", [ethCoinType]);\n            if (isHexString(data2, 20)) {\n              return getAddress(data2);\n            }\n          }\n          let coinPlugin = null;\n          for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) {\n              continue;\n            }\n            if (plugin.supportsCoinType(coinType)) {\n              coinPlugin = plugin;\n              break;\n            }\n          }\n          if (coinPlugin == null) {\n            return null;\n          }\n          const data = await this.#fetch(\"addr(bytes32,uint)\", [coinType]);\n          if (data == null || data === \"0x\") {\n            return null;\n          }\n          const address = await coinPlugin.decodeAddress(coinType, data);\n          if (address != null) {\n            return address;\n          }\n          assert2(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${coinType})`,\n            info: { coinType, data }\n          });\n        }\n        /**\n         *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n         *  if unconfigured.\n         */\n        async getText(key) {\n          const data = await this.#fetch(\"text(bytes32,string)\", [key]);\n          if (data == null || data === \"0x\") {\n            return null;\n          }\n          return data;\n        }\n        /**\n         *  Rsolves to the content-hash or ``null`` if unconfigured.\n         */\n        async getContentHash() {\n          const data = await this.#fetch(\"contenthash(bytes32)\");\n          if (data == null || data === \"0x\") {\n            return null;\n          }\n          const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n          if (ipfs) {\n            const scheme = ipfs[1] === \"e3010170\" ? \"ipfs\" : \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n              return `${scheme}://${encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n          }\n          const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n          if (swarm && swarm[1].length === 64) {\n            return `bzz://${swarm[1]}`;\n          }\n          assert2(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n          });\n        }\n        /**\n         *  Resolves to the avatar url or ``null`` if the avatar is either\n         *  unconfigured or incorrectly configured (e.g. references an NFT\n         *  not owned by the address).\n         *\n         *  If diagnosing issues with configurations, the [[_getAvatar]]\n         *  method may be useful.\n         */\n        async getAvatar() {\n          const avatar = await this._getAvatar();\n          return avatar.url;\n        }\n        /**\n         *  When resolving an avatar, there are many steps involved, such\n         *  fetching metadata and possibly validating ownership of an\n         *  NFT.\n         *\n         *  This method can be used to examine each step and the value it\n         *  was working from.\n         */\n        async _getAvatar() {\n          const linkage = [{ type: \"name\", value: this.name }];\n          try {\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n              linkage.push({ type: \"!avatar\", value: \"\" });\n              return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n            for (let i = 0; i < matchers.length; i++) {\n              const match = avatar.match(matchers[i]);\n              if (match == null) {\n                continue;\n              }\n              const scheme = match[1].toLowerCase();\n              switch (scheme) {\n                case \"https\":\n                case \"data\":\n                  linkage.push({ type: \"url\", value: avatar });\n                  return { linkage, url: avatar };\n                case \"ipfs\": {\n                  const url = getIpfsLink(avatar);\n                  linkage.push({ type: \"ipfs\", value: avatar });\n                  linkage.push({ type: \"url\", value: url });\n                  return { linkage, url };\n                }\n                case \"erc721\":\n                case \"erc1155\": {\n                  const selector = scheme === \"erc721\" ? \"tokenURI(uint256)\" : \"uri(uint256)\";\n                  linkage.push({ type: scheme, value: avatar });\n                  const owner = await this.getAddress();\n                  if (owner == null) {\n                    linkage.push({ type: \"!owner\", value: \"\" });\n                    return { url: null, linkage };\n                  }\n                  const comps = (match[2] || \"\").split(\"/\");\n                  if (comps.length !== 2) {\n                    linkage.push({ type: `!${scheme}caip`, value: match[2] || \"\" });\n                    return { url: null, linkage };\n                  }\n                  const tokenId = comps[1];\n                  const contract = new Contract(comps[0], [\n                    // ERC-721\n                    \"function tokenURI(uint) view returns (string)\",\n                    \"function ownerOf(uint) view returns (address)\",\n                    // ERC-1155\n                    \"function uri(uint) view returns (string)\",\n                    \"function balanceOf(address, uint256) view returns (uint)\"\n                  ], this.provider);\n                  if (scheme === \"erc721\") {\n                    const tokenOwner = await contract.ownerOf(tokenId);\n                    if (owner !== tokenOwner) {\n                      linkage.push({ type: \"!owner\", value: tokenOwner });\n                      return { url: null, linkage };\n                    }\n                    linkage.push({ type: \"owner\", value: tokenOwner });\n                  } else if (scheme === \"erc1155\") {\n                    const balance = await contract.balanceOf(owner, tokenId);\n                    if (!balance) {\n                      linkage.push({ type: \"!balance\", value: \"0\" });\n                      return { url: null, linkage };\n                    }\n                    linkage.push({ type: \"balance\", value: balance.toString() });\n                  }\n                  let metadataUrl = await contract[selector](tokenId);\n                  if (metadataUrl == null || metadataUrl === \"0x\") {\n                    linkage.push({ type: \"!metadata-url\", value: \"\" });\n                    return { url: null, linkage };\n                  }\n                  linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n                  if (scheme === \"erc1155\") {\n                    metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                    linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                  }\n                  if (metadataUrl.match(/^ipfs:/i)) {\n                    metadataUrl = getIpfsLink(metadataUrl);\n                  }\n                  linkage.push({ type: \"metadata-url\", value: metadataUrl });\n                  let metadata = {};\n                  const response = await new FetchRequest(metadataUrl).send();\n                  response.assertOk();\n                  try {\n                    metadata = response.bodyJson;\n                  } catch (error) {\n                    try {\n                      linkage.push({ type: \"!metadata\", value: response.bodyText });\n                    } catch (error2) {\n                      const bytes2 = response.body;\n                      if (bytes2) {\n                        linkage.push({ type: \"!metadata\", value: hexlify(bytes2) });\n                      }\n                      return { url: null, linkage };\n                    }\n                    return { url: null, linkage };\n                  }\n                  if (!metadata) {\n                    linkage.push({ type: \"!metadata\", value: \"\" });\n                    return { url: null, linkage };\n                  }\n                  linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n                  let imageUrl = metadata.image;\n                  if (typeof imageUrl !== \"string\") {\n                    linkage.push({ type: \"!imageUrl\", value: \"\" });\n                    return { url: null, linkage };\n                  }\n                  if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                  } else {\n                    const ipfs = imageUrl.match(matcherIpfs);\n                    if (ipfs == null) {\n                      linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                      return { url: null, linkage };\n                    }\n                    linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                    imageUrl = getIpfsLink(imageUrl);\n                  }\n                  linkage.push({ type: \"url\", value: imageUrl });\n                  return { linkage, url: imageUrl };\n                }\n              }\n            }\n          } catch (error) {\n          }\n          return { linkage, url: null };\n        }\n        static async getEnsAddress(provider) {\n          const network = await provider.getNetwork();\n          const ensPlugin = network.getPlugin(\"org.ethers.plugins.network.Ens\");\n          assert2(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\",\n            info: { network }\n          });\n          return ensPlugin.address;\n        }\n        static async #getResolver(provider, name) {\n          const ensAddr = await _EnsResolver.getEnsAddress(provider);\n          try {\n            const contract = new Contract(ensAddr, [\n              \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n            const addr = await contract.resolver(namehash(name), {\n              enableCcipRead: true\n            });\n            if (addr === ZeroAddress) {\n              return null;\n            }\n            return addr;\n          } catch (error) {\n            throw error;\n          }\n          return null;\n        }\n        /**\n         *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n         *  ``null`` if unconfigured.\n         */\n        static async fromName(provider, name) {\n          let currentName = name;\n          while (true) {\n            if (currentName === \"\" || currentName === \".\") {\n              return null;\n            }\n            if (name !== \"eth\" && currentName === \"eth\") {\n              return null;\n            }\n            const addr = await _EnsResolver.#getResolver(provider, currentName);\n            if (addr != null) {\n              const resolver = new _EnsResolver(provider, addr, name);\n              if (currentName !== name && !await resolver.supportsWildcard()) {\n                return null;\n              }\n              return resolver;\n            }\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n          }\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/format.js\n  function allowNull(format, nullValue) {\n    return function(value) {\n      if (value == null) {\n        return nullValue;\n      }\n      return format(value);\n    };\n  }\n  function arrayOf(format, allowNull2) {\n    return (array) => {\n      if (allowNull2 && array == null) {\n        return null;\n      }\n      if (!Array.isArray(array)) {\n        throw new Error(\"not an array\");\n      }\n      return array.map((i) => format(i));\n    };\n  }\n  function object(format, altNames) {\n    return (value) => {\n      const result = {};\n      for (const key in format) {\n        let srcKey = key;\n        if (altNames && key in altNames && !(srcKey in value)) {\n          for (const altKey of altNames[key]) {\n            if (altKey in value) {\n              srcKey = altKey;\n              break;\n            }\n          }\n        }\n        try {\n          const nv = format[key](value[srcKey]);\n          if (nv !== void 0) {\n            result[key] = nv;\n          }\n        } catch (error) {\n          const message = error instanceof Error ? error.message : \"not-an-error\";\n          assert2(false, `invalid value for value.${key} (${message})`, \"BAD_DATA\", { value });\n        }\n      }\n      return result;\n    };\n  }\n  function formatBoolean(value) {\n    switch (value) {\n      case true:\n      case \"true\":\n        return true;\n      case false:\n      case \"false\":\n        return false;\n    }\n    assertArgument(false, `invalid boolean; ${JSON.stringify(value)}`, \"value\", value);\n  }\n  function formatData(value) {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n  }\n  function formatHash(value) {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n  }\n  function formatLog(value) {\n    return _formatLog(value);\n  }\n  function formatBlock(value) {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx) => {\n      if (typeof tx === \"string\") {\n        return tx;\n      }\n      return formatTransactionResponse(tx);\n    });\n    return result;\n  }\n  function formatReceiptLog(value) {\n    return _formatReceiptLog(value);\n  }\n  function formatTransactionReceipt(value) {\n    return _formatTransactionReceipt(value);\n  }\n  function formatTransactionResponse(value) {\n    if (value.to && getBigInt(value.to) === BN_010) {\n      value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n    const result = object({\n      hash: formatHash,\n      // Some nodes do not return this, usually test nodes (like Ganache)\n      index: allowNull(getNumber, void 0),\n      type: (value2) => {\n        if (value2 === \"0x\" || value2 == null) {\n          return 0;\n        }\n        return getNumber(value2);\n      },\n      accessList: allowNull(accessListify, null),\n      blobVersionedHashes: allowNull(arrayOf(formatHash, true), null),\n      authorizationList: allowNull(arrayOf((v) => {\n        let sig;\n        if (v.signature) {\n          sig = v.signature;\n        } else {\n          let yParity = v.yParity;\n          if (yParity === \"0x1b\") {\n            yParity = 0;\n          } else if (yParity === \"0x1c\") {\n            yParity = 1;\n          }\n          sig = Object.assign({}, v, { yParity });\n        }\n        return {\n          address: getAddress(v.address),\n          chainId: getBigInt(v.chainId),\n          nonce: getBigInt(v.nonce),\n          signature: Signature.from(sig)\n        };\n      }, false), null),\n      blockHash: allowNull(formatHash, null),\n      blockNumber: allowNull(getNumber, null),\n      transactionIndex: allowNull(getNumber, null),\n      from: getAddress,\n      // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n      gasPrice: allowNull(getBigInt),\n      maxPriorityFeePerGas: allowNull(getBigInt),\n      maxFeePerGas: allowNull(getBigInt),\n      maxFeePerBlobGas: allowNull(getBigInt, null),\n      gasLimit: getBigInt,\n      to: allowNull(getAddress, null),\n      value: getBigInt,\n      nonce: getNumber,\n      data: formatData,\n      creates: allowNull(getAddress, null),\n      chainId: allowNull(getBigInt, null)\n    }, {\n      data: [\"input\"],\n      gasLimit: [\"gas\"],\n      index: [\"transactionIndex\"]\n    })(value);\n    if (result.to == null && result.creates == null) {\n      result.creates = getCreateAddress(result);\n    }\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n      result.accessList = [];\n    }\n    if (value.signature) {\n      result.signature = Signature.from(value.signature);\n    } else {\n      result.signature = Signature.from(value);\n    }\n    if (result.chainId == null) {\n      const chainId = result.signature.legacyChainId;\n      if (chainId != null) {\n        result.chainId = chainId;\n      }\n    }\n    if (result.blockHash && getBigInt(result.blockHash) === BN_010) {\n      result.blockHash = null;\n    }\n    return result;\n  }\n  var BN_010, _formatLog, _formatBlock, _formatReceiptLog, _formatTransactionReceipt;\n  var init_format = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/format.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_crypto2();\n      init_transaction2();\n      init_utils();\n      BN_010 = BigInt(0);\n      _formatLog = object({\n        address: getAddress,\n        blockHash: formatHash,\n        blockNumber: getNumber,\n        data: formatData,\n        index: getNumber,\n        removed: allowNull(formatBoolean, false),\n        topics: arrayOf(formatHash),\n        transactionHash: formatHash,\n        transactionIndex: getNumber\n      }, {\n        index: [\"logIndex\"]\n      });\n      _formatBlock = object({\n        hash: allowNull(formatHash),\n        parentHash: formatHash,\n        parentBeaconBlockRoot: allowNull(formatHash, null),\n        number: getNumber,\n        timestamp: getNumber,\n        nonce: allowNull(formatData),\n        difficulty: getBigInt,\n        gasLimit: getBigInt,\n        gasUsed: getBigInt,\n        stateRoot: allowNull(formatHash, null),\n        receiptsRoot: allowNull(formatHash, null),\n        blobGasUsed: allowNull(getBigInt, null),\n        excessBlobGas: allowNull(getBigInt, null),\n        miner: allowNull(getAddress),\n        prevRandao: allowNull(formatHash, null),\n        extraData: formatData,\n        baseFeePerGas: allowNull(getBigInt)\n      }, {\n        prevRandao: [\"mixHash\"]\n      });\n      _formatReceiptLog = object({\n        transactionIndex: getNumber,\n        blockNumber: getNumber,\n        transactionHash: formatHash,\n        address: getAddress,\n        topics: arrayOf(formatHash),\n        data: formatData,\n        index: getNumber,\n        blockHash: formatHash\n      }, {\n        index: [\"logIndex\"]\n      });\n      _formatTransactionReceipt = object({\n        to: allowNull(getAddress, null),\n        from: allowNull(getAddress, null),\n        contractAddress: allowNull(getAddress, null),\n        // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n        index: getNumber,\n        root: allowNull(hexlify),\n        gasUsed: getBigInt,\n        blobGasUsed: allowNull(getBigInt, null),\n        logsBloom: allowNull(formatData),\n        blockHash: formatHash,\n        hash: formatHash,\n        logs: arrayOf(formatReceiptLog),\n        blockNumber: getNumber,\n        //confirmations: allowNull(getNumber, null),\n        cumulativeGasUsed: getBigInt,\n        effectiveGasPrice: allowNull(getBigInt),\n        blobGasPrice: allowNull(getBigInt, null),\n        status: allowNull(getNumber),\n        type: allowNull(getNumber, 0)\n      }, {\n        effectiveGasPrice: [\"gasPrice\"],\n        hash: [\"transactionHash\"],\n        index: [\"transactionIndex\"]\n      });\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/plugins-network.js\n  var EnsAddress, NetworkPlugin, GasCostPlugin, EnsPlugin, FetchUrlFeeDataNetworkPlugin;\n  var init_plugins_network = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/plugins-network.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_properties();\n      init_utils();\n      EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n      NetworkPlugin = class _NetworkPlugin {\n        /**\n         *  The name of the plugin.\n         *\n         *  It is recommended to use reverse-domain-notation, which permits\n         *  unique names with a known authority as well as hierarchal entries.\n         */\n        name;\n        /**\n         *  Creates a new **NetworkPlugin**.\n         */\n        constructor(name) {\n          defineProperties(this, { name });\n        }\n        /**\n         *  Creates a copy of this plugin.\n         */\n        clone() {\n          return new _NetworkPlugin(this.name);\n        }\n      };\n      GasCostPlugin = class _GasCostPlugin extends NetworkPlugin {\n        /**\n         *  The block number to treat these values as valid from.\n         *\n         *  This allows a hardfork to have updated values included as well as\n         *  mulutiple hardforks to be supported.\n         */\n        effectiveBlock;\n        /**\n         *  The transactions base fee.\n         */\n        txBase;\n        /**\n         *  The fee for creating a new account.\n         */\n        txCreate;\n        /**\n         *  The fee per zero-byte in the data.\n         */\n        txDataZero;\n        /**\n         *  The fee per non-zero-byte in the data.\n         */\n        txDataNonzero;\n        /**\n         *  The fee per storage key in the [[link-eip-2930]] access list.\n         */\n        txAccessListStorageKey;\n        /**\n         *  The fee per address in the [[link-eip-2930]] access list.\n         */\n        txAccessListAddress;\n        /**\n         *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n         *  latest block or another GasCostPlugin supercedes that block number,\n         *  with the associated %%costs%%.\n         */\n        constructor(effectiveBlock, costs) {\n          if (effectiveBlock == null) {\n            effectiveBlock = 0;\n          }\n          super(`org.ethers.network.plugins.GasCost#${effectiveBlock || 0}`);\n          const props = { effectiveBlock };\n          function set(name, nullish) {\n            let value = (costs || {})[name];\n            if (value == null) {\n              value = nullish;\n            }\n            assertArgument(typeof value === \"number\", `invalud value for ${name}`, \"costs\", costs);\n            props[name] = value;\n          }\n          set(\"txBase\", 21e3);\n          set(\"txCreate\", 32e3);\n          set(\"txDataZero\", 4);\n          set(\"txDataNonzero\", 16);\n          set(\"txAccessListStorageKey\", 1900);\n          set(\"txAccessListAddress\", 2400);\n          defineProperties(this, props);\n        }\n        clone() {\n          return new _GasCostPlugin(this.effectiveBlock, this);\n        }\n      };\n      EnsPlugin = class _EnsPlugin extends NetworkPlugin {\n        /**\n         *  The ENS Registrty Contract address.\n         */\n        address;\n        /**\n         *  The chain ID that the ENS contract lives on.\n         */\n        targetNetwork;\n        /**\n         *  Creates a new **EnsPlugin** connected to %%address%% on the\n         *  %%targetNetwork%%. The default ENS address and mainnet is used\n         *  if unspecified.\n         */\n        constructor(address, targetNetwork) {\n          super(\"org.ethers.plugins.network.Ens\");\n          defineProperties(this, {\n            address: address || EnsAddress,\n            targetNetwork: targetNetwork == null ? 1 : targetNetwork\n          });\n        }\n        clone() {\n          return new _EnsPlugin(this.address, this.targetNetwork);\n        }\n      };\n      FetchUrlFeeDataNetworkPlugin = class extends NetworkPlugin {\n        #url;\n        #processFunc;\n        /**\n         *  The URL to initialize the FetchRequest with in %%processFunc%%.\n         */\n        get url() {\n          return this.#url;\n        }\n        /**\n         *  The callback to use when computing the FeeData.\n         */\n        get processFunc() {\n          return this.#processFunc;\n        }\n        /**\n         *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n         *  be used when computing the fee data for the network.\n         */\n        constructor(url, processFunc) {\n          super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n          this.#url = url;\n          this.#processFunc = processFunc;\n        }\n        // We are immutable, so we can serve as our own clone\n        clone() {\n          return this;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/network.js\n  function parseUnits(_value, decimals) {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n      throw new Error(`invalid gwei value: ${_value}`);\n    }\n    const comps = value.split(\".\");\n    if (comps.length === 1) {\n      comps.push(\"\");\n    }\n    if (comps.length !== 2) {\n      throw new Error(`invalid gwei value: ${_value}`);\n    }\n    while (comps[1].length < decimals) {\n      comps[1] += \"0\";\n    }\n    if (comps[1].length > 9) {\n      let frac = BigInt(comps[1].substring(0, 9));\n      if (!comps[1].substring(9).match(/^0+$/)) {\n        frac++;\n      }\n      comps[1] = frac.toString();\n    }\n    return BigInt(comps[0] + comps[1]);\n  }\n  function getGasStationPlugin(url) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n      request.setHeader(\"User-Agent\", \"ethers\");\n      let response;\n      try {\n        const [_response, _feeData] = await Promise.all([\n          request.send(),\n          fetchFeeData()\n        ]);\n        response = _response;\n        const payload = response.bodyJson.standard;\n        const feeData = {\n          gasPrice: _feeData.gasPrice,\n          maxFeePerGas: parseUnits(payload.maxFee, 9),\n          maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9)\n        };\n        return feeData;\n      } catch (error) {\n        assert2(false, `error encountered with polygon gas station (${JSON.stringify(request.url)})`, \"SERVER_ERROR\", { request, response, error });\n      }\n    });\n  }\n  function injectCommonNetworks() {\n    if (injected) {\n      return;\n    }\n    injected = true;\n    function registerEth(name, chainId, options) {\n      const func = function() {\n        const network = new Network(name, chainId);\n        if (options.ensNetwork != null) {\n          network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n        }\n        network.attachPlugin(new GasCostPlugin());\n        (options.plugins || []).forEach((plugin) => {\n          network.attachPlugin(plugin);\n        });\n        return network;\n      };\n      Network.register(name, func);\n      Network.register(chainId, func);\n      if (options.altNames) {\n        options.altNames.forEach((name2) => {\n          Network.register(name2, func);\n        });\n      }\n    }\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [\"homestead\"] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n    registerEth(\"holesky\", 17e3, { ensNetwork: 17e3 });\n    registerEth(\"classic\", 61, {});\n    registerEth(\"classicKotti\", 6, {});\n    registerEth(\"arbitrum\", 42161, {\n      ensNetwork: 1\n    });\n    registerEth(\"arbitrum-goerli\", 421613, {});\n    registerEth(\"arbitrum-sepolia\", 421614, {});\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, {});\n    registerEth(\"base-sepolia\", 84532, {});\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, {});\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, {});\n    registerEth(\"linea-sepolia\", 59141, {});\n    registerEth(\"matic\", 137, {\n      ensNetwork: 1,\n      plugins: [\n        getGasStationPlugin(\"https://gasstation.polygon.technology/v2\")\n      ]\n    });\n    registerEth(\"matic-amoy\", 80002, {});\n    registerEth(\"matic-mumbai\", 80001, {\n      altNames: [\"maticMumbai\", \"maticmum\"],\n      plugins: [\n        getGasStationPlugin(\"https://gasstation-testnet.polygon.technology/v2\")\n      ]\n    });\n    registerEth(\"optimism\", 10, {\n      ensNetwork: 1,\n      plugins: []\n    });\n    registerEth(\"optimism-goerli\", 420, {});\n    registerEth(\"optimism-sepolia\", 11155420, {});\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n  }\n  var Networks, Network, injected;\n  var init_network = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/network.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_transaction2();\n      init_utils();\n      init_plugins_network();\n      Networks = /* @__PURE__ */ new Map();\n      Network = class _Network {\n        #name;\n        #chainId;\n        #plugins;\n        /**\n         *  Creates a new **Network** for %%name%% and %%chainId%%.\n         */\n        constructor(name, chainId) {\n          this.#name = name;\n          this.#chainId = getBigInt(chainId);\n          this.#plugins = /* @__PURE__ */ new Map();\n        }\n        /**\n         *  Returns a JSON-compatible representation of a Network.\n         */\n        toJSON() {\n          return { name: this.name, chainId: String(this.chainId) };\n        }\n        /**\n         *  The network common name.\n         *\n         *  This is the canonical name, as networks migh have multiple\n         *  names.\n         */\n        get name() {\n          return this.#name;\n        }\n        set name(value) {\n          this.#name = value;\n        }\n        /**\n         *  The network chain ID.\n         */\n        get chainId() {\n          return this.#chainId;\n        }\n        set chainId(value) {\n          this.#chainId = getBigInt(value, \"chainId\");\n        }\n        /**\n         *  Returns true if %%other%% matches this network. Any chain ID\n         *  must match, and if no chain ID is present, the name must match.\n         *\n         *  This method does not currently check for additional properties,\n         *  such as ENS address or plug-in compatibility.\n         */\n        matches(other) {\n          if (other == null) {\n            return false;\n          }\n          if (typeof other === \"string\") {\n            try {\n              return this.chainId === getBigInt(other);\n            } catch (error) {\n            }\n            return this.name === other;\n          }\n          if (typeof other === \"number\" || typeof other === \"bigint\") {\n            try {\n              return this.chainId === getBigInt(other);\n            } catch (error) {\n            }\n            return false;\n          }\n          if (typeof other === \"object\") {\n            if (other.chainId != null) {\n              try {\n                return this.chainId === getBigInt(other.chainId);\n              } catch (error) {\n              }\n              return false;\n            }\n            if (other.name != null) {\n              return this.name === other.name;\n            }\n            return false;\n          }\n          return false;\n        }\n        /**\n         *  Returns the list of plugins currently attached to this Network.\n         */\n        get plugins() {\n          return Array.from(this.#plugins.values());\n        }\n        /**\n         *  Attach a new %%plugin%% to this Network. The network name\n         *  must be unique, excluding any fragment.\n         */\n        attachPlugin(plugin) {\n          if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n          }\n          this.#plugins.set(plugin.name, plugin.clone());\n          return this;\n        }\n        /**\n         *  Return the plugin, if any, matching %%name%% exactly. Plugins\n         *  with fragments will not be returned unless %%name%% includes\n         *  a fragment.\n         */\n        getPlugin(name) {\n          return this.#plugins.get(name) || null;\n        }\n        /**\n         *  Gets a list of all plugins that match %%name%%, with otr without\n         *  a fragment.\n         */\n        getPlugins(basename) {\n          return this.plugins.filter((p) => p.name.split(\"#\")[0] === basename);\n        }\n        /**\n         *  Create a copy of this Network.\n         */\n        clone() {\n          const clone = new _Network(this.name, this.chainId);\n          this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n          });\n          return clone;\n        }\n        /**\n         *  Compute the intrinsic gas required for a transaction.\n         *\n         *  A GasCostPlugin can be attached to override the default\n         *  values.\n         */\n        computeIntrinsicGas(tx) {\n          const costs = this.getPlugin(\"org.ethers.plugins.network.GasCost\") || new GasCostPlugin();\n          let gas = costs.txBase;\n          if (tx.to == null) {\n            gas += costs.txCreate;\n          }\n          if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n              if (tx.data.substring(i, i + 2) === \"00\") {\n                gas += costs.txDataZero;\n              } else {\n                gas += costs.txDataNonzero;\n              }\n            }\n          }\n          if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n              gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n          }\n          return gas;\n        }\n        /**\n         *  Returns a new Network for the %%network%% name or chainId.\n         */\n        static from(network) {\n          injectCommonNetworks();\n          if (network == null) {\n            return _Network.from(\"mainnet\");\n          }\n          if (typeof network === \"number\") {\n            network = BigInt(network);\n          }\n          if (typeof network === \"string\" || typeof network === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n              return networkFunc();\n            }\n            if (typeof network === \"bigint\") {\n              return new _Network(\"unknown\", network);\n            }\n            assertArgument(false, \"unknown network\", \"network\", network);\n          }\n          if (typeof network.clone === \"function\") {\n            const clone = network.clone();\n            return clone;\n          }\n          if (typeof network === \"object\") {\n            assertArgument(typeof network.name === \"string\" && typeof network.chainId === \"number\", \"invalid network object name or chainId\", \"network\", network);\n            const custom2 = new _Network(network.name, network.chainId);\n            if (network.ensAddress || network.ensNetwork != null) {\n              custom2.attachPlugin(new EnsPlugin(network.ensAddress, network.ensNetwork));\n            }\n            return custom2;\n          }\n          assertArgument(false, \"invalid network\", \"network\", network);\n        }\n        /**\n         *  Register %%nameOrChainId%% with a function which returns\n         *  an instance of a Network representing that chain.\n         */\n        static register(nameOrChainId, networkFunc) {\n          if (typeof nameOrChainId === \"number\") {\n            nameOrChainId = BigInt(nameOrChainId);\n          }\n          const existing = Networks.get(nameOrChainId);\n          if (existing) {\n            assertArgument(false, `conflicting network for ${JSON.stringify(existing.name)}`, \"nameOrChainId\", nameOrChainId);\n          }\n          Networks.set(nameOrChainId, networkFunc);\n        }\n      };\n      injected = false;\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/subscriber-polling.js\n  function copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  var PollingBlockSubscriber, OnBlockSubscriber, PollingBlockTagSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber, PollingEventSubscriber;\n  var init_subscriber_polling = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/subscriber-polling.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      PollingBlockSubscriber = class {\n        #provider;\n        #poller;\n        #interval;\n        // The most recent block we have scanned for events. The value -2\n        // indicates we still need to fetch an initial block number\n        #blockNumber;\n        /**\n         *  Create a new **PollingBlockSubscriber** attached to %%provider%%.\n         */\n        constructor(provider) {\n          this.#provider = provider;\n          this.#poller = null;\n          this.#interval = 4e3;\n          this.#blockNumber = -2;\n        }\n        /**\n         *  The polling interval.\n         */\n        get pollingInterval() {\n          return this.#interval;\n        }\n        set pollingInterval(value) {\n          this.#interval = value;\n        }\n        async #poll() {\n          try {\n            const blockNumber = await this.#provider.getBlockNumber();\n            if (this.#blockNumber === -2) {\n              this.#blockNumber = blockNumber;\n              return;\n            }\n            if (blockNumber !== this.#blockNumber) {\n              for (let b2 = this.#blockNumber + 1; b2 <= blockNumber; b2++) {\n                if (this.#poller == null) {\n                  return;\n                }\n                await this.#provider.emit(\"block\", b2);\n              }\n              this.#blockNumber = blockNumber;\n            }\n          } catch (error) {\n          }\n          if (this.#poller == null) {\n            return;\n          }\n          this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        }\n        start() {\n          if (this.#poller) {\n            return;\n          }\n          this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n          this.#poll();\n        }\n        stop() {\n          if (!this.#poller) {\n            return;\n          }\n          this.#provider._clearTimeout(this.#poller);\n          this.#poller = null;\n        }\n        pause(dropWhilePaused) {\n          this.stop();\n          if (dropWhilePaused) {\n            this.#blockNumber = -2;\n          }\n        }\n        resume() {\n          this.start();\n        }\n      };\n      OnBlockSubscriber = class {\n        #provider;\n        #poll;\n        #running;\n        /**\n         *  Create a new **OnBlockSubscriber** attached to %%provider%%.\n         */\n        constructor(provider) {\n          this.#provider = provider;\n          this.#running = false;\n          this.#poll = (blockNumber) => {\n            this._poll(blockNumber, this.#provider);\n          };\n        }\n        /**\n         *  Called on every new block.\n         */\n        async _poll(blockNumber, provider) {\n          throw new Error(\"sub-classes must override this\");\n        }\n        start() {\n          if (this.#running) {\n            return;\n          }\n          this.#running = true;\n          this.#poll(-2);\n          this.#provider.on(\"block\", this.#poll);\n        }\n        stop() {\n          if (!this.#running) {\n            return;\n          }\n          this.#running = false;\n          this.#provider.off(\"block\", this.#poll);\n        }\n        pause(dropWhilePaused) {\n          this.stop();\n        }\n        resume() {\n          this.start();\n        }\n      };\n      PollingBlockTagSubscriber = class extends OnBlockSubscriber {\n        #tag;\n        #lastBlock;\n        constructor(provider, tag) {\n          super(provider);\n          this.#tag = tag;\n          this.#lastBlock = -2;\n        }\n        pause(dropWhilePaused) {\n          if (dropWhilePaused) {\n            this.#lastBlock = -2;\n          }\n          super.pause(dropWhilePaused);\n        }\n        async _poll(blockNumber, provider) {\n          const block = await provider.getBlock(this.#tag);\n          if (block == null) {\n            return;\n          }\n          if (this.#lastBlock === -2) {\n            this.#lastBlock = block.number;\n          } else if (block.number > this.#lastBlock) {\n            provider.emit(this.#tag, block.number);\n            this.#lastBlock = block.number;\n          }\n        }\n      };\n      PollingOrphanSubscriber = class extends OnBlockSubscriber {\n        #filter;\n        constructor(provider, filter) {\n          super(provider);\n          this.#filter = copy(filter);\n        }\n        async _poll(blockNumber, provider) {\n          throw new Error(\"@TODO\");\n          console.log(this.#filter);\n        }\n      };\n      PollingTransactionSubscriber = class extends OnBlockSubscriber {\n        #hash;\n        /**\n         *  Create a new **PollingTransactionSubscriber** attached to\n         *  %%provider%%, listening for %%hash%%.\n         */\n        constructor(provider, hash2) {\n          super(provider);\n          this.#hash = hash2;\n        }\n        async _poll(blockNumber, provider) {\n          const tx = await provider.getTransactionReceipt(this.#hash);\n          if (tx) {\n            provider.emit(this.#hash, tx);\n          }\n        }\n      };\n      PollingEventSubscriber = class {\n        #provider;\n        #filter;\n        #poller;\n        #running;\n        // The most recent block we have scanned for events. The value -2\n        // indicates we still need to fetch an initial block number\n        #blockNumber;\n        /**\n         *  Create a new **PollingTransactionSubscriber** attached to\n         *  %%provider%%, listening for %%filter%%.\n         */\n        constructor(provider, filter) {\n          this.#provider = provider;\n          this.#filter = copy(filter);\n          this.#poller = this.#poll.bind(this);\n          this.#running = false;\n          this.#blockNumber = -2;\n        }\n        async #poll(blockNumber) {\n          if (this.#blockNumber === -2) {\n            return;\n          }\n          const filter = copy(this.#filter);\n          filter.fromBlock = this.#blockNumber + 1;\n          filter.toBlock = blockNumber;\n          const logs = await this.#provider.getLogs(filter);\n          if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n              this.#blockNumber = blockNumber - 60;\n            }\n            return;\n          }\n          for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n            this.#blockNumber = log.blockNumber;\n          }\n        }\n        start() {\n          if (this.#running) {\n            return;\n          }\n          this.#running = true;\n          if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n              this.#blockNumber = blockNumber;\n            });\n          }\n          this.#provider.on(\"block\", this.#poller);\n        }\n        stop() {\n          if (!this.#running) {\n            return;\n          }\n          this.#running = false;\n          this.#provider.off(\"block\", this.#poller);\n        }\n        pause(dropWhilePaused) {\n          this.stop();\n          if (dropWhilePaused) {\n            this.#blockNumber = -2;\n          }\n        }\n        resume() {\n          this.start();\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/abstract-provider.js\n  function isPromise(value) {\n    return value && typeof value.then === \"function\";\n  }\n  function getTag(prefix, value) {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n      if (v == null) {\n        return \"null\";\n      }\n      if (typeof v === \"bigint\") {\n        return `bigint:${v.toString()}`;\n      }\n      if (typeof v === \"string\") {\n        return v.toLowerCase();\n      }\n      if (typeof v === \"object\" && !Array.isArray(v)) {\n        const keys = Object.keys(v);\n        keys.sort();\n        return keys.reduce((accum, key) => {\n          accum[key] = v[key];\n          return accum;\n        }, {});\n      }\n      return v;\n    });\n  }\n  function copy2(value) {\n    return JSON.parse(JSON.stringify(value));\n  }\n  function concisify(items) {\n    items = Array.from(new Set(items).values());\n    items.sort();\n    return items;\n  }\n  async function getSubscription(_event, provider) {\n    if (_event == null) {\n      throw new Error(\"invalid event\");\n    }\n    if (Array.isArray(_event)) {\n      _event = { topics: _event };\n    }\n    if (typeof _event === \"string\") {\n      switch (_event) {\n        case \"block\":\n        case \"debug\":\n        case \"error\":\n        case \"finalized\":\n        case \"network\":\n        case \"pending\":\n        case \"safe\": {\n          return { type: _event, tag: _event };\n        }\n      }\n    }\n    if (isHexString(_event, 32)) {\n      const hash2 = _event.toLowerCase();\n      return { type: \"transaction\", tag: getTag(\"tx\", { hash: hash2 }), hash: hash2 };\n    }\n    if (_event.orphan) {\n      const event = _event;\n      return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy2(event) };\n    }\n    if (_event.address || _event.topics) {\n      const event = _event;\n      const filter = {\n        topics: (event.topics || []).map((t) => {\n          if (t == null) {\n            return null;\n          }\n          if (Array.isArray(t)) {\n            return concisify(t.map((t2) => t2.toLowerCase()));\n          }\n          return t.toLowerCase();\n        })\n      };\n      if (event.address) {\n        const addresses = [];\n        const promises = [];\n        const addAddress = (addr) => {\n          if (isHexString(addr)) {\n            addresses.push(addr);\n          } else {\n            promises.push((async () => {\n              addresses.push(await resolveAddress(addr, provider));\n            })());\n          }\n        };\n        if (Array.isArray(event.address)) {\n          event.address.forEach(addAddress);\n        } else {\n          addAddress(event.address);\n        }\n        if (promises.length) {\n          await Promise.all(promises);\n        }\n        filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n      }\n      return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n  }\n  function getTime2() {\n    return (/* @__PURE__ */ new Date()).getTime();\n  }\n  function _parseString(result, start) {\n    try {\n      const bytes2 = _parseBytes(result, start);\n      if (bytes2) {\n        return toUtf8String(bytes2);\n      }\n    } catch (error) {\n    }\n    return null;\n  }\n  function _parseBytes(result, start) {\n    if (result === \"0x\") {\n      return null;\n    }\n    try {\n      const offset = getNumber(dataSlice(result, start, start + 32));\n      const length = getNumber(dataSlice(result, offset, offset + 32));\n      return dataSlice(result, offset + 32, offset + 32 + length);\n    } catch (error) {\n    }\n    return null;\n  }\n  function numPad(value) {\n    const result = toBeArray(value);\n    if (result.length > 32) {\n      throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n  }\n  function bytesPad(value) {\n    if (value.length % 32 === 0) {\n      return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n  }\n  function encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    for (let i = 0; i < datas.length; i++) {\n      result.push(empty);\n      byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n      const data = getBytes(datas[i]);\n      result[i] = numPad(byteCount);\n      result.push(numPad(data.length));\n      result.push(bytesPad(data));\n      byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return concat(result);\n  }\n  function parseOffchainLookup(data) {\n    const result = {\n      sender: \"\",\n      urls: [],\n      calldata: \"\",\n      selector: \"\",\n      extraData: \"\",\n      errorArgs: []\n    };\n    assert2(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n      reason: \"insufficient OffchainLookup data\"\n    });\n    const sender = dataSlice(data, 0, 32);\n    assert2(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n    try {\n      const urls = [];\n      const urlsOffset = getNumber(dataSlice(data, 32, 64));\n      const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n      const urlsData = dataSlice(data, urlsOffset + 32);\n      for (let u = 0; u < urlsLength; u++) {\n        const url = _parseString(urlsData, u * 32);\n        if (url == null) {\n          throw new Error(\"abort\");\n        }\n        urls.push(url);\n      }\n      result.urls = urls;\n    } catch (error) {\n      assert2(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup urls\"\n      });\n    }\n    try {\n      const calldata = _parseBytes(data, 64);\n      if (calldata == null) {\n        throw new Error(\"abort\");\n      }\n      result.calldata = calldata;\n    } catch (error) {\n      assert2(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup calldata\"\n      });\n    }\n    assert2(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n    try {\n      const extraData = _parseBytes(data, 128);\n      if (extraData == null) {\n        throw new Error(\"abort\");\n      }\n      result.extraData = extraData;\n    } catch (error) {\n      assert2(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup extraData\"\n      });\n    }\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => result[k]);\n    return result;\n  }\n  var BN_23, MAX_CCIP_REDIRECTS, UnmanagedSubscriber, defaultOptions, AbstractProvider, empty, zeros;\n  var init_abstract_provider = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/abstract-provider.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_constants2();\n      init_contract2();\n      init_hash();\n      init_transaction2();\n      init_utils();\n      init_ens_resolver();\n      init_format();\n      init_network();\n      init_provider();\n      init_subscriber_polling();\n      BN_23 = BigInt(2);\n      MAX_CCIP_REDIRECTS = 10;\n      UnmanagedSubscriber = class {\n        /**\n         *  The name fof the event.\n         */\n        name;\n        /**\n         *  Create a new UnmanagedSubscriber with %%name%%.\n         */\n        constructor(name) {\n          defineProperties(this, { name });\n        }\n        start() {\n        }\n        stop() {\n        }\n        pause(dropWhilePaused) {\n        }\n        resume() {\n        }\n      };\n      defaultOptions = {\n        cacheTimeout: 250,\n        pollingInterval: 4e3\n      };\n      AbstractProvider = class {\n        #subs;\n        #plugins;\n        // null=unpaused, true=paused+dropWhilePaused, false=paused\n        #pausedState;\n        #destroyed;\n        #networkPromise;\n        #anyNetwork;\n        #performCache;\n        // The most recent block number if running an event or -1 if no \"block\" event\n        #lastBlockNumber;\n        #nextTimer;\n        #timers;\n        #disableCcipRead;\n        #options;\n        /**\n         *  Create a new **AbstractProvider** connected to %%network%%, or\n         *  use the various network detection capabilities to discover the\n         *  [[Network]] if necessary.\n         */\n        constructor(_network, options) {\n          this.#options = Object.assign({}, defaultOptions, options || {});\n          if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n          } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => {\n              this.emit(\"network\", network, null);\n            }, 0);\n          } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n          }\n          this.#lastBlockNumber = -1;\n          this.#performCache = /* @__PURE__ */ new Map();\n          this.#subs = /* @__PURE__ */ new Map();\n          this.#plugins = /* @__PURE__ */ new Map();\n          this.#pausedState = null;\n          this.#destroyed = false;\n          this.#nextTimer = 1;\n          this.#timers = /* @__PURE__ */ new Map();\n          this.#disableCcipRead = false;\n        }\n        get pollingInterval() {\n          return this.#options.pollingInterval;\n        }\n        /**\n         *  Returns ``this``, to allow an **AbstractProvider** to implement\n         *  the [[ContractRunner]] interface.\n         */\n        get provider() {\n          return this;\n        }\n        /**\n         *  Returns all the registered plug-ins.\n         */\n        get plugins() {\n          return Array.from(this.#plugins.values());\n        }\n        /**\n         *  Attach a new plug-in.\n         */\n        attachPlugin(plugin) {\n          if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n          }\n          this.#plugins.set(plugin.name, plugin.connect(this));\n          return this;\n        }\n        /**\n         *  Get a plugin by name.\n         */\n        getPlugin(name) {\n          return this.#plugins.get(name) || null;\n        }\n        /**\n         *  Prevent any CCIP-read operation, regardless of whether requested\n         *  in a [[call]] using ``enableCcipRead``.\n         */\n        get disableCcipRead() {\n          return this.#disableCcipRead;\n        }\n        set disableCcipRead(value) {\n          this.#disableCcipRead = !!value;\n        }\n        // Shares multiple identical requests made during the same 250ms\n        async #perform(req) {\n          const timeout = this.#options.cacheTimeout;\n          if (timeout < 0) {\n            return await this._perform(req);\n          }\n          const tag = getTag(req.method, req);\n          let perform = this.#performCache.get(tag);\n          if (!perform) {\n            perform = this._perform(req);\n            this.#performCache.set(tag, perform);\n            setTimeout(() => {\n              if (this.#performCache.get(tag) === perform) {\n                this.#performCache.delete(tag);\n              }\n            }, timeout);\n          }\n          return await perform;\n        }\n        /**\n         *  Resolves to the data for executing the CCIP-read operations.\n         */\n        async ccipReadFetch(tx, calldata, urls) {\n          if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n            return null;\n          }\n          const sender = tx.to.toLowerCase();\n          const data = calldata.toLowerCase();\n          const errorMessages = [];\n          for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n              request.body = { data, sender };\n            }\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n            let errorMessage = \"unknown error\";\n            let resp;\n            try {\n              resp = await request.send();\n            } catch (error) {\n              errorMessages.push(error.message);\n              this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result: { error } });\n              continue;\n            }\n            try {\n              const result = resp.bodyJson;\n              if (result.data) {\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                return result.data;\n              }\n              if (result.message) {\n                errorMessage = result.message;\n              }\n              this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            } catch (error) {\n            }\n            assert2(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n            errorMessages.push(errorMessage);\n          }\n          assert2(false, `error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx,\n            info: { urls, errorMessages }\n          });\n        }\n        /**\n         *  Provides the opportunity for a sub-class to wrap a block before\n         *  returning it, to add additional properties or an alternate\n         *  sub-class of [[Block]].\n         */\n        _wrapBlock(value, network) {\n          return new Block(formatBlock(value), this);\n        }\n        /**\n         *  Provides the opportunity for a sub-class to wrap a log before\n         *  returning it, to add additional properties or an alternate\n         *  sub-class of [[Log]].\n         */\n        _wrapLog(value, network) {\n          return new Log(formatLog(value), this);\n        }\n        /**\n         *  Provides the opportunity for a sub-class to wrap a transaction\n         *  receipt before returning it, to add additional properties or an\n         *  alternate sub-class of [[TransactionReceipt]].\n         */\n        _wrapTransactionReceipt(value, network) {\n          return new TransactionReceipt(formatTransactionReceipt(value), this);\n        }\n        /**\n         *  Provides the opportunity for a sub-class to wrap a transaction\n         *  response before returning it, to add additional properties or an\n         *  alternate sub-class of [[TransactionResponse]].\n         */\n        _wrapTransactionResponse(tx, network) {\n          return new TransactionResponse(formatTransactionResponse(tx), this);\n        }\n        /**\n         *  Resolves to the Network, forcing a network detection using whatever\n         *  technique the sub-class requires.\n         *\n         *  Sub-classes **must** override this.\n         */\n        _detectNetwork() {\n          assert2(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n          });\n        }\n        /**\n         *  Sub-classes should use this to perform all built-in operations. All\n         *  methods sanitizes and normalizes the values passed into this.\n         *\n         *  Sub-classes **must** override this.\n         */\n        async _perform(req) {\n          assert2(false, `unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n          });\n        }\n        // State\n        async getBlockNumber() {\n          const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n          if (this.#lastBlockNumber >= 0) {\n            this.#lastBlockNumber = blockNumber;\n          }\n          return blockNumber;\n        }\n        /**\n         *  Returns or resolves to the address for %%address%%, resolving ENS\n         *  names and [[Addressable]] objects and returning if already an\n         *  address.\n         */\n        _getAddress(address) {\n          return resolveAddress(address, this);\n        }\n        /**\n         *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n         *  negative values and returning if already a valid block tag.\n         */\n        _getBlockTag(blockTag) {\n          if (blockTag == null) {\n            return \"latest\";\n          }\n          switch (blockTag) {\n            case \"earliest\":\n              return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n              return blockTag;\n          }\n          if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) {\n              return blockTag;\n            }\n            return toQuantity(blockTag);\n          }\n          if (typeof blockTag === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n          }\n          if (typeof blockTag === \"number\") {\n            if (blockTag >= 0) {\n              return toQuantity(blockTag);\n            }\n            if (this.#lastBlockNumber >= 0) {\n              return toQuantity(this.#lastBlockNumber + blockTag);\n            }\n            return this.getBlockNumber().then((b2) => toQuantity(b2 + blockTag));\n          }\n          assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n        }\n        /**\n         *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n         *  names or [[Addressable]] object and returning if already a valid\n         *  filter.\n         */\n        _getFilter(filter) {\n          const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n              return null;\n            }\n            if (Array.isArray(t)) {\n              return concisify(t.map((t2) => t2.toLowerCase()));\n            }\n            return t.toLowerCase();\n          });\n          const blockHash = \"blockHash\" in filter ? filter.blockHash : void 0;\n          const resolve = (_address, fromBlock2, toBlock2) => {\n            let address2 = void 0;\n            switch (_address.length) {\n              case 0:\n                break;\n              case 1:\n                address2 = _address[0];\n                break;\n              default:\n                _address.sort();\n                address2 = _address;\n            }\n            if (blockHash) {\n              if (fromBlock2 != null || toBlock2 != null) {\n                throw new Error(\"invalid filter\");\n              }\n            }\n            const filter2 = {};\n            if (address2) {\n              filter2.address = address2;\n            }\n            if (topics.length) {\n              filter2.topics = topics;\n            }\n            if (fromBlock2) {\n              filter2.fromBlock = fromBlock2;\n            }\n            if (toBlock2) {\n              filter2.toBlock = toBlock2;\n            }\n            if (blockHash) {\n              filter2.blockHash = blockHash;\n            }\n            return filter2;\n          };\n          let address = [];\n          if (filter.address) {\n            if (Array.isArray(filter.address)) {\n              for (const addr of filter.address) {\n                address.push(this._getAddress(addr));\n              }\n            } else {\n              address.push(this._getAddress(filter.address));\n            }\n          }\n          let fromBlock = void 0;\n          if (\"fromBlock\" in filter) {\n            fromBlock = this._getBlockTag(filter.fromBlock);\n          }\n          let toBlock = void 0;\n          if (\"toBlock\" in filter) {\n            toBlock = this._getBlockTag(filter.toBlock);\n          }\n          if (address.filter((a) => typeof a !== \"string\").length || fromBlock != null && typeof fromBlock !== \"string\" || toBlock != null && typeof toBlock !== \"string\") {\n            return Promise.all([Promise.all(address), fromBlock, toBlock]).then((result) => {\n              return resolve(result[0], result[1], result[2]);\n            });\n          }\n          return resolve(address, fromBlock, toBlock);\n        }\n        /**\n         *  Returns or resolves to a transaction for %%request%%, resolving\n         *  any ENS names or [[Addressable]] and returning if already a valid\n         *  transaction.\n         */\n        _getTransactionRequest(_request) {\n          const request = copyRequest(_request);\n          const promises = [];\n          [\"to\", \"from\"].forEach((key) => {\n            if (request[key] == null) {\n              return;\n            }\n            const addr = resolveAddress(request[key], this);\n            if (isPromise(addr)) {\n              promises.push(async function() {\n                request[key] = await addr;\n              }());\n            } else {\n              request[key] = addr;\n            }\n          });\n          if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n              promises.push(async function() {\n                request.blockTag = await blockTag;\n              }());\n            } else {\n              request.blockTag = blockTag;\n            }\n          }\n          if (promises.length) {\n            return async function() {\n              await Promise.all(promises);\n              return request;\n            }();\n          }\n          return request;\n        }\n        async getNetwork() {\n          if (this.#networkPromise == null) {\n            const detectNetwork = (async () => {\n              try {\n                const network = await this._detectNetwork();\n                this.emit(\"network\", network, null);\n                return network;\n              } catch (error) {\n                if (this.#networkPromise === detectNetwork) {\n                  this.#networkPromise = null;\n                }\n                throw error;\n              }\n            })();\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n          }\n          const networkPromise = this.#networkPromise;\n          const [expected, actual] = await Promise.all([\n            networkPromise,\n            this._detectNetwork()\n            // The actual connected network\n          ]);\n          if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n              this.emit(\"network\", actual, expected);\n              if (this.#networkPromise === networkPromise) {\n                this.#networkPromise = Promise.resolve(actual);\n              }\n            } else {\n              assert2(false, `network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n                event: \"changed\"\n              });\n            }\n          }\n          return expected.clone();\n        }\n        async getFeeData() {\n          const network = await this.getNetwork();\n          const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n              _block: this.#getBlock(\"latest\", false),\n              gasPrice: (async () => {\n                try {\n                  const value = await this.#perform({ method: \"getGasPrice\" });\n                  return getBigInt(value, \"%response\");\n                } catch (error) {\n                }\n                return null;\n              })(),\n              priorityFee: (async () => {\n                try {\n                  const value = await this.#perform({ method: \"getPriorityFee\" });\n                  return getBigInt(value, \"%response\");\n                } catch (error) {\n                }\n                return null;\n              })()\n            });\n            let maxFeePerGas = null;\n            let maxPriorityFeePerGas = null;\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n              maxPriorityFeePerGas = priorityFee != null ? priorityFee : BigInt(\"1000000000\");\n              maxFeePerGas = block.baseFeePerGas * BN_23 + maxPriorityFeePerGas;\n            }\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n          };\n          const plugin = network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n          if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n          }\n          return await getFeeDataFunc();\n        }\n        async estimateGas(_tx) {\n          let tx = this._getTransactionRequest(_tx);\n          if (isPromise(tx)) {\n            tx = await tx;\n          }\n          return getBigInt(await this.#perform({\n            method: \"estimateGas\",\n            transaction: tx\n          }), \"%response\");\n        }\n        async #call(tx, blockTag, attempt) {\n          assert2(attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n            reason: \"TOO_MANY_REDIRECTS\",\n            transaction: Object.assign({}, tx, { blockTag, enableCcipRead: true })\n          });\n          const transaction = copyRequest(tx);\n          try {\n            return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n          } catch (error) {\n            if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n              const data = error.data;\n              const txSender = await resolveAddress(transaction.to, this);\n              let ccipArgs;\n              try {\n                ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n              } catch (error2) {\n                assert2(false, error2.message, \"OFFCHAIN_FAULT\", {\n                  reason: \"BAD_DATA\",\n                  transaction,\n                  info: { data }\n                });\n              }\n              assert2(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(), \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                action: \"call\",\n                data,\n                reason: \"OffchainLookup\",\n                transaction,\n                invocation: null,\n                revert: {\n                  signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                  name: \"OffchainLookup\",\n                  args: ccipArgs.errorArgs\n                }\n              });\n              const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n              assert2(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                reason: \"FETCH_FAILED\",\n                transaction,\n                info: { data: error.data, errorArgs: ccipArgs.errorArgs }\n              });\n              const tx2 = {\n                to: txSender,\n                data: concat([ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])])\n              };\n              this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx2 });\n              try {\n                const result = await this.#call(tx2, blockTag, attempt + 1);\n                this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({}, tx2), result });\n                return result;\n              } catch (error2) {\n                this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({}, tx2), error: error2 });\n                throw error2;\n              }\n            }\n            throw error;\n          }\n        }\n        async #checkNetwork(promise) {\n          const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n          });\n          return value;\n        }\n        async call(_tx) {\n          const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n          });\n          return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0 : -1));\n        }\n        // Account\n        async #getAccountValue(request, _address, _blockTag) {\n          let address = this._getAddress(_address);\n          let blockTag = this._getBlockTag(_blockTag);\n          if (typeof address !== \"string\" || typeof blockTag !== \"string\") {\n            [address, blockTag] = await Promise.all([address, blockTag]);\n          }\n          return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n        }\n        async getBalance(address, blockTag) {\n          return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n        }\n        async getTransactionCount(address, blockTag) {\n          return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n        }\n        async getCode(address, blockTag) {\n          return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n        }\n        async getStorage(address, _position, blockTag) {\n          const position = getBigInt(_position, \"position\");\n          return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n        }\n        // Write\n        async broadcastTransaction(signedTx) {\n          const { blockNumber, hash: hash2, network } = await resolveProperties({\n            blockNumber: this.getBlockNumber(),\n            hash: this._perform({\n              method: \"broadcastTransaction\",\n              signedTransaction: signedTx\n            }),\n            network: this.getNetwork()\n          });\n          const tx = Transaction.from(signedTx);\n          if (tx.hash !== hash2) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n          }\n          return this._wrapTransactionResponse(tx, network).replaceableTransaction(blockNumber);\n        }\n        async #getBlock(block, includeTransactions) {\n          if (isHexString(block, 32)) {\n            return await this.#perform({\n              method: \"getBlock\",\n              blockHash: block,\n              includeTransactions\n            });\n          }\n          let blockTag = this._getBlockTag(block);\n          if (typeof blockTag !== \"string\") {\n            blockTag = await blockTag;\n          }\n          return await this.#perform({\n            method: \"getBlock\",\n            blockTag,\n            includeTransactions\n          });\n        }\n        // Queries\n        async getBlock(block, prefetchTxs) {\n          const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n          });\n          if (params == null) {\n            return null;\n          }\n          return this._wrapBlock(params, network);\n        }\n        async getTransaction(hash2) {\n          const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash: hash2 })\n          });\n          if (params == null) {\n            return null;\n          }\n          return this._wrapTransactionResponse(params, network);\n        }\n        async getTransactionReceipt(hash2) {\n          const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash: hash2 })\n          });\n          if (params == null) {\n            return null;\n          }\n          if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash: hash2 });\n            if (tx == null) {\n              throw new Error(\"report this; could not find tx or effectiveGasPrice\");\n            }\n            params.effectiveGasPrice = tx.gasPrice;\n          }\n          return this._wrapTransactionReceipt(params, network);\n        }\n        async getTransactionResult(hash2) {\n          const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash: hash2 })\n          });\n          if (result == null) {\n            return null;\n          }\n          return hexlify(result);\n        }\n        // Bloom-filter Queries\n        async getLogs(_filter) {\n          let filter = this._getFilter(_filter);\n          if (isPromise(filter)) {\n            filter = await filter;\n          }\n          const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getLogs\", filter })\n          });\n          return params.map((p) => this._wrapLog(p, network));\n        }\n        // ENS\n        _getProvider(chainId) {\n          assert2(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n          });\n        }\n        async getResolver(name) {\n          return await EnsResolver.fromName(this, name);\n        }\n        async getAvatar(name) {\n          const resolver = await this.getResolver(name);\n          if (resolver) {\n            return await resolver.getAvatar();\n          }\n          return null;\n        }\n        async resolveName(name) {\n          const resolver = await this.getResolver(name);\n          if (resolver) {\n            return await resolver.getAddress();\n          }\n          return null;\n        }\n        async lookupAddress(address) {\n          address = getAddress(address);\n          const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n          try {\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n              \"function resolver(bytes32) view returns (address)\"\n            ], this);\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) {\n              return null;\n            }\n            const resolverContract = new Contract(resolver, [\n              \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n            const check = await this.resolveName(name);\n            if (check !== address) {\n              return null;\n            }\n            return name;\n          } catch (error) {\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n              return null;\n            }\n            if (isError(error, \"CALL_EXCEPTION\")) {\n              return null;\n            }\n            throw error;\n          }\n          return null;\n        }\n        async waitForTransaction(hash2, _confirms, timeout) {\n          const confirms = _confirms != null ? _confirms : 1;\n          if (confirms === 0) {\n            return this.getTransactionReceipt(hash2);\n          }\n          return new Promise(async (resolve, reject) => {\n            let timer = null;\n            const listener = async (blockNumber) => {\n              try {\n                const receipt = await this.getTransactionReceipt(hash2);\n                if (receipt != null) {\n                  if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                    resolve(receipt);\n                    if (timer) {\n                      clearTimeout(timer);\n                      timer = null;\n                    }\n                    return;\n                  }\n                }\n              } catch (error) {\n                console.log(\"EEE\", error);\n              }\n              this.once(\"block\", listener);\n            };\n            if (timeout != null) {\n              timer = setTimeout(() => {\n                if (timer == null) {\n                  return;\n                }\n                timer = null;\n                this.off(\"block\", listener);\n                reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n              }, timeout);\n            }\n            listener(await this.getBlockNumber());\n          });\n        }\n        async waitForBlock(blockTag) {\n          assert2(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n          });\n        }\n        /**\n         *  Clear a timer created using the [[_setTimeout]] method.\n         */\n        _clearTimeout(timerId) {\n          const timer = this.#timers.get(timerId);\n          if (!timer) {\n            return;\n          }\n          if (timer.timer) {\n            clearTimeout(timer.timer);\n          }\n          this.#timers.delete(timerId);\n        }\n        /**\n         *  Create a timer that will execute %%func%% after at least %%timeout%%\n         *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n         *  in the next event loop.\n         *\n         *  [Pausing](AbstractProvider-paused) the provider will pause any\n         *  associated timers.\n         */\n        _setTimeout(_func, timeout) {\n          if (timeout == null) {\n            timeout = 0;\n          }\n          const timerId = this.#nextTimer++;\n          const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n          };\n          if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n          } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime2() });\n          }\n          return timerId;\n        }\n        /**\n         *  Perform %%func%% on each subscriber.\n         */\n        _forEachSubscriber(func) {\n          for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n          }\n        }\n        /**\n         *  Sub-classes may override this to customize subscription\n         *  implementations.\n         */\n        _getSubscriber(sub) {\n          switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n              return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n              const subscriber = new PollingBlockSubscriber(this);\n              subscriber.pollingInterval = this.pollingInterval;\n              return subscriber;\n            }\n            case \"safe\":\n            case \"finalized\":\n              return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n              return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n              return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n              return new PollingOrphanSubscriber(this, sub.filter);\n          }\n          throw new Error(`unsupported event: ${sub.type}`);\n        }\n        /**\n         *  If a [[Subscriber]] fails and needs to replace itself, this\n         *  method may be used.\n         *\n         *  For example, this is used for providers when using the\n         *  ``eth_getFilterChanges`` method, which can return null if state\n         *  filters are not supported by the backend, allowing the Subscriber\n         *  to swap in a [[PollingEventSubscriber]].\n         */\n        _recoverSubscriber(oldSub, newSub) {\n          for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n              if (sub.started) {\n                sub.subscriber.stop();\n              }\n              sub.subscriber = newSub;\n              if (sub.started) {\n                newSub.start();\n              }\n              if (this.#pausedState != null) {\n                newSub.pause(this.#pausedState);\n              }\n              break;\n            }\n          }\n        }\n        async #hasSub(event, emitArgs) {\n          let sub = await getSubscription(event, this);\n          if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n          }\n          return this.#subs.get(sub.tag) || null;\n        }\n        async #getSub(event) {\n          const subscription = await getSubscription(event, this);\n          const tag = subscription.tag;\n          let sub = this.#subs.get(tag);\n          if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n            const addressableMap = /* @__PURE__ */ new WeakMap();\n            const nameMap = /* @__PURE__ */ new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [] };\n            this.#subs.set(tag, sub);\n          }\n          return sub;\n        }\n        async on(event, listener) {\n          const sub = await this.#getSub(event);\n          sub.listeners.push({ listener, once: false });\n          if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n              sub.subscriber.pause(this.#pausedState);\n            }\n          }\n          return this;\n        }\n        async once(event, listener) {\n          const sub = await this.#getSub(event);\n          sub.listeners.push({ listener, once: true });\n          if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n              sub.subscriber.pause(this.#pausedState);\n            }\n          }\n          return this;\n        }\n        async emit(event, ...args) {\n          const sub = await this.#hasSub(event, args);\n          if (!sub || sub.listeners.length === 0) {\n            return false;\n          }\n          ;\n          const count = sub.listeners.length;\n          sub.listeners = sub.listeners.filter(({ listener, once: once2 }) => {\n            const payload = new EventPayload(this, once2 ? null : listener, event);\n            try {\n              listener.call(this, ...args, payload);\n            } catch (error) {\n            }\n            return !once2;\n          });\n          if (sub.listeners.length === 0) {\n            if (sub.started) {\n              sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n          }\n          return count > 0;\n        }\n        async listenerCount(event) {\n          if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n              return 0;\n            }\n            return sub.listeners.length;\n          }\n          let total = 0;\n          for (const { listeners: listeners2 } of this.#subs.values()) {\n            total += listeners2.length;\n          }\n          return total;\n        }\n        async listeners(event) {\n          if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n              return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n          }\n          let result = [];\n          for (const { listeners: listeners2 } of this.#subs.values()) {\n            result = result.concat(listeners2.map(({ listener }) => listener));\n          }\n          return result;\n        }\n        async off(event, listener) {\n          const sub = await this.#hasSub(event);\n          if (!sub) {\n            return this;\n          }\n          if (listener) {\n            const index = sub.listeners.map(({ listener: listener2 }) => listener2).indexOf(listener);\n            if (index >= 0) {\n              sub.listeners.splice(index, 1);\n            }\n          }\n          if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n              sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n          }\n          return this;\n        }\n        async removeAllListeners(event) {\n          if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) {\n              subscriber.stop();\n            }\n            this.#subs.delete(tag);\n          } else {\n            for (const [tag, { started, subscriber }] of this.#subs) {\n              if (started) {\n                subscriber.stop();\n              }\n              this.#subs.delete(tag);\n            }\n          }\n          return this;\n        }\n        // Alias for \"on\"\n        async addListener(event, listener) {\n          return await this.on(event, listener);\n        }\n        // Alias for \"off\"\n        async removeListener(event, listener) {\n          return this.off(event, listener);\n        }\n        /**\n         *  If this provider has been destroyed using the [[destroy]] method.\n         *\n         *  Once destroyed, all resources are reclaimed, internal event loops\n         *  and timers are cleaned up and no further requests may be sent to\n         *  the provider.\n         */\n        get destroyed() {\n          return this.#destroyed;\n        }\n        /**\n         *  Sub-classes may use this to shutdown any sockets or release their\n         *  resources and reject any pending requests.\n         *\n         *  Sub-classes **must** call ``super.destroy()``.\n         */\n        destroy() {\n          this.removeAllListeners();\n          for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n          }\n          this.#destroyed = true;\n        }\n        /**\n         *  Whether the provider is currently paused.\n         *\n         *  A paused provider will not emit any events, and generally should\n         *  not make any requests to the network, but that is up to sub-classes\n         *  to manage.\n         *\n         *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n         *  which will buffer any events that occur while paused until the\n         *  provider is unpaused.\n         */\n        get paused() {\n          return this.#pausedState != null;\n        }\n        set paused(pause) {\n          if (!!pause === this.paused) {\n            return;\n          }\n          if (this.paused) {\n            this.resume();\n          } else {\n            this.pause(false);\n          }\n        }\n        /**\n         *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n         *  while paused are dropped, otherwise all events will be emitted once\n         *  the provider is unpaused.\n         */\n        pause(dropWhilePaused) {\n          this.#lastBlockNumber = -1;\n          if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) {\n              return;\n            }\n            assert2(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n              operation: \"pause\"\n            });\n          }\n          this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n          this.#pausedState = !!dropWhilePaused;\n          for (const timer of this.#timers.values()) {\n            if (timer.timer) {\n              clearTimeout(timer.timer);\n            }\n            timer.time = getTime2() - timer.time;\n          }\n        }\n        /**\n         *  Resume the provider.\n         */\n        resume() {\n          if (this.#pausedState == null) {\n            return;\n          }\n          this._forEachSubscriber((s) => s.resume());\n          this.#pausedState = null;\n          for (const timer of this.#timers.values()) {\n            let timeout = timer.time;\n            if (timeout < 0) {\n              timeout = 0;\n            }\n            timer.time = getTime2();\n            setTimeout(timer.func, timeout);\n          }\n        }\n      };\n      empty = new Uint8Array([]);\n      zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/abstract-signer.js\n  function checkProvider(signer, operation) {\n    if (signer.provider) {\n      return signer.provider;\n    }\n    assert2(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n  }\n  async function populate(signer, tx) {\n    let pop = copyRequest(tx);\n    if (pop.to != null) {\n      pop.to = resolveAddress(pop.to, signer);\n    }\n    if (pop.from != null) {\n      const from = pop.from;\n      pop.from = Promise.all([\n        signer.getAddress(),\n        resolveAddress(from, signer)\n      ]).then(([address, from2]) => {\n        assertArgument(address.toLowerCase() === from2.toLowerCase(), \"transaction from mismatch\", \"tx.from\", from2);\n        return address;\n      });\n    } else {\n      pop.from = signer.getAddress();\n    }\n    return await resolveProperties(pop);\n  }\n  var AbstractSigner;\n  var init_abstract_signer = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/abstract-signer.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_address2();\n      init_transaction2();\n      init_utils();\n      init_provider();\n      AbstractSigner = class {\n        /**\n         *  The provider this signer is connected to.\n         */\n        provider;\n        /**\n         *  Creates a new Signer connected to %%provider%%.\n         */\n        constructor(provider) {\n          defineProperties(this, { provider: provider || null });\n        }\n        async getNonce(blockTag) {\n          return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n        }\n        async populateCall(tx) {\n          const pop = await populate(this, tx);\n          return pop;\n        }\n        async populateTransaction(tx) {\n          const provider = checkProvider(this, \"populateTransaction\");\n          const pop = await populate(this, tx);\n          if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n          }\n          if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n          }\n          const network = await this.provider.getNetwork();\n          if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n          } else {\n            pop.chainId = network.chainId;\n          }\n          const hasEip1559 = pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null;\n          if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n          } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n          }\n          if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            pop.type = 2;\n          } else if (pop.type === 0 || pop.type === 1) {\n            const feeData = await provider.getFeeData();\n            assert2(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n              operation: \"getGasPrice\"\n            });\n            if (pop.gasPrice == null) {\n              pop.gasPrice = feeData.gasPrice;\n            }\n          } else {\n            const feeData = await provider.getFeeData();\n            if (pop.type == null) {\n              if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                if (pop.authorizationList && pop.authorizationList.length) {\n                  pop.type = 4;\n                } else {\n                  pop.type = 2;\n                }\n                if (pop.gasPrice != null) {\n                  const gasPrice = pop.gasPrice;\n                  delete pop.gasPrice;\n                  pop.maxFeePerGas = gasPrice;\n                  pop.maxPriorityFeePerGas = gasPrice;\n                } else {\n                  if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                  }\n                  if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                  }\n                }\n              } else if (feeData.gasPrice != null) {\n                assert2(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                  operation: \"populateTransaction\"\n                });\n                if (pop.gasPrice == null) {\n                  pop.gasPrice = feeData.gasPrice;\n                }\n                pop.type = 0;\n              } else {\n                assert2(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                  operation: \"signer.getFeeData\"\n                });\n              }\n            } else if (pop.type === 2 || pop.type === 3 || pop.type === 4) {\n              if (pop.maxFeePerGas == null) {\n                pop.maxFeePerGas = feeData.maxFeePerGas;\n              }\n              if (pop.maxPriorityFeePerGas == null) {\n                pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n              }\n            }\n          }\n          return await resolveProperties(pop);\n        }\n        async populateAuthorization(_auth) {\n          const auth = Object.assign({}, _auth);\n          if (auth.chainId == null) {\n            auth.chainId = (await checkProvider(this, \"getNetwork\").getNetwork()).chainId;\n          }\n          if (auth.nonce == null) {\n            auth.nonce = await this.getNonce();\n          }\n          return auth;\n        }\n        async estimateGas(tx) {\n          return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n        }\n        async call(tx) {\n          return checkProvider(this, \"call\").call(await this.populateCall(tx));\n        }\n        async resolveName(name) {\n          const provider = checkProvider(this, \"resolveName\");\n          return await provider.resolveName(name);\n        }\n        async sendTransaction(tx) {\n          const provider = checkProvider(this, \"sendTransaction\");\n          const pop = await this.populateTransaction(tx);\n          delete pop.from;\n          const txObj = Transaction.from(pop);\n          return await provider.broadcastTransaction(await this.signTransaction(txObj));\n        }\n        // @TODO: in v7 move this to be abstract\n        authorize(authorization) {\n          assert2(false, \"authorization not implemented for this signer\", \"UNSUPPORTED_OPERATION\", { operation: \"authorize\" });\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/subscriber-filterid.js\n  function copy3(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  var FilterIdSubscriber, FilterIdEventSubscriber, FilterIdPendingSubscriber;\n  var init_subscriber_filterid = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/subscriber-filterid.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_utils();\n      init_subscriber_polling();\n      FilterIdSubscriber = class {\n        #provider;\n        #filterIdPromise;\n        #poller;\n        #running;\n        #network;\n        #hault;\n        /**\n         *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n         *  and [[_emitResults]] to setup the subscription and provide the event\n         *  to the %%provider%%.\n         */\n        constructor(provider) {\n          this.#provider = provider;\n          this.#filterIdPromise = null;\n          this.#poller = this.#poll.bind(this);\n          this.#running = false;\n          this.#network = null;\n          this.#hault = false;\n        }\n        /**\n         *  Sub-classes **must** override this to begin the subscription.\n         */\n        _subscribe(provider) {\n          throw new Error(\"subclasses must override this\");\n        }\n        /**\n         *  Sub-classes **must** override this handle the events.\n         */\n        _emitResults(provider, result) {\n          throw new Error(\"subclasses must override this\");\n        }\n        /**\n         *  Sub-classes **must** override this handle recovery on errors.\n         */\n        _recover(provider) {\n          throw new Error(\"subclasses must override this\");\n        }\n        async #poll(blockNumber) {\n          try {\n            if (this.#filterIdPromise == null) {\n              this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n            let filterId = null;\n            try {\n              filterId = await this.#filterIdPromise;\n            } catch (error) {\n              if (!isError(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n                throw error;\n              }\n            }\n            if (filterId == null) {\n              this.#filterIdPromise = null;\n              this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n              return;\n            }\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) {\n              this.#network = network;\n            }\n            if (this.#network.chainId !== network.chainId) {\n              throw new Error(\"chaid changed\");\n            }\n            if (this.#hault) {\n              return;\n            }\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [filterId]);\n            await this._emitResults(this.#provider, result);\n          } catch (error) {\n            console.log(\"@TODO\", error);\n          }\n          this.#provider.once(\"block\", this.#poller);\n        }\n        #teardown() {\n          const filterIdPromise = this.#filterIdPromise;\n          if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n              if (this.#provider.destroyed) {\n                return;\n              }\n              this.#provider.send(\"eth_uninstallFilter\", [filterId]);\n            });\n          }\n        }\n        start() {\n          if (this.#running) {\n            return;\n          }\n          this.#running = true;\n          this.#poll(-2);\n        }\n        stop() {\n          if (!this.#running) {\n            return;\n          }\n          this.#running = false;\n          this.#hault = true;\n          this.#teardown();\n          this.#provider.off(\"block\", this.#poller);\n        }\n        pause(dropWhilePaused) {\n          if (dropWhilePaused) {\n            this.#teardown();\n          }\n          this.#provider.off(\"block\", this.#poller);\n        }\n        resume() {\n          this.start();\n        }\n      };\n      FilterIdEventSubscriber = class extends FilterIdSubscriber {\n        #event;\n        /**\n         *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n         *  listening for %%filter%%.\n         */\n        constructor(provider, filter) {\n          super(provider);\n          this.#event = copy3(filter);\n        }\n        _recover(provider) {\n          return new PollingEventSubscriber(provider, this.#event);\n        }\n        async _subscribe(provider) {\n          const filterId = await provider.send(\"eth_newFilter\", [this.#event]);\n          return filterId;\n        }\n        async _emitResults(provider, results) {\n          for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n          }\n        }\n      };\n      FilterIdPendingSubscriber = class extends FilterIdSubscriber {\n        async _subscribe(provider) {\n          return await provider.send(\"eth_newPendingTransactionFilter\", []);\n        }\n        async _emitResults(provider, results) {\n          for (const result of results) {\n            provider.emit(\"pending\", result);\n          }\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js\n  function deepCopy(value) {\n    if (value == null || Primitive.indexOf(typeof value) >= 0) {\n      return value;\n    }\n    if (typeof value.getAddress === \"function\") {\n      return value;\n    }\n    if (Array.isArray(value)) {\n      return value.map(deepCopy);\n    }\n    if (typeof value === \"object\") {\n      return Object.keys(value).reduce((accum, key) => {\n        accum[key] = value[key];\n        return accum;\n      }, {});\n    }\n    throw new Error(`should not happen: ${value} (${typeof value})`);\n  }\n  function stall(duration) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  }\n  function getLowerCase(value) {\n    if (value) {\n      return value.toLowerCase();\n    }\n    return value;\n  }\n  function isPollable(value) {\n    return value && typeof value.pollingInterval === \"number\";\n  }\n  function spelunkData(value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value.message === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n      return { message: value.message, data: value.data };\n    }\n    if (typeof value === \"object\") {\n      for (const key in value) {\n        const result = spelunkData(value[key]);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n    if (typeof value === \"string\") {\n      try {\n        return spelunkData(JSON.parse(value));\n      } catch (error) {\n      }\n    }\n    return null;\n  }\n  function _spelunkMessage(value, result) {\n    if (value == null) {\n      return;\n    }\n    if (typeof value.message === \"string\") {\n      result.push(value.message);\n    }\n    if (typeof value === \"object\") {\n      for (const key in value) {\n        _spelunkMessage(value[key], result);\n      }\n    }\n    if (typeof value === \"string\") {\n      try {\n        return _spelunkMessage(JSON.parse(value), result);\n      } catch (error) {\n      }\n    }\n  }\n  function spelunkMessage(value) {\n    const result = [];\n    _spelunkMessage(value, result);\n    return result;\n  }\n  var Primitive, defaultOptions2, JsonRpcSigner, JsonRpcApiProvider, JsonRpcApiPollingProvider, JsonRpcProvider;\n  var init_provider_jsonrpc = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_abi();\n      init_address2();\n      init_hash();\n      init_transaction2();\n      init_utils();\n      init_abstract_provider();\n      init_abstract_signer();\n      init_network();\n      init_subscriber_filterid();\n      init_subscriber_polling();\n      Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n      defaultOptions2 = {\n        polling: false,\n        staticNetwork: null,\n        batchStallTime: 10,\n        batchMaxSize: 1 << 20,\n        batchMaxCount: 100,\n        cacheTimeout: 250,\n        pollingInterval: 4e3\n      };\n      JsonRpcSigner = class extends AbstractSigner {\n        address;\n        constructor(provider, address) {\n          super(provider);\n          address = getAddress(address);\n          defineProperties(this, { address });\n        }\n        connect(provider) {\n          assert2(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n          });\n        }\n        async getAddress() {\n          return this.address;\n        }\n        // JSON-RPC will automatially fill in nonce, etc. so we just check from\n        async populateTransaction(tx) {\n          return await this.populateCall(tx);\n        }\n        // Returns just the hash of the transaction after sent, which is what\n        // the bare JSON-RPC API does;\n        async sendUncheckedTransaction(_tx) {\n          const tx = deepCopy(_tx);\n          const promises = [];\n          if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n              const from = await resolveAddress(_from, this.provider);\n              assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n              tx.from = from;\n            })());\n          } else {\n            tx.from = this.address;\n          }\n          if (tx.gasLimit == null) {\n            promises.push((async () => {\n              tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address });\n            })());\n          }\n          if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n              tx.to = await resolveAddress(_to, this.provider);\n            })());\n          }\n          if (promises.length) {\n            await Promise.all(promises);\n          }\n          const hexTx = this.provider.getRpcTransaction(tx);\n          return this.provider.send(\"eth_sendTransaction\", [hexTx]);\n        }\n        async sendTransaction(tx) {\n          const blockNumber = await this.provider.getBlockNumber();\n          const hash2 = await this.sendUncheckedTransaction(tx);\n          return await new Promise((resolve, reject) => {\n            const timeouts = [1e3, 100];\n            let invalids = 0;\n            const checkTx = async () => {\n              try {\n                const tx2 = await this.provider.getTransaction(hash2);\n                if (tx2 != null) {\n                  resolve(tx2.replaceableTransaction(blockNumber));\n                  return;\n                }\n              } catch (error) {\n                if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") || isError(error, \"NETWORK_ERROR\") || isError(error, \"UNSUPPORTED_OPERATION\")) {\n                  if (error.info == null) {\n                    error.info = {};\n                  }\n                  error.info.sendTransactionHash = hash2;\n                  reject(error);\n                  return;\n                }\n                if (isError(error, \"INVALID_ARGUMENT\")) {\n                  invalids++;\n                  if (error.info == null) {\n                    error.info = {};\n                  }\n                  error.info.sendTransactionHash = hash2;\n                  if (invalids > 10) {\n                    reject(error);\n                    return;\n                  }\n                }\n                this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n              }\n              this.provider._setTimeout(() => {\n                checkTx();\n              }, timeouts.pop() || 4e3);\n            };\n            checkTx();\n          });\n        }\n        async signTransaction(_tx) {\n          const tx = deepCopy(_tx);\n          if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n          } else {\n            tx.from = this.address;\n          }\n          const hexTx = this.provider.getRpcTransaction(tx);\n          return await this.provider.send(\"eth_signTransaction\", [hexTx]);\n        }\n        async signMessage(_message) {\n          const message = typeof _message === \"string\" ? toUtf8Bytes(_message) : _message;\n          return await this.provider.send(\"personal_sign\", [\n            hexlify(message),\n            this.address.toLowerCase()\n          ]);\n        }\n        async signTypedData(domain2, types, _value) {\n          const value = deepCopy(_value);\n          const populated = await TypedDataEncoder.resolveNames(domain2, types, value, async (value2) => {\n            const address = await resolveAddress(value2);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value2);\n            return address;\n          });\n          return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n          ]);\n        }\n        async unlock(password) {\n          return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(),\n            password,\n            null\n          ]);\n        }\n        // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n        async _legacySignMessage(_message) {\n          const message = typeof _message === \"string\" ? toUtf8Bytes(_message) : _message;\n          return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(),\n            hexlify(message)\n          ]);\n        }\n      };\n      JsonRpcApiProvider = class extends AbstractProvider {\n        #options;\n        // The next ID to use for the JSON-RPC ID field\n        #nextId;\n        // Payloads are queued and triggered in batches using the drainTimer\n        #payloads;\n        #drainTimer;\n        #notReady;\n        #network;\n        #pendingDetectNetwork;\n        #scheduleDrain() {\n          if (this.#drainTimer) {\n            return;\n          }\n          const stallTime = this._getOption(\"batchMaxCount\") === 1 ? 0 : this._getOption(\"batchStallTime\");\n          this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n            const payloads = this.#payloads;\n            this.#payloads = [];\n            while (payloads.length) {\n              const batch = [payloads.shift()];\n              while (payloads.length) {\n                if (batch.length === this.#options.batchMaxCount) {\n                  break;\n                }\n                batch.push(payloads.shift());\n                const bytes2 = JSON.stringify(batch.map((p) => p.payload));\n                if (bytes2.length > this.#options.batchMaxSize) {\n                  payloads.unshift(batch.pop());\n                  break;\n                }\n              }\n              (async () => {\n                const payload = batch.length === 1 ? batch[0].payload : batch.map((p) => p.payload);\n                this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n                try {\n                  const result = await this._send(payload);\n                  this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n                  for (const { resolve, reject, payload: payload2 } of batch) {\n                    if (this.destroyed) {\n                      reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload2.method }));\n                      continue;\n                    }\n                    const resp = result.filter((r) => r.id === payload2.id)[0];\n                    if (resp == null) {\n                      const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                        value: result,\n                        info: { payload: payload2 }\n                      });\n                      this.emit(\"error\", error);\n                      reject(error);\n                      continue;\n                    }\n                    if (\"error\" in resp) {\n                      reject(this.getRpcError(payload2, resp));\n                      continue;\n                    }\n                    resolve(resp.result);\n                  }\n                } catch (error) {\n                  this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                  for (const { reject } of batch) {\n                    reject(error);\n                  }\n                }\n              })();\n            }\n          }, stallTime);\n        }\n        constructor(network, options) {\n          super(network, options);\n          this.#nextId = 1;\n          this.#options = Object.assign({}, defaultOptions2, options || {});\n          this.#payloads = [];\n          this.#drainTimer = null;\n          this.#network = null;\n          this.#pendingDetectNetwork = null;\n          {\n            let resolve = null;\n            const promise = new Promise((_resolve) => {\n              resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n          }\n          const staticNetwork = this._getOption(\"staticNetwork\");\n          if (typeof staticNetwork === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n              this.#network = Network.from(network);\n            }\n          } else if (staticNetwork) {\n            assertArgument(network == null || staticNetwork.matches(network), \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n          }\n        }\n        /**\n         *  Returns the value associated with the option %%key%%.\n         *\n         *  Sub-classes can use this to inquire about configuration options.\n         */\n        _getOption(key) {\n          return this.#options[key];\n        }\n        /**\n         *  Gets the [[Network]] this provider has committed to. On each call, the network\n         *  is detected, and if it has changed, the call will reject.\n         */\n        get _network() {\n          assert2(this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n          return this.#network;\n        }\n        /**\n         *  Resolves to the non-normalized value by performing %%req%%.\n         *\n         *  Sub-classes may override this to modify behavior of actions,\n         *  and should generally call ``super._perform`` as a fallback.\n         */\n        async _perform(req) {\n          if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n              if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                const feeData = await this.getFeeData();\n                if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                  req = Object.assign({}, req, {\n                    transaction: Object.assign({}, tx, { type: void 0 })\n                  });\n                }\n              }\n            }\n          }\n          const request = this.getRpcRequest(req);\n          if (request != null) {\n            return await this.send(request.method, request.args);\n          }\n          return super._perform(req);\n        }\n        /**\n         *  Sub-classes may override this; it detects the *actual* network that\n         *  we are **currently** connected to.\n         *\n         *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n         *  _send primitive must be used instead.\n         */\n        async _detectNetwork() {\n          const network = this._getOption(\"staticNetwork\");\n          if (network) {\n            if (network === true) {\n              if (this.#network) {\n                return this.#network;\n              }\n            } else {\n              return network;\n            }\n          }\n          if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n          }\n          if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n              try {\n                const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [])));\n                this.#pendingDetectNetwork = null;\n                return result;\n              } catch (error) {\n                this.#pendingDetectNetwork = null;\n                throw error;\n              }\n            })();\n            return await this.#pendingDetectNetwork;\n          }\n          this.#pendingDetectNetwork = (async () => {\n            const payload = {\n              id: this.#nextId++,\n              method: \"eth_chainId\",\n              params: [],\n              jsonrpc: \"2.0\"\n            };\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n            let result;\n            try {\n              result = (await this._send(payload))[0];\n              this.#pendingDetectNetwork = null;\n            } catch (error) {\n              this.#pendingDetectNetwork = null;\n              this.emit(\"debug\", { action: \"receiveRpcError\", error });\n              throw error;\n            }\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n            if (\"result\" in result) {\n              return Network.from(getBigInt(result.result));\n            }\n            throw this.getRpcError(payload, result);\n          })();\n          return await this.#pendingDetectNetwork;\n        }\n        /**\n         *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n         *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n         *  ``super._start()`` **MUST** be called.\n         *\n         *  Calling it multiple times is safe and has no effect.\n         */\n        _start() {\n          if (this.#notReady == null || this.#notReady.resolve == null) {\n            return;\n          }\n          this.#notReady.resolve();\n          this.#notReady = null;\n          (async () => {\n            while (this.#network == null && !this.destroyed) {\n              try {\n                this.#network = await this._detectNetwork();\n              } catch (error) {\n                if (this.destroyed) {\n                  break;\n                }\n                console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                await stall(1e3);\n              }\n            }\n            this.#scheduleDrain();\n          })();\n        }\n        /**\n         *  Resolves once the [[_start]] has been called. This can be used in\n         *  sub-classes to defer sending data until the connection has been\n         *  established.\n         */\n        async _waitUntilReady() {\n          if (this.#notReady == null) {\n            return;\n          }\n          return await this.#notReady.promise;\n        }\n        /**\n         *  Return a Subscriber that will manage the %%sub%%.\n         *\n         *  Sub-classes may override this to modify the behavior of\n         *  subscription management.\n         */\n        _getSubscriber(sub) {\n          if (sub.type === \"pending\") {\n            return new FilterIdPendingSubscriber(this);\n          }\n          if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n              return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n          }\n          if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n          }\n          return super._getSubscriber(sub);\n        }\n        /**\n         *  Returns true only if the [[_start]] has been called.\n         */\n        get ready() {\n          return this.#notReady == null;\n        }\n        /**\n         *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n         *  which has all values hexlified and any numeric values converted\n         *  to Quantity values.\n         */\n        getRpcTransaction(tx) {\n          const result = {};\n          [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if (tx[key] == null) {\n              return;\n            }\n            let dstKey = key;\n            if (key === \"gasLimit\") {\n              dstKey = \"gas\";\n            }\n            result[dstKey] = toQuantity(getBigInt(tx[key], `tx.${key}`));\n          });\n          [\"from\", \"to\", \"data\"].forEach((key) => {\n            if (tx[key] == null) {\n              return;\n            }\n            result[key] = hexlify(tx[key]);\n          });\n          if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n          }\n          if (tx.blobVersionedHashes) {\n            result[\"blobVersionedHashes\"] = tx.blobVersionedHashes.map((h) => h.toLowerCase());\n          }\n          if (tx.authorizationList) {\n            result[\"authorizationList\"] = tx.authorizationList.map((_a) => {\n              const a = authorizationify(_a);\n              return {\n                address: a.address,\n                nonce: toQuantity(a.nonce),\n                chainId: toQuantity(a.chainId),\n                yParity: toQuantity(a.signature.yParity),\n                r: toQuantity(a.signature.r),\n                s: toQuantity(a.signature.s)\n              };\n            });\n          }\n          return result;\n        }\n        /**\n         *  Returns the request method and arguments required to perform\n         *  %%req%%.\n         */\n        getRpcRequest(req) {\n          switch (req.method) {\n            case \"chainId\":\n              return { method: \"eth_chainId\", args: [] };\n            case \"getBlockNumber\":\n              return { method: \"eth_blockNumber\", args: [] };\n            case \"getGasPrice\":\n              return { method: \"eth_gasPrice\", args: [] };\n            case \"getPriorityFee\":\n              return { method: \"eth_maxPriorityFeePerGas\", args: [] };\n            case \"getBalance\":\n              return {\n                method: \"eth_getBalance\",\n                args: [getLowerCase(req.address), req.blockTag]\n              };\n            case \"getTransactionCount\":\n              return {\n                method: \"eth_getTransactionCount\",\n                args: [getLowerCase(req.address), req.blockTag]\n              };\n            case \"getCode\":\n              return {\n                method: \"eth_getCode\",\n                args: [getLowerCase(req.address), req.blockTag]\n              };\n            case \"getStorage\":\n              return {\n                method: \"eth_getStorageAt\",\n                args: [\n                  getLowerCase(req.address),\n                  \"0x\" + req.position.toString(16),\n                  req.blockTag\n                ]\n              };\n            case \"broadcastTransaction\":\n              return {\n                method: \"eth_sendRawTransaction\",\n                args: [req.signedTransaction]\n              };\n            case \"getBlock\":\n              if (\"blockTag\" in req) {\n                return {\n                  method: \"eth_getBlockByNumber\",\n                  args: [req.blockTag, !!req.includeTransactions]\n                };\n              } else if (\"blockHash\" in req) {\n                return {\n                  method: \"eth_getBlockByHash\",\n                  args: [req.blockHash, !!req.includeTransactions]\n                };\n              }\n              break;\n            case \"getTransaction\":\n              return {\n                method: \"eth_getTransactionByHash\",\n                args: [req.hash]\n              };\n            case \"getTransactionReceipt\":\n              return {\n                method: \"eth_getTransactionReceipt\",\n                args: [req.hash]\n              };\n            case \"call\":\n              return {\n                method: \"eth_call\",\n                args: [this.getRpcTransaction(req.transaction), req.blockTag]\n              };\n            case \"estimateGas\": {\n              return {\n                method: \"eth_estimateGas\",\n                args: [this.getRpcTransaction(req.transaction)]\n              };\n            }\n            case \"getLogs\":\n              if (req.filter && req.filter.address != null) {\n                if (Array.isArray(req.filter.address)) {\n                  req.filter.address = req.filter.address.map(getLowerCase);\n                } else {\n                  req.filter.address = getLowerCase(req.filter.address);\n                }\n              }\n              return { method: \"eth_getLogs\", args: [req.filter] };\n          }\n          return null;\n        }\n        /**\n         *  Returns an ethers-style Error for the given JSON-RPC error\n         *  %%payload%%, coalescing the various strings and error shapes\n         *  that different nodes return, coercing them into a machine-readable\n         *  standardized error.\n         */\n        getRpcError(payload, _error) {\n          const { method } = payload;\n          const { error } = _error;\n          if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n              return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                transaction: payload.params[0],\n                info: { payload, error }\n              });\n            } else if (msg.match(/nonce/i) && msg.match(/too low/i)) {\n              return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", {\n                transaction: payload.params[0],\n                info: { payload, error }\n              });\n            }\n          }\n          if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n            const e = AbiCoder.getBuiltinCallException(method === \"eth_call\" ? \"call\" : \"estimateGas\", payload.params[0], result ? result.data : null);\n            e.info = { error, payload };\n            return e;\n          }\n          const message = JSON.stringify(spelunkMessage(error));\n          if (typeof error.message === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap = {\n              eth_sign: \"signMessage\",\n              personal_sign: \"signMessage\",\n              eth_signTypedData_v4: \"signTypedData\",\n              eth_signTransaction: \"signTransaction\",\n              eth_sendTransaction: \"sendTransaction\",\n              eth_requestAccounts: \"requestAccess\",\n              wallet_requestAccounts: \"requestAccess\"\n            };\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n              action: actionMap[method] || \"unknown\",\n              reason: \"rejected\",\n              info: { payload, error }\n            });\n          }\n          if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = payload.params[0];\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n              return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                transaction,\n                info: { error }\n              });\n            }\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n              return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n              return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n            if (message.match(/only replay-protected/i)) {\n              return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                operation: method,\n                info: { transaction, info: { error } }\n              });\n            }\n          }\n          let unsupported = !!message.match(/the method .* does not exist/i);\n          if (!unsupported) {\n            if (error && error.details && error.details.startsWith(\"Unauthorized method:\")) {\n              unsupported = true;\n            }\n          }\n          if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n              operation: payload.method,\n              info: { error, payload }\n            });\n          }\n          return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n        }\n        /**\n         *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n         *  over the underlying channel. This can be used to call methods\n         *  on the backend that do not have a high-level API within the Provider\n         *  API.\n         *\n         *  This method queues requests according to the batch constraints\n         *  in the options, assigns the request a unique ID.\n         *\n         *  **Do NOT override** this method in sub-classes; instead\n         *  override [[_send]] or force the options values in the\n         *  call to the constructor to modify this method's behavior.\n         */\n        send(method, params) {\n          if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n          }\n          const id2 = this.#nextId++;\n          const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n              resolve,\n              reject,\n              payload: { method, params, id: id2, jsonrpc: \"2.0\" }\n            });\n          });\n          this.#scheduleDrain();\n          return promise;\n        }\n        /**\n         *  Resolves to the [[Signer]] account for  %%address%% managed by\n         *  the client.\n         *\n         *  If the %%address%% is a number, it is used as an index in the\n         *  the accounts from [[listAccounts]].\n         *\n         *  This can only be used on clients which manage accounts (such as\n         *  Geth with imported account or MetaMask).\n         *\n         *  Throws if the account doesn't exist.\n         */\n        async getSigner(address) {\n          if (address == null) {\n            address = 0;\n          }\n          const accountsPromise = this.send(\"eth_accounts\", []);\n          if (typeof address === \"number\") {\n            const accounts2 = await accountsPromise;\n            if (address >= accounts2.length) {\n              throw new Error(\"no such account\");\n            }\n            return new JsonRpcSigner(this, accounts2[address]);\n          }\n          const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n          });\n          address = getAddress(address);\n          for (const account of accounts) {\n            if (getAddress(account) === address) {\n              return new JsonRpcSigner(this, address);\n            }\n          }\n          throw new Error(\"invalid account\");\n        }\n        async listAccounts() {\n          const accounts = await this.send(\"eth_accounts\", []);\n          return accounts.map((a) => new JsonRpcSigner(this, a));\n        }\n        destroy() {\n          if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n          }\n          for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n          }\n          this.#payloads = [];\n          super.destroy();\n        }\n      };\n      JsonRpcApiPollingProvider = class extends JsonRpcApiProvider {\n        #pollingInterval;\n        constructor(network, options) {\n          super(network, options);\n          let pollingInterval = this._getOption(\"pollingInterval\");\n          if (pollingInterval == null) {\n            pollingInterval = defaultOptions2.pollingInterval;\n          }\n          this.#pollingInterval = pollingInterval;\n        }\n        _getSubscriber(sub) {\n          const subscriber = super._getSubscriber(sub);\n          if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n          }\n          return subscriber;\n        }\n        /**\n         *  The polling interval (default: 4000 ms)\n         */\n        get pollingInterval() {\n          return this.#pollingInterval;\n        }\n        set pollingInterval(value) {\n          if (!Number.isInteger(value) || value < 0) {\n            throw new Error(\"invalid interval\");\n          }\n          this.#pollingInterval = value;\n          this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n              sub.pollingInterval = this.#pollingInterval;\n            }\n          });\n        }\n      };\n      JsonRpcProvider = class extends JsonRpcApiPollingProvider {\n        #connect;\n        constructor(url, network, options) {\n          if (url == null) {\n            url = \"http://localhost:8545\";\n          }\n          super(network, options);\n          if (typeof url === \"string\") {\n            this.#connect = new FetchRequest(url);\n          } else {\n            this.#connect = url.clone();\n          }\n        }\n        _getConnection() {\n          return this.#connect.clone();\n        }\n        async send(method, params) {\n          await this._start();\n          return await super.send(method, params);\n        }\n        async _send(payload) {\n          const request = this._getConnection();\n          request.body = JSON.stringify(payload);\n          request.setHeader(\"content-type\", \"application/json\");\n          const response = await request.send();\n          response.assertOk();\n          let resp = response.bodyJson;\n          if (!Array.isArray(resp)) {\n            resp = [resp];\n          }\n          return resp;\n        }\n      };\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/index.js\n  var init_providers = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/providers/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_provider_jsonrpc();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/ethers.js\n  var init_ethers = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/ethers.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_providers();\n    }\n  });\n\n  // ../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/index.js\n  var init_lib = __esm({\n    \"../../../node_modules/.pnpm/ethers@6.14.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/lib.esm/index.js\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_ethers();\n    }\n  });\n\n  // src/lib/tool-helpers/get-gas-params.ts\n  var import_ethers11, getGasParams;\n  var init_get_gas_params = __esm({\n    \"src/lib/tool-helpers/get-gas-params.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers11 = __toESM(require_lib32());\n      init_lib();\n      getGasParams = async (provider, estimatedGas) => {\n        const rpcUrl = provider.connection?.url;\n        if (!rpcUrl) {\n          throw new Error(\"Could not extract RPC URL from provider for v6 operations\");\n        }\n        const v6Provider = new JsonRpcProvider(rpcUrl);\n        const v6FeeData = await v6Provider.getFeeData();\n        let maxFeePerGas;\n        let maxPriorityFeePerGas;\n        if (!v6FeeData || !v6FeeData.maxFeePerGas || !v6FeeData.maxPriorityFeePerGas) {\n          maxPriorityFeePerGas = import_ethers11.ethers.utils.parseUnits(\"1.5\", \"gwei\");\n          let baseFeePerGas;\n          const latestBlock = await provider.getBlock(\"latest\");\n          if (latestBlock && latestBlock.baseFeePerGas) {\n            baseFeePerGas = latestBlock.baseFeePerGas;\n          } else {\n            baseFeePerGas = import_ethers11.ethers.utils.parseUnits(\"1\", \"gwei\");\n          }\n          maxFeePerGas = baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        } else {\n          maxFeePerGas = import_ethers11.ethers.BigNumber.from(v6FeeData.maxFeePerGas.toString());\n          maxPriorityFeePerGas = import_ethers11.ethers.BigNumber.from(v6FeeData.maxPriorityFeePerGas.toString());\n        }\n        const estimatedGasWithBuffer = estimatedGas.mul(120).div(100);\n        return {\n          estimatedGas: estimatedGasWithBuffer,\n          maxFeePerGas,\n          maxPriorityFeePerGas\n        };\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/sign-tx.ts\n  var import_ethers12, signTx;\n  var init_sign_tx = __esm({\n    \"src/lib/tool-helpers/sign-tx.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers12 = __toESM(require_lib32());\n      signTx = async (pkpPublicKey, tx, sigName) => {\n        const publicKeyForLit = pkpPublicKey.replace(/^0x/, \"\");\n        console.log(`Signing using PKP Public Key: ${publicKeyForLit} (signTx)`);\n        const unsignedSerializedTx = import_ethers12.ethers.utils.serializeTransaction(tx);\n        const txHash = import_ethers12.ethers.utils.keccak256(unsignedSerializedTx);\n        console.log(\"Tx hash (signTx)\", txHash);\n        const signatureResponse = await Lit.Actions.signAndCombineEcdsa({\n          toSign: import_ethers12.ethers.utils.arrayify(txHash),\n          publicKey: publicKeyForLit,\n          sigName\n        });\n        const { r, s, v } = JSON.parse(signatureResponse);\n        const ethersJoinedSignature = import_ethers12.ethers.utils.joinSignature({\n          r: \"0x\" + r.substring(2),\n          s: \"0x\" + s,\n          v\n        });\n        const signedSerializedTx = import_ethers12.ethers.utils.serializeTransaction(tx, ethersJoinedSignature);\n        console.log(\"Signed serialized tx (signTx)\", signedSerializedTx);\n        return signedSerializedTx;\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/estimate-gas-for-swap.ts\n  var estimateGasForSwap;\n  var init_estimate_gas_for_swap = __esm({\n    \"src/lib/tool-helpers/estimate-gas-for-swap.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_get_gas_params();\n      estimateGasForSwap = async (uniswapV3RouterContract, tokenInAddress, tokenOutAddress, uniswapV3PoolFee, pkpEthAddress, amountInSmallestUnit, amountOutMin) => {\n        const [estimatedGas] = await Promise.all([\n          uniswapV3RouterContract.estimateGas.exactInputSingle(\n            [\n              tokenInAddress,\n              tokenOutAddress,\n              uniswapV3PoolFee,\n              pkpEthAddress,\n              amountInSmallestUnit,\n              amountOutMin,\n              0\n            ],\n            { from: pkpEthAddress }\n          )\n        ]);\n        return {\n          ...await getGasParams(uniswapV3RouterContract.provider, estimatedGas)\n        };\n      };\n    }\n  });\n\n  // src/lib/tool-helpers/index.ts\n  var init_tool_helpers = __esm({\n    \"src/lib/tool-helpers/index.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_get_pkp_info();\n      init_get_uniswap_quote();\n      init_send_uniswap_tx();\n      init_get_token_amount_in_usd();\n      init_get_gas_params();\n      init_sign_tx();\n      init_estimate_gas_for_swap();\n      init_calculate_usd_value();\n      init_get_eth_usd_price();\n    }\n  });\n\n  // src/lib/tool-checks/check-native-token-balance.ts\n  var checkNativeTokenBalance;\n  var init_check_native_token_balance = __esm({\n    \"src/lib/tool-checks/check-native-token-balance.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      checkNativeTokenBalance = async ({\n        provider,\n        pkpEthAddress\n      }) => {\n        const ethBalance = await provider.getBalance(pkpEthAddress);\n        if (ethBalance.isZero()) {\n          throw new Error(\n            `pkpEthAddress (${pkpEthAddress}) has zero native token balance (UniswapSwapToolPrecheck)`\n          );\n        }\n        return ethBalance;\n      };\n    }\n  });\n\n  // src/lib/tool-checks/getErc20Contract.ts\n  function getErc20Contract(tokenAddress, provider) {\n    return new import_ethers13.ethers.Contract(tokenAddress, ERC20_ABI, provider);\n  }\n  var import_ethers13, ERC20_ABI;\n  var init_getErc20Contract = __esm({\n    \"src/lib/tool-checks/getErc20Contract.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers13 = __toESM(require_lib32());\n      ERC20_ABI = [\n        \"function balanceOf(address owner) external view returns (uint256)\",\n        \"function approve(address spender, uint256 amount) external returns (bool)\",\n        \"function allowance(address owner, address spender) external view returns (uint256)\",\n        \"function decimals() view returns (uint8)\",\n        \"function totalSupply() external view returns (uint256)\",\n        \"function transfer(address to, uint256 amount) external returns (bool)\",\n        \"function transferFrom(address from, address to, uint256 amount) external returns (bool)\",\n        \"function name() external view returns (string)\",\n        \"function symbol() external view returns (string)\"\n      ];\n    }\n  });\n\n  // src/lib/tool-checks/check-token-in-balance.ts\n  var import_ethers14, checkTokenInBalance;\n  var init_check_token_in_balance = __esm({\n    \"src/lib/tool-checks/check-token-in-balance.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers14 = __toESM(require_lib32());\n      init_getErc20Contract();\n      checkTokenInBalance = async ({\n        provider,\n        pkpEthAddress,\n        tokenInAddress,\n        tokenInAmount\n      }) => {\n        const contract = getErc20Contract(tokenInAddress, provider);\n        const tokenInBalance = await contract.balanceOf(pkpEthAddress);\n        const tokenInAmountBN = import_ethers14.ethers.BigNumber.from(tokenInAmount.toString());\n        if (tokenInBalance.lt(tokenInAmountBN)) {\n          throw new Error(\n            `pkpEthAddress (${pkpEthAddress}) has insufficient balance of tokenIn (${tokenInAddress}). Wanted ${tokenInAmount}, but only have ${tokenInBalance} (checkTokenInBalance)`\n          );\n        }\n        return tokenInBalance;\n      };\n    }\n  });\n\n  // src/lib/tool-checks/check-uniswap-pool-exists.ts\n  var checkUniswapPoolExists;\n  var init_check_uniswap_pool_exists = __esm({\n    \"src/lib/tool-checks/check-uniswap-pool-exists.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_get_uniswap_quote();\n      checkUniswapPoolExists = async ({\n        rpcUrl,\n        chainId,\n        tokenInAddress,\n        tokenInDecimals,\n        tokenInAmount,\n        tokenOutAddress,\n        tokenOutDecimals\n        // poolFee,\n      }) => {\n        try {\n          await getUniswapQuote({\n            rpcUrl,\n            chainId,\n            tokenInAddress,\n            tokenInDecimals,\n            tokenInAmount,\n            tokenOutAddress,\n            tokenOutDecimals\n          });\n          return true;\n        } catch (error) {\n          throw new Error(\n            `No valid Uniswap V3 pool found for token pair tokenInAddress: ${tokenInAddress}, tokenOutAddress: ${tokenOutAddress} with sufficient liquidity for amount tokenInAmount: ${tokenInAmount}: ${error instanceof Error ? error.message : String(error)}`\n          );\n        }\n      };\n    }\n  });\n\n  // src/lib/tool-checks/check-erc20-allowance.ts\n  var import_ethers15, checkErc20Allowance;\n  var init_check_erc20_allowance = __esm({\n    \"src/lib/tool-checks/check-erc20-allowance.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      import_ethers15 = __toESM(require_lib32());\n      init_getErc20Contract();\n      checkErc20Allowance = async ({\n        provider,\n        tokenAddress,\n        owner,\n        spender,\n        tokenAmount\n      }) => {\n        const contract = getErc20Contract(tokenAddress, provider);\n        const currentAllowance = await contract.allowance(owner, spender);\n        const tokenAmountBN = import_ethers15.ethers.BigNumber.from(tokenAmount.toString());\n        if (currentAllowance.lt(tokenAmountBN)) {\n          throw new Error(\n            `Address ${owner} has insufficient ERC20 allowance for spender ${spender} for token ${tokenAddress} (checkErc20Allowance)`\n          );\n        }\n        return currentAllowance;\n      };\n    }\n  });\n\n  // src/lib/tool-checks/index.ts\n  var init_tool_checks = __esm({\n    \"src/lib/tool-checks/index.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_check_native_token_balance();\n      init_check_token_in_balance();\n      init_check_uniswap_pool_exists();\n      init_check_erc20_allowance();\n    }\n  });\n\n  // src/lib/schemas.ts\n  var toolParamsSchema, precheckSuccessSchema, precheckFailSchema, executeSuccessSchema, executeFailSchema;\n  var init_schemas = __esm({\n    \"src/lib/schemas.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_esm();\n      toolParamsSchema = external_exports.object({\n        ethRpcUrl: external_exports.string(),\n        rpcUrlForUniswap: external_exports.string(),\n        chainIdForUniswap: external_exports.number(),\n        tokenInAddress: external_exports.string(),\n        tokenInDecimals: external_exports.number(),\n        tokenInAmount: external_exports.number().refine((val) => val > 0, {\n          message: \"tokenInAmount must be greater than 0\"\n        }),\n        tokenOutAddress: external_exports.string(),\n        tokenOutDecimals: external_exports.number(),\n        poolFee: external_exports.number().optional(),\n        slippageTolerance: external_exports.number().optional(),\n        swapDeadline: external_exports.number().optional()\n      });\n      precheckSuccessSchema = external_exports.object({\n        allow: external_exports.literal(true)\n      });\n      precheckFailSchema = external_exports.object({\n        allow: external_exports.literal(false),\n        error: external_exports.string()\n      });\n      executeSuccessSchema = external_exports.object({\n        swapTxHash: external_exports.string(),\n        spendTxHash: external_exports.string().optional()\n      });\n      executeFailSchema = external_exports.object({\n        error: external_exports.string()\n      });\n    }\n  });\n\n  // src/lib/vincent-tool.ts\n  var import_vincent_policy_spending_limit, import_sdk_core3, import_ethers16, SpendingLimitPolicy, vincentTool;\n  var init_vincent_tool = __esm({\n    \"src/lib/vincent-tool.ts\"() {\n      \"use strict\";\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_src();\n      import_vincent_policy_spending_limit = __toESM(require_src());\n      import_sdk_core3 = __toESM(require_dist());\n      init_src();\n      init_tool_helpers();\n      init_tool_checks();\n      init_schemas();\n      import_ethers16 = __toESM(require_lib32());\n      init_check_erc20_allowance();\n      SpendingLimitPolicy = createVincentToolPolicy({\n        toolParamsSchema,\n        bundledVincentPolicy: import_vincent_policy_spending_limit.bundledVincentPolicy,\n        toolParameterMappings: {\n          rpcUrlForUniswap: \"rpcUrlForUniswap\",\n          chainIdForUniswap: \"chainIdForUniswap\",\n          ethRpcUrl: \"ethRpcUrl\",\n          tokenInAddress: \"tokenAddress\",\n          tokenInDecimals: \"tokenDecimals\",\n          tokenInAmount: \"buyAmount\"\n        }\n      });\n      vincentTool = createVincentTool({\n        // packageName: '@lit-protocol/vincent-tool-uniswap-swap' as const,\n        toolParamsSchema,\n        supportedPolicies: supportedPoliciesForTool([SpendingLimitPolicy]),\n        precheckSuccessSchema,\n        precheckFailSchema,\n        executeSuccessSchema,\n        executeFailSchema,\n        precheck: async ({ toolParams: toolParams2 }, { fail, succeed, delegation: { delegatorPkpInfo } }) => {\n          const {\n            rpcUrlForUniswap,\n            chainIdForUniswap,\n            tokenInAddress,\n            tokenInDecimals,\n            tokenInAmount,\n            tokenOutAddress,\n            tokenOutDecimals\n          } = toolParams2;\n          const delegatorPkpAddress = delegatorPkpInfo.ethAddress;\n          const provider = new import_ethers16.ethers.providers.JsonRpcProvider(rpcUrlForUniswap);\n          await checkNativeTokenBalance({\n            provider,\n            pkpEthAddress: delegatorPkpAddress\n          });\n          const uniswapRouterAddress = import_sdk_core3.CHAIN_TO_ADDRESSES_MAP[chainIdForUniswap].quoterAddress;\n          if (uniswapRouterAddress === void 0) {\n            return fail({\n              allow: false,\n              error: `Uniswap router address not found for chainId ${chainIdForUniswap} (UniswapSwapToolPrecheck)`\n            });\n          }\n          await checkErc20Allowance({\n            provider,\n            tokenAddress: tokenInAddress,\n            owner: delegatorPkpAddress,\n            spender: uniswapRouterAddress,\n            tokenAmount: BigInt(tokenInAmount)\n          });\n          await checkTokenInBalance({\n            provider,\n            pkpEthAddress: delegatorPkpAddress,\n            tokenInAddress,\n            tokenInAmount: BigInt(tokenInAmount)\n          });\n          await checkUniswapPoolExists({\n            rpcUrl: rpcUrlForUniswap,\n            chainId: chainIdForUniswap,\n            tokenInAddress,\n            tokenInDecimals,\n            tokenInAmount,\n            tokenOutAddress,\n            tokenOutDecimals\n          });\n          return succeed({\n            allow: true\n          });\n        },\n        execute: async ({ toolParams: toolParams2 }, { succeed, fail, policiesContext, delegation: { delegatorPkpInfo } }) => {\n          console.log(\"Executing UniswapSwapTool\", JSON.stringify(toolParams2, null, 2));\n          const { ethAddress: delegatorPkpAddress, publicKey: delegatorPublicKey } = delegatorPkpInfo;\n          const {\n            ethRpcUrl,\n            rpcUrlForUniswap,\n            chainIdForUniswap,\n            tokenInAddress,\n            tokenInDecimals,\n            tokenInAmount,\n            tokenOutAddress,\n            tokenOutDecimals\n          } = toolParams2;\n          const spendingLimitPolicyContext = policiesContext.allowedPolicies[\"@lit-protocol/vincent-policy-spending-limit\"];\n          const swapTxHash = await sendUniswapTx({\n            rpcUrl: rpcUrlForUniswap,\n            chainId: chainIdForUniswap,\n            pkpEthAddress: delegatorPkpAddress,\n            pkpPublicKey: delegatorPublicKey,\n            tokenInAddress,\n            tokenOutAddress,\n            tokenInDecimals,\n            tokenOutDecimals,\n            tokenInAmount\n          });\n          let spendTxHash;\n          if (spendingLimitPolicyContext !== void 0) {\n            const tokenInAmountInUsd = await getTokenAmountInUsd({\n              ethRpcUrl,\n              rpcUrlForUniswap,\n              chainIdForUniswap,\n              tokenAddress: tokenInAddress,\n              tokenAmount: tokenInAmount,\n              tokenDecimals: tokenInDecimals\n            });\n            const { maxSpendingLimitInUsd } = spendingLimitPolicyContext.result;\n            const commitResult = await spendingLimitPolicyContext.commit({\n              amountSpentUsd: tokenInAmountInUsd.toNumber(),\n              maxSpendingLimitInUsd\n            });\n            console.log(\"Spending limit policy commit result\", JSON.stringify(commitResult));\n            if (commitResult.allow) {\n              spendTxHash = commitResult.result.spendTxHash;\n            } else {\n              return fail({\n                error: commitResult.error ?? \"Unknown error occurred while committing spending limit policy\"\n              });\n            }\n            console.log(\n              `Committed spending limit policy for transaction: ${spendTxHash} (UniswapSwapToolExecute)`\n            );\n          }\n          return succeed({\n            swapTxHash,\n            spendTxHash\n          });\n        }\n      });\n    }\n  });\n\n  // src/lib/lit-action.ts\n  var require_lit_action = __commonJS({\n    \"src/lib/lit-action.ts\"() {\n      init_dirname();\n      init_buffer2();\n      init_process2();\n      init_src();\n      init_vincent_tool();\n      (async () => {\n        const func = vincentToolHandler({\n          vincentTool,\n          context: {\n            delegatorPkpEthAddress: context.delegatorPkpEthAddress\n          },\n          toolParams\n        });\n        await func();\n      })();\n    }\n  });\n  require_lit_action();\n})();\n/*! Bundled license information:\n\n@jspm/core/nodelibs/browser/chunk-DtuTasat.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\njs-sha3/src/sha3.js:\n  (**\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\n   *\n   * @version 0.8.0\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\n   * @copyright Chen, Yi-Cyuan 2015-2018\n   * @license MIT\n   *)\n\ndecimal.js-light/decimal.js:\n  (*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE *)\n\n@noble/hashes/esm/utils.js:\n  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/abstract/utils.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/abstract/modular.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/abstract/curve.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/abstract/weierstrass.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/_shortw_utils.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n\n@noble/curves/esm/secp256k1.js:\n  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)\n*/\n";
module.exports = {
  code,
};
